/* Settings.c generated by valac 0.48.14, the Vala compiler
 * generated from Settings.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 */

#include <glib-object.h>
#include <granite.h>
#include <glib.h>
#include <stdlib.h>
#include <string.h>

typedef enum  {
	PEBBLES_GLOBAL_ANGLE_UNIT_DEG = 0,
	PEBBLES_GLOBAL_ANGLE_UNIT_RAD = 1,
	PEBBLES_GLOBAL_ANGLE_UNIT_GRAD = 2
} PebblesGlobalAngleUnit;

#define PEBBLES_TYPE_GLOBAL_ANGLE_UNIT (pebbles_global_angle_unit_get_type ())
typedef enum  {
	PEBBLES_GLOBAL_WORD_LENGTH_QWD = 0,
	PEBBLES_GLOBAL_WORD_LENGTH_DWD = 1,
	PEBBLES_GLOBAL_WORD_LENGTH_WRD = 2,
	PEBBLES_GLOBAL_WORD_LENGTH_BYT = 3
} PebblesGlobalWordLength;

#define PEBBLES_TYPE_GLOBAL_WORD_LENGTH (pebbles_global_word_length_get_type ())
typedef enum  {
	PEBBLES_NUMBER_SYSTEM_BINARY,
	PEBBLES_NUMBER_SYSTEM_OCTAL,
	PEBBLES_NUMBER_SYSTEM_DECIMAL,
	PEBBLES_NUMBER_SYSTEM_HEXADECIMAL
} PebblesNumberSystem;

#define PEBBLES_TYPE_NUMBER_SYSTEM (pebbles_number_system_get_type ())
typedef enum  {
	PEBBLES_CONSTANT_KEY_INDEX_EULER = 0,
	PEBBLES_CONSTANT_KEY_INDEX_ARCHIMEDES = 1,
	PEBBLES_CONSTANT_KEY_INDEX_PARABOLIC = 2,
	PEBBLES_CONSTANT_KEY_INDEX_GOLDEN_RATIO = 3,
	PEBBLES_CONSTANT_KEY_INDEX_EULER_MASCH = 4,
	PEBBLES_CONSTANT_KEY_INDEX_CONWAY = 5,
	PEBBLES_CONSTANT_KEY_INDEX_KHINCHIN = 6,
	PEBBLES_CONSTANT_KEY_INDEX_FEIGEN_ALPHA = 7,
	PEBBLES_CONSTANT_KEY_INDEX_FEIGEN_DELTA = 8,
	PEBBLES_CONSTANT_KEY_INDEX_APERY = 9
} PebblesConstantKeyIndex;

#define PEBBLES_TYPE_CONSTANT_KEY_INDEX (pebbles_constant_key_index_get_type ())

#define PEBBLES_TYPE_SETTINGS (pebbles_settings_get_type ())
#define PEBBLES_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettings))
#define PEBBLES_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))
#define PEBBLES_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))

typedef struct _PebblesSettings PebblesSettings;
typedef struct _PebblesSettingsClass PebblesSettingsClass;
typedef struct _PebblesSettingsPrivate PebblesSettingsPrivate;
enum  {
	PEBBLES_SETTINGS_0_PROPERTY,
	PEBBLES_SETTINGS_WINDOW_X_PROPERTY,
	PEBBLES_SETTINGS_WINDOW_Y_PROPERTY,
	PEBBLES_SETTINGS_WINDOW_W_PROPERTY,
	PEBBLES_SETTINGS_WINDOW_H_PROPERTY,
	PEBBLES_SETTINGS_WINDOW_MAXIMIZED_PROPERTY,
	PEBBLES_SETTINGS_VIEW_INDEX_PROPERTY,
	PEBBLES_SETTINGS_SHIFT_ALTERNATIVE_FUNCTION_PROPERTY,
	PEBBLES_SETTINGS_GLOBAL_ANGLE_UNIT_PROPERTY,
	PEBBLES_SETTINGS_GLOBAL_WORD_LENGTH_PROPERTY,
	PEBBLES_SETTINGS_NUMBER_SYSTEM_PROPERTY,
	PEBBLES_SETTINGS_USE_DARK_THEME_PROPERTY,
	PEBBLES_SETTINGS_CONSTANT_KEY_VALUE1_PROPERTY,
	PEBBLES_SETTINGS_CONSTANT_KEY_VALUE2_PROPERTY,
	PEBBLES_SETTINGS_DECIMAL_PLACES_PROPERTY,
	PEBBLES_SETTINGS_SCI_INPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_SCI_OUTPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_SCI_MEMORY_VALUE_PROPERTY,
	PEBBLES_SETTINGS_PROG_INPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_PROG_OUTPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_CAL_INPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_CAL_OUTPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_CAL_INTEGRATION_UPPER_LIMIT_PROPERTY,
	PEBBLES_SETTINGS_CAL_INTEGRATION_LOWER_LIMIT_PROPERTY,
	PEBBLES_SETTINGS_CAL_DERIVATION_LIMIT_PROPERTY,
	PEBBLES_SETTINGS_STAT_INPUT_ARRAY_PROPERTY,
	PEBBLES_SETTINGS_STAT_MODE_PREVIOUS_PROPERTY,
	PEBBLES_SETTINGS_STAT_OUTPUT_TEXT_PROPERTY,
	PEBBLES_SETTINGS_CURRENCY_MULTIPLIERS_PROPERTY,
	PEBBLES_SETTINGS_CURRENCY_UPDATE_DATE_PROPERTY,
	PEBBLES_SETTINGS_CONV_LENGTH_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_LENGTH_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_AREA_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_AREA_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_ANGLE_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_ANGLE_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_VOLUME_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_VOLUME_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_TIME_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_TIME_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_SPEED_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_SPEED_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_MASS_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_MASS_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_PRESSURE_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_PRESSURE_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_ENERGY_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_ENERGY_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_POWER_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_POWER_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_TEMP_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_TEMP_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_DATA_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_DATA_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_CURR_FROM_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_CONV_CURR_TO_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_DATE_DIFF_FROM_PROPERTY,
	PEBBLES_SETTINGS_DATE_DIFF_TO_PROPERTY,
	PEBBLES_SETTINGS_DATE_ADD_SUB_PROPERTY,
	PEBBLES_SETTINGS_DATE_DAY_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_DATE_MONTH_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_DATE_YEAR_ENTRY_PROPERTY,
	PEBBLES_SETTINGS_FOREX_API_KEY_PROPERTY,
	PEBBLES_SETTINGS_NUM_PROPERTIES
};
static GParamSpec* pebbles_settings_properties[PEBBLES_SETTINGS_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _PebblesSettings {
	GraniteServicesSettings parent_instance;
	PebblesSettingsPrivate * priv;
};

struct _PebblesSettingsClass {
	GraniteServicesSettingsClass parent_class;
};

struct _PebblesSettingsPrivate {
	gint _window_x;
	gint _window_y;
	gint _window_w;
	gint _window_h;
	gboolean _window_maximized;
	gint _view_index;
	gboolean _shift_alternative_function;
	PebblesGlobalAngleUnit _global_angle_unit;
	PebblesGlobalWordLength _global_word_length;
	PebblesNumberSystem _number_system;
	gboolean _use_dark_theme;
	PebblesConstantKeyIndex _constant_key_value1;
	PebblesConstantKeyIndex _constant_key_value2;
	gint _decimal_places;
	gchar* _sci_input_text;
	gchar* _sci_output_text;
	gchar* _sci_memory_value;
	gchar* _prog_input_text;
	gchar* _prog_output_text;
	gchar* _cal_input_text;
	gchar* _cal_output_text;
	gchar* _cal_integration_upper_limit;
	gchar* _cal_integration_lower_limit;
	gchar* _cal_derivation_limit;
	gchar* _stat_input_array;
	gint _stat_mode_previous;
	gchar* _stat_output_text;
	gchar* _currency_multipliers;
	gchar* _currency_update_date;
	gchar* _conv_length_from_entry;
	gchar* _conv_length_to_entry;
	gchar* _conv_area_from_entry;
	gchar* _conv_area_to_entry;
	gchar* _conv_angle_from_entry;
	gchar* _conv_angle_to_entry;
	gchar* _conv_volume_from_entry;
	gchar* _conv_volume_to_entry;
	gchar* _conv_time_from_entry;
	gchar* _conv_time_to_entry;
	gchar* _conv_speed_from_entry;
	gchar* _conv_speed_to_entry;
	gchar* _conv_mass_from_entry;
	gchar* _conv_mass_to_entry;
	gchar* _conv_pressure_from_entry;
	gchar* _conv_pressure_to_entry;
	gchar* _conv_energy_from_entry;
	gchar* _conv_energy_to_entry;
	gchar* _conv_power_from_entry;
	gchar* _conv_power_to_entry;
	gchar* _conv_temp_from_entry;
	gchar* _conv_temp_to_entry;
	gchar* _conv_data_from_entry;
	gchar* _conv_data_to_entry;
	gchar* _conv_curr_from_entry;
	gchar* _conv_curr_to_entry;
	gchar* _date_diff_from;
	gchar* _date_diff_to;
	gchar* _date_add_sub;
	gchar* _date_day_entry;
	gchar* _date_month_entry;
	gchar* _date_year_entry;
	gchar* _forex_api_key;
};

static gint PebblesSettings_private_offset;
static gpointer pebbles_settings_parent_class = NULL;
static PebblesSettings* pebbles_settings_settings;
static PebblesSettings* pebbles_settings_settings = NULL;

GType pebbles_global_angle_unit_get_type (void) G_GNUC_CONST;
GType pebbles_global_word_length_get_type (void) G_GNUC_CONST;
GType pebbles_number_system_get_type (void) G_GNUC_CONST;
GType pebbles_constant_key_index_get_type (void) G_GNUC_CONST;
GType pebbles_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesSettings, g_object_unref)
PebblesSettings* pebbles_settings_get_default (void);
static PebblesSettings* pebbles_settings_new (void);
static PebblesSettings* pebbles_settings_construct (GType object_type);
void pebbles_settings_switch_angle_unit (PebblesSettings* self);
PebblesGlobalAngleUnit pebbles_settings_get_global_angle_unit (PebblesSettings* self);
void pebbles_settings_set_global_angle_unit (PebblesSettings* self,
                                             PebblesGlobalAngleUnit value);
void pebbles_settings_switch_word_length (PebblesSettings* self);
PebblesGlobalWordLength pebbles_settings_get_global_word_length (PebblesSettings* self);
void pebbles_settings_set_global_word_length (PebblesSettings* self,
                                              PebblesGlobalWordLength value);
gint pebbles_settings_get_window_x (PebblesSettings* self);
void pebbles_settings_set_window_x (PebblesSettings* self,
                                    gint value);
gint pebbles_settings_get_window_y (PebblesSettings* self);
void pebbles_settings_set_window_y (PebblesSettings* self,
                                    gint value);
gint pebbles_settings_get_window_w (PebblesSettings* self);
void pebbles_settings_set_window_w (PebblesSettings* self,
                                    gint value);
gint pebbles_settings_get_window_h (PebblesSettings* self);
void pebbles_settings_set_window_h (PebblesSettings* self,
                                    gint value);
gboolean pebbles_settings_get_window_maximized (PebblesSettings* self);
void pebbles_settings_set_window_maximized (PebblesSettings* self,
                                            gboolean value);
gint pebbles_settings_get_view_index (PebblesSettings* self);
void pebbles_settings_set_view_index (PebblesSettings* self,
                                      gint value);
gboolean pebbles_settings_get_shift_alternative_function (PebblesSettings* self);
void pebbles_settings_set_shift_alternative_function (PebblesSettings* self,
                                                      gboolean value);
PebblesNumberSystem pebbles_settings_get_number_system (PebblesSettings* self);
void pebbles_settings_set_number_system (PebblesSettings* self,
                                         PebblesNumberSystem value);
gboolean pebbles_settings_get_use_dark_theme (PebblesSettings* self);
void pebbles_settings_set_use_dark_theme (PebblesSettings* self,
                                          gboolean value);
PebblesConstantKeyIndex pebbles_settings_get_constant_key_value1 (PebblesSettings* self);
void pebbles_settings_set_constant_key_value1 (PebblesSettings* self,
                                               PebblesConstantKeyIndex value);
PebblesConstantKeyIndex pebbles_settings_get_constant_key_value2 (PebblesSettings* self);
void pebbles_settings_set_constant_key_value2 (PebblesSettings* self,
                                               PebblesConstantKeyIndex value);
gint pebbles_settings_get_decimal_places (PebblesSettings* self);
void pebbles_settings_set_decimal_places (PebblesSettings* self,
                                          gint value);
const gchar* pebbles_settings_get_sci_input_text (PebblesSettings* self);
void pebbles_settings_set_sci_input_text (PebblesSettings* self,
                                          const gchar* value);
const gchar* pebbles_settings_get_sci_output_text (PebblesSettings* self);
void pebbles_settings_set_sci_output_text (PebblesSettings* self,
                                           const gchar* value);
const gchar* pebbles_settings_get_sci_memory_value (PebblesSettings* self);
void pebbles_settings_set_sci_memory_value (PebblesSettings* self,
                                            const gchar* value);
const gchar* pebbles_settings_get_prog_input_text (PebblesSettings* self);
void pebbles_settings_set_prog_input_text (PebblesSettings* self,
                                           const gchar* value);
const gchar* pebbles_settings_get_prog_output_text (PebblesSettings* self);
void pebbles_settings_set_prog_output_text (PebblesSettings* self,
                                            const gchar* value);
const gchar* pebbles_settings_get_cal_input_text (PebblesSettings* self);
void pebbles_settings_set_cal_input_text (PebblesSettings* self,
                                          const gchar* value);
const gchar* pebbles_settings_get_cal_output_text (PebblesSettings* self);
void pebbles_settings_set_cal_output_text (PebblesSettings* self,
                                           const gchar* value);
const gchar* pebbles_settings_get_cal_integration_upper_limit (PebblesSettings* self);
void pebbles_settings_set_cal_integration_upper_limit (PebblesSettings* self,
                                                       const gchar* value);
const gchar* pebbles_settings_get_cal_integration_lower_limit (PebblesSettings* self);
void pebbles_settings_set_cal_integration_lower_limit (PebblesSettings* self,
                                                       const gchar* value);
const gchar* pebbles_settings_get_cal_derivation_limit (PebblesSettings* self);
void pebbles_settings_set_cal_derivation_limit (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_stat_input_array (PebblesSettings* self);
void pebbles_settings_set_stat_input_array (PebblesSettings* self,
                                            const gchar* value);
gint pebbles_settings_get_stat_mode_previous (PebblesSettings* self);
void pebbles_settings_set_stat_mode_previous (PebblesSettings* self,
                                              gint value);
const gchar* pebbles_settings_get_stat_output_text (PebblesSettings* self);
void pebbles_settings_set_stat_output_text (PebblesSettings* self,
                                            const gchar* value);
const gchar* pebbles_settings_get_currency_multipliers (PebblesSettings* self);
void pebbles_settings_set_currency_multipliers (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_currency_update_date (PebblesSettings* self);
void pebbles_settings_set_currency_update_date (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_length_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_length_from_entry (PebblesSettings* self,
                                                  const gchar* value);
const gchar* pebbles_settings_get_conv_length_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_length_to_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_area_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_area_from_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_area_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_area_to_entry (PebblesSettings* self,
                                              const gchar* value);
const gchar* pebbles_settings_get_conv_angle_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_angle_from_entry (PebblesSettings* self,
                                                 const gchar* value);
const gchar* pebbles_settings_get_conv_angle_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_angle_to_entry (PebblesSettings* self,
                                               const gchar* value);
const gchar* pebbles_settings_get_conv_volume_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_volume_from_entry (PebblesSettings* self,
                                                  const gchar* value);
const gchar* pebbles_settings_get_conv_volume_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_volume_to_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_time_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_time_from_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_time_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_time_to_entry (PebblesSettings* self,
                                              const gchar* value);
const gchar* pebbles_settings_get_conv_speed_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_speed_from_entry (PebblesSettings* self,
                                                 const gchar* value);
const gchar* pebbles_settings_get_conv_speed_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_speed_to_entry (PebblesSettings* self,
                                               const gchar* value);
const gchar* pebbles_settings_get_conv_mass_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_mass_from_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_mass_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_mass_to_entry (PebblesSettings* self,
                                              const gchar* value);
const gchar* pebbles_settings_get_conv_pressure_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_pressure_from_entry (PebblesSettings* self,
                                                    const gchar* value);
const gchar* pebbles_settings_get_conv_pressure_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_pressure_to_entry (PebblesSettings* self,
                                                  const gchar* value);
const gchar* pebbles_settings_get_conv_energy_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_energy_from_entry (PebblesSettings* self,
                                                  const gchar* value);
const gchar* pebbles_settings_get_conv_energy_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_energy_to_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_power_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_power_from_entry (PebblesSettings* self,
                                                 const gchar* value);
const gchar* pebbles_settings_get_conv_power_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_power_to_entry (PebblesSettings* self,
                                               const gchar* value);
const gchar* pebbles_settings_get_conv_temp_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_temp_from_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_temp_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_temp_to_entry (PebblesSettings* self,
                                              const gchar* value);
const gchar* pebbles_settings_get_conv_data_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_data_from_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_data_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_data_to_entry (PebblesSettings* self,
                                              const gchar* value);
const gchar* pebbles_settings_get_conv_curr_from_entry (PebblesSettings* self);
void pebbles_settings_set_conv_curr_from_entry (PebblesSettings* self,
                                                const gchar* value);
const gchar* pebbles_settings_get_conv_curr_to_entry (PebblesSettings* self);
void pebbles_settings_set_conv_curr_to_entry (PebblesSettings* self,
                                              const gchar* value);
const gchar* pebbles_settings_get_date_diff_from (PebblesSettings* self);
void pebbles_settings_set_date_diff_from (PebblesSettings* self,
                                          const gchar* value);
const gchar* pebbles_settings_get_date_diff_to (PebblesSettings* self);
void pebbles_settings_set_date_diff_to (PebblesSettings* self,
                                        const gchar* value);
const gchar* pebbles_settings_get_date_add_sub (PebblesSettings* self);
void pebbles_settings_set_date_add_sub (PebblesSettings* self,
                                        const gchar* value);
const gchar* pebbles_settings_get_date_day_entry (PebblesSettings* self);
void pebbles_settings_set_date_day_entry (PebblesSettings* self,
                                          const gchar* value);
const gchar* pebbles_settings_get_date_month_entry (PebblesSettings* self);
void pebbles_settings_set_date_month_entry (PebblesSettings* self,
                                            const gchar* value);
const gchar* pebbles_settings_get_date_year_entry (PebblesSettings* self);
void pebbles_settings_set_date_year_entry (PebblesSettings* self,
                                           const gchar* value);
const gchar* pebbles_settings_get_forex_api_key (PebblesSettings* self);
void pebbles_settings_set_forex_api_key (PebblesSettings* self,
                                         const gchar* value);
static void pebbles_settings_finalize (GObject * obj);
static GType pebbles_settings_get_type_once (void);
static void _vala_pebbles_settings_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec);
static void _vala_pebbles_settings_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec);

static GType
pebbles_global_angle_unit_get_type_once (void)
{
	static const GEnumValue values[] = {{PEBBLES_GLOBAL_ANGLE_UNIT_DEG, "PEBBLES_GLOBAL_ANGLE_UNIT_DEG", "deg"}, {PEBBLES_GLOBAL_ANGLE_UNIT_RAD, "PEBBLES_GLOBAL_ANGLE_UNIT_RAD", "rad"}, {PEBBLES_GLOBAL_ANGLE_UNIT_GRAD, "PEBBLES_GLOBAL_ANGLE_UNIT_GRAD", "grad"}, {0, NULL, NULL}};
	GType pebbles_global_angle_unit_type_id;
	pebbles_global_angle_unit_type_id = g_enum_register_static ("PebblesGlobalAngleUnit", values);
	return pebbles_global_angle_unit_type_id;
}

GType
pebbles_global_angle_unit_get_type (void)
{
	static volatile gsize pebbles_global_angle_unit_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_global_angle_unit_type_id__volatile)) {
		GType pebbles_global_angle_unit_type_id;
		pebbles_global_angle_unit_type_id = pebbles_global_angle_unit_get_type_once ();
		g_once_init_leave (&pebbles_global_angle_unit_type_id__volatile, pebbles_global_angle_unit_type_id);
	}
	return pebbles_global_angle_unit_type_id__volatile;
}

static GType
pebbles_global_word_length_get_type_once (void)
{
	static const GEnumValue values[] = {{PEBBLES_GLOBAL_WORD_LENGTH_QWD, "PEBBLES_GLOBAL_WORD_LENGTH_QWD", "qwd"}, {PEBBLES_GLOBAL_WORD_LENGTH_DWD, "PEBBLES_GLOBAL_WORD_LENGTH_DWD", "dwd"}, {PEBBLES_GLOBAL_WORD_LENGTH_WRD, "PEBBLES_GLOBAL_WORD_LENGTH_WRD", "wrd"}, {PEBBLES_GLOBAL_WORD_LENGTH_BYT, "PEBBLES_GLOBAL_WORD_LENGTH_BYT", "byt"}, {0, NULL, NULL}};
	GType pebbles_global_word_length_type_id;
	pebbles_global_word_length_type_id = g_enum_register_static ("PebblesGlobalWordLength", values);
	return pebbles_global_word_length_type_id;
}

GType
pebbles_global_word_length_get_type (void)
{
	static volatile gsize pebbles_global_word_length_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_global_word_length_type_id__volatile)) {
		GType pebbles_global_word_length_type_id;
		pebbles_global_word_length_type_id = pebbles_global_word_length_get_type_once ();
		g_once_init_leave (&pebbles_global_word_length_type_id__volatile, pebbles_global_word_length_type_id);
	}
	return pebbles_global_word_length_type_id__volatile;
}

static GType
pebbles_number_system_get_type_once (void)
{
	static const GEnumValue values[] = {{PEBBLES_NUMBER_SYSTEM_BINARY, "PEBBLES_NUMBER_SYSTEM_BINARY", "binary"}, {PEBBLES_NUMBER_SYSTEM_OCTAL, "PEBBLES_NUMBER_SYSTEM_OCTAL", "octal"}, {PEBBLES_NUMBER_SYSTEM_DECIMAL, "PEBBLES_NUMBER_SYSTEM_DECIMAL", "decimal"}, {PEBBLES_NUMBER_SYSTEM_HEXADECIMAL, "PEBBLES_NUMBER_SYSTEM_HEXADECIMAL", "hexadecimal"}, {0, NULL, NULL}};
	GType pebbles_number_system_type_id;
	pebbles_number_system_type_id = g_enum_register_static ("PebblesNumberSystem", values);
	return pebbles_number_system_type_id;
}

GType
pebbles_number_system_get_type (void)
{
	static volatile gsize pebbles_number_system_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_number_system_type_id__volatile)) {
		GType pebbles_number_system_type_id;
		pebbles_number_system_type_id = pebbles_number_system_get_type_once ();
		g_once_init_leave (&pebbles_number_system_type_id__volatile, pebbles_number_system_type_id);
	}
	return pebbles_number_system_type_id__volatile;
}

static GType
pebbles_constant_key_index_get_type_once (void)
{
	static const GEnumValue values[] = {{PEBBLES_CONSTANT_KEY_INDEX_EULER, "PEBBLES_CONSTANT_KEY_INDEX_EULER", "euler"}, {PEBBLES_CONSTANT_KEY_INDEX_ARCHIMEDES, "PEBBLES_CONSTANT_KEY_INDEX_ARCHIMEDES", "archimedes"}, {PEBBLES_CONSTANT_KEY_INDEX_PARABOLIC, "PEBBLES_CONSTANT_KEY_INDEX_PARABOLIC", "parabolic"}, {PEBBLES_CONSTANT_KEY_INDEX_GOLDEN_RATIO, "PEBBLES_CONSTANT_KEY_INDEX_GOLDEN_RATIO", "golden-ratio"}, {PEBBLES_CONSTANT_KEY_INDEX_EULER_MASCH, "PEBBLES_CONSTANT_KEY_INDEX_EULER_MASCH", "euler-masch"}, {PEBBLES_CONSTANT_KEY_INDEX_CONWAY, "PEBBLES_CONSTANT_KEY_INDEX_CONWAY", "conway"}, {PEBBLES_CONSTANT_KEY_INDEX_KHINCHIN, "PEBBLES_CONSTANT_KEY_INDEX_KHINCHIN", "khinchin"}, {PEBBLES_CONSTANT_KEY_INDEX_FEIGEN_ALPHA, "PEBBLES_CONSTANT_KEY_INDEX_FEIGEN_ALPHA", "feigen-alpha"}, {PEBBLES_CONSTANT_KEY_INDEX_FEIGEN_DELTA, "PEBBLES_CONSTANT_KEY_INDEX_FEIGEN_DELTA", "feigen-delta"}, {PEBBLES_CONSTANT_KEY_INDEX_APERY, "PEBBLES_CONSTANT_KEY_INDEX_APERY", "apery"}, {0, NULL, NULL}};
	GType pebbles_constant_key_index_type_id;
	pebbles_constant_key_index_type_id = g_enum_register_static ("PebblesConstantKeyIndex", values);
	return pebbles_constant_key_index_type_id;
}

GType
pebbles_constant_key_index_get_type (void)
{
	static volatile gsize pebbles_constant_key_index_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_constant_key_index_type_id__volatile)) {
		GType pebbles_constant_key_index_type_id;
		pebbles_constant_key_index_type_id = pebbles_constant_key_index_get_type_once ();
		g_once_init_leave (&pebbles_constant_key_index_type_id__volatile, pebbles_constant_key_index_type_id);
	}
	return pebbles_constant_key_index_type_id__volatile;
}

static inline gpointer
pebbles_settings_get_instance_private (PebblesSettings* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesSettings_private_offset);
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 70 "../src/Settings.vala"
	return self ? g_object_ref (self) : NULL;
#line 531 "Settings.c"
}

PebblesSettings*
pebbles_settings_get_default (void)
{
	PebblesSettings* _tmp0_;
	PebblesSettings* _tmp2_;
	PebblesSettings* _tmp3_;
	PebblesSettings* result = NULL;
#line 67 "../src/Settings.vala"
	_tmp0_ = pebbles_settings_settings;
#line 67 "../src/Settings.vala"
	if (_tmp0_ == NULL) {
#line 545 "Settings.c"
		PebblesSettings* _tmp1_;
#line 68 "../src/Settings.vala"
		_tmp1_ = pebbles_settings_new ();
#line 68 "../src/Settings.vala"
		_g_object_unref0 (pebbles_settings_settings);
#line 68 "../src/Settings.vala"
		pebbles_settings_settings = _tmp1_;
#line 553 "Settings.c"
	}
#line 70 "../src/Settings.vala"
	_tmp2_ = pebbles_settings_settings;
#line 70 "../src/Settings.vala"
	_tmp3_ = _g_object_ref0 (_tmp2_);
#line 70 "../src/Settings.vala"
	result = _tmp3_;
#line 70 "../src/Settings.vala"
	return result;
#line 563 "Settings.c"
}

static PebblesSettings*
pebbles_settings_construct (GType object_type)
{
	PebblesSettings * self = NULL;
#line 136 "../src/Settings.vala"
	self = (PebblesSettings*) granite_services_settings_construct (object_type, "com.github.subhadeepjasu.pebbles");
#line 135 "../src/Settings.vala"
	return self;
#line 574 "Settings.c"
}

static PebblesSettings*
pebbles_settings_new (void)
{
#line 135 "../src/Settings.vala"
	return pebbles_settings_construct (PEBBLES_TYPE_SETTINGS);
#line 582 "Settings.c"
}

void
pebbles_settings_switch_angle_unit (PebblesSettings* self)
{
	PebblesSettings* _tmp0_;
	PebblesGlobalAngleUnit _tmp1_;
#line 139 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 140 "../src/Settings.vala"
	_tmp0_ = pebbles_settings_settings;
#line 140 "../src/Settings.vala"
	_tmp1_ = _tmp0_->priv->_global_angle_unit;
#line 140 "../src/Settings.vala"
	switch (_tmp1_) {
#line 140 "../src/Settings.vala"
		case PEBBLES_GLOBAL_ANGLE_UNIT_RAD:
#line 600 "Settings.c"
		{
			PebblesSettings* _tmp2_;
#line 142 "../src/Settings.vala"
			_tmp2_ = pebbles_settings_settings;
#line 142 "../src/Settings.vala"
			pebbles_settings_set_global_angle_unit (_tmp2_, PEBBLES_GLOBAL_ANGLE_UNIT_GRAD);
#line 143 "../src/Settings.vala"
			break;
#line 609 "Settings.c"
		}
#line 140 "../src/Settings.vala"
		case PEBBLES_GLOBAL_ANGLE_UNIT_GRAD:
#line 613 "Settings.c"
		{
			PebblesSettings* _tmp3_;
#line 145 "../src/Settings.vala"
			_tmp3_ = pebbles_settings_settings;
#line 145 "../src/Settings.vala"
			pebbles_settings_set_global_angle_unit (_tmp3_, PEBBLES_GLOBAL_ANGLE_UNIT_DEG);
#line 146 "../src/Settings.vala"
			break;
#line 622 "Settings.c"
		}
		default:
		{
			PebblesSettings* _tmp4_;
#line 148 "../src/Settings.vala"
			_tmp4_ = pebbles_settings_settings;
#line 148 "../src/Settings.vala"
			pebbles_settings_set_global_angle_unit (_tmp4_, PEBBLES_GLOBAL_ANGLE_UNIT_RAD);
#line 149 "../src/Settings.vala"
			break;
#line 633 "Settings.c"
		}
	}
}

void
pebbles_settings_switch_word_length (PebblesSettings* self)
{
	PebblesSettings* _tmp0_;
	PebblesGlobalWordLength _tmp1_;
#line 153 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 154 "../src/Settings.vala"
	_tmp0_ = pebbles_settings_settings;
#line 154 "../src/Settings.vala"
	_tmp1_ = _tmp0_->priv->_global_word_length;
#line 154 "../src/Settings.vala"
	switch (_tmp1_) {
#line 154 "../src/Settings.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_DWD:
#line 653 "Settings.c"
		{
			PebblesSettings* _tmp2_;
#line 156 "../src/Settings.vala"
			_tmp2_ = pebbles_settings_settings;
#line 156 "../src/Settings.vala"
			pebbles_settings_set_global_word_length (_tmp2_, PEBBLES_GLOBAL_WORD_LENGTH_WRD);
#line 157 "../src/Settings.vala"
			break;
#line 662 "Settings.c"
		}
#line 154 "../src/Settings.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_WRD:
#line 666 "Settings.c"
		{
			PebblesSettings* _tmp3_;
#line 159 "../src/Settings.vala"
			_tmp3_ = pebbles_settings_settings;
#line 159 "../src/Settings.vala"
			pebbles_settings_set_global_word_length (_tmp3_, PEBBLES_GLOBAL_WORD_LENGTH_BYT);
#line 160 "../src/Settings.vala"
			break;
#line 675 "Settings.c"
		}
#line 154 "../src/Settings.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_BYT:
#line 679 "Settings.c"
		{
			PebblesSettings* _tmp4_;
#line 162 "../src/Settings.vala"
			_tmp4_ = pebbles_settings_settings;
#line 162 "../src/Settings.vala"
			pebbles_settings_set_global_word_length (_tmp4_, PEBBLES_GLOBAL_WORD_LENGTH_QWD);
#line 163 "../src/Settings.vala"
			break;
#line 688 "Settings.c"
		}
		default:
		{
			PebblesSettings* _tmp5_;
#line 165 "../src/Settings.vala"
			_tmp5_ = pebbles_settings_settings;
#line 165 "../src/Settings.vala"
			pebbles_settings_set_global_word_length (_tmp5_, PEBBLES_GLOBAL_WORD_LENGTH_DWD);
#line 166 "../src/Settings.vala"
			break;
#line 699 "Settings.c"
		}
	}
}

gint
pebbles_settings_get_window_x (PebblesSettings* self)
{
	gint result;
#line 72 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 72 "../src/Settings.vala"
	result = self->priv->_window_x;
#line 72 "../src/Settings.vala"
	return result;
#line 714 "Settings.c"
}

void
pebbles_settings_set_window_x (PebblesSettings* self,
                               gint value)
{
	gint old_value;
#line 72 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 72 "../src/Settings.vala"
	old_value = pebbles_settings_get_window_x (self);
#line 72 "../src/Settings.vala"
	if (old_value != value) {
#line 72 "../src/Settings.vala"
		self->priv->_window_x = value;
#line 72 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_X_PROPERTY]);
#line 732 "Settings.c"
	}
}

gint
pebbles_settings_get_window_y (PebblesSettings* self)
{
	gint result;
#line 73 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 73 "../src/Settings.vala"
	result = self->priv->_window_y;
#line 73 "../src/Settings.vala"
	return result;
#line 746 "Settings.c"
}

void
pebbles_settings_set_window_y (PebblesSettings* self,
                               gint value)
{
	gint old_value;
#line 73 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 73 "../src/Settings.vala"
	old_value = pebbles_settings_get_window_y (self);
#line 73 "../src/Settings.vala"
	if (old_value != value) {
#line 73 "../src/Settings.vala"
		self->priv->_window_y = value;
#line 73 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_Y_PROPERTY]);
#line 764 "Settings.c"
	}
}

gint
pebbles_settings_get_window_w (PebblesSettings* self)
{
	gint result;
#line 74 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 74 "../src/Settings.vala"
	result = self->priv->_window_w;
#line 74 "../src/Settings.vala"
	return result;
#line 778 "Settings.c"
}

void
pebbles_settings_set_window_w (PebblesSettings* self,
                               gint value)
{
	gint old_value;
#line 74 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 74 "../src/Settings.vala"
	old_value = pebbles_settings_get_window_w (self);
#line 74 "../src/Settings.vala"
	if (old_value != value) {
#line 74 "../src/Settings.vala"
		self->priv->_window_w = value;
#line 74 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_W_PROPERTY]);
#line 796 "Settings.c"
	}
}

gint
pebbles_settings_get_window_h (PebblesSettings* self)
{
	gint result;
#line 75 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 75 "../src/Settings.vala"
	result = self->priv->_window_h;
#line 75 "../src/Settings.vala"
	return result;
#line 810 "Settings.c"
}

void
pebbles_settings_set_window_h (PebblesSettings* self,
                               gint value)
{
	gint old_value;
#line 75 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 75 "../src/Settings.vala"
	old_value = pebbles_settings_get_window_h (self);
#line 75 "../src/Settings.vala"
	if (old_value != value) {
#line 75 "../src/Settings.vala"
		self->priv->_window_h = value;
#line 75 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_H_PROPERTY]);
#line 828 "Settings.c"
	}
}

gboolean
pebbles_settings_get_window_maximized (PebblesSettings* self)
{
	gboolean result;
#line 76 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 76 "../src/Settings.vala"
	result = self->priv->_window_maximized;
#line 76 "../src/Settings.vala"
	return result;
#line 842 "Settings.c"
}

void
pebbles_settings_set_window_maximized (PebblesSettings* self,
                                       gboolean value)
{
	gboolean old_value;
#line 76 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 76 "../src/Settings.vala"
	old_value = pebbles_settings_get_window_maximized (self);
#line 76 "../src/Settings.vala"
	if (old_value != value) {
#line 76 "../src/Settings.vala"
		self->priv->_window_maximized = value;
#line 76 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_MAXIMIZED_PROPERTY]);
#line 860 "Settings.c"
	}
}

gint
pebbles_settings_get_view_index (PebblesSettings* self)
{
	gint result;
#line 77 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 77 "../src/Settings.vala"
	result = self->priv->_view_index;
#line 77 "../src/Settings.vala"
	return result;
#line 874 "Settings.c"
}

void
pebbles_settings_set_view_index (PebblesSettings* self,
                                 gint value)
{
	gint old_value;
#line 77 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 77 "../src/Settings.vala"
	old_value = pebbles_settings_get_view_index (self);
#line 77 "../src/Settings.vala"
	if (old_value != value) {
#line 77 "../src/Settings.vala"
		self->priv->_view_index = value;
#line 77 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_VIEW_INDEX_PROPERTY]);
#line 892 "Settings.c"
	}
}

gboolean
pebbles_settings_get_shift_alternative_function (PebblesSettings* self)
{
	gboolean result;
#line 78 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 78 "../src/Settings.vala"
	result = self->priv->_shift_alternative_function;
#line 78 "../src/Settings.vala"
	return result;
#line 906 "Settings.c"
}

void
pebbles_settings_set_shift_alternative_function (PebblesSettings* self,
                                                 gboolean value)
{
	gboolean old_value;
#line 78 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 78 "../src/Settings.vala"
	old_value = pebbles_settings_get_shift_alternative_function (self);
#line 78 "../src/Settings.vala"
	if (old_value != value) {
#line 78 "../src/Settings.vala"
		self->priv->_shift_alternative_function = value;
#line 78 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_SHIFT_ALTERNATIVE_FUNCTION_PROPERTY]);
#line 924 "Settings.c"
	}
}

PebblesGlobalAngleUnit
pebbles_settings_get_global_angle_unit (PebblesSettings* self)
{
	PebblesGlobalAngleUnit result;
	PebblesGlobalAngleUnit _tmp0_;
#line 79 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 79 "../src/Settings.vala"
	_tmp0_ = self->priv->_global_angle_unit;
#line 79 "../src/Settings.vala"
	result = _tmp0_;
#line 79 "../src/Settings.vala"
	return result;
#line 941 "Settings.c"
}

void
pebbles_settings_set_global_angle_unit (PebblesSettings* self,
                                        PebblesGlobalAngleUnit value)
{
	PebblesGlobalAngleUnit old_value;
#line 79 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 79 "../src/Settings.vala"
	old_value = pebbles_settings_get_global_angle_unit (self);
#line 79 "../src/Settings.vala"
	if (old_value != value) {
#line 79 "../src/Settings.vala"
		self->priv->_global_angle_unit = value;
#line 79 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_GLOBAL_ANGLE_UNIT_PROPERTY]);
#line 959 "Settings.c"
	}
}

PebblesGlobalWordLength
pebbles_settings_get_global_word_length (PebblesSettings* self)
{
	PebblesGlobalWordLength result;
	PebblesGlobalWordLength _tmp0_;
#line 80 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 80 "../src/Settings.vala"
	_tmp0_ = self->priv->_global_word_length;
#line 80 "../src/Settings.vala"
	result = _tmp0_;
#line 80 "../src/Settings.vala"
	return result;
#line 976 "Settings.c"
}

void
pebbles_settings_set_global_word_length (PebblesSettings* self,
                                         PebblesGlobalWordLength value)
{
	PebblesGlobalWordLength old_value;
#line 80 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 80 "../src/Settings.vala"
	old_value = pebbles_settings_get_global_word_length (self);
#line 80 "../src/Settings.vala"
	if (old_value != value) {
#line 80 "../src/Settings.vala"
		self->priv->_global_word_length = value;
#line 80 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_GLOBAL_WORD_LENGTH_PROPERTY]);
#line 994 "Settings.c"
	}
}

PebblesNumberSystem
pebbles_settings_get_number_system (PebblesSettings* self)
{
	PebblesNumberSystem result;
	PebblesNumberSystem _tmp0_;
#line 81 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 81 "../src/Settings.vala"
	_tmp0_ = self->priv->_number_system;
#line 81 "../src/Settings.vala"
	result = _tmp0_;
#line 81 "../src/Settings.vala"
	return result;
#line 1011 "Settings.c"
}

void
pebbles_settings_set_number_system (PebblesSettings* self,
                                    PebblesNumberSystem value)
{
	PebblesNumberSystem old_value;
#line 81 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 81 "../src/Settings.vala"
	old_value = pebbles_settings_get_number_system (self);
#line 81 "../src/Settings.vala"
	if (old_value != value) {
#line 81 "../src/Settings.vala"
		self->priv->_number_system = value;
#line 81 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_NUMBER_SYSTEM_PROPERTY]);
#line 1029 "Settings.c"
	}
}

gboolean
pebbles_settings_get_use_dark_theme (PebblesSettings* self)
{
	gboolean result;
#line 82 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 82 "../src/Settings.vala"
	result = self->priv->_use_dark_theme;
#line 82 "../src/Settings.vala"
	return result;
#line 1043 "Settings.c"
}

void
pebbles_settings_set_use_dark_theme (PebblesSettings* self,
                                     gboolean value)
{
	gboolean old_value;
#line 82 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 82 "../src/Settings.vala"
	old_value = pebbles_settings_get_use_dark_theme (self);
#line 82 "../src/Settings.vala"
	if (old_value != value) {
#line 82 "../src/Settings.vala"
		self->priv->_use_dark_theme = value;
#line 82 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_USE_DARK_THEME_PROPERTY]);
#line 1061 "Settings.c"
	}
}

PebblesConstantKeyIndex
pebbles_settings_get_constant_key_value1 (PebblesSettings* self)
{
	PebblesConstantKeyIndex result;
	PebblesConstantKeyIndex _tmp0_;
#line 83 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 83 "../src/Settings.vala"
	_tmp0_ = self->priv->_constant_key_value1;
#line 83 "../src/Settings.vala"
	result = _tmp0_;
#line 83 "../src/Settings.vala"
	return result;
#line 1078 "Settings.c"
}

void
pebbles_settings_set_constant_key_value1 (PebblesSettings* self,
                                          PebblesConstantKeyIndex value)
{
	PebblesConstantKeyIndex old_value;
#line 83 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 83 "../src/Settings.vala"
	old_value = pebbles_settings_get_constant_key_value1 (self);
#line 83 "../src/Settings.vala"
	if (old_value != value) {
#line 83 "../src/Settings.vala"
		self->priv->_constant_key_value1 = value;
#line 83 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONSTANT_KEY_VALUE1_PROPERTY]);
#line 1096 "Settings.c"
	}
}

PebblesConstantKeyIndex
pebbles_settings_get_constant_key_value2 (PebblesSettings* self)
{
	PebblesConstantKeyIndex result;
	PebblesConstantKeyIndex _tmp0_;
#line 84 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 84 "../src/Settings.vala"
	_tmp0_ = self->priv->_constant_key_value2;
#line 84 "../src/Settings.vala"
	result = _tmp0_;
#line 84 "../src/Settings.vala"
	return result;
#line 1113 "Settings.c"
}

void
pebbles_settings_set_constant_key_value2 (PebblesSettings* self,
                                          PebblesConstantKeyIndex value)
{
	PebblesConstantKeyIndex old_value;
#line 84 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 84 "../src/Settings.vala"
	old_value = pebbles_settings_get_constant_key_value2 (self);
#line 84 "../src/Settings.vala"
	if (old_value != value) {
#line 84 "../src/Settings.vala"
		self->priv->_constant_key_value2 = value;
#line 84 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONSTANT_KEY_VALUE2_PROPERTY]);
#line 1131 "Settings.c"
	}
}

gint
pebbles_settings_get_decimal_places (PebblesSettings* self)
{
	gint result;
#line 85 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 85 "../src/Settings.vala"
	result = self->priv->_decimal_places;
#line 85 "../src/Settings.vala"
	return result;
#line 1145 "Settings.c"
}

void
pebbles_settings_set_decimal_places (PebblesSettings* self,
                                     gint value)
{
	gint old_value;
#line 85 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 85 "../src/Settings.vala"
	old_value = pebbles_settings_get_decimal_places (self);
#line 85 "../src/Settings.vala"
	if (old_value != value) {
#line 85 "../src/Settings.vala"
		self->priv->_decimal_places = value;
#line 85 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DECIMAL_PLACES_PROPERTY]);
#line 1163 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_sci_input_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 86 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 86 "../src/Settings.vala"
	_tmp0_ = self->priv->_sci_input_text;
#line 86 "../src/Settings.vala"
	result = _tmp0_;
#line 86 "../src/Settings.vala"
	return result;
#line 1180 "Settings.c"
}

void
pebbles_settings_set_sci_input_text (PebblesSettings* self,
                                     const gchar* value)
{
	gchar* old_value;
#line 86 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 86 "../src/Settings.vala"
	old_value = pebbles_settings_get_sci_input_text (self);
#line 86 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1194 "Settings.c"
		gchar* _tmp0_;
#line 86 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 86 "../src/Settings.vala"
		_g_free0 (self->priv->_sci_input_text);
#line 86 "../src/Settings.vala"
		self->priv->_sci_input_text = _tmp0_;
#line 86 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_SCI_INPUT_TEXT_PROPERTY]);
#line 1204 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_sci_output_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 87 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 87 "../src/Settings.vala"
	_tmp0_ = self->priv->_sci_output_text;
#line 87 "../src/Settings.vala"
	result = _tmp0_;
#line 87 "../src/Settings.vala"
	return result;
#line 1221 "Settings.c"
}

void
pebbles_settings_set_sci_output_text (PebblesSettings* self,
                                      const gchar* value)
{
	gchar* old_value;
#line 87 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 87 "../src/Settings.vala"
	old_value = pebbles_settings_get_sci_output_text (self);
#line 87 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1235 "Settings.c"
		gchar* _tmp0_;
#line 87 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 87 "../src/Settings.vala"
		_g_free0 (self->priv->_sci_output_text);
#line 87 "../src/Settings.vala"
		self->priv->_sci_output_text = _tmp0_;
#line 87 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_SCI_OUTPUT_TEXT_PROPERTY]);
#line 1245 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_sci_memory_value (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 88 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 88 "../src/Settings.vala"
	_tmp0_ = self->priv->_sci_memory_value;
#line 88 "../src/Settings.vala"
	result = _tmp0_;
#line 88 "../src/Settings.vala"
	return result;
#line 1262 "Settings.c"
}

void
pebbles_settings_set_sci_memory_value (PebblesSettings* self,
                                       const gchar* value)
{
	gchar* old_value;
#line 88 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 88 "../src/Settings.vala"
	old_value = pebbles_settings_get_sci_memory_value (self);
#line 88 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1276 "Settings.c"
		gchar* _tmp0_;
#line 88 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 88 "../src/Settings.vala"
		_g_free0 (self->priv->_sci_memory_value);
#line 88 "../src/Settings.vala"
		self->priv->_sci_memory_value = _tmp0_;
#line 88 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_SCI_MEMORY_VALUE_PROPERTY]);
#line 1286 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_prog_input_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 89 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 89 "../src/Settings.vala"
	_tmp0_ = self->priv->_prog_input_text;
#line 89 "../src/Settings.vala"
	result = _tmp0_;
#line 89 "../src/Settings.vala"
	return result;
#line 1303 "Settings.c"
}

void
pebbles_settings_set_prog_input_text (PebblesSettings* self,
                                      const gchar* value)
{
	gchar* old_value;
#line 89 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 89 "../src/Settings.vala"
	old_value = pebbles_settings_get_prog_input_text (self);
#line 89 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1317 "Settings.c"
		gchar* _tmp0_;
#line 89 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 89 "../src/Settings.vala"
		_g_free0 (self->priv->_prog_input_text);
#line 89 "../src/Settings.vala"
		self->priv->_prog_input_text = _tmp0_;
#line 89 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_PROG_INPUT_TEXT_PROPERTY]);
#line 1327 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_prog_output_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 90 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 90 "../src/Settings.vala"
	_tmp0_ = self->priv->_prog_output_text;
#line 90 "../src/Settings.vala"
	result = _tmp0_;
#line 90 "../src/Settings.vala"
	return result;
#line 1344 "Settings.c"
}

void
pebbles_settings_set_prog_output_text (PebblesSettings* self,
                                       const gchar* value)
{
	gchar* old_value;
#line 90 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 90 "../src/Settings.vala"
	old_value = pebbles_settings_get_prog_output_text (self);
#line 90 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1358 "Settings.c"
		gchar* _tmp0_;
#line 90 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 90 "../src/Settings.vala"
		_g_free0 (self->priv->_prog_output_text);
#line 90 "../src/Settings.vala"
		self->priv->_prog_output_text = _tmp0_;
#line 90 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_PROG_OUTPUT_TEXT_PROPERTY]);
#line 1368 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_cal_input_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 91 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 91 "../src/Settings.vala"
	_tmp0_ = self->priv->_cal_input_text;
#line 91 "../src/Settings.vala"
	result = _tmp0_;
#line 91 "../src/Settings.vala"
	return result;
#line 1385 "Settings.c"
}

void
pebbles_settings_set_cal_input_text (PebblesSettings* self,
                                     const gchar* value)
{
	gchar* old_value;
#line 91 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 91 "../src/Settings.vala"
	old_value = pebbles_settings_get_cal_input_text (self);
#line 91 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1399 "Settings.c"
		gchar* _tmp0_;
#line 91 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 91 "../src/Settings.vala"
		_g_free0 (self->priv->_cal_input_text);
#line 91 "../src/Settings.vala"
		self->priv->_cal_input_text = _tmp0_;
#line 91 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_INPUT_TEXT_PROPERTY]);
#line 1409 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_cal_output_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 92 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 92 "../src/Settings.vala"
	_tmp0_ = self->priv->_cal_output_text;
#line 92 "../src/Settings.vala"
	result = _tmp0_;
#line 92 "../src/Settings.vala"
	return result;
#line 1426 "Settings.c"
}

void
pebbles_settings_set_cal_output_text (PebblesSettings* self,
                                      const gchar* value)
{
	gchar* old_value;
#line 92 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 92 "../src/Settings.vala"
	old_value = pebbles_settings_get_cal_output_text (self);
#line 92 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1440 "Settings.c"
		gchar* _tmp0_;
#line 92 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 92 "../src/Settings.vala"
		_g_free0 (self->priv->_cal_output_text);
#line 92 "../src/Settings.vala"
		self->priv->_cal_output_text = _tmp0_;
#line 92 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_OUTPUT_TEXT_PROPERTY]);
#line 1450 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_cal_integration_upper_limit (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 93 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 93 "../src/Settings.vala"
	_tmp0_ = self->priv->_cal_integration_upper_limit;
#line 93 "../src/Settings.vala"
	result = _tmp0_;
#line 93 "../src/Settings.vala"
	return result;
#line 1467 "Settings.c"
}

void
pebbles_settings_set_cal_integration_upper_limit (PebblesSettings* self,
                                                  const gchar* value)
{
	gchar* old_value;
#line 93 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 93 "../src/Settings.vala"
	old_value = pebbles_settings_get_cal_integration_upper_limit (self);
#line 93 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1481 "Settings.c"
		gchar* _tmp0_;
#line 93 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 93 "../src/Settings.vala"
		_g_free0 (self->priv->_cal_integration_upper_limit);
#line 93 "../src/Settings.vala"
		self->priv->_cal_integration_upper_limit = _tmp0_;
#line 93 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_INTEGRATION_UPPER_LIMIT_PROPERTY]);
#line 1491 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_cal_integration_lower_limit (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 94 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 94 "../src/Settings.vala"
	_tmp0_ = self->priv->_cal_integration_lower_limit;
#line 94 "../src/Settings.vala"
	result = _tmp0_;
#line 94 "../src/Settings.vala"
	return result;
#line 1508 "Settings.c"
}

void
pebbles_settings_set_cal_integration_lower_limit (PebblesSettings* self,
                                                  const gchar* value)
{
	gchar* old_value;
#line 94 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 94 "../src/Settings.vala"
	old_value = pebbles_settings_get_cal_integration_lower_limit (self);
#line 94 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1522 "Settings.c"
		gchar* _tmp0_;
#line 94 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 94 "../src/Settings.vala"
		_g_free0 (self->priv->_cal_integration_lower_limit);
#line 94 "../src/Settings.vala"
		self->priv->_cal_integration_lower_limit = _tmp0_;
#line 94 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_INTEGRATION_LOWER_LIMIT_PROPERTY]);
#line 1532 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_cal_derivation_limit (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 95 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 95 "../src/Settings.vala"
	_tmp0_ = self->priv->_cal_derivation_limit;
#line 95 "../src/Settings.vala"
	result = _tmp0_;
#line 95 "../src/Settings.vala"
	return result;
#line 1549 "Settings.c"
}

void
pebbles_settings_set_cal_derivation_limit (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 95 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 95 "../src/Settings.vala"
	old_value = pebbles_settings_get_cal_derivation_limit (self);
#line 95 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1563 "Settings.c"
		gchar* _tmp0_;
#line 95 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 95 "../src/Settings.vala"
		_g_free0 (self->priv->_cal_derivation_limit);
#line 95 "../src/Settings.vala"
		self->priv->_cal_derivation_limit = _tmp0_;
#line 95 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_DERIVATION_LIMIT_PROPERTY]);
#line 1573 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_stat_input_array (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 96 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 96 "../src/Settings.vala"
	_tmp0_ = self->priv->_stat_input_array;
#line 96 "../src/Settings.vala"
	result = _tmp0_;
#line 96 "../src/Settings.vala"
	return result;
#line 1590 "Settings.c"
}

void
pebbles_settings_set_stat_input_array (PebblesSettings* self,
                                       const gchar* value)
{
	gchar* old_value;
#line 96 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 96 "../src/Settings.vala"
	old_value = pebbles_settings_get_stat_input_array (self);
#line 96 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1604 "Settings.c"
		gchar* _tmp0_;
#line 96 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 96 "../src/Settings.vala"
		_g_free0 (self->priv->_stat_input_array);
#line 96 "../src/Settings.vala"
		self->priv->_stat_input_array = _tmp0_;
#line 96 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_STAT_INPUT_ARRAY_PROPERTY]);
#line 1614 "Settings.c"
	}
}

gint
pebbles_settings_get_stat_mode_previous (PebblesSettings* self)
{
	gint result;
#line 97 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 97 "../src/Settings.vala"
	result = self->priv->_stat_mode_previous;
#line 97 "../src/Settings.vala"
	return result;
#line 1628 "Settings.c"
}

void
pebbles_settings_set_stat_mode_previous (PebblesSettings* self,
                                         gint value)
{
	gint old_value;
#line 97 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 97 "../src/Settings.vala"
	old_value = pebbles_settings_get_stat_mode_previous (self);
#line 97 "../src/Settings.vala"
	if (old_value != value) {
#line 97 "../src/Settings.vala"
		self->priv->_stat_mode_previous = value;
#line 97 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_STAT_MODE_PREVIOUS_PROPERTY]);
#line 1646 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_stat_output_text (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 98 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 98 "../src/Settings.vala"
	_tmp0_ = self->priv->_stat_output_text;
#line 98 "../src/Settings.vala"
	result = _tmp0_;
#line 98 "../src/Settings.vala"
	return result;
#line 1663 "Settings.c"
}

void
pebbles_settings_set_stat_output_text (PebblesSettings* self,
                                       const gchar* value)
{
	gchar* old_value;
#line 98 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 98 "../src/Settings.vala"
	old_value = pebbles_settings_get_stat_output_text (self);
#line 98 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1677 "Settings.c"
		gchar* _tmp0_;
#line 98 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 98 "../src/Settings.vala"
		_g_free0 (self->priv->_stat_output_text);
#line 98 "../src/Settings.vala"
		self->priv->_stat_output_text = _tmp0_;
#line 98 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_STAT_OUTPUT_TEXT_PROPERTY]);
#line 1687 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_currency_multipliers (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 99 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 99 "../src/Settings.vala"
	_tmp0_ = self->priv->_currency_multipliers;
#line 99 "../src/Settings.vala"
	result = _tmp0_;
#line 99 "../src/Settings.vala"
	return result;
#line 1704 "Settings.c"
}

void
pebbles_settings_set_currency_multipliers (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 99 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 99 "../src/Settings.vala"
	old_value = pebbles_settings_get_currency_multipliers (self);
#line 99 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1718 "Settings.c"
		gchar* _tmp0_;
#line 99 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 99 "../src/Settings.vala"
		_g_free0 (self->priv->_currency_multipliers);
#line 99 "../src/Settings.vala"
		self->priv->_currency_multipliers = _tmp0_;
#line 99 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CURRENCY_MULTIPLIERS_PROPERTY]);
#line 1728 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_currency_update_date (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 100 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 100 "../src/Settings.vala"
	_tmp0_ = self->priv->_currency_update_date;
#line 100 "../src/Settings.vala"
	result = _tmp0_;
#line 100 "../src/Settings.vala"
	return result;
#line 1745 "Settings.c"
}

void
pebbles_settings_set_currency_update_date (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 100 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 100 "../src/Settings.vala"
	old_value = pebbles_settings_get_currency_update_date (self);
#line 100 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1759 "Settings.c"
		gchar* _tmp0_;
#line 100 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 100 "../src/Settings.vala"
		_g_free0 (self->priv->_currency_update_date);
#line 100 "../src/Settings.vala"
		self->priv->_currency_update_date = _tmp0_;
#line 100 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CURRENCY_UPDATE_DATE_PROPERTY]);
#line 1769 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_length_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 101 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 101 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_length_from_entry;
#line 101 "../src/Settings.vala"
	result = _tmp0_;
#line 101 "../src/Settings.vala"
	return result;
#line 1786 "Settings.c"
}

void
pebbles_settings_set_conv_length_from_entry (PebblesSettings* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 101 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 101 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_length_from_entry (self);
#line 101 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1800 "Settings.c"
		gchar* _tmp0_;
#line 101 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 101 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_length_from_entry);
#line 101 "../src/Settings.vala"
		self->priv->_conv_length_from_entry = _tmp0_;
#line 101 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_LENGTH_FROM_ENTRY_PROPERTY]);
#line 1810 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_length_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 102 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 102 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_length_to_entry;
#line 102 "../src/Settings.vala"
	result = _tmp0_;
#line 102 "../src/Settings.vala"
	return result;
#line 1827 "Settings.c"
}

void
pebbles_settings_set_conv_length_to_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 102 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 102 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_length_to_entry (self);
#line 102 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1841 "Settings.c"
		gchar* _tmp0_;
#line 102 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 102 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_length_to_entry);
#line 102 "../src/Settings.vala"
		self->priv->_conv_length_to_entry = _tmp0_;
#line 102 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_LENGTH_TO_ENTRY_PROPERTY]);
#line 1851 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_area_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 103 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 103 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_area_from_entry;
#line 103 "../src/Settings.vala"
	result = _tmp0_;
#line 103 "../src/Settings.vala"
	return result;
#line 1868 "Settings.c"
}

void
pebbles_settings_set_conv_area_from_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 103 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 103 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_area_from_entry (self);
#line 103 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1882 "Settings.c"
		gchar* _tmp0_;
#line 103 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 103 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_area_from_entry);
#line 103 "../src/Settings.vala"
		self->priv->_conv_area_from_entry = _tmp0_;
#line 103 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_AREA_FROM_ENTRY_PROPERTY]);
#line 1892 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_area_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 104 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 104 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_area_to_entry;
#line 104 "../src/Settings.vala"
	result = _tmp0_;
#line 104 "../src/Settings.vala"
	return result;
#line 1909 "Settings.c"
}

void
pebbles_settings_set_conv_area_to_entry (PebblesSettings* self,
                                         const gchar* value)
{
	gchar* old_value;
#line 104 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 104 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_area_to_entry (self);
#line 104 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1923 "Settings.c"
		gchar* _tmp0_;
#line 104 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 104 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_area_to_entry);
#line 104 "../src/Settings.vala"
		self->priv->_conv_area_to_entry = _tmp0_;
#line 104 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_AREA_TO_ENTRY_PROPERTY]);
#line 1933 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_angle_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 105 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 105 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_angle_from_entry;
#line 105 "../src/Settings.vala"
	result = _tmp0_;
#line 105 "../src/Settings.vala"
	return result;
#line 1950 "Settings.c"
}

void
pebbles_settings_set_conv_angle_from_entry (PebblesSettings* self,
                                            const gchar* value)
{
	gchar* old_value;
#line 105 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 105 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_angle_from_entry (self);
#line 105 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 1964 "Settings.c"
		gchar* _tmp0_;
#line 105 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 105 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_angle_from_entry);
#line 105 "../src/Settings.vala"
		self->priv->_conv_angle_from_entry = _tmp0_;
#line 105 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ANGLE_FROM_ENTRY_PROPERTY]);
#line 1974 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_angle_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 106 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 106 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_angle_to_entry;
#line 106 "../src/Settings.vala"
	result = _tmp0_;
#line 106 "../src/Settings.vala"
	return result;
#line 1991 "Settings.c"
}

void
pebbles_settings_set_conv_angle_to_entry (PebblesSettings* self,
                                          const gchar* value)
{
	gchar* old_value;
#line 106 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 106 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_angle_to_entry (self);
#line 106 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2005 "Settings.c"
		gchar* _tmp0_;
#line 106 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 106 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_angle_to_entry);
#line 106 "../src/Settings.vala"
		self->priv->_conv_angle_to_entry = _tmp0_;
#line 106 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ANGLE_TO_ENTRY_PROPERTY]);
#line 2015 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_volume_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 107 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 107 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_volume_from_entry;
#line 107 "../src/Settings.vala"
	result = _tmp0_;
#line 107 "../src/Settings.vala"
	return result;
#line 2032 "Settings.c"
}

void
pebbles_settings_set_conv_volume_from_entry (PebblesSettings* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 107 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 107 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_volume_from_entry (self);
#line 107 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2046 "Settings.c"
		gchar* _tmp0_;
#line 107 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 107 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_volume_from_entry);
#line 107 "../src/Settings.vala"
		self->priv->_conv_volume_from_entry = _tmp0_;
#line 107 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_VOLUME_FROM_ENTRY_PROPERTY]);
#line 2056 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_volume_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 108 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 108 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_volume_to_entry;
#line 108 "../src/Settings.vala"
	result = _tmp0_;
#line 108 "../src/Settings.vala"
	return result;
#line 2073 "Settings.c"
}

void
pebbles_settings_set_conv_volume_to_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 108 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 108 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_volume_to_entry (self);
#line 108 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2087 "Settings.c"
		gchar* _tmp0_;
#line 108 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 108 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_volume_to_entry);
#line 108 "../src/Settings.vala"
		self->priv->_conv_volume_to_entry = _tmp0_;
#line 108 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_VOLUME_TO_ENTRY_PROPERTY]);
#line 2097 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_time_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 109 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 109 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_time_from_entry;
#line 109 "../src/Settings.vala"
	result = _tmp0_;
#line 109 "../src/Settings.vala"
	return result;
#line 2114 "Settings.c"
}

void
pebbles_settings_set_conv_time_from_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 109 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 109 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_time_from_entry (self);
#line 109 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2128 "Settings.c"
		gchar* _tmp0_;
#line 109 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 109 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_time_from_entry);
#line 109 "../src/Settings.vala"
		self->priv->_conv_time_from_entry = _tmp0_;
#line 109 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TIME_FROM_ENTRY_PROPERTY]);
#line 2138 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_time_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 110 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 110 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_time_to_entry;
#line 110 "../src/Settings.vala"
	result = _tmp0_;
#line 110 "../src/Settings.vala"
	return result;
#line 2155 "Settings.c"
}

void
pebbles_settings_set_conv_time_to_entry (PebblesSettings* self,
                                         const gchar* value)
{
	gchar* old_value;
#line 110 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 110 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_time_to_entry (self);
#line 110 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2169 "Settings.c"
		gchar* _tmp0_;
#line 110 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 110 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_time_to_entry);
#line 110 "../src/Settings.vala"
		self->priv->_conv_time_to_entry = _tmp0_;
#line 110 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TIME_TO_ENTRY_PROPERTY]);
#line 2179 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_speed_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 111 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 111 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_speed_from_entry;
#line 111 "../src/Settings.vala"
	result = _tmp0_;
#line 111 "../src/Settings.vala"
	return result;
#line 2196 "Settings.c"
}

void
pebbles_settings_set_conv_speed_from_entry (PebblesSettings* self,
                                            const gchar* value)
{
	gchar* old_value;
#line 111 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 111 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_speed_from_entry (self);
#line 111 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2210 "Settings.c"
		gchar* _tmp0_;
#line 111 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 111 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_speed_from_entry);
#line 111 "../src/Settings.vala"
		self->priv->_conv_speed_from_entry = _tmp0_;
#line 111 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_SPEED_FROM_ENTRY_PROPERTY]);
#line 2220 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_speed_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 112 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 112 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_speed_to_entry;
#line 112 "../src/Settings.vala"
	result = _tmp0_;
#line 112 "../src/Settings.vala"
	return result;
#line 2237 "Settings.c"
}

void
pebbles_settings_set_conv_speed_to_entry (PebblesSettings* self,
                                          const gchar* value)
{
	gchar* old_value;
#line 112 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 112 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_speed_to_entry (self);
#line 112 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2251 "Settings.c"
		gchar* _tmp0_;
#line 112 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 112 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_speed_to_entry);
#line 112 "../src/Settings.vala"
		self->priv->_conv_speed_to_entry = _tmp0_;
#line 112 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_SPEED_TO_ENTRY_PROPERTY]);
#line 2261 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_mass_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 113 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 113 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_mass_from_entry;
#line 113 "../src/Settings.vala"
	result = _tmp0_;
#line 113 "../src/Settings.vala"
	return result;
#line 2278 "Settings.c"
}

void
pebbles_settings_set_conv_mass_from_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 113 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 113 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_mass_from_entry (self);
#line 113 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2292 "Settings.c"
		gchar* _tmp0_;
#line 113 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 113 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_mass_from_entry);
#line 113 "../src/Settings.vala"
		self->priv->_conv_mass_from_entry = _tmp0_;
#line 113 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_MASS_FROM_ENTRY_PROPERTY]);
#line 2302 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_mass_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 114 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 114 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_mass_to_entry;
#line 114 "../src/Settings.vala"
	result = _tmp0_;
#line 114 "../src/Settings.vala"
	return result;
#line 2319 "Settings.c"
}

void
pebbles_settings_set_conv_mass_to_entry (PebblesSettings* self,
                                         const gchar* value)
{
	gchar* old_value;
#line 114 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 114 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_mass_to_entry (self);
#line 114 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2333 "Settings.c"
		gchar* _tmp0_;
#line 114 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 114 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_mass_to_entry);
#line 114 "../src/Settings.vala"
		self->priv->_conv_mass_to_entry = _tmp0_;
#line 114 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_MASS_TO_ENTRY_PROPERTY]);
#line 2343 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_pressure_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 115 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 115 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_pressure_from_entry;
#line 115 "../src/Settings.vala"
	result = _tmp0_;
#line 115 "../src/Settings.vala"
	return result;
#line 2360 "Settings.c"
}

void
pebbles_settings_set_conv_pressure_from_entry (PebblesSettings* self,
                                               const gchar* value)
{
	gchar* old_value;
#line 115 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 115 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_pressure_from_entry (self);
#line 115 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2374 "Settings.c"
		gchar* _tmp0_;
#line 115 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 115 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_pressure_from_entry);
#line 115 "../src/Settings.vala"
		self->priv->_conv_pressure_from_entry = _tmp0_;
#line 115 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_PRESSURE_FROM_ENTRY_PROPERTY]);
#line 2384 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_pressure_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 116 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 116 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_pressure_to_entry;
#line 116 "../src/Settings.vala"
	result = _tmp0_;
#line 116 "../src/Settings.vala"
	return result;
#line 2401 "Settings.c"
}

void
pebbles_settings_set_conv_pressure_to_entry (PebblesSettings* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 116 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 116 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_pressure_to_entry (self);
#line 116 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2415 "Settings.c"
		gchar* _tmp0_;
#line 116 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 116 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_pressure_to_entry);
#line 116 "../src/Settings.vala"
		self->priv->_conv_pressure_to_entry = _tmp0_;
#line 116 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_PRESSURE_TO_ENTRY_PROPERTY]);
#line 2425 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_energy_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 117 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 117 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_energy_from_entry;
#line 117 "../src/Settings.vala"
	result = _tmp0_;
#line 117 "../src/Settings.vala"
	return result;
#line 2442 "Settings.c"
}

void
pebbles_settings_set_conv_energy_from_entry (PebblesSettings* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 117 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 117 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_energy_from_entry (self);
#line 117 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2456 "Settings.c"
		gchar* _tmp0_;
#line 117 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 117 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_energy_from_entry);
#line 117 "../src/Settings.vala"
		self->priv->_conv_energy_from_entry = _tmp0_;
#line 117 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ENERGY_FROM_ENTRY_PROPERTY]);
#line 2466 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_energy_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 118 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 118 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_energy_to_entry;
#line 118 "../src/Settings.vala"
	result = _tmp0_;
#line 118 "../src/Settings.vala"
	return result;
#line 2483 "Settings.c"
}

void
pebbles_settings_set_conv_energy_to_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 118 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 118 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_energy_to_entry (self);
#line 118 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2497 "Settings.c"
		gchar* _tmp0_;
#line 118 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 118 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_energy_to_entry);
#line 118 "../src/Settings.vala"
		self->priv->_conv_energy_to_entry = _tmp0_;
#line 118 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ENERGY_TO_ENTRY_PROPERTY]);
#line 2507 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_power_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 119 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 119 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_power_from_entry;
#line 119 "../src/Settings.vala"
	result = _tmp0_;
#line 119 "../src/Settings.vala"
	return result;
#line 2524 "Settings.c"
}

void
pebbles_settings_set_conv_power_from_entry (PebblesSettings* self,
                                            const gchar* value)
{
	gchar* old_value;
#line 119 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 119 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_power_from_entry (self);
#line 119 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2538 "Settings.c"
		gchar* _tmp0_;
#line 119 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 119 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_power_from_entry);
#line 119 "../src/Settings.vala"
		self->priv->_conv_power_from_entry = _tmp0_;
#line 119 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_POWER_FROM_ENTRY_PROPERTY]);
#line 2548 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_power_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 120 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 120 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_power_to_entry;
#line 120 "../src/Settings.vala"
	result = _tmp0_;
#line 120 "../src/Settings.vala"
	return result;
#line 2565 "Settings.c"
}

void
pebbles_settings_set_conv_power_to_entry (PebblesSettings* self,
                                          const gchar* value)
{
	gchar* old_value;
#line 120 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 120 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_power_to_entry (self);
#line 120 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2579 "Settings.c"
		gchar* _tmp0_;
#line 120 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 120 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_power_to_entry);
#line 120 "../src/Settings.vala"
		self->priv->_conv_power_to_entry = _tmp0_;
#line 120 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_POWER_TO_ENTRY_PROPERTY]);
#line 2589 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_temp_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 121 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 121 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_temp_from_entry;
#line 121 "../src/Settings.vala"
	result = _tmp0_;
#line 121 "../src/Settings.vala"
	return result;
#line 2606 "Settings.c"
}

void
pebbles_settings_set_conv_temp_from_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 121 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 121 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_temp_from_entry (self);
#line 121 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2620 "Settings.c"
		gchar* _tmp0_;
#line 121 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 121 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_temp_from_entry);
#line 121 "../src/Settings.vala"
		self->priv->_conv_temp_from_entry = _tmp0_;
#line 121 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TEMP_FROM_ENTRY_PROPERTY]);
#line 2630 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_temp_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 122 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 122 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_temp_to_entry;
#line 122 "../src/Settings.vala"
	result = _tmp0_;
#line 122 "../src/Settings.vala"
	return result;
#line 2647 "Settings.c"
}

void
pebbles_settings_set_conv_temp_to_entry (PebblesSettings* self,
                                         const gchar* value)
{
	gchar* old_value;
#line 122 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 122 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_temp_to_entry (self);
#line 122 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2661 "Settings.c"
		gchar* _tmp0_;
#line 122 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 122 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_temp_to_entry);
#line 122 "../src/Settings.vala"
		self->priv->_conv_temp_to_entry = _tmp0_;
#line 122 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TEMP_TO_ENTRY_PROPERTY]);
#line 2671 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_data_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 123 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 123 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_data_from_entry;
#line 123 "../src/Settings.vala"
	result = _tmp0_;
#line 123 "../src/Settings.vala"
	return result;
#line 2688 "Settings.c"
}

void
pebbles_settings_set_conv_data_from_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 123 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 123 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_data_from_entry (self);
#line 123 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2702 "Settings.c"
		gchar* _tmp0_;
#line 123 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 123 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_data_from_entry);
#line 123 "../src/Settings.vala"
		self->priv->_conv_data_from_entry = _tmp0_;
#line 123 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_DATA_FROM_ENTRY_PROPERTY]);
#line 2712 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_data_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 124 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 124 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_data_to_entry;
#line 124 "../src/Settings.vala"
	result = _tmp0_;
#line 124 "../src/Settings.vala"
	return result;
#line 2729 "Settings.c"
}

void
pebbles_settings_set_conv_data_to_entry (PebblesSettings* self,
                                         const gchar* value)
{
	gchar* old_value;
#line 124 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 124 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_data_to_entry (self);
#line 124 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2743 "Settings.c"
		gchar* _tmp0_;
#line 124 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 124 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_data_to_entry);
#line 124 "../src/Settings.vala"
		self->priv->_conv_data_to_entry = _tmp0_;
#line 124 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_DATA_TO_ENTRY_PROPERTY]);
#line 2753 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_curr_from_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 125 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 125 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_curr_from_entry;
#line 125 "../src/Settings.vala"
	result = _tmp0_;
#line 125 "../src/Settings.vala"
	return result;
#line 2770 "Settings.c"
}

void
pebbles_settings_set_conv_curr_from_entry (PebblesSettings* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 125 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 125 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_curr_from_entry (self);
#line 125 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2784 "Settings.c"
		gchar* _tmp0_;
#line 125 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 125 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_curr_from_entry);
#line 125 "../src/Settings.vala"
		self->priv->_conv_curr_from_entry = _tmp0_;
#line 125 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_CURR_FROM_ENTRY_PROPERTY]);
#line 2794 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_conv_curr_to_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 126 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 126 "../src/Settings.vala"
	_tmp0_ = self->priv->_conv_curr_to_entry;
#line 126 "../src/Settings.vala"
	result = _tmp0_;
#line 126 "../src/Settings.vala"
	return result;
#line 2811 "Settings.c"
}

void
pebbles_settings_set_conv_curr_to_entry (PebblesSettings* self,
                                         const gchar* value)
{
	gchar* old_value;
#line 126 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 126 "../src/Settings.vala"
	old_value = pebbles_settings_get_conv_curr_to_entry (self);
#line 126 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2825 "Settings.c"
		gchar* _tmp0_;
#line 126 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 126 "../src/Settings.vala"
		_g_free0 (self->priv->_conv_curr_to_entry);
#line 126 "../src/Settings.vala"
		self->priv->_conv_curr_to_entry = _tmp0_;
#line 126 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_CURR_TO_ENTRY_PROPERTY]);
#line 2835 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_date_diff_from (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 127 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 127 "../src/Settings.vala"
	_tmp0_ = self->priv->_date_diff_from;
#line 127 "../src/Settings.vala"
	result = _tmp0_;
#line 127 "../src/Settings.vala"
	return result;
#line 2852 "Settings.c"
}

void
pebbles_settings_set_date_diff_from (PebblesSettings* self,
                                     const gchar* value)
{
	gchar* old_value;
#line 127 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 127 "../src/Settings.vala"
	old_value = pebbles_settings_get_date_diff_from (self);
#line 127 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2866 "Settings.c"
		gchar* _tmp0_;
#line 127 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 127 "../src/Settings.vala"
		_g_free0 (self->priv->_date_diff_from);
#line 127 "../src/Settings.vala"
		self->priv->_date_diff_from = _tmp0_;
#line 127 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_DIFF_FROM_PROPERTY]);
#line 2876 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_date_diff_to (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 128 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 128 "../src/Settings.vala"
	_tmp0_ = self->priv->_date_diff_to;
#line 128 "../src/Settings.vala"
	result = _tmp0_;
#line 128 "../src/Settings.vala"
	return result;
#line 2893 "Settings.c"
}

void
pebbles_settings_set_date_diff_to (PebblesSettings* self,
                                   const gchar* value)
{
	gchar* old_value;
#line 128 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 128 "../src/Settings.vala"
	old_value = pebbles_settings_get_date_diff_to (self);
#line 128 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2907 "Settings.c"
		gchar* _tmp0_;
#line 128 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 128 "../src/Settings.vala"
		_g_free0 (self->priv->_date_diff_to);
#line 128 "../src/Settings.vala"
		self->priv->_date_diff_to = _tmp0_;
#line 128 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_DIFF_TO_PROPERTY]);
#line 2917 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_date_add_sub (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 129 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 129 "../src/Settings.vala"
	_tmp0_ = self->priv->_date_add_sub;
#line 129 "../src/Settings.vala"
	result = _tmp0_;
#line 129 "../src/Settings.vala"
	return result;
#line 2934 "Settings.c"
}

void
pebbles_settings_set_date_add_sub (PebblesSettings* self,
                                   const gchar* value)
{
	gchar* old_value;
#line 129 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 129 "../src/Settings.vala"
	old_value = pebbles_settings_get_date_add_sub (self);
#line 129 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2948 "Settings.c"
		gchar* _tmp0_;
#line 129 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 129 "../src/Settings.vala"
		_g_free0 (self->priv->_date_add_sub);
#line 129 "../src/Settings.vala"
		self->priv->_date_add_sub = _tmp0_;
#line 129 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_ADD_SUB_PROPERTY]);
#line 2958 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_date_day_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 130 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 130 "../src/Settings.vala"
	_tmp0_ = self->priv->_date_day_entry;
#line 130 "../src/Settings.vala"
	result = _tmp0_;
#line 130 "../src/Settings.vala"
	return result;
#line 2975 "Settings.c"
}

void
pebbles_settings_set_date_day_entry (PebblesSettings* self,
                                     const gchar* value)
{
	gchar* old_value;
#line 130 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 130 "../src/Settings.vala"
	old_value = pebbles_settings_get_date_day_entry (self);
#line 130 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2989 "Settings.c"
		gchar* _tmp0_;
#line 130 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 130 "../src/Settings.vala"
		_g_free0 (self->priv->_date_day_entry);
#line 130 "../src/Settings.vala"
		self->priv->_date_day_entry = _tmp0_;
#line 130 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_DAY_ENTRY_PROPERTY]);
#line 2999 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_date_month_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 131 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 131 "../src/Settings.vala"
	_tmp0_ = self->priv->_date_month_entry;
#line 131 "../src/Settings.vala"
	result = _tmp0_;
#line 131 "../src/Settings.vala"
	return result;
#line 3016 "Settings.c"
}

void
pebbles_settings_set_date_month_entry (PebblesSettings* self,
                                       const gchar* value)
{
	gchar* old_value;
#line 131 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 131 "../src/Settings.vala"
	old_value = pebbles_settings_get_date_month_entry (self);
#line 131 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3030 "Settings.c"
		gchar* _tmp0_;
#line 131 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 131 "../src/Settings.vala"
		_g_free0 (self->priv->_date_month_entry);
#line 131 "../src/Settings.vala"
		self->priv->_date_month_entry = _tmp0_;
#line 131 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_MONTH_ENTRY_PROPERTY]);
#line 3040 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_date_year_entry (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 132 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 132 "../src/Settings.vala"
	_tmp0_ = self->priv->_date_year_entry;
#line 132 "../src/Settings.vala"
	result = _tmp0_;
#line 132 "../src/Settings.vala"
	return result;
#line 3057 "Settings.c"
}

void
pebbles_settings_set_date_year_entry (PebblesSettings* self,
                                      const gchar* value)
{
	gchar* old_value;
#line 132 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 132 "../src/Settings.vala"
	old_value = pebbles_settings_get_date_year_entry (self);
#line 132 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3071 "Settings.c"
		gchar* _tmp0_;
#line 132 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 132 "../src/Settings.vala"
		_g_free0 (self->priv->_date_year_entry);
#line 132 "../src/Settings.vala"
		self->priv->_date_year_entry = _tmp0_;
#line 132 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_YEAR_ENTRY_PROPERTY]);
#line 3081 "Settings.c"
	}
}

const gchar*
pebbles_settings_get_forex_api_key (PebblesSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 133 "../src/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 133 "../src/Settings.vala"
	_tmp0_ = self->priv->_forex_api_key;
#line 133 "../src/Settings.vala"
	result = _tmp0_;
#line 133 "../src/Settings.vala"
	return result;
#line 3098 "Settings.c"
}

void
pebbles_settings_set_forex_api_key (PebblesSettings* self,
                                    const gchar* value)
{
	gchar* old_value;
#line 133 "../src/Settings.vala"
	g_return_if_fail (self != NULL);
#line 133 "../src/Settings.vala"
	old_value = pebbles_settings_get_forex_api_key (self);
#line 133 "../src/Settings.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3112 "Settings.c"
		gchar* _tmp0_;
#line 133 "../src/Settings.vala"
		_tmp0_ = g_strdup (value);
#line 133 "../src/Settings.vala"
		_g_free0 (self->priv->_forex_api_key);
#line 133 "../src/Settings.vala"
		self->priv->_forex_api_key = _tmp0_;
#line 133 "../src/Settings.vala"
		g_object_notify_by_pspec ((GObject *) self, pebbles_settings_properties[PEBBLES_SETTINGS_FOREX_API_KEY_PROPERTY]);
#line 3122 "Settings.c"
	}
}

static void
pebbles_settings_class_init (PebblesSettingsClass * klass,
                             gpointer klass_data)
{
#line 64 "../src/Settings.vala"
	pebbles_settings_parent_class = g_type_class_peek_parent (klass);
#line 64 "../src/Settings.vala"
	g_type_class_adjust_private_offset (klass, &PebblesSettings_private_offset);
#line 64 "../src/Settings.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_pebbles_settings_get_property;
#line 64 "../src/Settings.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_pebbles_settings_set_property;
#line 64 "../src/Settings.vala"
	G_OBJECT_CLASS (klass)->finalize = pebbles_settings_finalize;
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_WINDOW_X_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_X_PROPERTY] = g_param_spec_int ("window-x", "window-x", "window-x", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_WINDOW_Y_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_Y_PROPERTY] = g_param_spec_int ("window-y", "window-y", "window-y", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_WINDOW_W_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_W_PROPERTY] = g_param_spec_int ("window-w", "window-w", "window-w", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_WINDOW_H_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_H_PROPERTY] = g_param_spec_int ("window-h", "window-h", "window-h", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_WINDOW_MAXIMIZED_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_WINDOW_MAXIMIZED_PROPERTY] = g_param_spec_boolean ("window-maximized", "window-maximized", "window-maximized", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_VIEW_INDEX_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_VIEW_INDEX_PROPERTY] = g_param_spec_int ("view-index", "view-index", "view-index", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_SHIFT_ALTERNATIVE_FUNCTION_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_SHIFT_ALTERNATIVE_FUNCTION_PROPERTY] = g_param_spec_boolean ("shift-alternative-function", "shift-alternative-function", "shift-alternative-function", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_GLOBAL_ANGLE_UNIT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_GLOBAL_ANGLE_UNIT_PROPERTY] = g_param_spec_enum ("global-angle-unit", "global-angle-unit", "global-angle-unit", PEBBLES_TYPE_GLOBAL_ANGLE_UNIT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_GLOBAL_WORD_LENGTH_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_GLOBAL_WORD_LENGTH_PROPERTY] = g_param_spec_enum ("global-word-length", "global-word-length", "global-word-length", PEBBLES_TYPE_GLOBAL_WORD_LENGTH, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_NUMBER_SYSTEM_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_NUMBER_SYSTEM_PROPERTY] = g_param_spec_enum ("number-system", "number-system", "number-system", PEBBLES_TYPE_NUMBER_SYSTEM, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_USE_DARK_THEME_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_USE_DARK_THEME_PROPERTY] = g_param_spec_boolean ("use-dark-theme", "use-dark-theme", "use-dark-theme", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONSTANT_KEY_VALUE1_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONSTANT_KEY_VALUE1_PROPERTY] = g_param_spec_enum ("constant-key-value1", "constant-key-value1", "constant-key-value1", PEBBLES_TYPE_CONSTANT_KEY_INDEX, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONSTANT_KEY_VALUE2_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONSTANT_KEY_VALUE2_PROPERTY] = g_param_spec_enum ("constant-key-value2", "constant-key-value2", "constant-key-value2", PEBBLES_TYPE_CONSTANT_KEY_INDEX, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DECIMAL_PLACES_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DECIMAL_PLACES_PROPERTY] = g_param_spec_int ("decimal-places", "decimal-places", "decimal-places", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_SCI_INPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_SCI_INPUT_TEXT_PROPERTY] = g_param_spec_string ("sci-input-text", "sci-input-text", "sci-input-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_SCI_OUTPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_SCI_OUTPUT_TEXT_PROPERTY] = g_param_spec_string ("sci-output-text", "sci-output-text", "sci-output-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_SCI_MEMORY_VALUE_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_SCI_MEMORY_VALUE_PROPERTY] = g_param_spec_string ("sci-memory-value", "sci-memory-value", "sci-memory-value", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_PROG_INPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_PROG_INPUT_TEXT_PROPERTY] = g_param_spec_string ("prog-input-text", "prog-input-text", "prog-input-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_PROG_OUTPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_PROG_OUTPUT_TEXT_PROPERTY] = g_param_spec_string ("prog-output-text", "prog-output-text", "prog-output-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CAL_INPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_INPUT_TEXT_PROPERTY] = g_param_spec_string ("cal-input-text", "cal-input-text", "cal-input-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CAL_OUTPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_OUTPUT_TEXT_PROPERTY] = g_param_spec_string ("cal-output-text", "cal-output-text", "cal-output-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CAL_INTEGRATION_UPPER_LIMIT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_INTEGRATION_UPPER_LIMIT_PROPERTY] = g_param_spec_string ("cal-integration-upper-limit", "cal-integration-upper-limit", "cal-integration-upper-limit", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CAL_INTEGRATION_LOWER_LIMIT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_INTEGRATION_LOWER_LIMIT_PROPERTY] = g_param_spec_string ("cal-integration-lower-limit", "cal-integration-lower-limit", "cal-integration-lower-limit", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CAL_DERIVATION_LIMIT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CAL_DERIVATION_LIMIT_PROPERTY] = g_param_spec_string ("cal-derivation-limit", "cal-derivation-limit", "cal-derivation-limit", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_STAT_INPUT_ARRAY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_STAT_INPUT_ARRAY_PROPERTY] = g_param_spec_string ("stat-input-array", "stat-input-array", "stat-input-array", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_STAT_MODE_PREVIOUS_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_STAT_MODE_PREVIOUS_PROPERTY] = g_param_spec_int ("stat-mode-previous", "stat-mode-previous", "stat-mode-previous", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_STAT_OUTPUT_TEXT_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_STAT_OUTPUT_TEXT_PROPERTY] = g_param_spec_string ("stat-output-text", "stat-output-text", "stat-output-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CURRENCY_MULTIPLIERS_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CURRENCY_MULTIPLIERS_PROPERTY] = g_param_spec_string ("currency-multipliers", "currency-multipliers", "currency-multipliers", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CURRENCY_UPDATE_DATE_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CURRENCY_UPDATE_DATE_PROPERTY] = g_param_spec_string ("currency-update-date", "currency-update-date", "currency-update-date", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_LENGTH_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_LENGTH_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-length-from-entry", "conv-length-from-entry", "conv-length-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_LENGTH_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_LENGTH_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-length-to-entry", "conv-length-to-entry", "conv-length-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_AREA_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_AREA_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-area-from-entry", "conv-area-from-entry", "conv-area-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_AREA_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_AREA_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-area-to-entry", "conv-area-to-entry", "conv-area-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_ANGLE_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ANGLE_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-angle-from-entry", "conv-angle-from-entry", "conv-angle-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_ANGLE_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ANGLE_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-angle-to-entry", "conv-angle-to-entry", "conv-angle-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_VOLUME_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_VOLUME_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-volume-from-entry", "conv-volume-from-entry", "conv-volume-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_VOLUME_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_VOLUME_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-volume-to-entry", "conv-volume-to-entry", "conv-volume-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_TIME_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TIME_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-time-from-entry", "conv-time-from-entry", "conv-time-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_TIME_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TIME_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-time-to-entry", "conv-time-to-entry", "conv-time-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_SPEED_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_SPEED_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-speed-from-entry", "conv-speed-from-entry", "conv-speed-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_SPEED_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_SPEED_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-speed-to-entry", "conv-speed-to-entry", "conv-speed-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_MASS_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_MASS_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-mass-from-entry", "conv-mass-from-entry", "conv-mass-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_MASS_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_MASS_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-mass-to-entry", "conv-mass-to-entry", "conv-mass-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_PRESSURE_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_PRESSURE_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-pressure-from-entry", "conv-pressure-from-entry", "conv-pressure-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_PRESSURE_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_PRESSURE_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-pressure-to-entry", "conv-pressure-to-entry", "conv-pressure-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_ENERGY_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ENERGY_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-energy-from-entry", "conv-energy-from-entry", "conv-energy-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_ENERGY_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_ENERGY_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-energy-to-entry", "conv-energy-to-entry", "conv-energy-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_POWER_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_POWER_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-power-from-entry", "conv-power-from-entry", "conv-power-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_POWER_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_POWER_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-power-to-entry", "conv-power-to-entry", "conv-power-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_TEMP_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TEMP_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-temp-from-entry", "conv-temp-from-entry", "conv-temp-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_TEMP_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_TEMP_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-temp-to-entry", "conv-temp-to-entry", "conv-temp-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_DATA_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_DATA_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-data-from-entry", "conv-data-from-entry", "conv-data-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_DATA_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_DATA_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-data-to-entry", "conv-data-to-entry", "conv-data-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_CURR_FROM_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_CURR_FROM_ENTRY_PROPERTY] = g_param_spec_string ("conv-curr-from-entry", "conv-curr-from-entry", "conv-curr-from-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_CONV_CURR_TO_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_CONV_CURR_TO_ENTRY_PROPERTY] = g_param_spec_string ("conv-curr-to-entry", "conv-curr-to-entry", "conv-curr-to-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DATE_DIFF_FROM_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_DIFF_FROM_PROPERTY] = g_param_spec_string ("date-diff-from", "date-diff-from", "date-diff-from", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DATE_DIFF_TO_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_DIFF_TO_PROPERTY] = g_param_spec_string ("date-diff-to", "date-diff-to", "date-diff-to", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DATE_ADD_SUB_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_ADD_SUB_PROPERTY] = g_param_spec_string ("date-add-sub", "date-add-sub", "date-add-sub", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DATE_DAY_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_DAY_ENTRY_PROPERTY] = g_param_spec_string ("date-day-entry", "date-day-entry", "date-day-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DATE_MONTH_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_MONTH_ENTRY_PROPERTY] = g_param_spec_string ("date-month-entry", "date-month-entry", "date-month-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_DATE_YEAR_ENTRY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_DATE_YEAR_ENTRY_PROPERTY] = g_param_spec_string ("date-year-entry", "date-year-entry", "date-year-entry", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 64 "../src/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PEBBLES_SETTINGS_FOREX_API_KEY_PROPERTY, pebbles_settings_properties[PEBBLES_SETTINGS_FOREX_API_KEY_PROPERTY] = g_param_spec_string ("forex-api-key", "forex-api-key", "forex-api-key", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3264 "Settings.c"
}

static void
pebbles_settings_instance_init (PebblesSettings * self,
                                gpointer klass)
{
#line 64 "../src/Settings.vala"
	self->priv = pebbles_settings_get_instance_private (self);
#line 3273 "Settings.c"
}

static void
pebbles_settings_finalize (GObject * obj)
{
	PebblesSettings * self;
#line 64 "../src/Settings.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_SETTINGS, PebblesSettings);
#line 86 "../src/Settings.vala"
	_g_free0 (self->priv->_sci_input_text);
#line 87 "../src/Settings.vala"
	_g_free0 (self->priv->_sci_output_text);
#line 88 "../src/Settings.vala"
	_g_free0 (self->priv->_sci_memory_value);
#line 89 "../src/Settings.vala"
	_g_free0 (self->priv->_prog_input_text);
#line 90 "../src/Settings.vala"
	_g_free0 (self->priv->_prog_output_text);
#line 91 "../src/Settings.vala"
	_g_free0 (self->priv->_cal_input_text);
#line 92 "../src/Settings.vala"
	_g_free0 (self->priv->_cal_output_text);
#line 93 "../src/Settings.vala"
	_g_free0 (self->priv->_cal_integration_upper_limit);
#line 94 "../src/Settings.vala"
	_g_free0 (self->priv->_cal_integration_lower_limit);
#line 95 "../src/Settings.vala"
	_g_free0 (self->priv->_cal_derivation_limit);
#line 96 "../src/Settings.vala"
	_g_free0 (self->priv->_stat_input_array);
#line 98 "../src/Settings.vala"
	_g_free0 (self->priv->_stat_output_text);
#line 99 "../src/Settings.vala"
	_g_free0 (self->priv->_currency_multipliers);
#line 100 "../src/Settings.vala"
	_g_free0 (self->priv->_currency_update_date);
#line 101 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_length_from_entry);
#line 102 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_length_to_entry);
#line 103 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_area_from_entry);
#line 104 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_area_to_entry);
#line 105 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_angle_from_entry);
#line 106 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_angle_to_entry);
#line 107 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_volume_from_entry);
#line 108 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_volume_to_entry);
#line 109 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_time_from_entry);
#line 110 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_time_to_entry);
#line 111 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_speed_from_entry);
#line 112 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_speed_to_entry);
#line 113 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_mass_from_entry);
#line 114 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_mass_to_entry);
#line 115 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_pressure_from_entry);
#line 116 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_pressure_to_entry);
#line 117 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_energy_from_entry);
#line 118 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_energy_to_entry);
#line 119 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_power_from_entry);
#line 120 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_power_to_entry);
#line 121 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_temp_from_entry);
#line 122 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_temp_to_entry);
#line 123 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_data_from_entry);
#line 124 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_data_to_entry);
#line 125 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_curr_from_entry);
#line 126 "../src/Settings.vala"
	_g_free0 (self->priv->_conv_curr_to_entry);
#line 127 "../src/Settings.vala"
	_g_free0 (self->priv->_date_diff_from);
#line 128 "../src/Settings.vala"
	_g_free0 (self->priv->_date_diff_to);
#line 129 "../src/Settings.vala"
	_g_free0 (self->priv->_date_add_sub);
#line 130 "../src/Settings.vala"
	_g_free0 (self->priv->_date_day_entry);
#line 131 "../src/Settings.vala"
	_g_free0 (self->priv->_date_month_entry);
#line 132 "../src/Settings.vala"
	_g_free0 (self->priv->_date_year_entry);
#line 133 "../src/Settings.vala"
	_g_free0 (self->priv->_forex_api_key);
#line 64 "../src/Settings.vala"
	G_OBJECT_CLASS (pebbles_settings_parent_class)->finalize (obj);
#line 3378 "Settings.c"
}

static GType
pebbles_settings_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesSettingsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_settings_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesSettings), 0, (GInstanceInitFunc) pebbles_settings_instance_init, NULL };
	GType pebbles_settings_type_id;
	pebbles_settings_type_id = g_type_register_static (GRANITE_SERVICES_TYPE_SETTINGS, "PebblesSettings", &g_define_type_info, 0);
	PebblesSettings_private_offset = g_type_add_instance_private (pebbles_settings_type_id, sizeof (PebblesSettingsPrivate));
	return pebbles_settings_type_id;
}

GType
pebbles_settings_get_type (void)
{
	static volatile gsize pebbles_settings_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_settings_type_id__volatile)) {
		GType pebbles_settings_type_id;
		pebbles_settings_type_id = pebbles_settings_get_type_once ();
		g_once_init_leave (&pebbles_settings_type_id__volatile, pebbles_settings_type_id);
	}
	return pebbles_settings_type_id__volatile;
}

static void
_vala_pebbles_settings_get_property (GObject * object,
                                     guint property_id,
                                     GValue * value,
                                     GParamSpec * pspec)
{
	PebblesSettings * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, PEBBLES_TYPE_SETTINGS, PebblesSettings);
#line 64 "../src/Settings.vala"
	switch (property_id) {
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_X_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_window_x (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_Y_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_window_y (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_W_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_window_w (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_H_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_window_h (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_MAXIMIZED_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_boolean (value, pebbles_settings_get_window_maximized (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_VIEW_INDEX_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_view_index (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SHIFT_ALTERNATIVE_FUNCTION_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_boolean (value, pebbles_settings_get_shift_alternative_function (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_GLOBAL_ANGLE_UNIT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_enum (value, pebbles_settings_get_global_angle_unit (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_GLOBAL_WORD_LENGTH_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_enum (value, pebbles_settings_get_global_word_length (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_NUMBER_SYSTEM_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_enum (value, pebbles_settings_get_number_system (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_USE_DARK_THEME_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_boolean (value, pebbles_settings_get_use_dark_theme (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONSTANT_KEY_VALUE1_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_enum (value, pebbles_settings_get_constant_key_value1 (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONSTANT_KEY_VALUE2_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_enum (value, pebbles_settings_get_constant_key_value2 (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DECIMAL_PLACES_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_decimal_places (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SCI_INPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_sci_input_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SCI_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_sci_output_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SCI_MEMORY_VALUE_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_sci_memory_value (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_PROG_INPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_prog_input_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_PROG_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_prog_output_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_INPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_cal_input_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_cal_output_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_INTEGRATION_UPPER_LIMIT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_cal_integration_upper_limit (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_INTEGRATION_LOWER_LIMIT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_cal_integration_lower_limit (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_DERIVATION_LIMIT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_cal_derivation_limit (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_STAT_INPUT_ARRAY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_stat_input_array (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_STAT_MODE_PREVIOUS_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_int (value, pebbles_settings_get_stat_mode_previous (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_STAT_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_stat_output_text (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CURRENCY_MULTIPLIERS_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_currency_multipliers (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CURRENCY_UPDATE_DATE_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_currency_update_date (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_LENGTH_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_length_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_LENGTH_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_length_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_AREA_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_area_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_AREA_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_area_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ANGLE_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_angle_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ANGLE_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_angle_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_VOLUME_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_volume_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_VOLUME_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_volume_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TIME_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_time_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TIME_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_time_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_SPEED_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_speed_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_SPEED_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_speed_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_MASS_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_mass_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_MASS_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_mass_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_PRESSURE_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_pressure_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_PRESSURE_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_pressure_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ENERGY_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_energy_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ENERGY_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_energy_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_POWER_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_power_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_POWER_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_power_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TEMP_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_temp_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TEMP_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_temp_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_DATA_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_data_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_DATA_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_data_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_CURR_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_curr_from_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_CURR_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_conv_curr_to_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_DIFF_FROM_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_date_diff_from (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_DIFF_TO_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_date_diff_to (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_ADD_SUB_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_date_add_sub (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_DAY_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_date_day_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_MONTH_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_date_month_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_YEAR_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_date_year_entry (self));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_FOREX_API_KEY_PROPERTY:
#line 64 "../src/Settings.vala"
		g_value_set_string (value, pebbles_settings_get_forex_api_key (self));
#line 64 "../src/Settings.vala"
		break;
#line 3785 "Settings.c"
		default:
#line 64 "../src/Settings.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 64 "../src/Settings.vala"
		break;
#line 3791 "Settings.c"
	}
}

static void
_vala_pebbles_settings_set_property (GObject * object,
                                     guint property_id,
                                     const GValue * value,
                                     GParamSpec * pspec)
{
	PebblesSettings * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, PEBBLES_TYPE_SETTINGS, PebblesSettings);
#line 64 "../src/Settings.vala"
	switch (property_id) {
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_X_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_window_x (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_Y_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_window_y (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_W_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_window_w (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_H_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_window_h (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_WINDOW_MAXIMIZED_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_window_maximized (self, g_value_get_boolean (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_VIEW_INDEX_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_view_index (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SHIFT_ALTERNATIVE_FUNCTION_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_shift_alternative_function (self, g_value_get_boolean (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_GLOBAL_ANGLE_UNIT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_global_angle_unit (self, g_value_get_enum (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_GLOBAL_WORD_LENGTH_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_global_word_length (self, g_value_get_enum (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_NUMBER_SYSTEM_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_number_system (self, g_value_get_enum (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_USE_DARK_THEME_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_use_dark_theme (self, g_value_get_boolean (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONSTANT_KEY_VALUE1_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_constant_key_value1 (self, g_value_get_enum (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONSTANT_KEY_VALUE2_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_constant_key_value2 (self, g_value_get_enum (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DECIMAL_PLACES_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_decimal_places (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SCI_INPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_sci_input_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SCI_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_sci_output_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_SCI_MEMORY_VALUE_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_sci_memory_value (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_PROG_INPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_prog_input_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_PROG_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_prog_output_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_INPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_cal_input_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_cal_output_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_INTEGRATION_UPPER_LIMIT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_cal_integration_upper_limit (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_INTEGRATION_LOWER_LIMIT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_cal_integration_lower_limit (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CAL_DERIVATION_LIMIT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_cal_derivation_limit (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_STAT_INPUT_ARRAY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_stat_input_array (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_STAT_MODE_PREVIOUS_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_stat_mode_previous (self, g_value_get_int (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_STAT_OUTPUT_TEXT_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_stat_output_text (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CURRENCY_MULTIPLIERS_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_currency_multipliers (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CURRENCY_UPDATE_DATE_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_currency_update_date (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_LENGTH_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_length_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_LENGTH_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_length_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_AREA_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_area_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_AREA_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_area_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ANGLE_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_angle_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ANGLE_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_angle_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_VOLUME_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_volume_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_VOLUME_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_volume_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TIME_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_time_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TIME_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_time_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_SPEED_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_speed_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_SPEED_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_speed_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_MASS_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_mass_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_MASS_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_mass_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_PRESSURE_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_pressure_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_PRESSURE_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_pressure_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ENERGY_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_energy_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_ENERGY_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_energy_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_POWER_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_power_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_POWER_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_power_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TEMP_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_temp_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_TEMP_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_temp_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_DATA_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_data_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_DATA_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_data_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_CURR_FROM_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_curr_from_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_CONV_CURR_TO_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_conv_curr_to_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_DIFF_FROM_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_date_diff_from (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_DIFF_TO_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_date_diff_to (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_ADD_SUB_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_date_add_sub (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_DAY_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_date_day_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_MONTH_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_date_month_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_DATE_YEAR_ENTRY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_date_year_entry (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 64 "../src/Settings.vala"
		case PEBBLES_SETTINGS_FOREX_API_KEY_PROPERTY:
#line 64 "../src/Settings.vala"
		pebbles_settings_set_forex_api_key (self, g_value_get_string (value));
#line 64 "../src/Settings.vala"
		break;
#line 4177 "Settings.c"
		default:
#line 64 "../src/Settings.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 64 "../src/Settings.vala"
		break;
#line 4183 "Settings.c"
	}
}

