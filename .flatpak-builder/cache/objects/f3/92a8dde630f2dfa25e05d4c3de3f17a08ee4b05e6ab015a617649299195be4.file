/* ControlsOverlay.c generated by valac 0.48.14, the Vala compiler
 * generated from ControlsOverlay.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas  <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <glib/gi18n-lib.h>
#include <granite.h>
#include <stdlib.h>
#include <string.h>
#include <gdk/gdk.h>

#define PEBBLES_TYPE_CONTROLS_OVERLAY (pebbles_controls_overlay_get_type ())
#define PEBBLES_CONTROLS_OVERLAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_CONTROLS_OVERLAY, PebblesControlsOverlay))
#define PEBBLES_CONTROLS_OVERLAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_CONTROLS_OVERLAY, PebblesControlsOverlayClass))
#define PEBBLES_IS_CONTROLS_OVERLAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_CONTROLS_OVERLAY))
#define PEBBLES_IS_CONTROLS_OVERLAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_CONTROLS_OVERLAY))
#define PEBBLES_CONTROLS_OVERLAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_CONTROLS_OVERLAY, PebblesControlsOverlayClass))

typedef struct _PebblesControlsOverlay PebblesControlsOverlay;
typedef struct _PebblesControlsOverlayClass PebblesControlsOverlayClass;
typedef struct _PebblesControlsOverlayPrivate PebblesControlsOverlayPrivate;
enum  {
	PEBBLES_CONTROLS_OVERLAY_0_PROPERTY,
	PEBBLES_CONTROLS_OVERLAY_NUM_PROPERTIES
};
static GParamSpec* pebbles_controls_overlay_properties[PEBBLES_CONTROLS_OVERLAY_NUM_PROPERTIES];

#define PEBBLES_TYPE_CONTROL_SCHEME (pebbles_control_scheme_get_type ())
#define PEBBLES_CONTROL_SCHEME(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_CONTROL_SCHEME, PebblesControlScheme))
#define PEBBLES_CONTROL_SCHEME_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_CONTROL_SCHEME, PebblesControlSchemeClass))
#define PEBBLES_IS_CONTROL_SCHEME(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_CONTROL_SCHEME))
#define PEBBLES_IS_CONTROL_SCHEME_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_CONTROL_SCHEME))
#define PEBBLES_CONTROL_SCHEME_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_CONTROL_SCHEME, PebblesControlSchemeClass))

typedef struct _PebblesControlScheme PebblesControlScheme;
typedef struct _PebblesControlSchemeClass PebblesControlSchemeClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _PebblesControlSchemePrivate PebblesControlSchemePrivate;
#define _pebbles_control_scheme_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_control_scheme_unref (var), NULL)))
typedef enum  {
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_0 = 65456,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_1 = 65457,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_2 = 65458,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_3 = 65459,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_4 = 65460,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_5 = 65461,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_6 = 65462,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_7 = 65463,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_8 = 65464,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_9 = 65465,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_RADIX = 65454,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_0 = 48,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_1 = 49,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_2 = 50,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_3 = 51,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_4 = 52,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_5 = 53,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_6 = 54,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_7 = 55,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_8 = 56,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_9 = 57,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_RADIX = 46,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_COMMA = 44,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F1 = 65470,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F2 = 65471,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F3 = 65472,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F4 = 65473,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F5 = 65474,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F6 = 65475,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F7 = 65476,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F8 = 65477,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F9 = 65478,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F10 = 65479,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F11 = 65480,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F12 = 65481,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_BACKSPACE = 65288,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_DELETE = 65535,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_TAB = 65289,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SHIFT_TAB = 65056,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PAGE_UP = 65365,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PAGE_DOWN = 65366,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_HOME = 65360,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_END = 65367,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_A_LOWER = 97,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_B_LOWER = 98,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_LOWER = 99,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_D_LOWER = 100,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_E_LOWER = 101,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F_LOWER = 102,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_G_LOWER = 103,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_H_LOWER = 104,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_I_LOWER = 105,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_J_LOWER = 106,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_K_LOWER = 107,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_L_LOWER = 108,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_M_LOWER = 109,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_N_LOWER = 110,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_O_LOWER = 111,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_P_LOWER = 112,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Q_LOWER = 113,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_R_LOWER = 114,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_S_LOWER = 115,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_T_LOWER = 116,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_U_LOWER = 117,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_V_LOWER = 118,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_W_LOWER = 119,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_X_LOWER = 120,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Y_LOWER = 121,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Z_LOWER = 122,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_A_UPPER = 65,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_B_UPPER = 66,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_UPPER = 67,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_D_UPPER = 68,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_E_UPPER = 69,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F_UPPER = 70,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_G_UPPER = 71,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_H_UPPER = 72,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_I_UPPER = 73,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_J_UPPER = 74,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_K_UPPER = 75,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_L_UPPER = 76,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_M_UPPER = 77,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_N_UPPER = 78,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_O_UPPER = 79,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_P_UPPER = 80,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Q_UPPER = 81,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_R_UPPER = 82,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_S_UPPER = 83,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_T_UPPER = 84,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_U_UPPER = 85,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_V_UPPER = 86,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_W_UPPER = 87,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_X_UPPER = 88,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Y_UPPER = 89,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Z_UPPER = 90,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PLUS_NUMPAD = 65451,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_MINUS_NUMPAD = 65453,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SLASH_NUMPAD = 65455,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_STAR_NUMPAD = 65450,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PLUS_KEYPAD = 43,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_MINUS_KEYPAD = 45,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SLASH_KEYPAD = 47,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_STAR_KEYPAD = 42,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PARENTHESIS_L = 40,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PARENTHESIS_R = 41,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SQ_BRACKETS_L = 91,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SQ_BRACKETS_R = 93,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_FL_BRACKETS_L = 123,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_FL_BRACKETS_R = 125,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EQUAL_TO = 61,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PERCENTAGE = 37,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EXP_CAP = 94,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EXCLAMATION = 33,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_LT = 60,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_GT = 62,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_LEFT = 65361,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_RIGHT = 65363,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_UP = 65362,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_DOWN = 65364,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN = 65293,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN_NUMPAD = 65421,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_ESCAPE = 65307,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SPACE_BAR = 32,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_CTRL = 65507
} PebblesKeyboardHandlerKeyMap;

#define PEBBLES_KEYBOARD_HANDLER_TYPE_KEY_MAP (pebbles_keyboard_handler_key_map_get_type ())

struct _PebblesControlsOverlay {
	GtkWindow parent_instance;
	PebblesControlsOverlayPrivate * priv;
};

struct _PebblesControlsOverlayClass {
	GtkWindowClass parent_class;
};

struct _PebblesControlScheme {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PebblesControlSchemePrivate * priv;
	gchar** common;
	gint common_length1;
	gint common_length2;
	gchar** scientific;
	gint scientific_length1;
	gint scientific_length2;
	gchar** programmer;
	gint programmer_length1;
	gint programmer_length2;
	gchar** statistics;
	gint statistics_length1;
	gint statistics_length2;
	gchar** calculus;
	gint calculus_length1;
	gint calculus_length2;
	gchar** converter;
	gint converter_length1;
	gint converter_length2;
};

struct _PebblesControlSchemeClass {
	GTypeClass parent_class;
	void (*finalize) (PebblesControlScheme *self);
};

static gpointer pebbles_controls_overlay_parent_class = NULL;

GType pebbles_controls_overlay_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesControlsOverlay, g_object_unref)
PebblesControlsOverlay* pebbles_controls_overlay_new (void);
PebblesControlsOverlay* pebbles_controls_overlay_construct (GType object_type);
gpointer pebbles_control_scheme_ref (gpointer instance);
void pebbles_control_scheme_unref (gpointer instance);
GParamSpec* pebbles_param_spec_control_scheme (const gchar* name,
                                               const gchar* nick,
                                               const gchar* blurb,
                                               GType object_type,
                                               GParamFlags flags);
void pebbles_value_set_control_scheme (GValue* value,
                                       gpointer v_object);
void pebbles_value_take_control_scheme (GValue* value,
                                        gpointer v_object);
gpointer pebbles_value_get_control_scheme (const GValue* value);
GType pebbles_control_scheme_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesControlScheme, pebbles_control_scheme_unref)
PebblesControlScheme* pebbles_control_scheme_new (void);
PebblesControlScheme* pebbles_control_scheme_construct (GType object_type);
static void pebbles_controls_overlay_make_events (PebblesControlsOverlay* self);
static gboolean __lambda431_ (PebblesControlsOverlay* self,
                       GdkEventKey* event);
GType pebbles_keyboard_handler_key_map_get_type (void) G_GNUC_CONST;
static gboolean ___lambda431__gtk_widget_key_release_event (GtkWidget* _sender,
                                                     GdkEventKey* event,
                                                     gpointer self);
static GType pebbles_controls_overlay_get_type_once (void);

PebblesControlsOverlay*
pebbles_controls_overlay_construct (GType object_type)
{
	PebblesControlsOverlay * self = NULL;
	PebblesControlScheme* scheme = NULL;
	PebblesControlScheme* _tmp0_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp1_;
	GtkGrid* _tmp2_;
	GtkGrid* left_column = NULL;
	GtkGrid* _tmp3_;
	GtkGrid* right_column = NULL;
	GtkGrid* _tmp4_;
	GtkGrid* _tmp5_;
	GraniteHeaderLabel* _tmp6_;
	GraniteHeaderLabel* _tmp7_;
	GtkGrid* common_grid = NULL;
	GtkGrid* _tmp8_;
	GtkGrid* _tmp9_;
	GtkGrid* _tmp10_;
	GtkGrid* _tmp11_;
	GtkGrid* _tmp26_;
	GtkGrid* _tmp27_;
	GtkGrid* _tmp28_;
	GraniteHeaderLabel* _tmp29_;
	GraniteHeaderLabel* _tmp30_;
	GtkGrid* scientific_grid = NULL;
	GtkGrid* _tmp31_;
	GtkGrid* _tmp32_;
	GtkGrid* _tmp33_;
	GtkGrid* _tmp34_;
	GtkGrid* _tmp49_;
	GtkGrid* _tmp50_;
	GtkGrid* _tmp51_;
	GraniteHeaderLabel* _tmp52_;
	GraniteHeaderLabel* _tmp53_;
	GtkGrid* statistics_grid = NULL;
	GtkGrid* _tmp54_;
	GtkGrid* _tmp55_;
	GtkGrid* _tmp56_;
	GtkGrid* _tmp57_;
	GtkGrid* _tmp72_;
	GtkGrid* _tmp73_;
	GtkGrid* _tmp74_;
	GraniteHeaderLabel* _tmp75_;
	GraniteHeaderLabel* _tmp76_;
	GtkGrid* calculus_grid = NULL;
	GtkGrid* _tmp77_;
	GtkGrid* _tmp78_;
	GtkGrid* _tmp79_;
	GtkGrid* _tmp80_;
	GtkGrid* _tmp95_;
	GtkGrid* _tmp96_;
	GtkGrid* _tmp97_;
	GraniteHeaderLabel* _tmp98_;
	GraniteHeaderLabel* _tmp99_;
	GtkGrid* programmer_grid = NULL;
	GtkGrid* _tmp100_;
	GtkGrid* _tmp101_;
	GtkGrid* _tmp102_;
	GtkGrid* _tmp103_;
	GtkGrid* _tmp118_;
	GtkGrid* _tmp119_;
	GtkGrid* _tmp120_;
	GraniteHeaderLabel* _tmp121_;
	GraniteHeaderLabel* _tmp122_;
	GtkGrid* converter_grid = NULL;
	GtkGrid* _tmp123_;
	GtkGrid* _tmp124_;
	GtkGrid* _tmp125_;
	GtkGrid* _tmp126_;
	GtkGrid* _tmp141_;
	GtkGrid* _tmp142_;
	GtkGrid* _tmp143_;
	GtkGrid* _tmp144_;
	GtkGrid* _tmp145_;
	GtkGrid* _tmp146_;
	GtkScrolledWindow* scrolled_window = NULL;
	GtkScrolledWindow* _tmp147_;
	GtkGrid* _tmp148_;
	GtkHeaderBar* headerbar = NULL;
	GtkHeaderBar* _tmp149_;
	GtkStyleContext* _tmp150_;
	GtkStyleContext* _tmp151_;
#line 23 "../src/Views/ControlsOverlay.vala"
	self = (PebblesControlsOverlay*) g_object_new (object_type, NULL);
#line 24 "../src/Views/ControlsOverlay.vala"
	_tmp0_ = pebbles_control_scheme_new ();
#line 24 "../src/Views/ControlsOverlay.vala"
	scheme = _tmp0_;
#line 26 "../src/Views/ControlsOverlay.vala"
	_tmp1_ = (GtkGrid*) gtk_grid_new ();
#line 26 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp1_);
#line 26 "../src/Views/ControlsOverlay.vala"
	main_grid = _tmp1_;
#line 27 "../src/Views/ControlsOverlay.vala"
	_tmp2_ = main_grid;
#line 27 "../src/Views/ControlsOverlay.vala"
	g_object_set ((GtkWidget*) _tmp2_, "margin", 8, NULL);
#line 29 "../src/Views/ControlsOverlay.vala"
	_tmp3_ = (GtkGrid*) gtk_grid_new ();
#line 29 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp3_);
#line 29 "../src/Views/ControlsOverlay.vala"
	left_column = _tmp3_;
#line 30 "../src/Views/ControlsOverlay.vala"
	_tmp4_ = (GtkGrid*) gtk_grid_new ();
#line 30 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp4_);
#line 30 "../src/Views/ControlsOverlay.vala"
	right_column = _tmp4_;
#line 33 "../src/Views/ControlsOverlay.vala"
	_tmp5_ = left_column;
#line 33 "../src/Views/ControlsOverlay.vala"
	_tmp6_ = granite_header_label_new (_ ("Common"));
#line 33 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp6_);
#line 33 "../src/Views/ControlsOverlay.vala"
	_tmp7_ = _tmp6_;
#line 33 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp5_, (GtkWidget*) _tmp7_, 0, 0, 1, 1);
#line 33 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (_tmp7_);
#line 35 "../src/Views/ControlsOverlay.vala"
	_tmp8_ = (GtkGrid*) gtk_grid_new ();
#line 35 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp8_);
#line 35 "../src/Views/ControlsOverlay.vala"
	common_grid = _tmp8_;
#line 36 "../src/Views/ControlsOverlay.vala"
	_tmp9_ = common_grid;
#line 36 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp9_, 8);
#line 37 "../src/Views/ControlsOverlay.vala"
	_tmp10_ = common_grid;
#line 37 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp10_, 8);
#line 38 "../src/Views/ControlsOverlay.vala"
	_tmp11_ = common_grid;
#line 38 "../src/Views/ControlsOverlay.vala"
	gtk_grid_set_row_spacing (_tmp11_, 4);
#line 402 "ControlsOverlay.c"
	{
		gint i = 0;
#line 39 "../src/Views/ControlsOverlay.vala"
		i = 0;
#line 407 "ControlsOverlay.c"
		{
			gboolean _tmp12_ = FALSE;
#line 39 "../src/Views/ControlsOverlay.vala"
			_tmp12_ = TRUE;
#line 39 "../src/Views/ControlsOverlay.vala"
			while (TRUE) {
#line 414 "ControlsOverlay.c"
				PebblesControlScheme* _tmp14_;
				gchar** _tmp15_;
				gint _tmp15__length1;
				gint _tmp15__length2;
				gint _tmp16_;
				GtkGrid* _tmp17_;
				PebblesControlScheme* _tmp18_;
				gchar** _tmp19_;
				gint _tmp19__length1;
				gint _tmp19__length2;
				const gchar* _tmp20_;
				PebblesControlScheme* _tmp21_;
				gchar** _tmp22_;
				gint _tmp22__length1;
				gint _tmp22__length2;
				const gchar* _tmp23_;
				GraniteAccelLabel* _tmp24_;
				GraniteAccelLabel* _tmp25_;
#line 39 "../src/Views/ControlsOverlay.vala"
				if (!_tmp12_) {
#line 435 "ControlsOverlay.c"
					gint _tmp13_;
#line 39 "../src/Views/ControlsOverlay.vala"
					_tmp13_ = i;
#line 39 "../src/Views/ControlsOverlay.vala"
					i = _tmp13_ + 1;
#line 441 "ControlsOverlay.c"
				}
#line 39 "../src/Views/ControlsOverlay.vala"
				_tmp12_ = FALSE;
#line 39 "../src/Views/ControlsOverlay.vala"
				_tmp14_ = scheme;
#line 39 "../src/Views/ControlsOverlay.vala"
				_tmp15_ = _tmp14_->common;
#line 39 "../src/Views/ControlsOverlay.vala"
				_tmp15__length1 = _tmp14_->common_length1;
#line 39 "../src/Views/ControlsOverlay.vala"
				_tmp15__length2 = _tmp14_->common_length2;
#line 39 "../src/Views/ControlsOverlay.vala"
				_tmp16_ = _tmp15__length1;
#line 39 "../src/Views/ControlsOverlay.vala"
				if (!(i < _tmp16_)) {
#line 39 "../src/Views/ControlsOverlay.vala"
					break;
#line 459 "ControlsOverlay.c"
				}
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp17_ = common_grid;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp18_ = scheme;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp19_ = _tmp18_->common;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp19__length1 = _tmp18_->common_length1;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp19__length2 = _tmp18_->common_length2;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp20_ = _tmp19_[(i * _tmp19__length2) + 0];
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp21_ = scheme;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp22_ = _tmp21_->common;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp22__length1 = _tmp21_->common_length1;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp22__length2 = _tmp21_->common_length2;
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp23_ = _tmp22_[(i * _tmp22__length2) + 1];
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp24_ = granite_accel_label_new (_tmp20_, _tmp23_);
#line 40 "../src/Views/ControlsOverlay.vala"
				g_object_ref_sink (_tmp24_);
#line 40 "../src/Views/ControlsOverlay.vala"
				_tmp25_ = _tmp24_;
#line 40 "../src/Views/ControlsOverlay.vala"
				gtk_grid_attach (_tmp17_, (GtkWidget*) _tmp25_, 0, i, 1, 1);
#line 40 "../src/Views/ControlsOverlay.vala"
				_g_object_unref0 (_tmp25_);
#line 493 "ControlsOverlay.c"
			}
		}
	}
#line 42 "../src/Views/ControlsOverlay.vala"
	_tmp26_ = left_column;
#line 42 "../src/Views/ControlsOverlay.vala"
	_tmp27_ = common_grid;
#line 42 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp26_, (GtkWidget*) _tmp27_, 0, 1, 1, 1);
#line 45 "../src/Views/ControlsOverlay.vala"
	_tmp28_ = right_column;
#line 45 "../src/Views/ControlsOverlay.vala"
	_tmp29_ = granite_header_label_new (_ ("Scientific"));
#line 45 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp29_);
#line 45 "../src/Views/ControlsOverlay.vala"
	_tmp30_ = _tmp29_;
#line 45 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp28_, (GtkWidget*) _tmp30_, 0, 0, 1, 1);
#line 45 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (_tmp30_);
#line 47 "../src/Views/ControlsOverlay.vala"
	_tmp31_ = (GtkGrid*) gtk_grid_new ();
#line 47 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp31_);
#line 47 "../src/Views/ControlsOverlay.vala"
	scientific_grid = _tmp31_;
#line 48 "../src/Views/ControlsOverlay.vala"
	_tmp32_ = scientific_grid;
#line 48 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp32_, 8);
#line 49 "../src/Views/ControlsOverlay.vala"
	_tmp33_ = scientific_grid;
#line 49 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp33_, 8);
#line 50 "../src/Views/ControlsOverlay.vala"
	_tmp34_ = scientific_grid;
#line 50 "../src/Views/ControlsOverlay.vala"
	gtk_grid_set_row_spacing (_tmp34_, 4);
#line 533 "ControlsOverlay.c"
	{
		gint i = 0;
#line 51 "../src/Views/ControlsOverlay.vala"
		i = 0;
#line 538 "ControlsOverlay.c"
		{
			gboolean _tmp35_ = FALSE;
#line 51 "../src/Views/ControlsOverlay.vala"
			_tmp35_ = TRUE;
#line 51 "../src/Views/ControlsOverlay.vala"
			while (TRUE) {
#line 545 "ControlsOverlay.c"
				PebblesControlScheme* _tmp37_;
				gchar** _tmp38_;
				gint _tmp38__length1;
				gint _tmp38__length2;
				gint _tmp39_;
				GtkGrid* _tmp40_;
				PebblesControlScheme* _tmp41_;
				gchar** _tmp42_;
				gint _tmp42__length1;
				gint _tmp42__length2;
				const gchar* _tmp43_;
				PebblesControlScheme* _tmp44_;
				gchar** _tmp45_;
				gint _tmp45__length1;
				gint _tmp45__length2;
				const gchar* _tmp46_;
				GraniteAccelLabel* _tmp47_;
				GraniteAccelLabel* _tmp48_;
#line 51 "../src/Views/ControlsOverlay.vala"
				if (!_tmp35_) {
#line 566 "ControlsOverlay.c"
					gint _tmp36_;
#line 51 "../src/Views/ControlsOverlay.vala"
					_tmp36_ = i;
#line 51 "../src/Views/ControlsOverlay.vala"
					i = _tmp36_ + 1;
#line 572 "ControlsOverlay.c"
				}
#line 51 "../src/Views/ControlsOverlay.vala"
				_tmp35_ = FALSE;
#line 51 "../src/Views/ControlsOverlay.vala"
				_tmp37_ = scheme;
#line 51 "../src/Views/ControlsOverlay.vala"
				_tmp38_ = _tmp37_->scientific;
#line 51 "../src/Views/ControlsOverlay.vala"
				_tmp38__length1 = _tmp37_->scientific_length1;
#line 51 "../src/Views/ControlsOverlay.vala"
				_tmp38__length2 = _tmp37_->scientific_length2;
#line 51 "../src/Views/ControlsOverlay.vala"
				_tmp39_ = _tmp38__length1;
#line 51 "../src/Views/ControlsOverlay.vala"
				if (!(i < _tmp39_)) {
#line 51 "../src/Views/ControlsOverlay.vala"
					break;
#line 590 "ControlsOverlay.c"
				}
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp40_ = scientific_grid;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp41_ = scheme;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp42_ = _tmp41_->scientific;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp42__length1 = _tmp41_->scientific_length1;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp42__length2 = _tmp41_->scientific_length2;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp43_ = _tmp42_[(i * _tmp42__length2) + 0];
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp44_ = scheme;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp45_ = _tmp44_->scientific;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp45__length1 = _tmp44_->scientific_length1;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp45__length2 = _tmp44_->scientific_length2;
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp46_ = _tmp45_[(i * _tmp45__length2) + 1];
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp47_ = granite_accel_label_new (_tmp43_, _tmp46_);
#line 52 "../src/Views/ControlsOverlay.vala"
				g_object_ref_sink (_tmp47_);
#line 52 "../src/Views/ControlsOverlay.vala"
				_tmp48_ = _tmp47_;
#line 52 "../src/Views/ControlsOverlay.vala"
				gtk_grid_attach (_tmp40_, (GtkWidget*) _tmp48_, 0, i, 1, 1);
#line 52 "../src/Views/ControlsOverlay.vala"
				_g_object_unref0 (_tmp48_);
#line 624 "ControlsOverlay.c"
			}
		}
	}
#line 55 "../src/Views/ControlsOverlay.vala"
	_tmp49_ = right_column;
#line 55 "../src/Views/ControlsOverlay.vala"
	_tmp50_ = scientific_grid;
#line 55 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp49_, (GtkWidget*) _tmp50_, 0, 1, 1, 1);
#line 58 "../src/Views/ControlsOverlay.vala"
	_tmp51_ = left_column;
#line 58 "../src/Views/ControlsOverlay.vala"
	_tmp52_ = granite_header_label_new (_ ("Statistics"));
#line 58 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp52_);
#line 58 "../src/Views/ControlsOverlay.vala"
	_tmp53_ = _tmp52_;
#line 58 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp51_, (GtkWidget*) _tmp53_, 0, 2, 1, 1);
#line 58 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (_tmp53_);
#line 60 "../src/Views/ControlsOverlay.vala"
	_tmp54_ = (GtkGrid*) gtk_grid_new ();
#line 60 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp54_);
#line 60 "../src/Views/ControlsOverlay.vala"
	statistics_grid = _tmp54_;
#line 61 "../src/Views/ControlsOverlay.vala"
	_tmp55_ = statistics_grid;
#line 61 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp55_, 8);
#line 62 "../src/Views/ControlsOverlay.vala"
	_tmp56_ = statistics_grid;
#line 62 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp56_, 8);
#line 63 "../src/Views/ControlsOverlay.vala"
	_tmp57_ = statistics_grid;
#line 63 "../src/Views/ControlsOverlay.vala"
	gtk_grid_set_row_spacing (_tmp57_, 4);
#line 664 "ControlsOverlay.c"
	{
		gint i = 0;
#line 64 "../src/Views/ControlsOverlay.vala"
		i = 0;
#line 669 "ControlsOverlay.c"
		{
			gboolean _tmp58_ = FALSE;
#line 64 "../src/Views/ControlsOverlay.vala"
			_tmp58_ = TRUE;
#line 64 "../src/Views/ControlsOverlay.vala"
			while (TRUE) {
#line 676 "ControlsOverlay.c"
				PebblesControlScheme* _tmp60_;
				gchar** _tmp61_;
				gint _tmp61__length1;
				gint _tmp61__length2;
				gint _tmp62_;
				GtkGrid* _tmp63_;
				PebblesControlScheme* _tmp64_;
				gchar** _tmp65_;
				gint _tmp65__length1;
				gint _tmp65__length2;
				const gchar* _tmp66_;
				PebblesControlScheme* _tmp67_;
				gchar** _tmp68_;
				gint _tmp68__length1;
				gint _tmp68__length2;
				const gchar* _tmp69_;
				GraniteAccelLabel* _tmp70_;
				GraniteAccelLabel* _tmp71_;
#line 64 "../src/Views/ControlsOverlay.vala"
				if (!_tmp58_) {
#line 697 "ControlsOverlay.c"
					gint _tmp59_;
#line 64 "../src/Views/ControlsOverlay.vala"
					_tmp59_ = i;
#line 64 "../src/Views/ControlsOverlay.vala"
					i = _tmp59_ + 1;
#line 703 "ControlsOverlay.c"
				}
#line 64 "../src/Views/ControlsOverlay.vala"
				_tmp58_ = FALSE;
#line 64 "../src/Views/ControlsOverlay.vala"
				_tmp60_ = scheme;
#line 64 "../src/Views/ControlsOverlay.vala"
				_tmp61_ = _tmp60_->statistics;
#line 64 "../src/Views/ControlsOverlay.vala"
				_tmp61__length1 = _tmp60_->statistics_length1;
#line 64 "../src/Views/ControlsOverlay.vala"
				_tmp61__length2 = _tmp60_->statistics_length2;
#line 64 "../src/Views/ControlsOverlay.vala"
				_tmp62_ = _tmp61__length1;
#line 64 "../src/Views/ControlsOverlay.vala"
				if (!(i < _tmp62_)) {
#line 64 "../src/Views/ControlsOverlay.vala"
					break;
#line 721 "ControlsOverlay.c"
				}
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp63_ = statistics_grid;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp64_ = scheme;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp65_ = _tmp64_->statistics;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp65__length1 = _tmp64_->statistics_length1;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp65__length2 = _tmp64_->statistics_length2;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp66_ = _tmp65_[(i * _tmp65__length2) + 0];
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp67_ = scheme;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp68_ = _tmp67_->statistics;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp68__length1 = _tmp67_->statistics_length1;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp68__length2 = _tmp67_->statistics_length2;
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp69_ = _tmp68_[(i * _tmp68__length2) + 1];
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp70_ = granite_accel_label_new (_tmp66_, _tmp69_);
#line 65 "../src/Views/ControlsOverlay.vala"
				g_object_ref_sink (_tmp70_);
#line 65 "../src/Views/ControlsOverlay.vala"
				_tmp71_ = _tmp70_;
#line 65 "../src/Views/ControlsOverlay.vala"
				gtk_grid_attach (_tmp63_, (GtkWidget*) _tmp71_, 0, i, 1, 1);
#line 65 "../src/Views/ControlsOverlay.vala"
				_g_object_unref0 (_tmp71_);
#line 755 "ControlsOverlay.c"
			}
		}
	}
#line 68 "../src/Views/ControlsOverlay.vala"
	_tmp72_ = left_column;
#line 68 "../src/Views/ControlsOverlay.vala"
	_tmp73_ = statistics_grid;
#line 68 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp72_, (GtkWidget*) _tmp73_, 0, 3, 1, 1);
#line 72 "../src/Views/ControlsOverlay.vala"
	_tmp74_ = right_column;
#line 72 "../src/Views/ControlsOverlay.vala"
	_tmp75_ = granite_header_label_new (_ ("Calculus"));
#line 72 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp75_);
#line 72 "../src/Views/ControlsOverlay.vala"
	_tmp76_ = _tmp75_;
#line 72 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp74_, (GtkWidget*) _tmp76_, 0, 2, 1, 1);
#line 72 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (_tmp76_);
#line 74 "../src/Views/ControlsOverlay.vala"
	_tmp77_ = (GtkGrid*) gtk_grid_new ();
#line 74 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp77_);
#line 74 "../src/Views/ControlsOverlay.vala"
	calculus_grid = _tmp77_;
#line 75 "../src/Views/ControlsOverlay.vala"
	_tmp78_ = calculus_grid;
#line 75 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp78_, 8);
#line 76 "../src/Views/ControlsOverlay.vala"
	_tmp79_ = calculus_grid;
#line 76 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp79_, 8);
#line 77 "../src/Views/ControlsOverlay.vala"
	_tmp80_ = calculus_grid;
#line 77 "../src/Views/ControlsOverlay.vala"
	gtk_grid_set_row_spacing (_tmp80_, 4);
#line 795 "ControlsOverlay.c"
	{
		gint i = 0;
#line 78 "../src/Views/ControlsOverlay.vala"
		i = 0;
#line 800 "ControlsOverlay.c"
		{
			gboolean _tmp81_ = FALSE;
#line 78 "../src/Views/ControlsOverlay.vala"
			_tmp81_ = TRUE;
#line 78 "../src/Views/ControlsOverlay.vala"
			while (TRUE) {
#line 807 "ControlsOverlay.c"
				PebblesControlScheme* _tmp83_;
				gchar** _tmp84_;
				gint _tmp84__length1;
				gint _tmp84__length2;
				gint _tmp85_;
				GtkGrid* _tmp86_;
				PebblesControlScheme* _tmp87_;
				gchar** _tmp88_;
				gint _tmp88__length1;
				gint _tmp88__length2;
				const gchar* _tmp89_;
				PebblesControlScheme* _tmp90_;
				gchar** _tmp91_;
				gint _tmp91__length1;
				gint _tmp91__length2;
				const gchar* _tmp92_;
				GraniteAccelLabel* _tmp93_;
				GraniteAccelLabel* _tmp94_;
#line 78 "../src/Views/ControlsOverlay.vala"
				if (!_tmp81_) {
#line 828 "ControlsOverlay.c"
					gint _tmp82_;
#line 78 "../src/Views/ControlsOverlay.vala"
					_tmp82_ = i;
#line 78 "../src/Views/ControlsOverlay.vala"
					i = _tmp82_ + 1;
#line 834 "ControlsOverlay.c"
				}
#line 78 "../src/Views/ControlsOverlay.vala"
				_tmp81_ = FALSE;
#line 78 "../src/Views/ControlsOverlay.vala"
				_tmp83_ = scheme;
#line 78 "../src/Views/ControlsOverlay.vala"
				_tmp84_ = _tmp83_->calculus;
#line 78 "../src/Views/ControlsOverlay.vala"
				_tmp84__length1 = _tmp83_->calculus_length1;
#line 78 "../src/Views/ControlsOverlay.vala"
				_tmp84__length2 = _tmp83_->calculus_length2;
#line 78 "../src/Views/ControlsOverlay.vala"
				_tmp85_ = _tmp84__length1;
#line 78 "../src/Views/ControlsOverlay.vala"
				if (!(i < _tmp85_)) {
#line 78 "../src/Views/ControlsOverlay.vala"
					break;
#line 852 "ControlsOverlay.c"
				}
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp86_ = calculus_grid;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp87_ = scheme;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp88_ = _tmp87_->calculus;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp88__length1 = _tmp87_->calculus_length1;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp88__length2 = _tmp87_->calculus_length2;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp89_ = _tmp88_[(i * _tmp88__length2) + 0];
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp90_ = scheme;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp91_ = _tmp90_->calculus;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp91__length1 = _tmp90_->calculus_length1;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp91__length2 = _tmp90_->calculus_length2;
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp92_ = _tmp91_[(i * _tmp91__length2) + 1];
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp93_ = granite_accel_label_new (_tmp89_, _tmp92_);
#line 79 "../src/Views/ControlsOverlay.vala"
				g_object_ref_sink (_tmp93_);
#line 79 "../src/Views/ControlsOverlay.vala"
				_tmp94_ = _tmp93_;
#line 79 "../src/Views/ControlsOverlay.vala"
				gtk_grid_attach (_tmp86_, (GtkWidget*) _tmp94_, 0, i, 1, 1);
#line 79 "../src/Views/ControlsOverlay.vala"
				_g_object_unref0 (_tmp94_);
#line 886 "ControlsOverlay.c"
			}
		}
	}
#line 82 "../src/Views/ControlsOverlay.vala"
	_tmp95_ = right_column;
#line 82 "../src/Views/ControlsOverlay.vala"
	_tmp96_ = calculus_grid;
#line 82 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp95_, (GtkWidget*) _tmp96_, 0, 3, 1, 1);
#line 85 "../src/Views/ControlsOverlay.vala"
	_tmp97_ = right_column;
#line 85 "../src/Views/ControlsOverlay.vala"
	_tmp98_ = granite_header_label_new (_ ("Programmer"));
#line 85 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp98_);
#line 85 "../src/Views/ControlsOverlay.vala"
	_tmp99_ = _tmp98_;
#line 85 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp97_, (GtkWidget*) _tmp99_, 0, 4, 1, 1);
#line 85 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (_tmp99_);
#line 87 "../src/Views/ControlsOverlay.vala"
	_tmp100_ = (GtkGrid*) gtk_grid_new ();
#line 87 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp100_);
#line 87 "../src/Views/ControlsOverlay.vala"
	programmer_grid = _tmp100_;
#line 88 "../src/Views/ControlsOverlay.vala"
	_tmp101_ = programmer_grid;
#line 88 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp101_, 8);
#line 89 "../src/Views/ControlsOverlay.vala"
	_tmp102_ = programmer_grid;
#line 89 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp102_, 8);
#line 90 "../src/Views/ControlsOverlay.vala"
	_tmp103_ = programmer_grid;
#line 90 "../src/Views/ControlsOverlay.vala"
	gtk_grid_set_row_spacing (_tmp103_, 4);
#line 926 "ControlsOverlay.c"
	{
		gint i = 0;
#line 91 "../src/Views/ControlsOverlay.vala"
		i = 0;
#line 931 "ControlsOverlay.c"
		{
			gboolean _tmp104_ = FALSE;
#line 91 "../src/Views/ControlsOverlay.vala"
			_tmp104_ = TRUE;
#line 91 "../src/Views/ControlsOverlay.vala"
			while (TRUE) {
#line 938 "ControlsOverlay.c"
				PebblesControlScheme* _tmp106_;
				gchar** _tmp107_;
				gint _tmp107__length1;
				gint _tmp107__length2;
				gint _tmp108_;
				GtkGrid* _tmp109_;
				PebblesControlScheme* _tmp110_;
				gchar** _tmp111_;
				gint _tmp111__length1;
				gint _tmp111__length2;
				const gchar* _tmp112_;
				PebblesControlScheme* _tmp113_;
				gchar** _tmp114_;
				gint _tmp114__length1;
				gint _tmp114__length2;
				const gchar* _tmp115_;
				GraniteAccelLabel* _tmp116_;
				GraniteAccelLabel* _tmp117_;
#line 91 "../src/Views/ControlsOverlay.vala"
				if (!_tmp104_) {
#line 959 "ControlsOverlay.c"
					gint _tmp105_;
#line 91 "../src/Views/ControlsOverlay.vala"
					_tmp105_ = i;
#line 91 "../src/Views/ControlsOverlay.vala"
					i = _tmp105_ + 1;
#line 965 "ControlsOverlay.c"
				}
#line 91 "../src/Views/ControlsOverlay.vala"
				_tmp104_ = FALSE;
#line 91 "../src/Views/ControlsOverlay.vala"
				_tmp106_ = scheme;
#line 91 "../src/Views/ControlsOverlay.vala"
				_tmp107_ = _tmp106_->programmer;
#line 91 "../src/Views/ControlsOverlay.vala"
				_tmp107__length1 = _tmp106_->programmer_length1;
#line 91 "../src/Views/ControlsOverlay.vala"
				_tmp107__length2 = _tmp106_->programmer_length2;
#line 91 "../src/Views/ControlsOverlay.vala"
				_tmp108_ = _tmp107__length1;
#line 91 "../src/Views/ControlsOverlay.vala"
				if (!(i < _tmp108_)) {
#line 91 "../src/Views/ControlsOverlay.vala"
					break;
#line 983 "ControlsOverlay.c"
				}
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp109_ = programmer_grid;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp110_ = scheme;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp111_ = _tmp110_->programmer;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp111__length1 = _tmp110_->programmer_length1;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp111__length2 = _tmp110_->programmer_length2;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp112_ = _tmp111_[(i * _tmp111__length2) + 0];
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp113_ = scheme;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp114_ = _tmp113_->programmer;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp114__length1 = _tmp113_->programmer_length1;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp114__length2 = _tmp113_->programmer_length2;
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp115_ = _tmp114_[(i * _tmp114__length2) + 1];
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp116_ = granite_accel_label_new (_tmp112_, _tmp115_);
#line 92 "../src/Views/ControlsOverlay.vala"
				g_object_ref_sink (_tmp116_);
#line 92 "../src/Views/ControlsOverlay.vala"
				_tmp117_ = _tmp116_;
#line 92 "../src/Views/ControlsOverlay.vala"
				gtk_grid_attach (_tmp109_, (GtkWidget*) _tmp117_, 0, i, 1, 1);
#line 92 "../src/Views/ControlsOverlay.vala"
				_g_object_unref0 (_tmp117_);
#line 1017 "ControlsOverlay.c"
			}
		}
	}
#line 95 "../src/Views/ControlsOverlay.vala"
	_tmp118_ = right_column;
#line 95 "../src/Views/ControlsOverlay.vala"
	_tmp119_ = programmer_grid;
#line 95 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp118_, (GtkWidget*) _tmp119_, 0, 5, 1, 1);
#line 98 "../src/Views/ControlsOverlay.vala"
	_tmp120_ = right_column;
#line 98 "../src/Views/ControlsOverlay.vala"
	_tmp121_ = granite_header_label_new (_ ("Unit Converters"));
#line 98 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp121_);
#line 98 "../src/Views/ControlsOverlay.vala"
	_tmp122_ = _tmp121_;
#line 98 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp120_, (GtkWidget*) _tmp122_, 0, 6, 1, 1);
#line 98 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (_tmp122_);
#line 100 "../src/Views/ControlsOverlay.vala"
	_tmp123_ = (GtkGrid*) gtk_grid_new ();
#line 100 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp123_);
#line 100 "../src/Views/ControlsOverlay.vala"
	converter_grid = _tmp123_;
#line 101 "../src/Views/ControlsOverlay.vala"
	_tmp124_ = converter_grid;
#line 101 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp124_, 8);
#line 102 "../src/Views/ControlsOverlay.vala"
	_tmp125_ = converter_grid;
#line 102 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp125_, 8);
#line 103 "../src/Views/ControlsOverlay.vala"
	_tmp126_ = converter_grid;
#line 103 "../src/Views/ControlsOverlay.vala"
	gtk_grid_set_row_spacing (_tmp126_, 4);
#line 1057 "ControlsOverlay.c"
	{
		gint i = 0;
#line 104 "../src/Views/ControlsOverlay.vala"
		i = 0;
#line 1062 "ControlsOverlay.c"
		{
			gboolean _tmp127_ = FALSE;
#line 104 "../src/Views/ControlsOverlay.vala"
			_tmp127_ = TRUE;
#line 104 "../src/Views/ControlsOverlay.vala"
			while (TRUE) {
#line 1069 "ControlsOverlay.c"
				PebblesControlScheme* _tmp129_;
				gchar** _tmp130_;
				gint _tmp130__length1;
				gint _tmp130__length2;
				gint _tmp131_;
				GtkGrid* _tmp132_;
				PebblesControlScheme* _tmp133_;
				gchar** _tmp134_;
				gint _tmp134__length1;
				gint _tmp134__length2;
				const gchar* _tmp135_;
				PebblesControlScheme* _tmp136_;
				gchar** _tmp137_;
				gint _tmp137__length1;
				gint _tmp137__length2;
				const gchar* _tmp138_;
				GraniteAccelLabel* _tmp139_;
				GraniteAccelLabel* _tmp140_;
#line 104 "../src/Views/ControlsOverlay.vala"
				if (!_tmp127_) {
#line 1090 "ControlsOverlay.c"
					gint _tmp128_;
#line 104 "../src/Views/ControlsOverlay.vala"
					_tmp128_ = i;
#line 104 "../src/Views/ControlsOverlay.vala"
					i = _tmp128_ + 1;
#line 1096 "ControlsOverlay.c"
				}
#line 104 "../src/Views/ControlsOverlay.vala"
				_tmp127_ = FALSE;
#line 104 "../src/Views/ControlsOverlay.vala"
				_tmp129_ = scheme;
#line 104 "../src/Views/ControlsOverlay.vala"
				_tmp130_ = _tmp129_->converter;
#line 104 "../src/Views/ControlsOverlay.vala"
				_tmp130__length1 = _tmp129_->converter_length1;
#line 104 "../src/Views/ControlsOverlay.vala"
				_tmp130__length2 = _tmp129_->converter_length2;
#line 104 "../src/Views/ControlsOverlay.vala"
				_tmp131_ = _tmp130__length1;
#line 104 "../src/Views/ControlsOverlay.vala"
				if (!(i < _tmp131_)) {
#line 104 "../src/Views/ControlsOverlay.vala"
					break;
#line 1114 "ControlsOverlay.c"
				}
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp132_ = converter_grid;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp133_ = scheme;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp134_ = _tmp133_->converter;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp134__length1 = _tmp133_->converter_length1;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp134__length2 = _tmp133_->converter_length2;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp135_ = _tmp134_[(i * _tmp134__length2) + 0];
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp136_ = scheme;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp137_ = _tmp136_->converter;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp137__length1 = _tmp136_->converter_length1;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp137__length2 = _tmp136_->converter_length2;
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp138_ = _tmp137_[(i * _tmp137__length2) + 1];
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp139_ = granite_accel_label_new (_tmp135_, _tmp138_);
#line 105 "../src/Views/ControlsOverlay.vala"
				g_object_ref_sink (_tmp139_);
#line 105 "../src/Views/ControlsOverlay.vala"
				_tmp140_ = _tmp139_;
#line 105 "../src/Views/ControlsOverlay.vala"
				gtk_grid_attach (_tmp132_, (GtkWidget*) _tmp140_, 0, i, 1, 1);
#line 105 "../src/Views/ControlsOverlay.vala"
				_g_object_unref0 (_tmp140_);
#line 1148 "ControlsOverlay.c"
			}
		}
	}
#line 108 "../src/Views/ControlsOverlay.vala"
	_tmp141_ = right_column;
#line 108 "../src/Views/ControlsOverlay.vala"
	_tmp142_ = converter_grid;
#line 108 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp141_, (GtkWidget*) _tmp142_, 0, 7, 1, 1);
#line 110 "../src/Views/ControlsOverlay.vala"
	_tmp143_ = main_grid;
#line 110 "../src/Views/ControlsOverlay.vala"
	_tmp144_ = left_column;
#line 110 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp143_, (GtkWidget*) _tmp144_, 0, 0, 1, 1);
#line 111 "../src/Views/ControlsOverlay.vala"
	_tmp145_ = main_grid;
#line 111 "../src/Views/ControlsOverlay.vala"
	_tmp146_ = right_column;
#line 111 "../src/Views/ControlsOverlay.vala"
	gtk_grid_attach (_tmp145_, (GtkWidget*) _tmp146_, 1, 0, 1, 1);
#line 112 "../src/Views/ControlsOverlay.vala"
	_tmp147_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 112 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp147_);
#line 112 "../src/Views/ControlsOverlay.vala"
	scrolled_window = _tmp147_;
#line 113 "../src/Views/ControlsOverlay.vala"
	_tmp148_ = main_grid;
#line 113 "../src/Views/ControlsOverlay.vala"
	gtk_container_add ((GtkContainer*) scrolled_window, (GtkWidget*) _tmp148_);
#line 114 "../src/Views/ControlsOverlay.vala"
	g_object_set ((GtkWidget*) scrolled_window, "width-request", 640, NULL);
#line 115 "../src/Views/ControlsOverlay.vala"
	g_object_set ((GtkWidget*) scrolled_window, "height-request", 480, NULL);
#line 118 "../src/Views/ControlsOverlay.vala"
	_tmp149_ = (GtkHeaderBar*) gtk_header_bar_new ();
#line 118 "../src/Views/ControlsOverlay.vala"
	g_object_ref_sink (_tmp149_);
#line 118 "../src/Views/ControlsOverlay.vala"
	headerbar = _tmp149_;
#line 119 "../src/Views/ControlsOverlay.vala"
	gtk_header_bar_set_has_subtitle (headerbar, FALSE);
#line 120 "../src/Views/ControlsOverlay.vala"
	gtk_header_bar_set_show_close_button (headerbar, TRUE);
#line 121 "../src/Views/ControlsOverlay.vala"
	gtk_header_bar_set_title (headerbar, _ ("Pebbles Controls"));
#line 123 "../src/Views/ControlsOverlay.vala"
	_tmp150_ = gtk_widget_get_style_context ((GtkWidget*) headerbar);
#line 123 "../src/Views/ControlsOverlay.vala"
	gtk_style_context_add_class (_tmp150_, GTK_STYLE_CLASS_FLAT);
#line 124 "../src/Views/ControlsOverlay.vala"
	gtk_window_set_titlebar ((GtkWindow*) self, (GtkWidget*) headerbar);
#line 125 "../src/Views/ControlsOverlay.vala"
	_tmp151_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 125 "../src/Views/ControlsOverlay.vala"
	gtk_style_context_add_class (_tmp151_, "rounded");
#line 128 "../src/Views/ControlsOverlay.vala"
	gtk_window_set_resizable ((GtkWindow*) self, FALSE);
#line 129 "../src/Views/ControlsOverlay.vala"
	gtk_window_set_default_size ((GtkWindow*) self, 640, 480);
#line 130 "../src/Views/ControlsOverlay.vala"
	gtk_widget_set_size_request ((GtkWidget*) self, 640, 480);
#line 132 "../src/Views/ControlsOverlay.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) scrolled_window);
#line 134 "../src/Views/ControlsOverlay.vala"
	gtk_window_set_destroy_with_parent ((GtkWindow*) self, TRUE);
#line 135 "../src/Views/ControlsOverlay.vala"
	gtk_window_set_modal ((GtkWindow*) self, TRUE);
#line 136 "../src/Views/ControlsOverlay.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 137 "../src/Views/ControlsOverlay.vala"
	pebbles_controls_overlay_make_events (self);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (headerbar);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (scrolled_window);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (converter_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (programmer_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (calculus_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (statistics_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (scientific_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (common_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (right_column);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (left_column);
#line 23 "../src/Views/ControlsOverlay.vala"
	_g_object_unref0 (main_grid);
#line 23 "../src/Views/ControlsOverlay.vala"
	_pebbles_control_scheme_unref0 (scheme);
#line 23 "../src/Views/ControlsOverlay.vala"
	return self;
#line 1248 "ControlsOverlay.c"
}

PebblesControlsOverlay*
pebbles_controls_overlay_new (void)
{
#line 23 "../src/Views/ControlsOverlay.vala"
	return pebbles_controls_overlay_construct (PEBBLES_TYPE_CONTROLS_OVERLAY);
#line 1256 "ControlsOverlay.c"
}

static gboolean
__lambda431_ (PebblesControlsOverlay* self,
              GdkEventKey* event)
{
	gboolean result = FALSE;
#line 141 "../src/Views/ControlsOverlay.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 142 "../src/Views/ControlsOverlay.vala"
	if (event->keyval == ((guint) PEBBLES_KEYBOARD_HANDLER_KEY_MAP_ESCAPE)) {
#line 143 "../src/Views/ControlsOverlay.vala"
		gtk_widget_hide ((GtkWidget*) self);
#line 1270 "ControlsOverlay.c"
	}
#line 145 "../src/Views/ControlsOverlay.vala"
	result = FALSE;
#line 145 "../src/Views/ControlsOverlay.vala"
	return result;
#line 1276 "ControlsOverlay.c"
}

static gboolean
___lambda431__gtk_widget_key_release_event (GtkWidget* _sender,
                                            GdkEventKey* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda431_ ((PebblesControlsOverlay*) self, event);
#line 141 "../src/Views/ControlsOverlay.vala"
	return result;
#line 1288 "ControlsOverlay.c"
}

static void
pebbles_controls_overlay_make_events (PebblesControlsOverlay* self)
{
#line 140 "../src/Views/ControlsOverlay.vala"
	g_return_if_fail (self != NULL);
#line 141 "../src/Views/ControlsOverlay.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-release-event", (GCallback) ___lambda431__gtk_widget_key_release_event, self, 0);
#line 1298 "ControlsOverlay.c"
}

static void
pebbles_controls_overlay_class_init (PebblesControlsOverlayClass * klass,
                                     gpointer klass_data)
{
#line 22 "../src/Views/ControlsOverlay.vala"
	pebbles_controls_overlay_parent_class = g_type_class_peek_parent (klass);
#line 1307 "ControlsOverlay.c"
}

static void
pebbles_controls_overlay_instance_init (PebblesControlsOverlay * self,
                                        gpointer klass)
{
}

static GType
pebbles_controls_overlay_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesControlsOverlayClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_controls_overlay_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesControlsOverlay), 0, (GInstanceInitFunc) pebbles_controls_overlay_instance_init, NULL };
	GType pebbles_controls_overlay_type_id;
	pebbles_controls_overlay_type_id = g_type_register_static (gtk_window_get_type (), "PebblesControlsOverlay", &g_define_type_info, 0);
	return pebbles_controls_overlay_type_id;
}

GType
pebbles_controls_overlay_get_type (void)
{
	static volatile gsize pebbles_controls_overlay_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_controls_overlay_type_id__volatile)) {
		GType pebbles_controls_overlay_type_id;
		pebbles_controls_overlay_type_id = pebbles_controls_overlay_get_type_once ();
		g_once_init_leave (&pebbles_controls_overlay_type_id__volatile, pebbles_controls_overlay_type_id);
	}
	return pebbles_controls_overlay_type_id__volatile;
}

