/* OverlayBar.c generated by valac 0.48.14, the Vala compiler
 * generated from OverlayBar.vala, do not modify */

/*
 *  Copyright (C) 2012 ammonkey <am.monkeyd@gmail.com>
 *  Copyright (C) 2013 Juli√°n Unrrein <junrrein@gmail.com>
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gdk/gdk.h>
#include <pango/pango.h>

#define GRANITE_WIDGETS_TYPE_OVERLAY_BAR (granite_widgets_overlay_bar_get_type ())
#define GRANITE_WIDGETS_OVERLAY_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBar))
#define GRANITE_WIDGETS_OVERLAY_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBarClass))
#define GRANITE_WIDGETS_IS_OVERLAY_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_OVERLAY_BAR))
#define GRANITE_WIDGETS_IS_OVERLAY_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_TYPE_OVERLAY_BAR))
#define GRANITE_WIDGETS_OVERLAY_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBarClass))

typedef struct _GraniteWidgetsOverlayBar GraniteWidgetsOverlayBar;
typedef struct _GraniteWidgetsOverlayBarClass GraniteWidgetsOverlayBarClass;
typedef struct _GraniteWidgetsOverlayBarPrivate GraniteWidgetsOverlayBarPrivate;
enum  {
	GRANITE_WIDGETS_OVERLAY_BAR_0_PROPERTY,
	GRANITE_WIDGETS_OVERLAY_BAR_OVERLAY_PROPERTY,
	GRANITE_WIDGETS_OVERLAY_BAR_STATUS_PROPERTY,
	GRANITE_WIDGETS_OVERLAY_BAR_LABEL_PROPERTY,
	GRANITE_WIDGETS_OVERLAY_BAR_ACTIVE_PROPERTY,
	GRANITE_WIDGETS_OVERLAY_BAR_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _GraniteWidgetsOverlayBar {
	GtkEventBox parent_instance;
	GraniteWidgetsOverlayBarPrivate * priv;
};

struct _GraniteWidgetsOverlayBarClass {
	GtkEventBoxClass parent_class;
};

struct _GraniteWidgetsOverlayBarPrivate {
	GtkLabel* status_label;
	GtkRevealer* revealer;
	GtkSpinner* spinner;
	GtkOverlay* _overlay;
};

static gint GraniteWidgetsOverlayBar_private_offset;
static gpointer granite_widgets_overlay_bar_parent_class = NULL;

GType granite_widgets_overlay_bar_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsOverlayBar, g_object_unref)
#define GRANITE_WIDGETS_OVERLAY_BAR_FALLBACK_THEME "\n" \
"        .overlay-bar {\n" \
"            background-color: alpha (#333, 0.8);\n" \
"            border-radius: 3px;\n" \
"            border-width: 0;\n" \
"            box-shadow:\n" \
"                0 1px 3px alpha (#000, 0.12),\n" \
"                0 1px 2px alpha (#000, 0.24);\n" \
"            color: #fff;\n" \
"            padding: 3px 6px;\n" \
"            margin: 6px;\n" \
"            text-shadow: 0 1px 2px alpha (#000, 0.6);\n" \
"        }\n" \
"    "
GtkOverlay* granite_widgets_overlay_bar_get_overlay (GraniteWidgetsOverlayBar* self) G_GNUC_DEPRECATED;
static void granite_widgets_overlay_bar_set_overlay (GraniteWidgetsOverlayBar* self,
                                              GtkOverlay* value) G_GNUC_DEPRECATED;
const gchar* granite_widgets_overlay_bar_get_status (GraniteWidgetsOverlayBar* self) G_GNUC_DEPRECATED;
void granite_widgets_overlay_bar_set_status (GraniteWidgetsOverlayBar* self,
                                             const gchar* value) G_GNUC_DEPRECATED;
const gchar* granite_widgets_overlay_bar_get_label (GraniteWidgetsOverlayBar* self);
void granite_widgets_overlay_bar_set_label (GraniteWidgetsOverlayBar* self,
                                            const gchar* value);
gboolean granite_widgets_overlay_bar_get_active (GraniteWidgetsOverlayBar* self);
void granite_widgets_overlay_bar_set_active (GraniteWidgetsOverlayBar* self,
                                             gboolean value);
GraniteWidgetsOverlayBar* granite_widgets_overlay_bar_new (GtkOverlay* overlay);
GraniteWidgetsOverlayBar* granite_widgets_overlay_bar_construct (GType object_type,
                                                                 GtkOverlay* overlay);
static void granite_widgets_overlay_bar_real_parent_set (GtkWidget* base,
                                                  GtkWidget* old_parent);
static gboolean granite_widgets_overlay_bar_enter_notify_callback (GraniteWidgetsOverlayBar* self,
                                                            GdkEventCrossing* event);
static gboolean _granite_widgets_overlay_bar_enter_notify_callback_gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                                           GdkEventCrossing* event,
                                                                                           gpointer self);
static GObject * granite_widgets_overlay_bar_constructor (GType type,
                                                   guint n_construct_properties,
                                                   GObjectConstructParam * construct_properties);
GtkCssProvider* granite_widgets_utils_set_theming (GtkWidget* widget,
                                                   const gchar* stylesheet,
                                                   const gchar* class_name,
                                                   gint priority) G_GNUC_DEPRECATED;
#define GRANITE_STYLE_CLASS_OVERLAY_BAR "overlay-bar"
static void granite_widgets_overlay_bar_finalize (GObject * obj);
static GType granite_widgets_overlay_bar_get_type_once (void);
static void _vala_granite_widgets_overlay_bar_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec);
static void _vala_granite_widgets_overlay_bar_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec);

static inline gpointer
granite_widgets_overlay_bar_get_instance_private (GraniteWidgetsOverlayBar* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsOverlayBar_private_offset);
}

GtkOverlay*
granite_widgets_overlay_bar_get_overlay (GraniteWidgetsOverlayBar* self)
{
	GtkOverlay* result;
	GtkOverlay* _tmp0_;
#line 92 "../lib/Widgets/OverlayBar.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 92 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->_overlay;
#line 92 "../lib/Widgets/OverlayBar.vala"
	result = _tmp0_;
#line 92 "../lib/Widgets/OverlayBar.vala"
	return result;
#line 136 "OverlayBar.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 92 "../lib/Widgets/OverlayBar.vala"
	return self ? g_object_ref (self) : NULL;
#line 144 "OverlayBar.c"
}

static void
granite_widgets_overlay_bar_set_overlay (GraniteWidgetsOverlayBar* self,
                                         GtkOverlay* value)
{
	GtkOverlay* old_value;
#line 92 "../lib/Widgets/OverlayBar.vala"
	g_return_if_fail (self != NULL);
#line 92 "../lib/Widgets/OverlayBar.vala"
	old_value = granite_widgets_overlay_bar_get_overlay (self);
#line 92 "../lib/Widgets/OverlayBar.vala"
	if (old_value != value) {
#line 158 "OverlayBar.c"
		GtkOverlay* _tmp0_;
#line 92 "../lib/Widgets/OverlayBar.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 92 "../lib/Widgets/OverlayBar.vala"
		_g_object_unref0 (self->priv->_overlay);
#line 92 "../lib/Widgets/OverlayBar.vala"
		self->priv->_overlay = _tmp0_;
#line 92 "../lib/Widgets/OverlayBar.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_OVERLAY_PROPERTY]);
#line 168 "OverlayBar.c"
	}
}

const gchar*
granite_widgets_overlay_bar_get_status (GraniteWidgetsOverlayBar* self)
{
	const gchar* result;
	GtkLabel* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
#line 103 "../lib/Widgets/OverlayBar.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 104 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->status_label;
#line 104 "../lib/Widgets/OverlayBar.vala"
	_tmp1_ = gtk_label_get_label (_tmp0_);
#line 104 "../lib/Widgets/OverlayBar.vala"
	_tmp2_ = _tmp1_;
#line 104 "../lib/Widgets/OverlayBar.vala"
	result = _tmp2_;
#line 104 "../lib/Widgets/OverlayBar.vala"
	return result;
#line 191 "OverlayBar.c"
}

void
granite_widgets_overlay_bar_set_status (GraniteWidgetsOverlayBar* self,
                                        const gchar* value)
{
	GtkLabel* _tmp0_;
#line 99 "../lib/Widgets/OverlayBar.vala"
	g_return_if_fail (self != NULL);
#line 100 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->status_label;
#line 100 "../lib/Widgets/OverlayBar.vala"
	gtk_label_set_label (_tmp0_, value);
#line 99 "../lib/Widgets/OverlayBar.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_STATUS_PROPERTY]);
#line 207 "OverlayBar.c"
}

const gchar*
granite_widgets_overlay_bar_get_label (GraniteWidgetsOverlayBar* self)
{
	const gchar* result;
	GtkLabel* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
#line 112 "../lib/Widgets/OverlayBar.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 113 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->status_label;
#line 113 "../lib/Widgets/OverlayBar.vala"
	_tmp1_ = gtk_label_get_label (_tmp0_);
#line 113 "../lib/Widgets/OverlayBar.vala"
	_tmp2_ = _tmp1_;
#line 113 "../lib/Widgets/OverlayBar.vala"
	result = _tmp2_;
#line 113 "../lib/Widgets/OverlayBar.vala"
	return result;
#line 229 "OverlayBar.c"
}

void
granite_widgets_overlay_bar_set_label (GraniteWidgetsOverlayBar* self,
                                       const gchar* value)
{
	GtkLabel* _tmp0_;
#line 115 "../lib/Widgets/OverlayBar.vala"
	g_return_if_fail (self != NULL);
#line 116 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->status_label;
#line 116 "../lib/Widgets/OverlayBar.vala"
	gtk_label_set_label (_tmp0_, value);
#line 115 "../lib/Widgets/OverlayBar.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_LABEL_PROPERTY]);
#line 245 "OverlayBar.c"
}

gboolean
granite_widgets_overlay_bar_get_active (GraniteWidgetsOverlayBar* self)
{
	gboolean result;
	GtkSpinner* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 124 "../lib/Widgets/OverlayBar.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 125 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->spinner;
#line 125 "../lib/Widgets/OverlayBar.vala"
	g_object_get (_tmp0_, "active", &_tmp1_, NULL);
#line 125 "../lib/Widgets/OverlayBar.vala"
	_tmp2_ = _tmp1_;
#line 125 "../lib/Widgets/OverlayBar.vala"
	result = _tmp2_;
#line 125 "../lib/Widgets/OverlayBar.vala"
	return result;
#line 267 "OverlayBar.c"
}

void
granite_widgets_overlay_bar_set_active (GraniteWidgetsOverlayBar* self,
                                        gboolean value)
{
	GtkSpinner* _tmp0_;
	GtkRevealer* _tmp1_;
#line 127 "../lib/Widgets/OverlayBar.vala"
	g_return_if_fail (self != NULL);
#line 128 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = self->priv->spinner;
#line 128 "../lib/Widgets/OverlayBar.vala"
	g_object_set (_tmp0_, "active", value, NULL);
#line 129 "../lib/Widgets/OverlayBar.vala"
	_tmp1_ = self->priv->revealer;
#line 129 "../lib/Widgets/OverlayBar.vala"
	gtk_revealer_set_reveal_child (_tmp1_, value);
#line 127 "../lib/Widgets/OverlayBar.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_ACTIVE_PROPERTY]);
#line 288 "OverlayBar.c"
}

/**
     * Create a new Overlay Bar, and add it to the {@link Gtk.Overlay}.
     */
GraniteWidgetsOverlayBar*
granite_widgets_overlay_bar_construct (GType object_type,
                                       GtkOverlay* overlay)
{
	GraniteWidgetsOverlayBar * self = NULL;
#line 135 "../lib/Widgets/OverlayBar.vala"
	self = (GraniteWidgetsOverlayBar*) g_object_new (object_type, NULL);
#line 136 "../lib/Widgets/OverlayBar.vala"
	if (overlay != NULL) {
#line 137 "../lib/Widgets/OverlayBar.vala"
		gtk_widget_add_events ((GtkWidget*) overlay, (gint) GDK_ENTER_NOTIFY_MASK);
#line 138 "../lib/Widgets/OverlayBar.vala"
		gtk_overlay_add_overlay (overlay, (GtkWidget*) self);
#line 307 "OverlayBar.c"
	}
#line 135 "../lib/Widgets/OverlayBar.vala"
	return self;
#line 311 "OverlayBar.c"
}

GraniteWidgetsOverlayBar*
granite_widgets_overlay_bar_new (GtkOverlay* overlay)
{
#line 135 "../lib/Widgets/OverlayBar.vala"
	return granite_widgets_overlay_bar_construct (GRANITE_WIDGETS_TYPE_OVERLAY_BAR, overlay);
#line 319 "OverlayBar.c"
}

static gboolean
_granite_widgets_overlay_bar_enter_notify_callback_gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                                  GdkEventCrossing* event,
                                                                                  gpointer self)
{
	gboolean result;
	result = granite_widgets_overlay_bar_enter_notify_callback ((GraniteWidgetsOverlayBar*) self, event);
#line 187 "../lib/Widgets/OverlayBar.vala"
	return result;
#line 331 "OverlayBar.c"
}

static void
granite_widgets_overlay_bar_real_parent_set (GtkWidget* base,
                                             GtkWidget* old_parent)
{
	GraniteWidgetsOverlayBar * self;
	GtkWidget* parent = NULL;
	GtkContainer* _tmp0_;
	GtkWidget* _tmp1_;
	GtkWidget* _tmp3_;
#line 183 "../lib/Widgets/OverlayBar.vala"
	self = (GraniteWidgetsOverlayBar*) base;
#line 184 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = gtk_widget_get_parent ((GtkWidget*) self);
#line 184 "../lib/Widgets/OverlayBar.vala"
	_tmp1_ = _g_object_ref0 ((GtkWidget*) _tmp0_);
#line 184 "../lib/Widgets/OverlayBar.vala"
	parent = _tmp1_;
#line 186 "../lib/Widgets/OverlayBar.vala"
	if (old_parent != NULL) {
#line 353 "OverlayBar.c"
		guint _tmp2_;
#line 187 "../lib/Widgets/OverlayBar.vala"
		g_signal_parse_name ("enter-notify-event", gtk_widget_get_type (), &_tmp2_, NULL, FALSE);
#line 187 "../lib/Widgets/OverlayBar.vala"
		g_signal_handlers_disconnect_matched (old_parent, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp2_, 0, NULL, (GCallback) _granite_widgets_overlay_bar_enter_notify_callback_gtk_widget_enter_notify_event, self);
#line 359 "OverlayBar.c"
	}
#line 188 "../lib/Widgets/OverlayBar.vala"
	_tmp3_ = parent;
#line 188 "../lib/Widgets/OverlayBar.vala"
	if (_tmp3_ != NULL) {
#line 365 "OverlayBar.c"
		GtkWidget* _tmp4_;
#line 189 "../lib/Widgets/OverlayBar.vala"
		_tmp4_ = parent;
#line 189 "../lib/Widgets/OverlayBar.vala"
		g_signal_connect_object (_tmp4_, "enter-notify-event", (GCallback) _granite_widgets_overlay_bar_enter_notify_callback_gtk_widget_enter_notify_event, self, 0);
#line 371 "OverlayBar.c"
	}
#line 183 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (parent);
#line 375 "OverlayBar.c"
}

static gboolean
granite_widgets_overlay_bar_enter_notify_callback (GraniteWidgetsOverlayBar* self,
                                                   GdkEventCrossing* event)
{
	gboolean result = FALSE;
#line 192 "../lib/Widgets/OverlayBar.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 192 "../lib/Widgets/OverlayBar.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 193 "../lib/Widgets/OverlayBar.vala"
	if (gtk_widget_get_halign ((GtkWidget*) self) == GTK_ALIGN_START) {
#line 194 "../lib/Widgets/OverlayBar.vala"
		gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_END);
#line 391 "OverlayBar.c"
	} else {
#line 196 "../lib/Widgets/OverlayBar.vala"
		gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_START);
#line 395 "OverlayBar.c"
	}
#line 198 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_queue_resize ((GtkWidget*) self);
#line 200 "../lib/Widgets/OverlayBar.vala"
	result = FALSE;
#line 200 "../lib/Widgets/OverlayBar.vala"
	return result;
#line 403 "OverlayBar.c"
}

static GObject *
granite_widgets_overlay_bar_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsOverlayBar * self;
	GtkLabel* _tmp0_;
	GtkLabel* _tmp1_;
	GtkSpinner* _tmp2_;
	GtkRevealer* _tmp3_;
	GtkRevealer* _tmp4_;
	GtkRevealer* _tmp5_;
	GtkRevealer* _tmp6_;
	GtkSpinner* _tmp7_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp8_;
	GtkGrid* _tmp9_;
	GtkLabel* _tmp10_;
	GtkGrid* _tmp11_;
	GtkRevealer* _tmp12_;
	GtkGrid* _tmp13_;
	gint priority = 0;
	GtkGrid* _tmp14_;
	GtkCssProvider* _tmp15_;
	GtkCssProvider* _tmp16_;
	GtkStyleContext* ctx = NULL;
	GtkGrid* _tmp17_;
	GtkStyleContext* _tmp18_;
	GtkStyleContext* _tmp19_;
	GtkStateFlags state = 0U;
	GtkStyleContext* _tmp20_;
	GtkBorder padding = {0};
	GtkStyleContext* _tmp21_;
	GtkStateFlags _tmp22_;
	GtkBorder _tmp23_ = {0};
	GtkLabel* _tmp24_;
	GtkBorder _tmp25_;
	GtkLabel* _tmp26_;
	GtkBorder _tmp27_;
	GtkLabel* _tmp28_;
	GtkBorder _tmp29_;
	GtkLabel* _tmp30_;
	GtkBorder _tmp31_;
	GtkSpinner* _tmp32_;
	GtkBorder _tmp33_;
	GtkBorder margin = {0};
	GtkStyleContext* _tmp34_;
	GtkStateFlags _tmp35_;
	GtkBorder _tmp36_ = {0};
	GtkGrid* _tmp37_;
	GtkBorder _tmp38_;
	GtkGrid* _tmp39_;
	GtkBorder _tmp40_;
	GtkGrid* _tmp41_;
	GtkBorder _tmp42_;
	GtkGrid* _tmp43_;
	GtkBorder _tmp44_;
#line 142 "../lib/Widgets/OverlayBar.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_overlay_bar_parent_class);
#line 142 "../lib/Widgets/OverlayBar.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 142 "../lib/Widgets/OverlayBar.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBar);
#line 143 "../lib/Widgets/OverlayBar.vala"
	granite_widgets_overlay_bar_set_overlay (self, NULL);
#line 144 "../lib/Widgets/OverlayBar.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new ("");
#line 144 "../lib/Widgets/OverlayBar.vala"
	g_object_ref_sink (_tmp0_);
#line 144 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->status_label);
#line 144 "../lib/Widgets/OverlayBar.vala"
	self->priv->status_label = _tmp0_;
#line 145 "../lib/Widgets/OverlayBar.vala"
	_tmp1_ = self->priv->status_label;
#line 145 "../lib/Widgets/OverlayBar.vala"
	gtk_label_set_ellipsize (_tmp1_, PANGO_ELLIPSIZE_END);
#line 147 "../lib/Widgets/OverlayBar.vala"
	_tmp2_ = (GtkSpinner*) gtk_spinner_new ();
#line 147 "../lib/Widgets/OverlayBar.vala"
	g_object_ref_sink (_tmp2_);
#line 147 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->spinner);
#line 147 "../lib/Widgets/OverlayBar.vala"
	self->priv->spinner = _tmp2_;
#line 149 "../lib/Widgets/OverlayBar.vala"
	_tmp3_ = (GtkRevealer*) gtk_revealer_new ();
#line 149 "../lib/Widgets/OverlayBar.vala"
	g_object_ref_sink (_tmp3_);
#line 149 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->revealer);
#line 149 "../lib/Widgets/OverlayBar.vala"
	self->priv->revealer = _tmp3_;
#line 150 "../lib/Widgets/OverlayBar.vala"
	_tmp4_ = self->priv->revealer;
#line 150 "../lib/Widgets/OverlayBar.vala"
	gtk_revealer_set_reveal_child (_tmp4_, FALSE);
#line 151 "../lib/Widgets/OverlayBar.vala"
	_tmp5_ = self->priv->revealer;
#line 151 "../lib/Widgets/OverlayBar.vala"
	gtk_revealer_set_transition_type (_tmp5_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT);
#line 152 "../lib/Widgets/OverlayBar.vala"
	_tmp6_ = self->priv->revealer;
#line 152 "../lib/Widgets/OverlayBar.vala"
	_tmp7_ = self->priv->spinner;
#line 152 "../lib/Widgets/OverlayBar.vala"
	gtk_container_add ((GtkContainer*) _tmp6_, (GtkWidget*) _tmp7_);
#line 154 "../lib/Widgets/OverlayBar.vala"
	_tmp8_ = (GtkGrid*) gtk_grid_new ();
#line 154 "../lib/Widgets/OverlayBar.vala"
	g_object_ref_sink (_tmp8_);
#line 154 "../lib/Widgets/OverlayBar.vala"
	grid = _tmp8_;
#line 155 "../lib/Widgets/OverlayBar.vala"
	_tmp9_ = grid;
#line 155 "../lib/Widgets/OverlayBar.vala"
	_tmp10_ = self->priv->status_label;
#line 155 "../lib/Widgets/OverlayBar.vala"
	gtk_container_add ((GtkContainer*) _tmp9_, (GtkWidget*) _tmp10_);
#line 156 "../lib/Widgets/OverlayBar.vala"
	_tmp11_ = grid;
#line 156 "../lib/Widgets/OverlayBar.vala"
	_tmp12_ = self->priv->revealer;
#line 156 "../lib/Widgets/OverlayBar.vala"
	gtk_container_add ((GtkContainer*) _tmp11_, (GtkWidget*) _tmp12_);
#line 158 "../lib/Widgets/OverlayBar.vala"
	_tmp13_ = grid;
#line 158 "../lib/Widgets/OverlayBar.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp13_);
#line 160 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_END);
#line 161 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_END);
#line 163 "../lib/Widgets/OverlayBar.vala"
	priority = GTK_STYLE_PROVIDER_PRIORITY_FALLBACK;
#line 164 "../lib/Widgets/OverlayBar.vala"
	_tmp14_ = grid;
#line 164 "../lib/Widgets/OverlayBar.vala"
	_tmp15_ = granite_widgets_utils_set_theming ((GtkWidget*) _tmp14_, GRANITE_WIDGETS_OVERLAY_BAR_FALLBACK_THEME, GRANITE_STYLE_CLASS_OVERLAY_BAR, priority);
#line 164 "../lib/Widgets/OverlayBar.vala"
	_tmp16_ = _tmp15_;
#line 164 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (_tmp16_);
#line 166 "../lib/Widgets/OverlayBar.vala"
	_tmp17_ = grid;
#line 166 "../lib/Widgets/OverlayBar.vala"
	_tmp18_ = gtk_widget_get_style_context ((GtkWidget*) _tmp17_);
#line 166 "../lib/Widgets/OverlayBar.vala"
	_tmp19_ = _g_object_ref0 (_tmp18_);
#line 166 "../lib/Widgets/OverlayBar.vala"
	ctx = _tmp19_;
#line 167 "../lib/Widgets/OverlayBar.vala"
	_tmp20_ = ctx;
#line 167 "../lib/Widgets/OverlayBar.vala"
	state = gtk_style_context_get_state (_tmp20_);
#line 169 "../lib/Widgets/OverlayBar.vala"
	_tmp21_ = ctx;
#line 169 "../lib/Widgets/OverlayBar.vala"
	_tmp22_ = state;
#line 169 "../lib/Widgets/OverlayBar.vala"
	gtk_style_context_get_padding (_tmp21_, _tmp22_, &_tmp23_);
#line 169 "../lib/Widgets/OverlayBar.vala"
	padding = _tmp23_;
#line 170 "../lib/Widgets/OverlayBar.vala"
	_tmp24_ = self->priv->status_label;
#line 170 "../lib/Widgets/OverlayBar.vala"
	_tmp25_ = padding;
#line 170 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp24_, (gint) _tmp25_.top);
#line 171 "../lib/Widgets/OverlayBar.vala"
	_tmp26_ = self->priv->status_label;
#line 171 "../lib/Widgets/OverlayBar.vala"
	_tmp27_ = padding;
#line 171 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp26_, (gint) _tmp27_.bottom);
#line 172 "../lib/Widgets/OverlayBar.vala"
	_tmp28_ = self->priv->status_label;
#line 172 "../lib/Widgets/OverlayBar.vala"
	_tmp29_ = padding;
#line 172 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp28_, (gint) _tmp29_.left);
#line 173 "../lib/Widgets/OverlayBar.vala"
	_tmp30_ = self->priv->status_label;
#line 173 "../lib/Widgets/OverlayBar.vala"
	_tmp31_ = padding;
#line 173 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp30_, (gint) _tmp31_.right);
#line 174 "../lib/Widgets/OverlayBar.vala"
	_tmp32_ = self->priv->spinner;
#line 174 "../lib/Widgets/OverlayBar.vala"
	_tmp33_ = padding;
#line 174 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp32_, (gint) _tmp33_.right);
#line 176 "../lib/Widgets/OverlayBar.vala"
	_tmp34_ = ctx;
#line 176 "../lib/Widgets/OverlayBar.vala"
	_tmp35_ = state;
#line 176 "../lib/Widgets/OverlayBar.vala"
	gtk_style_context_get_margin (_tmp34_, _tmp35_, &_tmp36_);
#line 176 "../lib/Widgets/OverlayBar.vala"
	margin = _tmp36_;
#line 177 "../lib/Widgets/OverlayBar.vala"
	_tmp37_ = grid;
#line 177 "../lib/Widgets/OverlayBar.vala"
	_tmp38_ = margin;
#line 177 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp37_, (gint) _tmp38_.top);
#line 178 "../lib/Widgets/OverlayBar.vala"
	_tmp39_ = grid;
#line 178 "../lib/Widgets/OverlayBar.vala"
	_tmp40_ = margin;
#line 178 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp39_, (gint) _tmp40_.bottom);
#line 179 "../lib/Widgets/OverlayBar.vala"
	_tmp41_ = grid;
#line 179 "../lib/Widgets/OverlayBar.vala"
	_tmp42_ = margin;
#line 179 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp41_, (gint) _tmp42_.left);
#line 180 "../lib/Widgets/OverlayBar.vala"
	_tmp43_ = grid;
#line 180 "../lib/Widgets/OverlayBar.vala"
	_tmp44_ = margin;
#line 180 "../lib/Widgets/OverlayBar.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp43_, (gint) _tmp44_.right);
#line 142 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (ctx);
#line 142 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (grid);
#line 142 "../lib/Widgets/OverlayBar.vala"
	return obj;
#line 639 "OverlayBar.c"
}

static void
granite_widgets_overlay_bar_class_init (GraniteWidgetsOverlayBarClass * klass,
                                        gpointer klass_data)
{
#line 67 "../lib/Widgets/OverlayBar.vala"
	granite_widgets_overlay_bar_parent_class = g_type_class_peek_parent (klass);
#line 67 "../lib/Widgets/OverlayBar.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsOverlayBar_private_offset);
#line 67 "../lib/Widgets/OverlayBar.vala"
	((GtkWidgetClass *) klass)->parent_set = (void (*) (GtkWidget*, GtkWidget*)) granite_widgets_overlay_bar_real_parent_set;
#line 67 "../lib/Widgets/OverlayBar.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_overlay_bar_get_property;
#line 67 "../lib/Widgets/OverlayBar.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_overlay_bar_set_property;
#line 67 "../lib/Widgets/OverlayBar.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_overlay_bar_constructor;
#line 67 "../lib/Widgets/OverlayBar.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_overlay_bar_finalize;
#line 660 "OverlayBar.c"
	/**
	     * overlay: Deprecated property, always returns null.
	     */
#line 67 "../lib/Widgets/OverlayBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_OVERLAY_BAR_OVERLAY_PROPERTY, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_OVERLAY_PROPERTY] = g_param_spec_object ("overlay", "overlay", "overlay", gtk_overlay_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY | G_PARAM_DEPRECATED));
#line 666 "OverlayBar.c"
	/**
	     * Status text displayed inside the Overlay Bar.
	     */
#line 67 "../lib/Widgets/OverlayBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_OVERLAY_BAR_STATUS_PROPERTY, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_STATUS_PROPERTY] = g_param_spec_string ("status", "status", "status", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_DEPRECATED));
#line 672 "OverlayBar.c"
	/**
	     * Text displayed inside the Overlay Bar.
	     */
#line 67 "../lib/Widgets/OverlayBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_OVERLAY_BAR_LABEL_PROPERTY, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_LABEL_PROPERTY] = g_param_spec_string ("label", "label", "label", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 678 "OverlayBar.c"
	/**
	     * Whether to display a {@link Gtk.Spinner} inside the Overlay Bar.
	     */
#line 67 "../lib/Widgets/OverlayBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_OVERLAY_BAR_ACTIVE_PROPERTY, granite_widgets_overlay_bar_properties[GRANITE_WIDGETS_OVERLAY_BAR_ACTIVE_PROPERTY] = g_param_spec_boolean ("active", "active", "active", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 684 "OverlayBar.c"
}

static void
granite_widgets_overlay_bar_instance_init (GraniteWidgetsOverlayBar * self,
                                           gpointer klass)
{
#line 67 "../lib/Widgets/OverlayBar.vala"
	self->priv = granite_widgets_overlay_bar_get_instance_private (self);
#line 693 "OverlayBar.c"
}

static void
granite_widgets_overlay_bar_finalize (GObject * obj)
{
	GraniteWidgetsOverlayBar * self;
#line 67 "../lib/Widgets/OverlayBar.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBar);
#line 84 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->status_label);
#line 85 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->revealer);
#line 86 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->spinner);
#line 92 "../lib/Widgets/OverlayBar.vala"
	_g_object_unref0 (self->priv->_overlay);
#line 67 "../lib/Widgets/OverlayBar.vala"
	G_OBJECT_CLASS (granite_widgets_overlay_bar_parent_class)->finalize (obj);
#line 712 "OverlayBar.c"
}

/**
 * A floating status bar that displays a single line of text.
 *
 * This widget is intended to be used as an overlay for a {@link Gtk.Overlay} and is placed in the
 * bottom-right corner by default. You can change its position like you would do for any overlay
 * widget used in a {@link Gtk.Overlay}.
 *
 * The Overlay Bar displays a single line of text that can be changed using the "status" property.
 *
 * {{../doc/images/OverlayBar.png}}
 *
 * This widget tries to avoid getting in front of the content being displayed inside the {@link Gtk.Overlay}
 * by moving itself horizontally to the opposite side from the current one when the mouse pointer enters
 * the widget.
 *
 * For this widget to function correctly, the event {@link Gdk.EventMask.ENTER_NOTIFY_MASK} must be set
 * for the parent {@link Gtk.Overlay}. Overlay Bar's constructor takes care of this automatically, if
 * the parent is supplied as a parameter, but you have to be careful not to unset the event for
 * the {@link Gtk.Overlay} at a later stage.
 *
 * ''Example''<<BR>>
 * {{{
 * public class OverlayBarView : Gtk.Overlay {
 *     construct {
 *         var button = new Gtk.ToggleButton.with_label ("Show Spinner");
 * 
 *         var grid = new Gtk.Grid ();
 *         grid.halign = Gtk.Align.CENTER;
 *         grid.valign = Gtk.Align.CENTER;
 *         grid.add (button);
 * 
 *         var overlaybar = new Granite.Widgets.OverlayBar (this);
 *         overlaybar.label = "Hover the OverlayBar to change its position";
 *         
 *         add (grid);
 * 
 *         button.toggled.connect (() => {
 *             overlaybar.active = button.active;
 *         });
 *     }
 * }
 * }}}
 *
 * @see Gtk.Overlay
 *
 */
static GType
granite_widgets_overlay_bar_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsOverlayBarClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_overlay_bar_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsOverlayBar), 0, (GInstanceInitFunc) granite_widgets_overlay_bar_instance_init, NULL };
	GType granite_widgets_overlay_bar_type_id;
	granite_widgets_overlay_bar_type_id = g_type_register_static (gtk_event_box_get_type (), "GraniteWidgetsOverlayBar", &g_define_type_info, 0);
	GraniteWidgetsOverlayBar_private_offset = g_type_add_instance_private (granite_widgets_overlay_bar_type_id, sizeof (GraniteWidgetsOverlayBarPrivate));
	return granite_widgets_overlay_bar_type_id;
}

GType
granite_widgets_overlay_bar_get_type (void)
{
	static volatile gsize granite_widgets_overlay_bar_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_overlay_bar_type_id__volatile)) {
		GType granite_widgets_overlay_bar_type_id;
		granite_widgets_overlay_bar_type_id = granite_widgets_overlay_bar_get_type_once ();
		g_once_init_leave (&granite_widgets_overlay_bar_type_id__volatile, granite_widgets_overlay_bar_type_id);
	}
	return granite_widgets_overlay_bar_type_id__volatile;
}

static void
_vala_granite_widgets_overlay_bar_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec)
{
	GraniteWidgetsOverlayBar * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBar);
#line 67 "../lib/Widgets/OverlayBar.vala"
	switch (property_id) {
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_OVERLAY_PROPERTY:
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
#line 796 "OverlayBar.c"
		g_value_set_object (value, granite_widgets_overlay_bar_get_overlay (self));
G_GNUC_END_IGNORE_DEPRECATIONS
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_STATUS_PROPERTY:
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
#line 804 "OverlayBar.c"
		g_value_set_string (value, granite_widgets_overlay_bar_get_status (self));
G_GNUC_END_IGNORE_DEPRECATIONS
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_LABEL_PROPERTY:
#line 67 "../lib/Widgets/OverlayBar.vala"
		g_value_set_string (value, granite_widgets_overlay_bar_get_label (self));
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_ACTIVE_PROPERTY:
#line 67 "../lib/Widgets/OverlayBar.vala"
		g_value_set_boolean (value, granite_widgets_overlay_bar_get_active (self));
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 821 "OverlayBar.c"
		default:
#line 67 "../lib/Widgets/OverlayBar.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 827 "OverlayBar.c"
	}
}

static void
_vala_granite_widgets_overlay_bar_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec)
{
	GraniteWidgetsOverlayBar * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_OVERLAY_BAR, GraniteWidgetsOverlayBar);
#line 67 "../lib/Widgets/OverlayBar.vala"
	switch (property_id) {
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_OVERLAY_PROPERTY:
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
#line 844 "OverlayBar.c"
		granite_widgets_overlay_bar_set_overlay (self, g_value_get_object (value));
G_GNUC_END_IGNORE_DEPRECATIONS
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_STATUS_PROPERTY:
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
#line 852 "OverlayBar.c"
		granite_widgets_overlay_bar_set_status (self, g_value_get_string (value));
G_GNUC_END_IGNORE_DEPRECATIONS
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_LABEL_PROPERTY:
#line 67 "../lib/Widgets/OverlayBar.vala"
		granite_widgets_overlay_bar_set_label (self, g_value_get_string (value));
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 67 "../lib/Widgets/OverlayBar.vala"
		case GRANITE_WIDGETS_OVERLAY_BAR_ACTIVE_PROPERTY:
#line 67 "../lib/Widgets/OverlayBar.vala"
		granite_widgets_overlay_bar_set_active (self, g_value_get_boolean (value));
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 869 "OverlayBar.c"
		default:
#line 67 "../lib/Widgets/OverlayBar.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 67 "../lib/Widgets/OverlayBar.vala"
		break;
#line 875 "OverlayBar.c"
	}
}

