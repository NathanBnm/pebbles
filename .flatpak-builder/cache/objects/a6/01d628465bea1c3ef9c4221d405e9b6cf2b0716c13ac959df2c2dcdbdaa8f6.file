/* Settings.c generated by valac 0.48.14, the Vala compiler
 * generated from Settings.vala, do not modify */

#include <glib-object.h>
#include <glib.h>
#include <gio/gio.h>
#include <string.h>
#include <stdlib.h>

#define GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE (granite_pantheon_accounts_service_get_type ())
#define GRANITE_PANTHEON_ACCOUNTS_SERVICE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE, GranitePantheonAccountsService))
#define GRANITE_PANTHEON_IS_ACCOUNTS_SERVICE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE))
#define GRANITE_PANTHEON_ACCOUNTS_SERVICE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE, GranitePantheonAccountsServiceIface))

typedef struct _GranitePantheonAccountsService GranitePantheonAccountsService;
typedef struct _GranitePantheonAccountsServiceIface GranitePantheonAccountsServiceIface;

#define GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE_PROXY (granite_pantheon_accounts_service_proxy_get_type ())
typedef GDBusProxy GranitePantheonAccountsServiceProxy;
typedef GDBusProxyClass GranitePantheonAccountsServiceProxyClass;

#define GRANITE_FDO_TYPE_ACCOUNTS (granite_fdo_accounts_get_type ())
#define GRANITE_FDO_ACCOUNTS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_FDO_TYPE_ACCOUNTS, GraniteFDOAccounts))
#define GRANITE_FDO_IS_ACCOUNTS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_FDO_TYPE_ACCOUNTS))
#define GRANITE_FDO_ACCOUNTS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GRANITE_FDO_TYPE_ACCOUNTS, GraniteFDOAccountsIface))

typedef struct _GraniteFDOAccounts GraniteFDOAccounts;
typedef struct _GraniteFDOAccountsIface GraniteFDOAccountsIface;

#define GRANITE_FDO_TYPE_ACCOUNTS_PROXY (granite_fdo_accounts_proxy_get_type ())
typedef GDBusProxy GraniteFDOAccountsProxy;
typedef GDBusProxyClass GraniteFDOAccountsProxyClass;
#define _g_free0(var) (var = (g_free (var), NULL))

#define GRANITE_TYPE_SETTINGS (granite_settings_get_type ())
#define GRANITE_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_TYPE_SETTINGS, GraniteSettings))
#define GRANITE_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_TYPE_SETTINGS, GraniteSettingsClass))
#define GRANITE_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_TYPE_SETTINGS))
#define GRANITE_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_TYPE_SETTINGS))
#define GRANITE_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_TYPE_SETTINGS, GraniteSettingsClass))

typedef struct _GraniteSettings GraniteSettings;
typedef struct _GraniteSettingsClass GraniteSettingsClass;
typedef struct _GraniteSettingsPrivate GraniteSettingsPrivate;
typedef enum  {
	GRANITE_SETTINGS_COLOR_SCHEME_NO_PREFERENCE,
	GRANITE_SETTINGS_COLOR_SCHEME_DARK,
	GRANITE_SETTINGS_COLOR_SCHEME_LIGHT
} GraniteSettingsColorScheme;

#define GRANITE_SETTINGS_TYPE_COLOR_SCHEME (granite_settings_color_scheme_get_type ())
enum  {
	GRANITE_SETTINGS_0_PROPERTY,
	GRANITE_SETTINGS_PREFERS_COLOR_SCHEME_PROPERTY,
	GRANITE_SETTINGS_NUM_PROPERTIES
};
static GParamSpec* granite_settings_properties[GRANITE_SETTINGS_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_variant_type_free0(var) ((var == NULL) ? NULL : (var = (g_variant_type_free (var), NULL)))
#define _g_variant_unref0(var) ((var == NULL) ? NULL : (var = (g_variant_unref (var), NULL)))

struct _GranitePantheonAccountsServiceIface {
	GTypeInterface parent_iface;
	gint (*get_prefers_color_scheme) (GranitePantheonAccountsService* self);
	void (*set_prefers_color_scheme) (GranitePantheonAccountsService* self, gint value);
};

struct _GraniteFDOAccountsIface {
	GTypeInterface parent_iface;
	gchar* (*find_user_by_name) (GraniteFDOAccounts* self, const gchar* username, GError** error);
};

struct _GraniteSettings {
	GObject parent_instance;
	GraniteSettingsPrivate * priv;
};

struct _GraniteSettingsClass {
	GObjectClass parent_class;
};

struct _GraniteSettingsPrivate {
	GraniteSettingsColorScheme* _prefers_color_scheme;
	gchar* _user_path;
	GraniteFDOAccounts* accounts_service;
	GranitePantheonAccountsService* pantheon_act;
};

static gint GraniteSettings_private_offset;
static gpointer granite_settings_parent_class = NULL;
static GOnce granite_settings_instance;
static GOnce granite_settings_instance = G_ONCE_INIT;

G_GNUC_INTERNAL GType granite_pantheon_accounts_service_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
GType granite_pantheon_accounts_service_proxy_get_type (void) G_GNUC_CONST;
G_GNUC_INTERNAL guint granite_pantheon_accounts_service_register_object (void* object,
                                                         GDBusConnection* connection,
                                                         const gchar* path,
                                                         GError** error);
G_GNUC_INTERNAL gint granite_pantheon_accounts_service_get_prefers_color_scheme (GranitePantheonAccountsService* self);
G_GNUC_INTERNAL void granite_pantheon_accounts_service_set_prefers_color_scheme (GranitePantheonAccountsService* self,
                                                                 gint value);
static GType granite_pantheon_accounts_service_get_type_once (void);
static void granite_pantheon_accounts_service_proxy_g_signal (GDBusProxy* proxy,
                                                       const gchar* sender_name,
                                                       const gchar* signal_name,
                                                       GVariant* parameters);
static gint granite_pantheon_accounts_service_dbus_proxy_get_prefers_color_scheme (GranitePantheonAccountsService* self);
static void granite_pantheon_accounts_service_dbus_proxy_set_prefers_color_scheme (GranitePantheonAccountsService* self,
                                                                            gint value);
static void granite_pantheon_accounts_service_proxy_granite_pantheon_accounts_service_interface_init (GranitePantheonAccountsServiceIface* iface);
static void granite_pantheon_accounts_service_dbus_interface_method_call (GDBusConnection* connection,
                                                                   const gchar* sender,
                                                                   const gchar* object_path,
                                                                   const gchar* interface_name,
                                                                   const gchar* method_name,
                                                                   GVariant* parameters,
                                                                   GDBusMethodInvocation* invocation,
                                                                   gpointer user_data);
static GVariant* granite_pantheon_accounts_service_dbus_interface_get_property (GDBusConnection* connection,
                                                                         const gchar* sender,
                                                                         const gchar* object_path,
                                                                         const gchar* interface_name,
                                                                         const gchar* property_name,
                                                                         GError** error,
                                                                         gpointer user_data);
static GVariant* _dbus_granite_pantheon_accounts_service_get_prefers_color_scheme (GranitePantheonAccountsService* self);
static gboolean granite_pantheon_accounts_service_dbus_interface_set_property (GDBusConnection* connection,
                                                                        const gchar* sender,
                                                                        const gchar* object_path,
                                                                        const gchar* interface_name,
                                                                        const gchar* property_name,
                                                                        GVariant* value,
                                                                        GError** error,
                                                                        gpointer user_data);
static void _dbus_granite_pantheon_accounts_service_set_prefers_color_scheme (GranitePantheonAccountsService* self,
                                                                       GVariant* _value);
static void _granite_pantheon_accounts_service_unregister_object (gpointer user_data);
GType granite_fdo_accounts_proxy_get_type (void) G_GNUC_CONST;
G_GNUC_INTERNAL guint granite_fdo_accounts_register_object (void* object,
                                            GDBusConnection* connection,
                                            const gchar* path,
                                            GError** error);
G_GNUC_INTERNAL GType granite_fdo_accounts_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_GNUC_INTERNAL gchar* granite_fdo_accounts_find_user_by_name (GraniteFDOAccounts* self,
                                               const gchar* username,
                                               GError** error);
static GType granite_fdo_accounts_get_type_once (void);
static void granite_fdo_accounts_proxy_g_signal (GDBusProxy* proxy,
                                          const gchar* sender_name,
                                          const gchar* signal_name,
                                          GVariant* parameters);
static gchar* granite_fdo_accounts_proxy_find_user_by_name (GraniteFDOAccounts* self,
                                                     const gchar* username,
                                                     GError** error);
static void granite_fdo_accounts_proxy_granite_fdo_accounts_interface_init (GraniteFDOAccountsIface* iface);
static void _dbus_granite_fdo_accounts_find_user_by_name (GraniteFDOAccounts* self,
                                                   GVariant* _parameters_,
                                                   GDBusMethodInvocation* invocation);
static void granite_fdo_accounts_dbus_interface_method_call (GDBusConnection* connection,
                                                      const gchar* sender,
                                                      const gchar* object_path,
                                                      const gchar* interface_name,
                                                      const gchar* method_name,
                                                      GVariant* parameters,
                                                      GDBusMethodInvocation* invocation,
                                                      gpointer user_data);
static GVariant* granite_fdo_accounts_dbus_interface_get_property (GDBusConnection* connection,
                                                            const gchar* sender,
                                                            const gchar* object_path,
                                                            const gchar* interface_name,
                                                            const gchar* property_name,
                                                            GError** error,
                                                            gpointer user_data);
static gboolean granite_fdo_accounts_dbus_interface_set_property (GDBusConnection* connection,
                                                           const gchar* sender,
                                                           const gchar* object_path,
                                                           const gchar* interface_name,
                                                           const gchar* property_name,
                                                           GVariant* value,
                                                           GError** error,
                                                           gpointer user_data);
static void _granite_fdo_accounts_unregister_object (gpointer user_data);
GType granite_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteSettings, g_object_unref)
GType granite_settings_color_scheme_get_type (void) G_GNUC_CONST;
GraniteSettingsColorScheme granite_settings_get_prefers_color_scheme (GraniteSettings* self);
static void granite_settings_setup_prefers_color_scheme (GraniteSettings* self);
static void granite_settings_set_prefers_color_scheme (GraniteSettings* self,
                                                GraniteSettingsColorScheme value);
static GraniteSettingsColorScheme* _granite_settings_color_scheme_dup (GraniteSettingsColorScheme* self);
static const gchar* granite_settings_get_user_path (GraniteSettings* self);
static void granite_settings_setup_user_path (GraniteSettings* self);
static void granite_settings_set_user_path (GraniteSettings* self,
                                     const gchar* value);
GraniteSettings* granite_settings_get_default (void);
static GraniteSettings* __lambda75_ (void);
static GraniteSettings* granite_settings_new (void);
static GraniteSettings* granite_settings_construct (GType object_type);
static gpointer ___lambda75__gthread_func (gpointer self);
static void ___lambda76_ (GraniteSettings* self,
                   GVariant* changed,
                   gchar** invalid);
static void ____lambda76__g_dbus_proxy_g_properties_changed (GDBusProxy* _sender,
                                                      GVariant* changed_properties,
                                                      gchar** invalidated_properties,
                                                      gpointer self);
static void granite_settings_finalize (GObject * obj);
static GType granite_settings_get_type_once (void);
static void _vala_granite_settings_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec);
static void _vala_granite_settings_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec);

static const GDBusMethodInfo * const _granite_pantheon_accounts_service_dbus_method_info[] = {NULL};
static const GDBusSignalInfo * const _granite_pantheon_accounts_service_dbus_signal_info[] = {NULL};
static const GDBusPropertyInfo _granite_pantheon_accounts_service_dbus_property_info_prefers_color_scheme = {-1, "PrefersColorScheme", "i", G_DBUS_PROPERTY_INFO_FLAGS_READABLE | G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE, NULL};
static const GDBusPropertyInfo * const _granite_pantheon_accounts_service_dbus_property_info[] = {&_granite_pantheon_accounts_service_dbus_property_info_prefers_color_scheme, NULL};
static const GDBusInterfaceInfo _granite_pantheon_accounts_service_dbus_interface_info = {-1, "io.elementary.pantheon.AccountsService", (GDBusMethodInfo **) (&_granite_pantheon_accounts_service_dbus_method_info), (GDBusSignalInfo **) (&_granite_pantheon_accounts_service_dbus_signal_info), (GDBusPropertyInfo **) (&_granite_pantheon_accounts_service_dbus_property_info), NULL};
static const GDBusInterfaceVTable _granite_pantheon_accounts_service_dbus_interface_vtable = {granite_pantheon_accounts_service_dbus_interface_method_call, granite_pantheon_accounts_service_dbus_interface_get_property, granite_pantheon_accounts_service_dbus_interface_set_property};
static const GDBusArgInfo _granite_fdo_accounts_dbus_arg_info_find_user_by_name_username = {-1, "username", "s", NULL};
static const GDBusArgInfo _granite_fdo_accounts_dbus_arg_info_find_user_by_name_result = {-1, "result", "s", NULL};
static const GDBusArgInfo * const _granite_fdo_accounts_dbus_arg_info_find_user_by_name_in[] = {&_granite_fdo_accounts_dbus_arg_info_find_user_by_name_username, NULL};
static const GDBusArgInfo * const _granite_fdo_accounts_dbus_arg_info_find_user_by_name_out[] = {&_granite_fdo_accounts_dbus_arg_info_find_user_by_name_result, NULL};
static const GDBusMethodInfo _granite_fdo_accounts_dbus_method_info_find_user_by_name = {-1, "FindUserByName", (GDBusArgInfo **) (&_granite_fdo_accounts_dbus_arg_info_find_user_by_name_in), (GDBusArgInfo **) (&_granite_fdo_accounts_dbus_arg_info_find_user_by_name_out), NULL};
static const GDBusMethodInfo * const _granite_fdo_accounts_dbus_method_info[] = {&_granite_fdo_accounts_dbus_method_info_find_user_by_name, NULL};
static const GDBusSignalInfo * const _granite_fdo_accounts_dbus_signal_info[] = {NULL};
static const GDBusPropertyInfo * const _granite_fdo_accounts_dbus_property_info[] = {NULL};
static const GDBusInterfaceInfo _granite_fdo_accounts_dbus_interface_info = {-1, "org.freedesktop.Accounts", (GDBusMethodInfo **) (&_granite_fdo_accounts_dbus_method_info), (GDBusSignalInfo **) (&_granite_fdo_accounts_dbus_signal_info), (GDBusPropertyInfo **) (&_granite_fdo_accounts_dbus_property_info), NULL};
static const GDBusInterfaceVTable _granite_fdo_accounts_dbus_interface_vtable = {granite_fdo_accounts_dbus_interface_method_call, granite_fdo_accounts_dbus_interface_get_property, granite_fdo_accounts_dbus_interface_set_property};

G_GNUC_INTERNAL gint
granite_pantheon_accounts_service_get_prefers_color_scheme (GranitePantheonAccountsService* self)
{
#line 5 "../lib/Widgets/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 5 "../lib/Widgets/Settings.vala"
	return GRANITE_PANTHEON_ACCOUNTS_SERVICE_GET_INTERFACE (self)->get_prefers_color_scheme (self);
#line 245 "Settings.c"
}

G_GNUC_INTERNAL void
granite_pantheon_accounts_service_set_prefers_color_scheme (GranitePantheonAccountsService* self,
                                                            gint value)
{
#line 5 "../lib/Widgets/Settings.vala"
	g_return_if_fail (self != NULL);
#line 5 "../lib/Widgets/Settings.vala"
	GRANITE_PANTHEON_ACCOUNTS_SERVICE_GET_INTERFACE (self)->set_prefers_color_scheme (self, value);
#line 256 "Settings.c"
}

static void
granite_pantheon_accounts_service_default_init (GranitePantheonAccountsServiceIface * iface,
                                                gpointer iface_data)
{
}

static GType
granite_pantheon_accounts_service_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GranitePantheonAccountsServiceIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_pantheon_accounts_service_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
	GType granite_pantheon_accounts_service_type_id;
	granite_pantheon_accounts_service_type_id = g_type_register_static (G_TYPE_INTERFACE, "GranitePantheonAccountsService", &g_define_type_info, 0);
	g_type_interface_add_prerequisite (granite_pantheon_accounts_service_type_id, G_TYPE_OBJECT);
	g_type_set_qdata (granite_pantheon_accounts_service_type_id, g_quark_from_static_string ("vala-dbus-proxy-type"), (void*) granite_pantheon_accounts_service_proxy_get_type);
	g_type_set_qdata (granite_pantheon_accounts_service_type_id, g_quark_from_static_string ("vala-dbus-interface-name"), "io.elementary.pantheon.AccountsService");
	g_type_set_qdata (granite_pantheon_accounts_service_type_id, g_quark_from_static_string ("vala-dbus-interface-info"), (void*) (&_granite_pantheon_accounts_service_dbus_interface_info));
	g_type_set_qdata (granite_pantheon_accounts_service_type_id, g_quark_from_static_string ("vala-dbus-register-object"), (void*) granite_pantheon_accounts_service_register_object);
	return granite_pantheon_accounts_service_type_id;
}

G_GNUC_INTERNAL GType
granite_pantheon_accounts_service_get_type (void)
{
	static volatile gsize granite_pantheon_accounts_service_type_id__volatile = 0;
	if (g_once_init_enter (&granite_pantheon_accounts_service_type_id__volatile)) {
		GType granite_pantheon_accounts_service_type_id;
		granite_pantheon_accounts_service_type_id = granite_pantheon_accounts_service_get_type_once ();
		g_once_init_leave (&granite_pantheon_accounts_service_type_id__volatile, granite_pantheon_accounts_service_type_id);
	}
	return granite_pantheon_accounts_service_type_id__volatile;
}

G_DEFINE_TYPE_EXTENDED (GranitePantheonAccountsServiceProxy, granite_pantheon_accounts_service_proxy, G_TYPE_DBUS_PROXY, 0, G_IMPLEMENT_INTERFACE (GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE, granite_pantheon_accounts_service_proxy_granite_pantheon_accounts_service_interface_init) )
static void
granite_pantheon_accounts_service_proxy_class_init (GranitePantheonAccountsServiceProxyClass* klass)
{
	G_DBUS_PROXY_CLASS (klass)->g_signal = granite_pantheon_accounts_service_proxy_g_signal;
}

static void
granite_pantheon_accounts_service_proxy_g_signal (GDBusProxy* proxy,
                                                  const gchar* sender_name,
                                                  const gchar* signal_name,
                                                  GVariant* parameters)
{
}

static void
granite_pantheon_accounts_service_proxy_init (GranitePantheonAccountsServiceProxy* self)
{
}

static gint
granite_pantheon_accounts_service_dbus_proxy_get_prefers_color_scheme (GranitePantheonAccountsService* self)
{
	GVariant *_inner_reply;
	gint _result;
	_inner_reply = g_dbus_proxy_get_cached_property ((GDBusProxy *) self, "PrefersColorScheme");
	if (!_inner_reply) {
		GVariant *_arguments;
		GVariant *_reply;
		GVariantBuilder _arguments_builder;
		g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
		g_variant_builder_add_value (&_arguments_builder, g_variant_new_string ("io.elementary.pantheon.AccountsService"));
		g_variant_builder_add_value (&_arguments_builder, g_variant_new_string ("PrefersColorScheme"));
		_arguments = g_variant_builder_end (&_arguments_builder);
		_reply = g_dbus_proxy_call_sync ((GDBusProxy *) self, "org.freedesktop.DBus.Properties.Get", _arguments, G_DBUS_CALL_FLAGS_NONE, -1, NULL, NULL);
		if (!_reply) {
			gint _tmp68_ = 0;
			return _tmp68_;
		}
		g_variant_get (_reply, "(v)", &_inner_reply);
		g_variant_unref (_reply);
	}
	_result = g_variant_get_int32 (_inner_reply);
	g_variant_unref (_inner_reply);
	return _result;
}

static void
granite_pantheon_accounts_service_dbus_proxy_set_prefers_color_scheme (GranitePantheonAccountsService* self,
                                                                       gint value)
{
	GVariant *_arguments;
	GVariant *_reply;
	GVariantBuilder _arguments_builder;
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string ("io.elementary.pantheon.AccountsService"));
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string ("PrefersColorScheme"));
	g_variant_builder_open (&_arguments_builder, G_VARIANT_TYPE_VARIANT);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_int32 (value));
	g_variant_builder_close (&_arguments_builder);
	_arguments = g_variant_builder_end (&_arguments_builder);
	_reply = g_dbus_proxy_call_sync ((GDBusProxy *) self, "org.freedesktop.DBus.Properties.Set", _arguments, G_DBUS_CALL_FLAGS_NONE, -1, NULL, NULL);
	if (!_reply) {
		return;
	}
	g_variant_unref (_reply);
}

static void
granite_pantheon_accounts_service_proxy_granite_pantheon_accounts_service_interface_init (GranitePantheonAccountsServiceIface* iface)
{
	iface->get_prefers_color_scheme = granite_pantheon_accounts_service_dbus_proxy_get_prefers_color_scheme;
	iface->set_prefers_color_scheme = granite_pantheon_accounts_service_dbus_proxy_set_prefers_color_scheme;
}

static void
granite_pantheon_accounts_service_dbus_interface_method_call (GDBusConnection* connection,
                                                              const gchar* sender,
                                                              const gchar* object_path,
                                                              const gchar* interface_name,
                                                              const gchar* method_name,
                                                              GVariant* parameters,
                                                              GDBusMethodInvocation* invocation,
                                                              gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	g_object_unref (invocation);
}

static GVariant*
_dbus_granite_pantheon_accounts_service_get_prefers_color_scheme (GranitePantheonAccountsService* self)
{
	gint result;
	GVariant* _reply;
	result = granite_pantheon_accounts_service_get_prefers_color_scheme (self);
	_reply = g_variant_new_int32 (result);
	return _reply;
}

static GVariant*
granite_pantheon_accounts_service_dbus_interface_get_property (GDBusConnection* connection,
                                                               const gchar* sender,
                                                               const gchar* object_path,
                                                               const gchar* interface_name,
                                                               const gchar* property_name,
                                                               GError** error,
                                                               gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	if (strcmp (property_name, "PrefersColorScheme") == 0) {
		return _dbus_granite_pantheon_accounts_service_get_prefers_color_scheme (object);
	}
	return NULL;
}

static void
_dbus_granite_pantheon_accounts_service_set_prefers_color_scheme (GranitePantheonAccountsService* self,
                                                                  GVariant* _value)
{
	gint value = 0;
	value = g_variant_get_int32 (_value);
	granite_pantheon_accounts_service_set_prefers_color_scheme (self, value);
}

static gboolean
granite_pantheon_accounts_service_dbus_interface_set_property (GDBusConnection* connection,
                                                               const gchar* sender,
                                                               const gchar* object_path,
                                                               const gchar* interface_name,
                                                               const gchar* property_name,
                                                               GVariant* value,
                                                               GError** error,
                                                               gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	if (strcmp (property_name, "PrefersColorScheme") == 0) {
		_dbus_granite_pantheon_accounts_service_set_prefers_color_scheme (object, value);
		return TRUE;
	}
	return FALSE;
}

G_GNUC_INTERNAL guint
granite_pantheon_accounts_service_register_object (gpointer object,
                                                   GDBusConnection* connection,
                                                   const gchar* path,
                                                   GError** error)
{
	guint result;
	gpointer *data;
	data = g_new (gpointer, 3);
	data[0] = g_object_ref (object);
	data[1] = g_object_ref (connection);
	data[2] = g_strdup (path);
	result = g_dbus_connection_register_object (connection, path, (GDBusInterfaceInfo *) (&_granite_pantheon_accounts_service_dbus_interface_info), &_granite_pantheon_accounts_service_dbus_interface_vtable, data, _granite_pantheon_accounts_service_unregister_object, error);
	if (!result) {
		return 0;
	}
	return result;
}

static void
_granite_pantheon_accounts_service_unregister_object (gpointer user_data)
{
	gpointer* data;
	data = user_data;
	g_object_unref (data[0]);
	g_object_unref (data[1]);
	g_free (data[2]);
	g_free (data);
}

gchar*
granite_fdo_accounts_find_user_by_name (GraniteFDOAccounts* self,
                                        const gchar* username,
                                        GError** error)
{
#line 10 "../lib/Widgets/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 10 "../lib/Widgets/Settings.vala"
	return GRANITE_FDO_ACCOUNTS_GET_INTERFACE (self)->find_user_by_name (self, username, error);
#line 481 "Settings.c"
}

static void
granite_fdo_accounts_default_init (GraniteFDOAccountsIface * iface,
                                   gpointer iface_data)
{
}

static GType
granite_fdo_accounts_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteFDOAccountsIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_fdo_accounts_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
	GType granite_fdo_accounts_type_id;
	granite_fdo_accounts_type_id = g_type_register_static (G_TYPE_INTERFACE, "GraniteFDOAccounts", &g_define_type_info, 0);
	g_type_interface_add_prerequisite (granite_fdo_accounts_type_id, G_TYPE_OBJECT);
	g_type_set_qdata (granite_fdo_accounts_type_id, g_quark_from_static_string ("vala-dbus-proxy-type"), (void*) granite_fdo_accounts_proxy_get_type);
	g_type_set_qdata (granite_fdo_accounts_type_id, g_quark_from_static_string ("vala-dbus-interface-name"), "org.freedesktop.Accounts");
	g_type_set_qdata (granite_fdo_accounts_type_id, g_quark_from_static_string ("vala-dbus-interface-info"), (void*) (&_granite_fdo_accounts_dbus_interface_info));
	g_type_set_qdata (granite_fdo_accounts_type_id, g_quark_from_static_string ("vala-dbus-register-object"), (void*) granite_fdo_accounts_register_object);
	return granite_fdo_accounts_type_id;
}

G_GNUC_INTERNAL GType
granite_fdo_accounts_get_type (void)
{
	static volatile gsize granite_fdo_accounts_type_id__volatile = 0;
	if (g_once_init_enter (&granite_fdo_accounts_type_id__volatile)) {
		GType granite_fdo_accounts_type_id;
		granite_fdo_accounts_type_id = granite_fdo_accounts_get_type_once ();
		g_once_init_leave (&granite_fdo_accounts_type_id__volatile, granite_fdo_accounts_type_id);
	}
	return granite_fdo_accounts_type_id__volatile;
}

G_DEFINE_TYPE_EXTENDED (GraniteFDOAccountsProxy, granite_fdo_accounts_proxy, G_TYPE_DBUS_PROXY, 0, G_IMPLEMENT_INTERFACE (GRANITE_FDO_TYPE_ACCOUNTS, granite_fdo_accounts_proxy_granite_fdo_accounts_interface_init) )
static void
granite_fdo_accounts_proxy_class_init (GraniteFDOAccountsProxyClass* klass)
{
	G_DBUS_PROXY_CLASS (klass)->g_signal = granite_fdo_accounts_proxy_g_signal;
}

static void
granite_fdo_accounts_proxy_g_signal (GDBusProxy* proxy,
                                     const gchar* sender_name,
                                     const gchar* signal_name,
                                     GVariant* parameters)
{
}

static void
granite_fdo_accounts_proxy_init (GraniteFDOAccountsProxy* self)
{
}

static gchar*
granite_fdo_accounts_proxy_find_user_by_name (GraniteFDOAccounts* self,
                                              const gchar* username,
                                              GError** error)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	GDBusMessage *_reply_message;
	GVariant *_reply;
	GVariantIter _reply_iter;
	gchar* _result = NULL;
	GVariant* _tmp69_;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "org.freedesktop.Accounts", "FindUserByName");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string (username));
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	_reply_message = g_dbus_connection_send_message_with_reply_sync (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, error);
	g_object_unref (_message);
	if (!_reply_message) {
		return NULL;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return NULL;
	}
	_reply = g_dbus_message_get_body (_reply_message);
	g_variant_iter_init (&_reply_iter, _reply);
	_tmp69_ = g_variant_iter_next_value (&_reply_iter);
	_result = g_variant_dup_string (_tmp69_, NULL);
	g_variant_unref (_tmp69_);
	g_object_unref (_reply_message);
	return _result;
}

static void
granite_fdo_accounts_proxy_granite_fdo_accounts_interface_init (GraniteFDOAccountsIface* iface)
{
	iface->find_user_by_name = granite_fdo_accounts_proxy_find_user_by_name;
}

static void
_dbus_granite_fdo_accounts_find_user_by_name (GraniteFDOAccounts* self,
                                              GVariant* _parameters_,
                                              GDBusMethodInvocation* invocation)
{
	GError* error = NULL;
	GVariantIter _arguments_iter;
	gchar* username = NULL;
	GVariant* _tmp70_;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	gchar* result;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	_tmp70_ = g_variant_iter_next_value (&_arguments_iter);
	username = g_variant_dup_string (_tmp70_, NULL);
	g_variant_unref (_tmp70_);
	result = granite_fdo_accounts_find_user_by_name (self, username, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_reply_builder, g_variant_new_string (result));
	_g_free0 (result);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
	_g_free0 (username);
}

static void
granite_fdo_accounts_dbus_interface_method_call (GDBusConnection* connection,
                                                 const gchar* sender,
                                                 const gchar* object_path,
                                                 const gchar* interface_name,
                                                 const gchar* method_name,
                                                 GVariant* parameters,
                                                 GDBusMethodInvocation* invocation,
                                                 gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	if (strcmp (method_name, "FindUserByName") == 0) {
		_dbus_granite_fdo_accounts_find_user_by_name (object, parameters, invocation);
	} else {
		g_object_unref (invocation);
	}
}

static GVariant*
granite_fdo_accounts_dbus_interface_get_property (GDBusConnection* connection,
                                                  const gchar* sender,
                                                  const gchar* object_path,
                                                  const gchar* interface_name,
                                                  const gchar* property_name,
                                                  GError** error,
                                                  gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	return NULL;
}

static gboolean
granite_fdo_accounts_dbus_interface_set_property (GDBusConnection* connection,
                                                  const gchar* sender,
                                                  const gchar* object_path,
                                                  const gchar* interface_name,
                                                  const gchar* property_name,
                                                  GVariant* value,
                                                  GError** error,
                                                  gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	return FALSE;
}

G_GNUC_INTERNAL guint
granite_fdo_accounts_register_object (gpointer object,
                                      GDBusConnection* connection,
                                      const gchar* path,
                                      GError** error)
{
	guint result;
	gpointer *data;
	data = g_new (gpointer, 3);
	data[0] = g_object_ref (object);
	data[1] = g_object_ref (connection);
	data[2] = g_strdup (path);
	result = g_dbus_connection_register_object (connection, path, (GDBusInterfaceInfo *) (&_granite_fdo_accounts_dbus_interface_info), &_granite_fdo_accounts_dbus_interface_vtable, data, _granite_fdo_accounts_unregister_object, error);
	if (!result) {
		return 0;
	}
	return result;
}

static void
_granite_fdo_accounts_unregister_object (gpointer user_data)
{
	gpointer* data;
	data = user_data;
	g_object_unref (data[0]);
	g_object_unref (data[1]);
	g_free (data[2]);
	g_free (data);
}

static inline gpointer
granite_settings_get_instance_private (GraniteSettings* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteSettings_private_offset);
}

/**
         * Possible color scheme preferences expressed by the user
         */
static GType
granite_settings_color_scheme_get_type_once (void)
{
	static const GEnumValue values[] = {{GRANITE_SETTINGS_COLOR_SCHEME_NO_PREFERENCE, "GRANITE_SETTINGS_COLOR_SCHEME_NO_PREFERENCE", "no-preference"}, {GRANITE_SETTINGS_COLOR_SCHEME_DARK, "GRANITE_SETTINGS_COLOR_SCHEME_DARK", "dark"}, {GRANITE_SETTINGS_COLOR_SCHEME_LIGHT, "GRANITE_SETTINGS_COLOR_SCHEME_LIGHT", "light"}, {0, NULL, NULL}};
	GType granite_settings_color_scheme_type_id;
	granite_settings_color_scheme_type_id = g_enum_register_static ("GraniteSettingsColorScheme", values);
	return granite_settings_color_scheme_type_id;
}

GType
granite_settings_color_scheme_get_type (void)
{
	static volatile gsize granite_settings_color_scheme_type_id__volatile = 0;
	if (g_once_init_enter (&granite_settings_color_scheme_type_id__volatile)) {
		GType granite_settings_color_scheme_type_id;
		granite_settings_color_scheme_type_id = granite_settings_color_scheme_get_type_once ();
		g_once_init_leave (&granite_settings_color_scheme_type_id__volatile, granite_settings_color_scheme_type_id);
	}
	return granite_settings_color_scheme_type_id__volatile;
}

GraniteSettingsColorScheme
granite_settings_get_prefers_color_scheme (GraniteSettings* self)
{
	GraniteSettingsColorScheme result;
	GraniteSettingsColorScheme* _tmp0_;
	GraniteSettingsColorScheme* _tmp1_;
#line 41 "../lib/Widgets/Settings.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 42 "../lib/Widgets/Settings.vala"
	_tmp0_ = self->priv->_prefers_color_scheme;
#line 42 "../lib/Widgets/Settings.vala"
	if (_tmp0_ == NULL) {
#line 43 "../lib/Widgets/Settings.vala"
		granite_settings_setup_prefers_color_scheme (self);
#line 741 "Settings.c"
	}
#line 45 "../lib/Widgets/Settings.vala"
	_tmp1_ = self->priv->_prefers_color_scheme;
#line 45 "../lib/Widgets/Settings.vala"
	result = *_tmp1_;
#line 45 "../lib/Widgets/Settings.vala"
	return result;
#line 749 "Settings.c"
}

static GraniteSettingsColorScheme*
_granite_settings_color_scheme_dup (GraniteSettingsColorScheme* self)
{
	GraniteSettingsColorScheme* dup;
#line 48 "../lib/Widgets/Settings.vala"
	dup = g_new0 (GraniteSettingsColorScheme, 1);
#line 48 "../lib/Widgets/Settings.vala"
	memcpy (dup, self, sizeof (GraniteSettingsColorScheme));
#line 48 "../lib/Widgets/Settings.vala"
	return dup;
#line 762 "Settings.c"
}

static gpointer
__granite_settings_color_scheme_dup0 (gpointer self)
{
#line 48 "../lib/Widgets/Settings.vala"
	return self ? _granite_settings_color_scheme_dup (self) : NULL;
#line 770 "Settings.c"
}

static void
granite_settings_set_prefers_color_scheme (GraniteSettings* self,
                                           GraniteSettingsColorScheme value)
{
	GraniteSettingsColorScheme* _tmp0_;
#line 47 "../lib/Widgets/Settings.vala"
	g_return_if_fail (self != NULL);
#line 48 "../lib/Widgets/Settings.vala"
	_tmp0_ = __granite_settings_color_scheme_dup0 (&value);
#line 48 "../lib/Widgets/Settings.vala"
	_g_free0 (self->priv->_prefers_color_scheme);
#line 48 "../lib/Widgets/Settings.vala"
	self->priv->_prefers_color_scheme = _tmp0_;
#line 47 "../lib/Widgets/Settings.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_settings_properties[GRANITE_SETTINGS_PREFERS_COLOR_SCHEME_PROPERTY]);
#line 788 "Settings.c"
}

static const gchar*
granite_settings_get_user_path (GraniteSettings* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
#line 54 "../lib/Widgets/Settings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 55 "../lib/Widgets/Settings.vala"
	_tmp0_ = self->priv->_user_path;
#line 55 "../lib/Widgets/Settings.vala"
	if (_tmp0_ == NULL) {
#line 56 "../lib/Widgets/Settings.vala"
		granite_settings_setup_user_path (self);
#line 805 "Settings.c"
	}
#line 58 "../lib/Widgets/Settings.vala"
	_tmp1_ = self->priv->_user_path;
#line 58 "../lib/Widgets/Settings.vala"
	result = _tmp1_;
#line 58 "../lib/Widgets/Settings.vala"
	return result;
#line 813 "Settings.c"
}

static void
granite_settings_set_user_path (GraniteSettings* self,
                                const gchar* value)
{
	gchar* _tmp0_;
#line 60 "../lib/Widgets/Settings.vala"
	g_return_if_fail (self != NULL);
#line 61 "../lib/Widgets/Settings.vala"
	_tmp0_ = g_strdup (value);
#line 61 "../lib/Widgets/Settings.vala"
	_g_free0 (self->priv->_user_path);
#line 61 "../lib/Widgets/Settings.vala"
	self->priv->_user_path = _tmp0_;
#line 829 "Settings.c"
}

static GraniteSettings*
__lambda75_ (void)
{
	GraniteSettings* _tmp0_;
	GraniteSettings* result = NULL;
#line 68 "../lib/Widgets/Settings.vala"
	_tmp0_ = granite_settings_new ();
#line 68 "../lib/Widgets/Settings.vala"
	result = _tmp0_;
#line 68 "../lib/Widgets/Settings.vala"
	return result;
#line 843 "Settings.c"
}

static gpointer
___lambda75__gthread_func (gpointer self)
{
	gpointer result;
	result = __lambda75_ ();
#line 67 "../lib/Widgets/Settings.vala"
	return result;
#line 853 "Settings.c"
}

GraniteSettings*
granite_settings_get_default (void)
{
	gconstpointer _tmp0_;
	GraniteSettings* result = NULL;
#line 67 "../lib/Widgets/Settings.vala"
	_tmp0_ = g_once (&granite_settings_instance, ___lambda75__gthread_func, NULL);
#line 67 "../lib/Widgets/Settings.vala"
	result = (GraniteSettings*) _tmp0_;
#line 67 "../lib/Widgets/Settings.vala"
	return result;
#line 867 "Settings.c"
}

static GraniteSettings*
granite_settings_construct (GType object_type)
{
	GraniteSettings * self = NULL;
#line 75 "../lib/Widgets/Settings.vala"
	self = (GraniteSettings*) g_object_new (object_type, NULL);
#line 75 "../lib/Widgets/Settings.vala"
	return self;
#line 878 "Settings.c"
}

static GraniteSettings*
granite_settings_new (void)
{
#line 75 "../lib/Widgets/Settings.vala"
	return granite_settings_construct (GRANITE_TYPE_SETTINGS);
#line 886 "Settings.c"
}

static void
granite_settings_setup_user_path (GraniteSettings* self)
{
	GError* _inner_error0_ = NULL;
#line 77 "../lib/Widgets/Settings.vala"
	g_return_if_fail (self != NULL);
#line 895 "Settings.c"
	{
		GraniteFDOAccounts* _tmp0_ = NULL;
		GraniteFDOAccounts* _tmp1_;
		GraniteFDOAccounts* _tmp2_;
		gchar* _tmp3_ = NULL;
		GraniteFDOAccounts* _tmp4_;
		const gchar* _tmp5_;
		gchar* _tmp6_;
		gchar* _tmp7_;
#line 79 "../lib/Widgets/Settings.vala"
		_tmp1_ = (GraniteFDOAccounts*) g_initable_new (GRANITE_FDO_TYPE_ACCOUNTS_PROXY, NULL, &_inner_error0_, "g-flags", 0, "g-name", "org.freedesktop.Accounts", "g-bus-type", G_BUS_TYPE_SYSTEM, "g-object-path", "/org/freedesktop/Accounts", "g-interface-name", "org.freedesktop.Accounts", "g-interface-info", g_type_get_qdata (GRANITE_FDO_TYPE_ACCOUNTS, g_quark_from_static_string ("vala-dbus-interface-info")), NULL);
#line 79 "../lib/Widgets/Settings.vala"
		_tmp0_ = (GraniteFDOAccounts*) _tmp1_;
#line 79 "../lib/Widgets/Settings.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 911 "Settings.c"
			goto __catch0_g_error;
		}
#line 79 "../lib/Widgets/Settings.vala"
		_tmp2_ = _tmp0_;
#line 79 "../lib/Widgets/Settings.vala"
		_tmp0_ = NULL;
#line 79 "../lib/Widgets/Settings.vala"
		_g_object_unref0 (self->priv->accounts_service);
#line 79 "../lib/Widgets/Settings.vala"
		self->priv->accounts_service = _tmp2_;
#line 85 "../lib/Widgets/Settings.vala"
		_tmp4_ = self->priv->accounts_service;
#line 85 "../lib/Widgets/Settings.vala"
		_tmp5_ = g_get_user_name ();
#line 85 "../lib/Widgets/Settings.vala"
		_tmp6_ = granite_fdo_accounts_find_user_by_name (_tmp4_, _tmp5_, &_inner_error0_);
#line 85 "../lib/Widgets/Settings.vala"
		_tmp3_ = _tmp6_;
#line 85 "../lib/Widgets/Settings.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 85 "../lib/Widgets/Settings.vala"
			_g_object_unref0 (_tmp0_);
#line 934 "Settings.c"
			goto __catch0_g_error;
		}
#line 85 "../lib/Widgets/Settings.vala"
		_tmp7_ = _tmp3_;
#line 85 "../lib/Widgets/Settings.vala"
		_tmp3_ = NULL;
#line 85 "../lib/Widgets/Settings.vala"
		_g_free0 (self->priv->_user_path);
#line 85 "../lib/Widgets/Settings.vala"
		self->priv->_user_path = _tmp7_;
#line 78 "../lib/Widgets/Settings.vala"
		_g_free0 (_tmp3_);
#line 78 "../lib/Widgets/Settings.vala"
		_g_object_unref0 (_tmp0_);
#line 949 "Settings.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp8_;
		const gchar* _tmp9_;
#line 78 "../lib/Widgets/Settings.vala"
		e = _inner_error0_;
#line 78 "../lib/Widgets/Settings.vala"
		_inner_error0_ = NULL;
#line 87 "../lib/Widgets/Settings.vala"
		_tmp8_ = e;
#line 87 "../lib/Widgets/Settings.vala"
		_tmp9_ = _tmp8_->message;
#line 87 "../lib/Widgets/Settings.vala"
		g_critical ("Settings.vala:87: %s", _tmp9_);
#line 78 "../lib/Widgets/Settings.vala"
		_g_error_free0 (e);
#line 969 "Settings.c"
	}
	__finally0:
#line 78 "../lib/Widgets/Settings.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 78 "../lib/Widgets/Settings.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 78 "../lib/Widgets/Settings.vala"
		g_clear_error (&_inner_error0_);
#line 78 "../lib/Widgets/Settings.vala"
		return;
#line 980 "Settings.c"
	}
}

static void
___lambda76_ (GraniteSettings* self,
              GVariant* changed,
              gchar** invalid)
{
	GVariant* color_scheme = NULL;
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	GVariant* _tmp2_;
	GVariant* _tmp3_;
	GVariant* _tmp4_;
#line 102 "../lib/Widgets/Settings.vala"
	g_return_if_fail (changed != NULL);
#line 103 "../lib/Widgets/Settings.vala"
	_tmp0_ = g_variant_type_new ("i");
#line 103 "../lib/Widgets/Settings.vala"
	_tmp1_ = _tmp0_;
#line 103 "../lib/Widgets/Settings.vala"
	_tmp2_ = g_variant_lookup_value (changed, "PrefersColorScheme", _tmp1_);
#line 103 "../lib/Widgets/Settings.vala"
	_tmp3_ = _tmp2_;
#line 103 "../lib/Widgets/Settings.vala"
	_g_variant_type_free0 (_tmp1_);
#line 103 "../lib/Widgets/Settings.vala"
	color_scheme = _tmp3_;
#line 104 "../lib/Widgets/Settings.vala"
	_tmp4_ = color_scheme;
#line 104 "../lib/Widgets/Settings.vala"
	if (_tmp4_ != NULL) {
#line 1013 "Settings.c"
		GVariant* _tmp5_;
#line 105 "../lib/Widgets/Settings.vala"
		_tmp5_ = color_scheme;
#line 105 "../lib/Widgets/Settings.vala"
		granite_settings_set_prefers_color_scheme (self, (GraniteSettingsColorScheme) g_variant_get_int32 (_tmp5_));
#line 1019 "Settings.c"
	}
#line 102 "../lib/Widgets/Settings.vala"
	_g_variant_unref0 (color_scheme);
#line 1023 "Settings.c"
}

static void
____lambda76__g_dbus_proxy_g_properties_changed (GDBusProxy* _sender,
                                                 GVariant* changed_properties,
                                                 gchar** invalidated_properties,
                                                 gpointer self)
{
#line 102 "../lib/Widgets/Settings.vala"
	___lambda76_ ((GraniteSettings*) self, changed_properties, invalidated_properties);
#line 1034 "Settings.c"
}

static void
granite_settings_setup_prefers_color_scheme (GraniteSettings* self)
{
	GError* _inner_error0_ = NULL;
#line 91 "../lib/Widgets/Settings.vala"
	g_return_if_fail (self != NULL);
#line 1043 "Settings.c"
	{
		GranitePantheonAccountsService* _tmp0_ = NULL;
		const gchar* _tmp1_;
		const gchar* _tmp2_;
		GranitePantheonAccountsService* _tmp3_;
		GranitePantheonAccountsService* _tmp4_;
		GranitePantheonAccountsService* _tmp5_;
		gint _tmp6_;
		gint _tmp7_;
		GranitePantheonAccountsService* _tmp8_;
#line 93 "../lib/Widgets/Settings.vala"
		_tmp1_ = granite_settings_get_user_path (self);
#line 93 "../lib/Widgets/Settings.vala"
		_tmp2_ = _tmp1_;
#line 93 "../lib/Widgets/Settings.vala"
		_tmp3_ = (GranitePantheonAccountsService*) g_initable_new (GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE_PROXY, NULL, &_inner_error0_, "g-flags", G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES, "g-name", "org.freedesktop.Accounts", "g-bus-type", G_BUS_TYPE_SYSTEM, "g-object-path", _tmp2_, "g-interface-name", "io.elementary.pantheon.AccountsService", "g-interface-info", g_type_get_qdata (GRANITE_PANTHEON_TYPE_ACCOUNTS_SERVICE, g_quark_from_static_string ("vala-dbus-interface-info")), NULL);
#line 93 "../lib/Widgets/Settings.vala"
		_tmp0_ = (GranitePantheonAccountsService*) _tmp3_;
#line 93 "../lib/Widgets/Settings.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1064 "Settings.c"
			goto __catch0_g_error;
		}
#line 93 "../lib/Widgets/Settings.vala"
		_tmp4_ = _tmp0_;
#line 93 "../lib/Widgets/Settings.vala"
		_tmp0_ = NULL;
#line 93 "../lib/Widgets/Settings.vala"
		_g_object_unref0 (self->priv->pantheon_act);
#line 93 "../lib/Widgets/Settings.vala"
		self->priv->pantheon_act = _tmp4_;
#line 100 "../lib/Widgets/Settings.vala"
		_tmp5_ = self->priv->pantheon_act;
#line 100 "../lib/Widgets/Settings.vala"
		_tmp6_ = granite_pantheon_accounts_service_get_prefers_color_scheme (_tmp5_);
#line 100 "../lib/Widgets/Settings.vala"
		_tmp7_ = _tmp6_;
#line 100 "../lib/Widgets/Settings.vala"
		granite_settings_set_prefers_color_scheme (self, (GraniteSettingsColorScheme) _tmp7_);
#line 102 "../lib/Widgets/Settings.vala"
		_tmp8_ = self->priv->pantheon_act;
#line 102 "../lib/Widgets/Settings.vala"
		g_signal_connect_object (G_TYPE_CHECK_INSTANCE_CAST (_tmp8_, g_dbus_proxy_get_type (), GDBusProxy), "g-properties-changed", (GCallback) ____lambda76__g_dbus_proxy_g_properties_changed, self, 0);
#line 92 "../lib/Widgets/Settings.vala"
		_g_object_unref0 (_tmp0_);
#line 1089 "Settings.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp9_;
		const gchar* _tmp10_;
#line 92 "../lib/Widgets/Settings.vala"
		e = _inner_error0_;
#line 92 "../lib/Widgets/Settings.vala"
		_inner_error0_ = NULL;
#line 109 "../lib/Widgets/Settings.vala"
		_tmp9_ = e;
#line 109 "../lib/Widgets/Settings.vala"
		_tmp10_ = _tmp9_->message;
#line 109 "../lib/Widgets/Settings.vala"
		g_critical ("Settings.vala:109: %s", _tmp10_);
#line 92 "../lib/Widgets/Settings.vala"
		_g_error_free0 (e);
#line 1109 "Settings.c"
	}
	__finally0:
#line 92 "../lib/Widgets/Settings.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 92 "../lib/Widgets/Settings.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 92 "../lib/Widgets/Settings.vala"
		g_clear_error (&_inner_error0_);
#line 92 "../lib/Widgets/Settings.vala"
		return;
#line 1120 "Settings.c"
	}
}

static void
granite_settings_class_init (GraniteSettingsClass * klass,
                             gpointer klass_data)
{
#line 16 "../lib/Widgets/Settings.vala"
	granite_settings_parent_class = g_type_class_peek_parent (klass);
#line 16 "../lib/Widgets/Settings.vala"
	g_type_class_adjust_private_offset (klass, &GraniteSettings_private_offset);
#line 16 "../lib/Widgets/Settings.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_settings_get_property;
#line 16 "../lib/Widgets/Settings.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_settings_set_property;
#line 16 "../lib/Widgets/Settings.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_settings_finalize;
#line 1138 "Settings.c"
	/**
	         * Whether the user would prefer if apps use a dark or light color scheme or if the user has expressed no preference.
	         */
#line 16 "../lib/Widgets/Settings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SETTINGS_PREFERS_COLOR_SCHEME_PROPERTY, granite_settings_properties[GRANITE_SETTINGS_PREFERS_COLOR_SCHEME_PROPERTY] = g_param_spec_enum ("prefers-color-scheme", "prefers-color-scheme", "prefers-color-scheme", GRANITE_SETTINGS_TYPE_COLOR_SCHEME, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1144 "Settings.c"
}

static void
granite_settings_instance_init (GraniteSettings * self,
                                gpointer klass)
{
#line 16 "../lib/Widgets/Settings.vala"
	self->priv = granite_settings_get_instance_private (self);
#line 35 "../lib/Widgets/Settings.vala"
	self->priv->_prefers_color_scheme = NULL;
#line 52 "../lib/Widgets/Settings.vala"
	self->priv->_user_path = NULL;
#line 72 "../lib/Widgets/Settings.vala"
	self->priv->accounts_service = NULL;
#line 73 "../lib/Widgets/Settings.vala"
	self->priv->pantheon_act = NULL;
#line 1161 "Settings.c"
}

static void
granite_settings_finalize (GObject * obj)
{
	GraniteSettings * self;
#line 16 "../lib/Widgets/Settings.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_TYPE_SETTINGS, GraniteSettings);
#line 35 "../lib/Widgets/Settings.vala"
	_g_free0 (self->priv->_prefers_color_scheme);
#line 52 "../lib/Widgets/Settings.vala"
	_g_free0 (self->priv->_user_path);
#line 72 "../lib/Widgets/Settings.vala"
	_g_object_unref0 (self->priv->accounts_service);
#line 73 "../lib/Widgets/Settings.vala"
	_g_object_unref0 (self->priv->pantheon_act);
#line 16 "../lib/Widgets/Settings.vala"
	G_OBJECT_CLASS (granite_settings_parent_class)->finalize (obj);
#line 1180 "Settings.c"
}

/**
     * Granite.Settings provides a way to share Pantheon desktop settings with applications.
     */
static GType
granite_settings_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteSettingsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_settings_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteSettings), 0, (GInstanceInitFunc) granite_settings_instance_init, NULL };
	GType granite_settings_type_id;
	granite_settings_type_id = g_type_register_static (G_TYPE_OBJECT, "GraniteSettings", &g_define_type_info, 0);
	GraniteSettings_private_offset = g_type_add_instance_private (granite_settings_type_id, sizeof (GraniteSettingsPrivate));
	return granite_settings_type_id;
}

GType
granite_settings_get_type (void)
{
	static volatile gsize granite_settings_type_id__volatile = 0;
	if (g_once_init_enter (&granite_settings_type_id__volatile)) {
		GType granite_settings_type_id;
		granite_settings_type_id = granite_settings_get_type_once ();
		g_once_init_leave (&granite_settings_type_id__volatile, granite_settings_type_id);
	}
	return granite_settings_type_id__volatile;
}

static void
_vala_granite_settings_get_property (GObject * object,
                                     guint property_id,
                                     GValue * value,
                                     GParamSpec * pspec)
{
	GraniteSettings * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_TYPE_SETTINGS, GraniteSettings);
#line 16 "../lib/Widgets/Settings.vala"
	switch (property_id) {
#line 16 "../lib/Widgets/Settings.vala"
		case GRANITE_SETTINGS_PREFERS_COLOR_SCHEME_PROPERTY:
#line 16 "../lib/Widgets/Settings.vala"
		g_value_set_enum (value, granite_settings_get_prefers_color_scheme (self));
#line 16 "../lib/Widgets/Settings.vala"
		break;
#line 1224 "Settings.c"
		default:
#line 16 "../lib/Widgets/Settings.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 16 "../lib/Widgets/Settings.vala"
		break;
#line 1230 "Settings.c"
	}
}

static void
_vala_granite_settings_set_property (GObject * object,
                                     guint property_id,
                                     const GValue * value,
                                     GParamSpec * pspec)
{
	GraniteSettings * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_TYPE_SETTINGS, GraniteSettings);
#line 16 "../lib/Widgets/Settings.vala"
	switch (property_id) {
#line 16 "../lib/Widgets/Settings.vala"
		case GRANITE_SETTINGS_PREFERS_COLOR_SCHEME_PROPERTY:
#line 16 "../lib/Widgets/Settings.vala"
		granite_settings_set_prefers_color_scheme (self, g_value_get_enum (value));
#line 16 "../lib/Widgets/Settings.vala"
		break;
#line 1250 "Settings.c"
		default:
#line 16 "../lib/Widgets/Settings.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 16 "../lib/Widgets/Settings.vala"
		break;
#line 1256 "Settings.c"
	}
}

