/* GraniteDemo.c generated by valac 0.48.14, the Vala compiler
 * generated from GraniteDemo.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2018 elementary, Inc. (https://elementary.io)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 *
 * Authored by: Lucas Baudin <xapantu@gmail.com>
 *              Jaap Broekhuizen <jaapz.b@gmail.com>
 *              Victor Eduardo <victoreduardm@gmal.com>
 *              Tom Beckmann <tom@elementary.io>
 *              Corentin NoÃ«l <corentin@elementary.io>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <gio/gio.h>
#include "granite.h"
#include <glib.h>
#include <stdlib.h>
#include <string.h>

#define GRANITE_TYPE_DEMO (granite_demo_get_type ())
#define GRANITE_DEMO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_TYPE_DEMO, GraniteDemo))
#define GRANITE_DEMO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_TYPE_DEMO, GraniteDemoClass))
#define GRANITE_IS_DEMO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_TYPE_DEMO))
#define GRANITE_IS_DEMO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_TYPE_DEMO))
#define GRANITE_DEMO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_TYPE_DEMO, GraniteDemoClass))

typedef struct _GraniteDemo GraniteDemo;
typedef struct _GraniteDemoClass GraniteDemoClass;
typedef struct _GraniteDemoPrivate GraniteDemoPrivate;
enum  {
	GRANITE_DEMO_0_PROPERTY,
	GRANITE_DEMO_NUM_PROPERTIES
};
static GParamSpec* granite_demo_properties[GRANITE_DEMO_NUM_PROPERTIES];
typedef struct _Block1Data Block1Data;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_ACCEL_LABEL_VIEW (accel_label_view_get_type ())
#define ACCEL_LABEL_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ACCEL_LABEL_VIEW, AccelLabelView))
#define ACCEL_LABEL_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_ACCEL_LABEL_VIEW, AccelLabelViewClass))
#define IS_ACCEL_LABEL_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ACCEL_LABEL_VIEW))
#define IS_ACCEL_LABEL_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_ACCEL_LABEL_VIEW))
#define ACCEL_LABEL_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ACCEL_LABEL_VIEW, AccelLabelViewClass))

typedef struct _AccelLabelView AccelLabelView;
typedef struct _AccelLabelViewClass AccelLabelViewClass;

#define TYPE_ALERT_VIEW_VIEW (alert_view_view_get_type ())
#define ALERT_VIEW_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ALERT_VIEW_VIEW, AlertViewView))
#define ALERT_VIEW_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_ALERT_VIEW_VIEW, AlertViewViewClass))
#define IS_ALERT_VIEW_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ALERT_VIEW_VIEW))
#define IS_ALERT_VIEW_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_ALERT_VIEW_VIEW))
#define ALERT_VIEW_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ALERT_VIEW_VIEW, AlertViewViewClass))

typedef struct _AlertViewView AlertViewView;
typedef struct _AlertViewViewClass AlertViewViewClass;

#define TYPE_CSS_VIEW (css_view_get_type ())
#define CSS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CSS_VIEW, CSSView))
#define CSS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_CSS_VIEW, CSSViewClass))
#define IS_CSS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CSS_VIEW))
#define IS_CSS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_CSS_VIEW))
#define CSS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CSS_VIEW, CSSViewClass))

typedef struct _CSSView CSSView;
typedef struct _CSSViewClass CSSViewClass;

#define TYPE_DATE_TIME_PICKER_VIEW (date_time_picker_view_get_type ())
#define DATE_TIME_PICKER_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DATE_TIME_PICKER_VIEW, DateTimePickerView))
#define DATE_TIME_PICKER_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_DATE_TIME_PICKER_VIEW, DateTimePickerViewClass))
#define IS_DATE_TIME_PICKER_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DATE_TIME_PICKER_VIEW))
#define IS_DATE_TIME_PICKER_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_DATE_TIME_PICKER_VIEW))
#define DATE_TIME_PICKER_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DATE_TIME_PICKER_VIEW, DateTimePickerViewClass))

typedef struct _DateTimePickerView DateTimePickerView;
typedef struct _DateTimePickerViewClass DateTimePickerViewClass;

#define TYPE_DYNAMIC_NOTEBOOK_VIEW (dynamic_notebook_view_get_type ())
#define DYNAMIC_NOTEBOOK_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DYNAMIC_NOTEBOOK_VIEW, DynamicNotebookView))
#define DYNAMIC_NOTEBOOK_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_DYNAMIC_NOTEBOOK_VIEW, DynamicNotebookViewClass))
#define IS_DYNAMIC_NOTEBOOK_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DYNAMIC_NOTEBOOK_VIEW))
#define IS_DYNAMIC_NOTEBOOK_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_DYNAMIC_NOTEBOOK_VIEW))
#define DYNAMIC_NOTEBOOK_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DYNAMIC_NOTEBOOK_VIEW, DynamicNotebookViewClass))

typedef struct _DynamicNotebookView DynamicNotebookView;
typedef struct _DynamicNotebookViewClass DynamicNotebookViewClass;

#define TYPE_FORM_VIEW (form_view_get_type ())
#define FORM_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_FORM_VIEW, FormView))
#define FORM_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_FORM_VIEW, FormViewClass))
#define IS_FORM_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_FORM_VIEW))
#define IS_FORM_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_FORM_VIEW))
#define FORM_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_FORM_VIEW, FormViewClass))

typedef struct _FormView FormView;
typedef struct _FormViewClass FormViewClass;

#define TYPE_MODE_BUTTON_VIEW (mode_button_view_get_type ())
#define MODE_BUTTON_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MODE_BUTTON_VIEW, ModeButtonView))
#define MODE_BUTTON_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MODE_BUTTON_VIEW, ModeButtonViewClass))
#define IS_MODE_BUTTON_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MODE_BUTTON_VIEW))
#define IS_MODE_BUTTON_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MODE_BUTTON_VIEW))
#define MODE_BUTTON_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MODE_BUTTON_VIEW, ModeButtonViewClass))

typedef struct _ModeButtonView ModeButtonView;
typedef struct _ModeButtonViewClass ModeButtonViewClass;

#define TYPE_OVERLAY_BAR_VIEW (overlay_bar_view_get_type ())
#define OVERLAY_BAR_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OVERLAY_BAR_VIEW, OverlayBarView))
#define OVERLAY_BAR_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_OVERLAY_BAR_VIEW, OverlayBarViewClass))
#define IS_OVERLAY_BAR_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OVERLAY_BAR_VIEW))
#define IS_OVERLAY_BAR_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_OVERLAY_BAR_VIEW))
#define OVERLAY_BAR_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OVERLAY_BAR_VIEW, OverlayBarViewClass))

typedef struct _OverlayBarView OverlayBarView;
typedef struct _OverlayBarViewClass OverlayBarViewClass;

#define TYPE_SEEK_BAR_VIEW (seek_bar_view_get_type ())
#define SEEK_BAR_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SEEK_BAR_VIEW, SeekBarView))
#define SEEK_BAR_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_SEEK_BAR_VIEW, SeekBarViewClass))
#define IS_SEEK_BAR_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SEEK_BAR_VIEW))
#define IS_SEEK_BAR_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_SEEK_BAR_VIEW))
#define SEEK_BAR_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SEEK_BAR_VIEW, SeekBarViewClass))

typedef struct _SeekBarView SeekBarView;
typedef struct _SeekBarViewClass SeekBarViewClass;

#define TYPE_SETTINGS_VIEW (settings_view_get_type ())
#define SETTINGS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SETTINGS_VIEW, SettingsView))
#define SETTINGS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_SETTINGS_VIEW, SettingsViewClass))
#define IS_SETTINGS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SETTINGS_VIEW))
#define IS_SETTINGS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_SETTINGS_VIEW))
#define SETTINGS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SETTINGS_VIEW, SettingsViewClass))

typedef struct _SettingsView SettingsView;
typedef struct _SettingsViewClass SettingsViewClass;

#define TYPE_SOURCE_LIST_VIEW (source_list_view_get_type ())
#define SOURCE_LIST_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SOURCE_LIST_VIEW, SourceListView))
#define SOURCE_LIST_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_SOURCE_LIST_VIEW, SourceListViewClass))
#define IS_SOURCE_LIST_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SOURCE_LIST_VIEW))
#define IS_SOURCE_LIST_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_SOURCE_LIST_VIEW))
#define SOURCE_LIST_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SOURCE_LIST_VIEW, SourceListViewClass))

typedef struct _SourceListView SourceListView;
typedef struct _SourceListViewClass SourceListViewClass;

#define TYPE_STORAGE_VIEW (storage_view_get_type ())
#define STORAGE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_STORAGE_VIEW, StorageView))
#define STORAGE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_STORAGE_VIEW, StorageViewClass))
#define IS_STORAGE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_STORAGE_VIEW))
#define IS_STORAGE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_STORAGE_VIEW))
#define STORAGE_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_STORAGE_VIEW, StorageViewClass))

typedef struct _StorageView StorageView;
typedef struct _StorageViewClass StorageViewClass;

#define TYPE_TOAST_VIEW (toast_view_get_type ())
#define TOAST_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TOAST_VIEW, ToastView))
#define TOAST_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_TOAST_VIEW, ToastViewClass))
#define IS_TOAST_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TOAST_VIEW))
#define IS_TOAST_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_TOAST_VIEW))
#define TOAST_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TOAST_VIEW, ToastViewClass))

typedef struct _ToastView ToastView;
typedef struct _ToastViewClass ToastViewClass;

#define TYPE_UTILS_VIEW (utils_view_get_type ())
#define UTILS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTILS_VIEW, UtilsView))
#define UTILS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTILS_VIEW, UtilsViewClass))
#define IS_UTILS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTILS_VIEW))
#define IS_UTILS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTILS_VIEW))
#define UTILS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTILS_VIEW, UtilsViewClass))

typedef struct _UtilsView UtilsView;
typedef struct _UtilsViewClass UtilsViewClass;

#define TYPE_WELCOME_VIEW (welcome_view_get_type ())
#define WELCOME_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WELCOME_VIEW, WelcomeView))
#define WELCOME_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_WELCOME_VIEW, WelcomeViewClass))
#define IS_WELCOME_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WELCOME_VIEW))
#define IS_WELCOME_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_WELCOME_VIEW))
#define WELCOME_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WELCOME_VIEW, WelcomeViewClass))

typedef struct _WelcomeView WelcomeView;
typedef struct _WelcomeViewClass WelcomeViewClass;

#define TYPE_DIALOGS_VIEW (dialogs_view_get_type ())
#define DIALOGS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DIALOGS_VIEW, DialogsView))
#define DIALOGS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_DIALOGS_VIEW, DialogsViewClass))
#define IS_DIALOGS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DIALOGS_VIEW))
#define IS_DIALOGS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_DIALOGS_VIEW))
#define DIALOGS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DIALOGS_VIEW, DialogsViewClass))

typedef struct _DialogsView DialogsView;
typedef struct _DialogsViewClass DialogsViewClass;

#define TYPE_ASYNC_IMAGE_VIEW (async_image_view_get_type ())
#define ASYNC_IMAGE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ASYNC_IMAGE_VIEW, AsyncImageView))
#define ASYNC_IMAGE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_ASYNC_IMAGE_VIEW, AsyncImageViewClass))
#define IS_ASYNC_IMAGE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ASYNC_IMAGE_VIEW))
#define IS_ASYNC_IMAGE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_ASYNC_IMAGE_VIEW))
#define ASYNC_IMAGE_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ASYNC_IMAGE_VIEW, AsyncImageViewClass))

typedef struct _AsyncImageView AsyncImageView;
typedef struct _AsyncImageViewClass AsyncImageViewClass;

#define TYPE_APPLICATION_VIEW (application_view_get_type ())
#define APPLICATION_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_APPLICATION_VIEW, ApplicationView))
#define APPLICATION_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_APPLICATION_VIEW, ApplicationViewClass))
#define IS_APPLICATION_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_APPLICATION_VIEW))
#define IS_APPLICATION_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_APPLICATION_VIEW))
#define APPLICATION_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_APPLICATION_VIEW, ApplicationViewClass))

typedef struct _ApplicationView ApplicationView;
typedef struct _ApplicationViewClass ApplicationViewClass;

struct _GraniteDemo {
	GtkApplication parent_instance;
	GraniteDemoPrivate * priv;
};

struct _GraniteDemoClass {
	GtkApplicationClass parent_class;
};

struct _Block1Data {
	int _ref_count_;
	GraniteDemo* self;
	GtkSettings* gtk_settings;
	GraniteSettings* granite_settings;
};

static gpointer granite_demo_parent_class = NULL;

GType granite_demo_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteDemo, g_object_unref)
static void granite_demo_real_activate (GApplication* base);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
GType accel_label_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (AccelLabelView, g_object_unref)
AccelLabelView* accel_label_view_new (void);
AccelLabelView* accel_label_view_construct (GType object_type);
GType alert_view_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (AlertViewView, g_object_unref)
AlertViewView* alert_view_view_new (void);
AlertViewView* alert_view_view_construct (GType object_type);
GType css_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CSSView, g_object_unref)
CSSView* css_view_new (GtkWindow* window);
CSSView* css_view_construct (GType object_type,
                             GtkWindow* window);
GType date_time_picker_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DateTimePickerView, g_object_unref)
DateTimePickerView* date_time_picker_view_new (void);
DateTimePickerView* date_time_picker_view_construct (GType object_type);
GType dynamic_notebook_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DynamicNotebookView, g_object_unref)
DynamicNotebookView* dynamic_notebook_view_new (void);
DynamicNotebookView* dynamic_notebook_view_construct (GType object_type);
GType form_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (FormView, g_object_unref)
FormView* form_view_new (void);
FormView* form_view_construct (GType object_type);
GType mode_button_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ModeButtonView, g_object_unref)
ModeButtonView* mode_button_view_new (void);
ModeButtonView* mode_button_view_construct (GType object_type);
GType overlay_bar_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OverlayBarView, g_object_unref)
OverlayBarView* overlay_bar_view_new (void);
OverlayBarView* overlay_bar_view_construct (GType object_type);
GType seek_bar_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeekBarView, g_object_unref)
SeekBarView* seek_bar_view_new (void);
SeekBarView* seek_bar_view_construct (GType object_type);
GType settings_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SettingsView, g_object_unref)
SettingsView* settings_view_new (void);
SettingsView* settings_view_construct (GType object_type);
GType source_list_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SourceListView, g_object_unref)
SourceListView* source_list_view_new (void);
SourceListView* source_list_view_construct (GType object_type);
GType storage_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (StorageView, g_object_unref)
StorageView* storage_view_new (void);
StorageView* storage_view_construct (GType object_type);
GType toast_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ToastView, g_object_unref)
ToastView* toast_view_new (void);
ToastView* toast_view_construct (GType object_type);
GType utils_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (UtilsView, g_object_unref)
UtilsView* utils_view_new (void);
UtilsView* utils_view_construct (GType object_type);
GType welcome_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WelcomeView, g_object_unref)
WelcomeView* welcome_view_new (void);
WelcomeView* welcome_view_construct (GType object_type);
GType dialogs_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsView, g_object_unref)
DialogsView* dialogs_view_new (GtkWindow* window);
DialogsView* dialogs_view_construct (GType object_type,
                                     GtkWindow* window);
GType async_image_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (AsyncImageView, g_object_unref)
AsyncImageView* async_image_view_new (void);
AsyncImageView* async_image_view_construct (GType object_type);
GType application_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ApplicationView, g_object_unref)
ApplicationView* application_view_new (void);
ApplicationView* application_view_construct (GType object_type);
static void __lambda43_ (Block1Data* _data1_);
static void ___lambda43__g_object_notify (GObject* _sender,
                                   GParamSpec* pspec,
                                   gpointer self);
gint granite_demo_main (gchar** args,
                        gint args_length1);
GraniteDemo* granite_demo_new (void);
GraniteDemo* granite_demo_construct (GType object_type);
static GObject * granite_demo_constructor (GType type,
                                    guint n_construct_properties,
                                    GObjectConstructParam * construct_properties);
static GType granite_demo_get_type_once (void);

static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
#line 33 "../demo/GraniteDemo.vala"
	g_atomic_int_inc (&_data1_->_ref_count_);
#line 33 "../demo/GraniteDemo.vala"
	return _data1_;
#line 354 "GraniteDemo.c"
}

static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
#line 33 "../demo/GraniteDemo.vala"
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
#line 364 "GraniteDemo.c"
		GraniteDemo* self;
#line 33 "../demo/GraniteDemo.vala"
		self = _data1_->self;
#line 33 "../demo/GraniteDemo.vala"
		_g_object_unref0 (_data1_->granite_settings);
#line 33 "../demo/GraniteDemo.vala"
		_g_object_unref0 (_data1_->gtk_settings);
#line 33 "../demo/GraniteDemo.vala"
		_g_object_unref0 (self);
#line 33 "../demo/GraniteDemo.vala"
		g_slice_free (Block1Data, _data1_);
#line 376 "GraniteDemo.c"
	}
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 82 "../demo/GraniteDemo.vala"
	return self ? g_object_ref (self) : NULL;
#line 385 "GraniteDemo.c"
}

static void
__lambda43_ (Block1Data* _data1_)
{
	GraniteDemo* self;
	GraniteSettingsColorScheme _tmp0_;
	GraniteSettingsColorScheme _tmp1_;
#line 110 "../demo/GraniteDemo.vala"
	self = _data1_->self;
#line 111 "../demo/GraniteDemo.vala"
	_tmp0_ = granite_settings_get_prefers_color_scheme (_data1_->granite_settings);
#line 111 "../demo/GraniteDemo.vala"
	_tmp1_ = _tmp0_;
#line 111 "../demo/GraniteDemo.vala"
	g_object_set (_data1_->gtk_settings, "gtk-application-prefer-dark-theme", _tmp1_ == GRANITE_SETTINGS_COLOR_SCHEME_DARK, NULL);
#line 402 "GraniteDemo.c"
}

static void
___lambda43__g_object_notify (GObject* _sender,
                              GParamSpec* pspec,
                              gpointer self)
{
#line 110 "../demo/GraniteDemo.vala"
	__lambda43_ (self);
#line 412 "GraniteDemo.c"
}

static void
granite_demo_real_activate (GApplication* base)
{
	GraniteDemo * self;
	Block1Data* _data1_;
	GtkWindow* window = NULL;
	GtkWindow* _tmp0_;
	AccelLabelView* accel_label_view = NULL;
	AccelLabelView* _tmp1_;
	AlertViewView* alert_view = NULL;
	AlertViewView* _tmp2_;
	CSSView* css_view = NULL;
	CSSView* _tmp3_;
	DateTimePickerView* date_time_picker_view = NULL;
	DateTimePickerView* _tmp4_;
	DynamicNotebookView* dynamic_notebook_view = NULL;
	DynamicNotebookView* _tmp5_;
	FormView* form_view = NULL;
	FormView* _tmp6_;
	ModeButtonView* mode_button_view = NULL;
	ModeButtonView* _tmp7_;
	OverlayBarView* overlaybar_view = NULL;
	OverlayBarView* _tmp8_;
	SeekBarView* seekbar_view = NULL;
	SeekBarView* _tmp9_;
	SettingsView* settings_view = NULL;
	SettingsView* _tmp10_;
	SourceListView* source_list_view = NULL;
	SourceListView* _tmp11_;
	StorageView* storage_view = NULL;
	StorageView* _tmp12_;
	ToastView* toast_view = NULL;
	ToastView* _tmp13_;
	UtilsView* utils_view = NULL;
	UtilsView* _tmp14_;
	WelcomeView* welcome = NULL;
	WelcomeView* _tmp15_;
	DialogsView* dialogs_view = NULL;
	DialogsView* _tmp16_;
	AsyncImageView* async_image_view = NULL;
	AsyncImageView* _tmp17_;
	ApplicationView* application_view = NULL;
	ApplicationView* _tmp18_;
	GtkStack* main_stack = NULL;
	GtkStack* _tmp19_;
	GtkStackSidebar* stack_sidebar = NULL;
	GtkStackSidebar* _tmp20_;
	GtkPaned* paned = NULL;
	GtkPaned* _tmp21_;
	GtkSettings* _tmp22_;
	GtkSettings* _tmp23_;
	GraniteModeSwitch* mode_switch = NULL;
	GraniteModeSwitch* _tmp24_;
	GraniteSettings* _tmp25_;
	GraniteSettings* _tmp26_;
	GraniteSettingsColorScheme _tmp27_;
	GraniteSettingsColorScheme _tmp28_;
	GtkHeaderBar* headerbar = NULL;
	GtkHeaderBar* _tmp29_;
	GtkStyleContext* _tmp30_;
#line 33 "../demo/GraniteDemo.vala"
	self = (GraniteDemo*) base;
#line 33 "../demo/GraniteDemo.vala"
	_data1_ = g_slice_new0 (Block1Data);
#line 33 "../demo/GraniteDemo.vala"
	_data1_->_ref_count_ = 1;
#line 33 "../demo/GraniteDemo.vala"
	_data1_->self = g_object_ref (self);
#line 34 "../demo/GraniteDemo.vala"
	_tmp0_ = (GtkWindow*) gtk_window_new (GTK_WINDOW_TOPLEVEL);
#line 34 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp0_);
#line 34 "../demo/GraniteDemo.vala"
	window = _tmp0_;
#line 36 "../demo/GraniteDemo.vala"
	_tmp1_ = accel_label_view_new ();
#line 36 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp1_);
#line 36 "../demo/GraniteDemo.vala"
	accel_label_view = _tmp1_;
#line 37 "../demo/GraniteDemo.vala"
	_tmp2_ = alert_view_view_new ();
#line 37 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp2_);
#line 37 "../demo/GraniteDemo.vala"
	alert_view = _tmp2_;
#line 38 "../demo/GraniteDemo.vala"
	_tmp3_ = css_view_new (window);
#line 38 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp3_);
#line 38 "../demo/GraniteDemo.vala"
	css_view = _tmp3_;
#line 39 "../demo/GraniteDemo.vala"
	_tmp4_ = date_time_picker_view_new ();
#line 39 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp4_);
#line 39 "../demo/GraniteDemo.vala"
	date_time_picker_view = _tmp4_;
#line 40 "../demo/GraniteDemo.vala"
	_tmp5_ = dynamic_notebook_view_new ();
#line 40 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp5_);
#line 40 "../demo/GraniteDemo.vala"
	dynamic_notebook_view = _tmp5_;
#line 41 "../demo/GraniteDemo.vala"
	_tmp6_ = form_view_new ();
#line 41 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp6_);
#line 41 "../demo/GraniteDemo.vala"
	form_view = _tmp6_;
#line 42 "../demo/GraniteDemo.vala"
	_tmp7_ = mode_button_view_new ();
#line 42 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp7_);
#line 42 "../demo/GraniteDemo.vala"
	mode_button_view = _tmp7_;
#line 43 "../demo/GraniteDemo.vala"
	_tmp8_ = overlay_bar_view_new ();
#line 43 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp8_);
#line 43 "../demo/GraniteDemo.vala"
	overlaybar_view = _tmp8_;
#line 44 "../demo/GraniteDemo.vala"
	_tmp9_ = seek_bar_view_new ();
#line 44 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp9_);
#line 44 "../demo/GraniteDemo.vala"
	seekbar_view = _tmp9_;
#line 45 "../demo/GraniteDemo.vala"
	_tmp10_ = settings_view_new ();
#line 45 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp10_);
#line 45 "../demo/GraniteDemo.vala"
	settings_view = _tmp10_;
#line 46 "../demo/GraniteDemo.vala"
	_tmp11_ = source_list_view_new ();
#line 46 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp11_);
#line 46 "../demo/GraniteDemo.vala"
	source_list_view = _tmp11_;
#line 47 "../demo/GraniteDemo.vala"
	_tmp12_ = storage_view_new ();
#line 47 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp12_);
#line 47 "../demo/GraniteDemo.vala"
	storage_view = _tmp12_;
#line 48 "../demo/GraniteDemo.vala"
	_tmp13_ = toast_view_new ();
#line 48 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp13_);
#line 48 "../demo/GraniteDemo.vala"
	toast_view = _tmp13_;
#line 49 "../demo/GraniteDemo.vala"
	_tmp14_ = utils_view_new ();
#line 49 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp14_);
#line 49 "../demo/GraniteDemo.vala"
	utils_view = _tmp14_;
#line 50 "../demo/GraniteDemo.vala"
	_tmp15_ = welcome_view_new ();
#line 50 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp15_);
#line 50 "../demo/GraniteDemo.vala"
	welcome = _tmp15_;
#line 51 "../demo/GraniteDemo.vala"
	_tmp16_ = dialogs_view_new (window);
#line 51 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp16_);
#line 51 "../demo/GraniteDemo.vala"
	dialogs_view = _tmp16_;
#line 52 "../demo/GraniteDemo.vala"
	_tmp17_ = async_image_view_new ();
#line 52 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp17_);
#line 52 "../demo/GraniteDemo.vala"
	async_image_view = _tmp17_;
#line 53 "../demo/GraniteDemo.vala"
	_tmp18_ = application_view_new ();
#line 53 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp18_);
#line 53 "../demo/GraniteDemo.vala"
	application_view = _tmp18_;
#line 55 "../demo/GraniteDemo.vala"
	_tmp19_ = (GtkStack*) gtk_stack_new ();
#line 55 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp19_);
#line 55 "../demo/GraniteDemo.vala"
	main_stack = _tmp19_;
#line 56 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) welcome, "welcome", "Welcome");
#line 57 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) accel_label_view, "accel_label", "AccelLabel");
#line 58 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) alert_view, "alert", "AlertView");
#line 59 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) css_view, "css", "Style Classes");
#line 60 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) date_time_picker_view, "pickers", "Date & Time");
#line 61 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) dynamic_notebook_view, "dynamictab", "DynamicNotebook");
#line 62 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) form_view, "formview", "Forms");
#line 63 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) mode_button_view, "selection_controls", "Selection Controls");
#line 64 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) overlaybar_view, "overlaybar", "OverlayBar");
#line 65 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) seekbar_view, "seekbar", "SeekBar");
#line 66 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) settings_view, "settings", "SettingsSidebar");
#line 67 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) source_list_view, "sourcelist", "SourceList");
#line 68 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) storage_view, "storage", "StorageBar");
#line 69 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) toast_view, "toasts", "Toast");
#line 70 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) utils_view, "utils", "Utils");
#line 71 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) dialogs_view, "dialogs", "Dialogs");
#line 72 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) async_image_view, "asyncimage", "AsyncImage");
#line 73 "../demo/GraniteDemo.vala"
	gtk_stack_add_titled (main_stack, (GtkWidget*) application_view, "application", "Application");
#line 75 "../demo/GraniteDemo.vala"
	_tmp20_ = (GtkStackSidebar*) gtk_stack_sidebar_new ();
#line 75 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp20_);
#line 75 "../demo/GraniteDemo.vala"
	stack_sidebar = _tmp20_;
#line 76 "../demo/GraniteDemo.vala"
	gtk_stack_sidebar_set_stack (stack_sidebar, main_stack);
#line 78 "../demo/GraniteDemo.vala"
	_tmp21_ = (GtkPaned*) gtk_paned_new (GTK_ORIENTATION_HORIZONTAL);
#line 78 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp21_);
#line 78 "../demo/GraniteDemo.vala"
	paned = _tmp21_;
#line 79 "../demo/GraniteDemo.vala"
	gtk_paned_add1 (paned, (GtkWidget*) stack_sidebar);
#line 80 "../demo/GraniteDemo.vala"
	gtk_paned_add2 (paned, (GtkWidget*) main_stack);
#line 82 "../demo/GraniteDemo.vala"
	_tmp22_ = gtk_settings_get_default ();
#line 82 "../demo/GraniteDemo.vala"
	_tmp23_ = _g_object_ref0 (_tmp22_);
#line 82 "../demo/GraniteDemo.vala"
	_data1_->gtk_settings = _tmp23_;
#line 84 "../demo/GraniteDemo.vala"
	_tmp24_ = granite_mode_switch_new_from_icon_name ("display-brightness-symbolic", "weather-clear-night-symbolic");
#line 84 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp24_);
#line 84 "../demo/GraniteDemo.vala"
	mode_switch = _tmp24_;
#line 88 "../demo/GraniteDemo.vala"
	granite_mode_switch_set_primary_icon_tooltip_text (mode_switch, "Light background");
#line 89 "../demo/GraniteDemo.vala"
	granite_mode_switch_set_secondary_icon_tooltip_text (mode_switch, "Dark background");
#line 90 "../demo/GraniteDemo.vala"
	gtk_widget_set_valign ((GtkWidget*) mode_switch, GTK_ALIGN_CENTER);
#line 91 "../demo/GraniteDemo.vala"
	g_object_bind_property_with_closures ((GObject*) mode_switch, "active", (GObject*) _data1_->gtk_settings, "gtk-application-prefer-dark-theme", G_BINDING_BIDIRECTIONAL, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 93 "../demo/GraniteDemo.vala"
	_tmp25_ = granite_settings_get_default ();
#line 93 "../demo/GraniteDemo.vala"
	_tmp26_ = _g_object_ref0 (_tmp25_);
#line 93 "../demo/GraniteDemo.vala"
	_data1_->granite_settings = _tmp26_;
#line 94 "../demo/GraniteDemo.vala"
	_tmp27_ = granite_settings_get_prefers_color_scheme (_data1_->granite_settings);
#line 94 "../demo/GraniteDemo.vala"
	_tmp28_ = _tmp27_;
#line 94 "../demo/GraniteDemo.vala"
	g_object_set (_data1_->gtk_settings, "gtk-application-prefer-dark-theme", _tmp28_ == GRANITE_SETTINGS_COLOR_SCHEME_DARK, NULL);
#line 96 "../demo/GraniteDemo.vala"
	_tmp29_ = (GtkHeaderBar*) gtk_header_bar_new ();
#line 96 "../demo/GraniteDemo.vala"
	g_object_ref_sink (_tmp29_);
#line 96 "../demo/GraniteDemo.vala"
	headerbar = _tmp29_;
#line 97 "../demo/GraniteDemo.vala"
	_tmp30_ = gtk_widget_get_style_context ((GtkWidget*) headerbar);
#line 97 "../demo/GraniteDemo.vala"
	gtk_style_context_add_class (_tmp30_, "default-decoration");
#line 98 "../demo/GraniteDemo.vala"
	gtk_header_bar_set_show_close_button (headerbar, TRUE);
#line 99 "../demo/GraniteDemo.vala"
	gtk_header_bar_pack_end (headerbar, (GtkWidget*) mode_switch);
#line 101 "../demo/GraniteDemo.vala"
	gtk_container_add ((GtkContainer*) window, (GtkWidget*) paned);
#line 102 "../demo/GraniteDemo.vala"
	gtk_window_set_default_size (window, 900, 600);
#line 103 "../demo/GraniteDemo.vala"
	gtk_widget_set_size_request ((GtkWidget*) window, 750, 500);
#line 104 "../demo/GraniteDemo.vala"
	gtk_window_set_titlebar (window, (GtkWidget*) headerbar);
#line 105 "../demo/GraniteDemo.vala"
	gtk_window_set_title (window, "Granite Demo");
#line 106 "../demo/GraniteDemo.vala"
	gtk_widget_show_all ((GtkWidget*) window);
#line 108 "../demo/GraniteDemo.vala"
	gtk_application_add_window ((GtkApplication*) self, window);
#line 110 "../demo/GraniteDemo.vala"
	g_signal_connect_data ((GObject*) _data1_->granite_settings, "notify::prefers-color-scheme", (GCallback) ___lambda43__g_object_notify, block1_data_ref (_data1_), (GClosureNotify) block1_data_unref, 0);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (headerbar);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (mode_switch);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (paned);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (stack_sidebar);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (main_stack);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (application_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (async_image_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (dialogs_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (welcome);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (utils_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (toast_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (storage_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (source_list_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (settings_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (seekbar_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (overlaybar_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (mode_button_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (form_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (dynamic_notebook_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (date_time_picker_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (css_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (alert_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (accel_label_view);
#line 33 "../demo/GraniteDemo.vala"
	_g_object_unref0 (window);
#line 33 "../demo/GraniteDemo.vala"
	block1_data_unref (_data1_);
#line 33 "../demo/GraniteDemo.vala"
	_data1_ = NULL;
#line 771 "GraniteDemo.c"
}

gint
granite_demo_main (gchar** args,
                   gint args_length1)
{
	GraniteDemo* application = NULL;
	GraniteDemo* _tmp0_;
	gint result = 0;
#line 116 "../demo/GraniteDemo.vala"
	_tmp0_ = granite_demo_new ();
#line 116 "../demo/GraniteDemo.vala"
	application = _tmp0_;
#line 117 "../demo/GraniteDemo.vala"
	result = g_application_run ((GApplication*) application, (gint) args_length1, args);
#line 117 "../demo/GraniteDemo.vala"
	_g_object_unref0 (application);
#line 117 "../demo/GraniteDemo.vala"
	return result;
#line 791 "GraniteDemo.c"
}

int
main (int argc,
      char ** argv)
{
#line 115 "../demo/GraniteDemo.vala"
	return granite_demo_main (argv, argc);
#line 800 "GraniteDemo.c"
}

GraniteDemo*
granite_demo_construct (GType object_type)
{
	GraniteDemo * self = NULL;
#line 27 "../demo/GraniteDemo.vala"
	self = (GraniteDemo*) g_object_new (object_type, NULL);
#line 27 "../demo/GraniteDemo.vala"
	return self;
#line 811 "GraniteDemo.c"
}

GraniteDemo*
granite_demo_new (void)
{
#line 27 "../demo/GraniteDemo.vala"
	return granite_demo_construct (GRANITE_TYPE_DEMO);
#line 819 "GraniteDemo.c"
}

static GObject *
granite_demo_constructor (GType type,
                          guint n_construct_properties,
                          GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteDemo * self;
#line 28 "../demo/GraniteDemo.vala"
	parent_class = G_OBJECT_CLASS (granite_demo_parent_class);
#line 28 "../demo/GraniteDemo.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 28 "../demo/GraniteDemo.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_TYPE_DEMO, GraniteDemo);
#line 29 "../demo/GraniteDemo.vala"
	g_application_set_application_id ((GApplication*) self, "io.elementary.granite.demo");
#line 30 "../demo/GraniteDemo.vala"
	g_application_set_flags ((GApplication*) self, G_APPLICATION_FLAGS_NONE);
#line 28 "../demo/GraniteDemo.vala"
	return obj;
#line 842 "GraniteDemo.c"
}

static void
granite_demo_class_init (GraniteDemoClass * klass,
                         gpointer klass_data)
{
#line 27 "../demo/GraniteDemo.vala"
	granite_demo_parent_class = g_type_class_peek_parent (klass);
#line 27 "../demo/GraniteDemo.vala"
	((GApplicationClass *) klass)->activate = (void (*) (GApplication*)) granite_demo_real_activate;
#line 27 "../demo/GraniteDemo.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_demo_constructor;
#line 855 "GraniteDemo.c"
}

static void
granite_demo_instance_init (GraniteDemo * self,
                            gpointer klass)
{
}

static GType
granite_demo_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteDemoClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_demo_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteDemo), 0, (GInstanceInitFunc) granite_demo_instance_init, NULL };
	GType granite_demo_type_id;
	granite_demo_type_id = g_type_register_static (gtk_application_get_type (), "GraniteDemo", &g_define_type_info, 0);
	return granite_demo_type_id;
}

GType
granite_demo_get_type (void)
{
	static volatile gsize granite_demo_type_id__volatile = 0;
	if (g_once_init_enter (&granite_demo_type_id__volatile)) {
		GType granite_demo_type_id;
		granite_demo_type_id = granite_demo_get_type_once ();
		g_once_init_leave (&granite_demo_type_id__volatile, granite_demo_type_id);
	}
	return granite_demo_type_id__volatile;
}

