/* ProgrammerDisplay.c generated by valac 0.48.14, the Vala compiler
 * generated from ProgrammerDisplay.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <granite.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <pango/pango.h>

#define PEBBLES_TYPE_PROGRAMMER_DISPLAY (pebbles_programmer_display_get_type ())
#define PEBBLES_PROGRAMMER_DISPLAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_PROGRAMMER_DISPLAY, PebblesProgrammerDisplay))
#define PEBBLES_PROGRAMMER_DISPLAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_PROGRAMMER_DISPLAY, PebblesProgrammerDisplayClass))
#define PEBBLES_IS_PROGRAMMER_DISPLAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_PROGRAMMER_DISPLAY))
#define PEBBLES_IS_PROGRAMMER_DISPLAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_PROGRAMMER_DISPLAY))
#define PEBBLES_PROGRAMMER_DISPLAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_PROGRAMMER_DISPLAY, PebblesProgrammerDisplayClass))

typedef struct _PebblesProgrammerDisplay PebblesProgrammerDisplay;
typedef struct _PebblesProgrammerDisplayClass PebblesProgrammerDisplayClass;
typedef struct _PebblesProgrammerDisplayPrivate PebblesProgrammerDisplayPrivate;

#define PEBBLES_TYPE_SETTINGS (pebbles_settings_get_type ())
#define PEBBLES_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettings))
#define PEBBLES_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))
#define PEBBLES_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))

typedef struct _PebblesSettings PebblesSettings;
typedef struct _PebblesSettingsClass PebblesSettingsClass;
typedef enum  {
	PEBBLES_GLOBAL_WORD_LENGTH_QWD = 0,
	PEBBLES_GLOBAL_WORD_LENGTH_DWD = 1,
	PEBBLES_GLOBAL_WORD_LENGTH_WRD = 2,
	PEBBLES_GLOBAL_WORD_LENGTH_BYT = 3
} PebblesGlobalWordLength;

#define PEBBLES_TYPE_GLOBAL_WORD_LENGTH (pebbles_global_word_length_get_type ())

#define PEBBLES_TYPE_PROGRAMMER_CALCULATOR (pebbles_programmer_calculator_get_type ())
#define PEBBLES_PROGRAMMER_CALCULATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculator))
#define PEBBLES_PROGRAMMER_CALCULATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculatorClass))
#define PEBBLES_IS_PROGRAMMER_CALCULATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_PROGRAMMER_CALCULATOR))
#define PEBBLES_IS_PROGRAMMER_CALCULATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_PROGRAMMER_CALCULATOR))
#define PEBBLES_PROGRAMMER_CALCULATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculatorClass))

typedef struct _PebblesProgrammerCalculator PebblesProgrammerCalculator;
typedef struct _PebblesProgrammerCalculatorClass PebblesProgrammerCalculatorClass;

#define PEBBLES_TYPE_PROGRAMMER_VIEW (pebbles_programmer_view_get_type ())
#define PEBBLES_PROGRAMMER_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_PROGRAMMER_VIEW, PebblesProgrammerView))
#define PEBBLES_PROGRAMMER_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_PROGRAMMER_VIEW, PebblesProgrammerViewClass))
#define PEBBLES_IS_PROGRAMMER_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_PROGRAMMER_VIEW))
#define PEBBLES_IS_PROGRAMMER_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_PROGRAMMER_VIEW))
#define PEBBLES_PROGRAMMER_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_PROGRAMMER_VIEW, PebblesProgrammerViewClass))

typedef struct _PebblesProgrammerView PebblesProgrammerView;
typedef struct _PebblesProgrammerViewClass PebblesProgrammerViewClass;
enum  {
	PEBBLES_PROGRAMMER_DISPLAY_0_PROPERTY,
	PEBBLES_PROGRAMMER_DISPLAY_NUM_PROPERTIES
};
static GParamSpec* pebbles_programmer_display_properties[PEBBLES_PROGRAMMER_DISPLAY_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _pebbles_programmer_calculator_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_programmer_calculator_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _PebblesProgrammerViewPrivate PebblesProgrammerViewPrivate;

#define PEBBLES_TYPE_MAIN_WINDOW (pebbles_main_window_get_type ())
#define PEBBLES_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_MAIN_WINDOW, PebblesMainWindow))
#define PEBBLES_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_MAIN_WINDOW, PebblesMainWindowClass))
#define PEBBLES_IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_MAIN_WINDOW))
#define PEBBLES_IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_MAIN_WINDOW))
#define PEBBLES_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_MAIN_WINDOW, PebblesMainWindowClass))

typedef struct _PebblesMainWindow PebblesMainWindow;
typedef struct _PebblesMainWindowClass PebblesMainWindowClass;

#define PEBBLES_TYPE_STYLED_BUTTON (pebbles_styled_button_get_type ())
#define PEBBLES_STYLED_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_STYLED_BUTTON, PebblesStyledButton))
#define PEBBLES_STYLED_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_STYLED_BUTTON, PebblesStyledButtonClass))
#define PEBBLES_IS_STYLED_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_STYLED_BUTTON))
#define PEBBLES_IS_STYLED_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_STYLED_BUTTON))
#define PEBBLES_STYLED_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_STYLED_BUTTON, PebblesStyledButtonClass))

typedef struct _PebblesStyledButton PebblesStyledButton;
typedef struct _PebblesStyledButtonClass PebblesStyledButtonClass;

#define PEBBLES_TYPE_BIT_TOGGLE_GRID (pebbles_bit_toggle_grid_get_type ())
#define PEBBLES_BIT_TOGGLE_GRID(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_BIT_TOGGLE_GRID, PebblesBitToggleGrid))
#define PEBBLES_BIT_TOGGLE_GRID_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_BIT_TOGGLE_GRID, PebblesBitToggleGridClass))
#define PEBBLES_IS_BIT_TOGGLE_GRID(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_BIT_TOGGLE_GRID))
#define PEBBLES_IS_BIT_TOGGLE_GRID_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_BIT_TOGGLE_GRID))
#define PEBBLES_BIT_TOGGLE_GRID_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_BIT_TOGGLE_GRID, PebblesBitToggleGridClass))

typedef struct _PebblesBitToggleGrid PebblesBitToggleGrid;
typedef struct _PebblesBitToggleGridClass PebblesBitToggleGridClass;
typedef struct _PebblesMainWindowPrivate PebblesMainWindowPrivate;

#define PEBBLES_TYPE_HISTORY_MANAGER (pebbles_history_manager_get_type ())
#define PEBBLES_HISTORY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManager))
#define PEBBLES_HISTORY_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManagerClass))
#define PEBBLES_IS_HISTORY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_HISTORY_MANAGER))
#define PEBBLES_IS_HISTORY_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_HISTORY_MANAGER))
#define PEBBLES_HISTORY_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManagerClass))

typedef struct _PebblesHistoryManager PebblesHistoryManager;
typedef struct _PebblesHistoryManagerClass PebblesHistoryManagerClass;
typedef enum  {
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_SCIF,
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC,
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_PROG
} PebblesEvaluationResultResultSource;

#define PEBBLES_EVALUATION_RESULT_TYPE_RESULT_SOURCE (pebbles_evaluation_result_result_source_get_type ())

#define PEBBLES_TYPE_EVALUATION_RESULT (pebbles_evaluation_result_get_type ())
#define PEBBLES_EVALUATION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResult))
#define PEBBLES_EVALUATION_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResultClass))
#define PEBBLES_IS_EVALUATION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_EVALUATION_RESULT))
#define PEBBLES_IS_EVALUATION_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_EVALUATION_RESULT))
#define PEBBLES_EVALUATION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResultClass))

typedef struct _PebblesEvaluationResult PebblesEvaluationResult;
typedef struct _PebblesEvaluationResultClass PebblesEvaluationResultClass;
#define _pebbles_evaluation_result_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_evaluation_result_unref (var), NULL)))
typedef enum  {
	PEBBLES_NUMBER_SYSTEM_BINARY,
	PEBBLES_NUMBER_SYSTEM_OCTAL,
	PEBBLES_NUMBER_SYSTEM_DECIMAL,
	PEBBLES_NUMBER_SYSTEM_HEXADECIMAL
} PebblesNumberSystem;

#define PEBBLES_TYPE_NUMBER_SYSTEM (pebbles_number_system_get_type ())
#define _g_regex_unref0(var) ((var == NULL) ? NULL : (var = (g_regex_unref (var), NULL)))
typedef enum  {
	PEBBLES_GLOBAL_ANGLE_UNIT_DEG = 0,
	PEBBLES_GLOBAL_ANGLE_UNIT_RAD = 1,
	PEBBLES_GLOBAL_ANGLE_UNIT_GRAD = 2
} PebblesGlobalAngleUnit;

#define PEBBLES_TYPE_GLOBAL_ANGLE_UNIT (pebbles_global_angle_unit_get_type ())
typedef enum  {
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_NONE,
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_INT,
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_DER
} PebblesEvaluationResultCalculusResultMode;

#define PEBBLES_EVALUATION_RESULT_TYPE_CALCULUS_RESULT_MODE (pebbles_evaluation_result_calculus_result_mode_get_type ())

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN (pebbles_programmer_calculator_token_get_type ())
typedef struct _PebblesProgrammerCalculatorToken PebblesProgrammerCalculatorToken;
typedef enum  {
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS
} PebblesProgrammerCalculatorTokenType;

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN_TYPE (pebbles_programmer_calculator_token_type_get_type ())
enum  {
	PEBBLES_PROGRAMMER_DISPLAY_LAST_TOKEN_CHANGED_SIGNAL,
	PEBBLES_PROGRAMMER_DISPLAY_NUM_SIGNALS
};
static guint pebbles_programmer_display_signals[PEBBLES_PROGRAMMER_DISPLAY_NUM_SIGNALS] = {0};

struct _PebblesProgrammerDisplay {
	GtkGrid parent_instance;
	PebblesProgrammerDisplayPrivate * priv;
	GtkLabel* hex_label;
	GtkLabel* dec_label;
	GtkLabel* oct_label;
	GtkLabel* bin_label;
	GtkLabel* answer_label;
	GtkEntry* input_entry;
};

struct _PebblesProgrammerDisplayClass {
	GtkGridClass parent_class;
};

struct _PebblesProgrammerDisplayPrivate {
	PebblesSettings* settings;
	GtkGrid* lcd_status_bar;
	GtkLabel* qwd_label;
	GtkLabel* dwd_label;
	GtkLabel* wrd_label;
	GtkLabel* byt_label;
	GtkLabel* memory_label;
	GtkLabel* shift_label;
	GtkGrid* number_system_grid;
	GtkLabel* hex_number_label;
	GtkLabel* dec_number_label;
	GtkLabel* oct_number_label;
	GtkLabel* bin_number_label;
	PebblesGlobalWordLength word_mode;
	PebblesProgrammerCalculator* programmer_calculator_front_end;
	gboolean* answer_array;
	gint answer_array_length1;
	gint _answer_array_size_;
	PebblesProgrammerView* prog_view;
	gint64 _memory_reserve;
};

struct _PebblesProgrammerView {
	GtkOverlay parent_instance;
	PebblesProgrammerViewPrivate * priv;
	PebblesMainWindow* window;
	PebblesProgrammerDisplay* display_unit;
	PebblesStyledButton* ans_button;
	PebblesBitToggleGrid* bit_grid;
};

struct _PebblesProgrammerViewClass {
	GtkOverlayClass parent_class;
};

struct _PebblesMainWindow {
	GtkWindow parent_instance;
	PebblesMainWindowPrivate * priv;
	GtkStack* header_switcher;
	GtkSwitch* shift_switch;
	GtkSwitch* diff_mode_switch;
	GtkSwitch* add_mode_switch;
	GtkStack* date_mode_stack;
	GtkGrid* date_diff_grid;
	GtkGrid* date_add_grid;
	GtkSwitch* shift_switch_prog;
	GtkButton* update_button;
	PebblesHistoryManager* history_manager;
};

struct _PebblesMainWindowClass {
	GtkWindowClass parent_class;
};

typedef enum  {
	PEBBLES_CALC_ERROR_DIVIDE_BY_ZERO
} PebblesCalcError;
#define PEBBLES_CALC_ERROR pebbles_calc_error_quark ()
struct _PebblesProgrammerCalculatorToken {
	gchar* token;
	PebblesProgrammerCalculatorTokenType type;
	PebblesNumberSystem number_system;
};

static gint PebblesProgrammerDisplay_private_offset;
static gpointer pebbles_programmer_display_parent_class = NULL;

GType pebbles_programmer_display_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesProgrammerDisplay, g_object_unref)
GType pebbles_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesSettings, g_object_unref)
GType pebbles_global_word_length_get_type (void) G_GNUC_CONST;
gpointer pebbles_programmer_calculator_ref (gpointer instance);
void pebbles_programmer_calculator_unref (gpointer instance);
GParamSpec* pebbles_param_spec_programmer_calculator (const gchar* name,
                                                      const gchar* nick,
                                                      const gchar* blurb,
                                                      GType object_type,
                                                      GParamFlags flags);
void pebbles_value_set_programmer_calculator (GValue* value,
                                              gpointer v_object);
void pebbles_value_take_programmer_calculator (GValue* value,
                                               gpointer v_object);
gpointer pebbles_value_get_programmer_calculator (const GValue* value);
GType pebbles_programmer_calculator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesProgrammerCalculator, pebbles_programmer_calculator_unref)
GType pebbles_programmer_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesProgrammerView, g_object_unref)
PebblesProgrammerDisplay* pebbles_programmer_display_new (PebblesProgrammerView* view);
PebblesProgrammerDisplay* pebbles_programmer_display_construct (GType object_type,
                                                                PebblesProgrammerView* view);
PebblesSettings* pebbles_settings_get_default (void);
PebblesProgrammerCalculator* pebbles_programmer_calculator_new (void);
PebblesProgrammerCalculator* pebbles_programmer_calculator_construct (GType object_type);
static void pebbles_programmer_display_prog_display_make_ui (PebblesProgrammerDisplay* self);
static void pebbles_programmer_display_prog_display_make_events (PebblesProgrammerDisplay* self);
static gchar* pebbles_programmer_display_get_binary_length (PebblesProgrammerDisplay* self);
const gchar* pebbles_settings_get_prog_output_text (PebblesSettings* self);
void pebbles_programmer_display_get_answer_evaluate (PebblesProgrammerDisplay* self,
                                                     gboolean* dont_push_history);
GType pebbles_main_window_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesMainWindow, g_object_unref)
GType pebbles_styled_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesStyledButton, g_object_unref)
GType pebbles_bit_toggle_grid_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesBitToggleGrid, g_object_unref)
gpointer pebbles_history_manager_ref (gpointer instance);
void pebbles_history_manager_unref (gpointer instance);
GParamSpec* pebbles_param_spec_history_manager (const gchar* name,
                                                const gchar* nick,
                                                const gchar* blurb,
                                                GType object_type,
                                                GParamFlags flags);
void pebbles_value_set_history_manager (GValue* value,
                                        gpointer v_object);
void pebbles_value_take_history_manager (GValue* value,
                                         gpointer v_object);
gpointer pebbles_value_get_history_manager (const GValue* value);
GType pebbles_history_manager_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesHistoryManager, pebbles_history_manager_unref)
GType pebbles_evaluation_result_result_source_get_type (void) G_GNUC_CONST;
gboolean pebbles_history_manager_is_empty (PebblesHistoryManager* self,
                                           PebblesEvaluationResultResultSource* mode);
gpointer pebbles_evaluation_result_ref (gpointer instance);
void pebbles_evaluation_result_unref (gpointer instance);
GParamSpec* pebbles_param_spec_evaluation_result (const gchar* name,
                                                  const gchar* nick,
                                                  const gchar* blurb,
                                                  GType object_type,
                                                  GParamFlags flags);
void pebbles_value_set_evaluation_result (GValue* value,
                                          gpointer v_object);
void pebbles_value_take_evaluation_result (GValue* value,
                                           gpointer v_object);
gpointer pebbles_value_get_evaluation_result (const GValue* value);
GType pebbles_evaluation_result_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesEvaluationResult, pebbles_evaluation_result_unref)
PebblesEvaluationResult* pebbles_history_manager_get_last_evaluation_result (PebblesHistoryManager* self,
                                                                             PebblesEvaluationResultResultSource* mode);
gboolean* pebbles_evaluation_result_get_prog_output (PebblesEvaluationResult* self,
                                                     gint* result_length1);
static gboolean* _vala_array_dup41 (gboolean* self,
                             gint length);
GType pebbles_number_system_get_type (void) G_GNUC_CONST;
gchar* pebbles_programmer_calculator_bool_array_to_string (PebblesProgrammerCalculator* self,
                                                           gboolean* arr,
                                                           gint arr_length1,
                                                           PebblesGlobalWordLength wrd_length,
                                                           PebblesNumberSystem number_system);
PebblesGlobalWordLength pebbles_settings_get_global_word_length (PebblesSettings* self);
PebblesNumberSystem pebbles_settings_get_number_system (PebblesSettings* self);
void pebbles_programmer_display_set_number_system (PebblesProgrammerDisplay* self);
GQuark pebbles_calc_error_quark (void);
gchar* pebbles_programmer_calculator_evaluate_exp (PebblesProgrammerCalculator* self,
                                                   PebblesGlobalWordLength* wrd_length,
                                                   PebblesNumberSystem number_system,
                                                   gboolean** output_array,
                                                   gint* output_array_length1,
                                                   GError** error);
static void pebbles_programmer_display_shake (PebblesProgrammerDisplay* self);
static gboolean _bool_equal (const gboolean * s1,
                      const gboolean * s2);
GType pebbles_global_angle_unit_get_type (void) G_GNUC_CONST;
GType pebbles_evaluation_result_calculus_result_mode_get_type (void) G_GNUC_CONST;
GType pebbles_programmer_calculator_token_get_type (void) G_GNUC_CONST;
GType pebbles_programmer_calculator_token_type_get_type (void) G_GNUC_CONST;
PebblesProgrammerCalculatorToken* pebbles_programmer_calculator_token_dup (const PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_free (PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_copy (const PebblesProgrammerCalculatorToken* self,
                                               PebblesProgrammerCalculatorToken* dest);
void pebbles_programmer_calculator_token_destroy (PebblesProgrammerCalculatorToken* self);
void pebbles_history_manager_append_from_strings (PebblesHistoryManager* self,
                                                  PebblesEvaluationResultResultSource result_source,
                                                  const gchar* problem_expression,
                                                  const gchar* _result_,
                                                  PebblesGlobalAngleUnit* angle_mode,
                                                  PebblesEvaluationResultCalculusResultMode* calc_mode,
                                                  gdouble* int_limit_a,
                                                  gdouble* int_limit_b,
                                                  gdouble* derivative_point,
                                                  PebblesProgrammerCalculatorToken* token_list,
                                                  gint token_list_length1,
                                                  gboolean* output,
                                                  gint output_length1,
                                                  PebblesGlobalWordLength* output_word_length);
PebblesProgrammerCalculatorToken* pebbles_programmer_calculator_get_token_array (PebblesProgrammerCalculator* self,
                                                                                 gint* result_length1);
static void _vala_PebblesProgrammerCalculatorToken_array_free (PebblesProgrammerCalculatorToken * array,
                                                        gint array_length);
void pebbles_settings_set_prog_output_text (PebblesSettings* self,
                                            const gchar* value);
void pebbles_settings_set_prog_input_text (PebblesSettings* self,
                                           const gchar* value);
static gboolean __lambda55_ (PebblesProgrammerDisplay* self);
static gboolean ___lambda55__gsource_func (gpointer self);
void pebbles_programmer_display_memory_append (PebblesProgrammerDisplay* self,
                                               gboolean subtract);
gboolean* pebbles_programmer_calculator_string_to_bool_array (PebblesProgrammerCalculator* self,
                                                              const gchar* str,
                                                              PebblesNumberSystem number_system,
                                                              PebblesGlobalWordLength wrd_length,
                                                              gint* result_length1);
static gint64 pebbles_programmer_display_get_memory_reserve (PebblesProgrammerDisplay* self);
static void pebbles_programmer_display_set_memory_reserve (PebblesProgrammerDisplay* self,
                                                    gint64 value);
void pebbles_programmer_display_memory_recall (PebblesProgrammerDisplay* self);
void pebbles_programmer_display_insert_text (PebblesProgrammerDisplay* self,
                                             const gchar* text);
void pebbles_programmer_display_memory_clear (PebblesProgrammerDisplay* self);
void pebbles_programmer_display_set_last_token_from_bit_grid (PebblesProgrammerDisplay* self,
                                                              gboolean* arr,
                                                              gint arr_length1);
gchar* pebbles_programmer_calculator_set_last_token (PebblesProgrammerCalculator* self,
                                                     gboolean* arr,
                                                     gint arr_length1,
                                                     PebblesGlobalWordLength wrd_length,
                                                     PebblesNumberSystem number_system);
static void __lambda54_ (PebblesProgrammerDisplay* self);
void pebbles_programmer_calculator_populate_token_array (PebblesProgrammerCalculator* self,
                                                         const gchar* exp);
static void pebbles_programmer_display_display_all_number_systems (PebblesProgrammerDisplay* self);
static void ___lambda54__gtk_editable_changed (GtkEditable* _sender,
                                        gpointer self);
void pebbles_programmer_calculator_get_last_token (PebblesProgrammerCalculator* self,
                                                   PebblesProgrammerCalculatorToken* result);
gchar* pebbles_programmer_calculator_convert_decimal_to_octal (PebblesProgrammerCalculator* self,
                                                               const gchar* dec_value,
                                                               PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_decimal_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                                     const gchar* number,
                                                                     PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_decimal_to_binary (PebblesProgrammerCalculator* self,
                                                                const gchar* number,
                                                                PebblesGlobalWordLength* wrd_length,
                                                                gboolean* format);
gchar* pebbles_programmer_calculator_convert_binary_to_decimal (PebblesProgrammerCalculator* self,
                                                                const gchar* number,
                                                                PebblesGlobalWordLength* wrd_length,
                                                                gboolean* negative);
gchar* pebbles_programmer_calculator_represent_binary_by_word_length (PebblesProgrammerCalculator* self,
                                                                      const gchar* binary_value,
                                                                      PebblesGlobalWordLength wrd_length,
                                                                      gboolean* format);
gchar* pebbles_programmer_calculator_convert_binary_to_octal (PebblesProgrammerCalculator* self,
                                                              const gchar* bin_value,
                                                              PebblesGlobalWordLength* wrd_length,
                                                              gboolean* negative);
gchar* pebbles_programmer_calculator_convert_binary_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                                    const gchar* bin_value,
                                                                    PebblesGlobalWordLength* wrd_length,
                                                                    gboolean* negative);
gchar* pebbles_programmer_calculator_convert_hexadecimal_to_octal (PebblesProgrammerCalculator* self,
                                                                   const gchar* hex_value,
                                                                   PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_hexadecimal_to_binary (PebblesProgrammerCalculator* self,
                                                                    const gchar* hex_value,
                                                                    PebblesGlobalWordLength* wrd_length,
                                                                    gboolean* format);
gchar* pebbles_programmer_calculator_convert_hexadecimal_to_decimal (PebblesProgrammerCalculator* self,
                                                                     const gchar* number,
                                                                     PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_octal_to_binary (PebblesProgrammerCalculator* self,
                                                              const gchar* oct_value,
                                                              PebblesGlobalWordLength* wrd_length,
                                                              gboolean* format);
gchar* pebbles_programmer_calculator_convert_octal_to_decimal (PebblesProgrammerCalculator* self,
                                                               const gchar* oct_value,
                                                               PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_octal_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                                   const gchar* oct_value,
                                                                   PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_set_number_system (PebblesProgrammerCalculator* self,
                                                        const gchar* exp,
                                                        PebblesGlobalWordLength* wrd_length,
                                                        gboolean* force_decimal);
void pebbles_programmer_display_set_shift_enable (PebblesProgrammerDisplay* self,
                                                  gboolean s_on);
void pebbles_programmer_display_set_word_length_status (PebblesProgrammerDisplay* self,
                                                        gint state);
void pebbles_programmer_display_display_off (PebblesProgrammerDisplay* self);
void pebbles_programmer_display_display_on (PebblesProgrammerDisplay* self);
void pebbles_programmer_display_send_backspace (PebblesProgrammerDisplay* self);
void pebbles_programmer_display_set_memory_status (PebblesProgrammerDisplay* self,
                                                   gboolean state);
static void g_cclosure_user_marshal_VOID__POINTER_INT (GClosure * closure,
                                                GValue * return_value,
                                                guint n_param_values,
                                                const GValue * param_values,
                                                gpointer invocation_hint,
                                                gpointer marshal_data);
static void pebbles_programmer_display_finalize (GObject * obj);
static GType pebbles_programmer_display_get_type_once (void);
static void _vala_pebbles_programmer_display_get_property (GObject * object,
                                                    guint property_id,
                                                    GValue * value,
                                                    GParamSpec * pspec);
static void _vala_pebbles_programmer_display_set_property (GObject * object,
                                                    guint property_id,
                                                    const GValue * value,
                                                    GParamSpec * pspec);

static inline gpointer
pebbles_programmer_display_get_instance_private (PebblesProgrammerDisplay* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesProgrammerDisplay_private_offset);
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 81 "../src/Views/Displays/ProgrammerDisplay.vala"
	return self ? g_object_ref (self) : NULL;
#line 518 "ProgrammerDisplay.c"
}

PebblesProgrammerDisplay*
pebbles_programmer_display_construct (GType object_type,
                                      PebblesProgrammerView* view)
{
	PebblesProgrammerDisplay * self = NULL;
	PebblesSettings* _tmp0_;
	PebblesProgrammerView* _tmp1_;
	PebblesProgrammerCalculator* _tmp2_;
#line 79 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_val_if_fail (view != NULL, NULL);
#line 79 "../src/Views/Displays/ProgrammerDisplay.vala"
	self = (PebblesProgrammerDisplay*) g_object_new (object_type, NULL);
#line 80 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = pebbles_settings_get_default ();
#line 80 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->settings);
#line 80 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->settings = _tmp0_;
#line 81 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = _g_object_ref0 (view);
#line 81 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->prog_view);
#line 81 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->prog_view = _tmp1_;
#line 82 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = pebbles_programmer_calculator_new ();
#line 82 "../src/Views/Displays/ProgrammerDisplay.vala"
	_pebbles_programmer_calculator_unref0 (self->priv->programmer_calculator_front_end);
#line 82 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->programmer_calculator_front_end = _tmp2_;
#line 84 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_prog_display_make_ui (self);
#line 85 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_prog_display_make_events (self);
#line 79 "../src/Views/Displays/ProgrammerDisplay.vala"
	return self;
#line 557 "ProgrammerDisplay.c"
}

PebblesProgrammerDisplay*
pebbles_programmer_display_new (PebblesProgrammerView* view)
{
#line 79 "../src/Views/Displays/ProgrammerDisplay.vala"
	return pebbles_programmer_display_construct (PEBBLES_TYPE_PROGRAMMER_DISPLAY, view);
#line 565 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_prog_display_make_ui (PebblesProgrammerDisplay* self)
{
	GtkStyleContext* _tmp0_;
	GtkGrid* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkLabel* _tmp5_;
	GtkLabel* _tmp6_;
	GtkStyleContext* _tmp7_;
	GtkLabel* _tmp8_;
	GtkLabel* _tmp9_;
	GtkStyleContext* _tmp10_;
	GtkLabel* _tmp11_;
	GtkLabel* _tmp12_;
	GtkStyleContext* _tmp13_;
	GtkLabel* _tmp14_;
	GtkLabel* _tmp15_;
	GtkStyleContext* _tmp16_;
	GtkLabel* _tmp17_;
	GtkLabel* _tmp18_;
	GtkLabel* _tmp19_;
	GtkStyleContext* _tmp20_;
	GtkLabel* _tmp21_;
	GtkGrid* word_mode_display = NULL;
	GtkGrid* _tmp22_;
	GtkLabel* _tmp23_;
	GtkLabel* _tmp24_;
	GtkLabel* _tmp25_;
	GtkLabel* _tmp26_;
	GtkGrid* _tmp27_;
	GtkGrid* _tmp28_;
	GtkLabel* _tmp29_;
	GtkGrid* _tmp30_;
	GtkLabel* _tmp31_;
	GtkGrid* _tmp32_;
	GtkGrid* _tmp33_;
	GtkGrid* _tmp34_;
	GtkGrid* _tmp35_;
	GtkLabel* _tmp36_;
	GtkLabel* _tmp37_;
	GtkLabel* _tmp38_;
	GtkLabel* _tmp39_;
	GtkLabel* _tmp40_;
	GtkStyleContext* _tmp41_;
	GtkLabel* _tmp42_;
	GtkStyleContext* _tmp43_;
	GtkLabel* _tmp44_;
	GtkStyleContext* _tmp45_;
	GtkLabel* _tmp46_;
	GtkStyleContext* _tmp47_;
	GtkLabel* _tmp48_;
	GtkLabel* _tmp49_;
	GtkLabel* _tmp50_;
	GtkLabel* _tmp51_;
	GtkLabel* _tmp52_;
	gchar* _tmp53_;
	gchar* _tmp54_;
	GtkLabel* _tmp55_;
	GtkLabel* _tmp56_;
	GtkLabel* _tmp57_;
	GtkLabel* _tmp58_;
	GtkLabel* _tmp59_;
	GtkLabel* _tmp60_;
	GtkLabel* _tmp61_;
	GtkLabel* _tmp62_;
	GtkLabel* _tmp63_;
	GtkLabel* _tmp64_;
	GtkLabel* _tmp65_;
	GtkLabel* _tmp66_;
	GtkLabel* _tmp67_;
	GtkLabel* _tmp68_;
	GtkStyleContext* _tmp69_;
	GtkLabel* _tmp70_;
	GtkStyleContext* _tmp71_;
	GtkLabel* _tmp72_;
	GtkStyleContext* _tmp73_;
	GtkLabel* _tmp74_;
	GtkStyleContext* _tmp75_;
	GtkGrid* _tmp76_;
	GtkLabel* _tmp77_;
	GtkGrid* _tmp78_;
	GtkLabel* _tmp79_;
	GtkGrid* _tmp80_;
	GtkLabel* _tmp81_;
	GtkGrid* _tmp82_;
	GtkLabel* _tmp83_;
	GtkGrid* _tmp84_;
	GtkLabel* _tmp85_;
	GtkGrid* _tmp86_;
	GtkLabel* _tmp87_;
	GtkGrid* _tmp88_;
	GtkLabel* _tmp89_;
	GtkGrid* _tmp90_;
	GtkLabel* _tmp91_;
	GtkGrid* _tmp92_;
	GtkGrid* _tmp93_;
	GtkGrid* _tmp94_;
	PebblesSettings* _tmp95_;
	const gchar* _tmp96_;
	const gchar* _tmp97_;
	GtkLabel* _tmp98_;
	GtkLabel* _tmp99_;
	GtkLabel* _tmp100_;
	GtkStyleContext* _tmp101_;
	GtkScrolledWindow* scrollable = NULL;
	GtkScrolledWindow* _tmp102_;
	GtkLabel* _tmp103_;
	GtkStyleContext* _tmp104_;
	GtkEntry* _tmp105_;
	GtkEntry* _tmp106_;
	GtkEntry* _tmp107_;
	GtkEntry* _tmp108_;
	GtkStyleContext* _tmp109_;
	GtkEntry* _tmp110_;
	GtkEntry* _tmp111_;
	GtkEntry* _tmp112_;
	GtkSeparator* lcd_separator_h = NULL;
	GtkSeparator* _tmp113_;
	GtkSeparator* lcd_separator_v = NULL;
	GtkSeparator* _tmp114_;
	GtkGrid* _tmp115_;
	GtkGrid* _tmp116_;
	GtkEntry* _tmp117_;
#line 88 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 90 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 90 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp0_, "Pebbles_Display_Unit_Bg");
#line 93 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = (GtkGrid*) gtk_grid_new ();
#line 93 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp1_);
#line 93 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->lcd_status_bar);
#line 93 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->lcd_status_bar = _tmp1_;
#line 94 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new ("QWD");
#line 94 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp2_);
#line 94 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->qwd_label);
#line 94 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->qwd_label = _tmp2_;
#line 95 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = self->priv->qwd_label;
#line 95 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 95 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp4_, "pebbles_h4");
#line 96 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp5_ = (GtkLabel*) gtk_label_new ("DWD");
#line 96 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp5_);
#line 96 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->dwd_label);
#line 96 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->dwd_label = _tmp5_;
#line 97 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp6_ = self->priv->dwd_label;
#line 97 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) _tmp6_);
#line 97 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp7_, "pebbles_h4");
#line 98 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp8_ = (GtkLabel*) gtk_label_new ("WRD");
#line 98 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp8_);
#line 98 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->wrd_label);
#line 98 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->wrd_label = _tmp8_;
#line 99 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp9_ = self->priv->wrd_label;
#line 99 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp10_ = gtk_widget_get_style_context ((GtkWidget*) _tmp9_);
#line 99 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp10_, "pebbles_h4");
#line 100 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp11_ = (GtkLabel*) gtk_label_new ("BYT");
#line 100 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp11_);
#line 100 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->byt_label);
#line 100 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->byt_label = _tmp11_;
#line 101 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp12_ = self->priv->byt_label;
#line 101 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp13_ = gtk_widget_get_style_context ((GtkWidget*) _tmp12_);
#line 101 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp13_, "pebbles_h4");
#line 102 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp14_ = (GtkLabel*) gtk_label_new ("M");
#line 102 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp14_);
#line 102 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->memory_label);
#line 102 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->memory_label = _tmp14_;
#line 103 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp15_ = self->priv->memory_label;
#line 103 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) _tmp15_);
#line 103 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp16_, "pebbles_h4");
#line 104 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp17_ = self->priv->memory_label;
#line 104 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp17_, 0.2);
#line 105 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp18_ = (GtkLabel*) gtk_label_new ("SHIFT");
#line 105 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp18_);
#line 105 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->shift_label);
#line 105 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->shift_label = _tmp18_;
#line 106 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp19_ = self->priv->shift_label;
#line 106 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp20_ = gtk_widget_get_style_context ((GtkWidget*) _tmp19_);
#line 106 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp20_, "pebbles_h4");
#line 107 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp21_ = self->priv->shift_label;
#line 107 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp21_, 0.2);
#line 109 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp22_ = (GtkGrid*) gtk_grid_new ();
#line 109 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp22_);
#line 109 "../src/Views/Displays/ProgrammerDisplay.vala"
	word_mode_display = _tmp22_;
#line 110 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp23_ = self->priv->qwd_label;
#line 110 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (word_mode_display, (GtkWidget*) _tmp23_, 0, 0, 1, 1);
#line 111 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp24_ = self->priv->dwd_label;
#line 111 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (word_mode_display, (GtkWidget*) _tmp24_, 1, 0, 1, 1);
#line 112 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp25_ = self->priv->wrd_label;
#line 112 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (word_mode_display, (GtkWidget*) _tmp25_, 2, 0, 1, 1);
#line 113 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp26_ = self->priv->byt_label;
#line 113 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (word_mode_display, (GtkWidget*) _tmp26_, 3, 0, 1, 1);
#line 114 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_set_column_spacing (word_mode_display, 10);
#line 116 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp27_ = self->priv->lcd_status_bar;
#line 116 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp27_, (GtkWidget*) word_mode_display, 0, 0, 1, 1);
#line 117 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp28_ = self->priv->lcd_status_bar;
#line 117 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp29_ = self->priv->memory_label;
#line 117 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp28_, (GtkWidget*) _tmp29_, 1, 0, 1, 1);
#line 118 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp30_ = self->priv->lcd_status_bar;
#line 118 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp31_ = self->priv->shift_label;
#line 118 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp30_, (GtkWidget*) _tmp31_, 2, 0, 1, 1);
#line 119 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp32_ = self->priv->lcd_status_bar;
#line 119 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_set_column_spacing (_tmp32_, 187);
#line 120 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp33_ = self->priv->lcd_status_bar;
#line 120 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_set ((GtkWidget*) _tmp33_, "width-request", 530, NULL);
#line 121 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp34_ = self->priv->lcd_status_bar;
#line 121 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp34_, GTK_ALIGN_END);
#line 124 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp35_ = (GtkGrid*) gtk_grid_new ();
#line 124 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp35_);
#line 124 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->number_system_grid);
#line 124 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->number_system_grid = _tmp35_;
#line 125 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp36_ = (GtkLabel*) gtk_label_new ("HEX");
#line 125 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp36_);
#line 125 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->hex_label);
#line 125 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->hex_label = _tmp36_;
#line 126 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp37_ = (GtkLabel*) gtk_label_new ("DEC");
#line 126 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp37_);
#line 126 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->dec_label);
#line 126 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->dec_label = _tmp37_;
#line 127 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp38_ = (GtkLabel*) gtk_label_new ("OCT");
#line 127 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp38_);
#line 127 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->oct_label);
#line 127 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->oct_label = _tmp38_;
#line 128 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp39_ = (GtkLabel*) gtk_label_new ("BIN");
#line 128 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp39_);
#line 128 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->bin_label);
#line 128 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->bin_label = _tmp39_;
#line 130 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp40_ = self->hex_label;
#line 130 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp41_ = gtk_widget_get_style_context ((GtkWidget*) _tmp40_);
#line 130 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp41_, "PebblesLCDSwitch");
#line 131 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp42_ = self->dec_label;
#line 131 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp43_ = gtk_widget_get_style_context ((GtkWidget*) _tmp42_);
#line 131 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp43_, "PebblesLCDSwitch");
#line 132 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp44_ = self->oct_label;
#line 132 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp45_ = gtk_widget_get_style_context ((GtkWidget*) _tmp44_);
#line 132 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp45_, "PebblesLCDSwitch");
#line 133 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp46_ = self->bin_label;
#line 133 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp47_ = gtk_widget_get_style_context ((GtkWidget*) _tmp46_);
#line 133 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp47_, "PebblesLCDSwitch");
#line 134 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp48_ = self->bin_label;
#line 134 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_yalign (_tmp48_, (gfloat) 0);
#line 135 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp49_ = self->bin_label;
#line 135 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp49_, 12);
#line 137 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp50_ = (GtkLabel*) gtk_label_new ("0");
#line 137 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp50_);
#line 137 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->hex_number_label);
#line 137 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->hex_number_label = _tmp50_;
#line 138 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp51_ = (GtkLabel*) gtk_label_new ("0");
#line 138 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp51_);
#line 138 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->dec_number_label);
#line 138 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->dec_number_label = _tmp51_;
#line 139 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp52_ = (GtkLabel*) gtk_label_new ("0");
#line 139 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp52_);
#line 139 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->oct_number_label);
#line 139 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->oct_number_label = _tmp52_;
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp53_ = pebbles_programmer_display_get_binary_length (self);
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp54_ = _tmp53_;
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp55_ = (GtkLabel*) gtk_label_new (_tmp54_);
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp55_);
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->bin_number_label);
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->bin_number_label = _tmp55_;
#line 140 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp54_);
#line 141 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp56_ = self->priv->bin_number_label;
#line 141 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_line_wrap_mode (_tmp56_, PANGO_WRAP_CHAR);
#line 142 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp57_ = self->priv->bin_number_label;
#line 142 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_line_wrap (_tmp57_, TRUE);
#line 143 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp58_ = self->priv->bin_number_label;
#line 143 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_lines (_tmp58_, 2);
#line 144 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp59_ = self->priv->bin_number_label;
#line 144 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_width_chars (_tmp59_, 34);
#line 145 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp60_ = self->priv->bin_number_label;
#line 145 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_max_width_chars (_tmp60_, 34);
#line 146 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp61_ = self->priv->bin_number_label;
#line 146 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_single_line_mode (_tmp61_, FALSE);
#line 147 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp62_ = self->priv->bin_number_label;
#line 147 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_xalign (_tmp62_, (gfloat) 0);
#line 148 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp63_ = self->priv->bin_number_label;
#line 148 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_yalign (_tmp63_, (gfloat) 0);
#line 150 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp64_ = self->priv->hex_number_label;
#line 150 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp64_, GTK_ALIGN_START);
#line 151 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp65_ = self->priv->dec_number_label;
#line 151 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp65_, GTK_ALIGN_START);
#line 152 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp66_ = self->priv->oct_number_label;
#line 152 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp66_, GTK_ALIGN_START);
#line 153 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp67_ = self->priv->bin_number_label;
#line 153 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp67_, GTK_ALIGN_START);
#line 155 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp68_ = self->priv->hex_number_label;
#line 155 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp69_ = gtk_widget_get_style_context ((GtkWidget*) _tmp68_);
#line 155 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp69_, "PebblesLCDLabelSmall");
#line 156 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp70_ = self->priv->dec_number_label;
#line 156 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp71_ = gtk_widget_get_style_context ((GtkWidget*) _tmp70_);
#line 156 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp71_, "PebblesLCDLabelSmall");
#line 157 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp72_ = self->priv->oct_number_label;
#line 157 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp73_ = gtk_widget_get_style_context ((GtkWidget*) _tmp72_);
#line 157 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp73_, "PebblesLCDLabelSmall");
#line 158 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp74_ = self->priv->bin_number_label;
#line 158 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp75_ = gtk_widget_get_style_context ((GtkWidget*) _tmp74_);
#line 158 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp75_, "PebblesLCDLabelSmall");
#line 161 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp76_ = self->priv->number_system_grid;
#line 161 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp77_ = self->hex_label;
#line 161 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp76_, (GtkWidget*) _tmp77_, 0, 0, 1, 1);
#line 162 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp78_ = self->priv->number_system_grid;
#line 162 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp79_ = self->priv->hex_number_label;
#line 162 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp78_, (GtkWidget*) _tmp79_, 1, 0, 1, 1);
#line 163 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp80_ = self->priv->number_system_grid;
#line 163 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp81_ = self->dec_label;
#line 163 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp80_, (GtkWidget*) _tmp81_, 0, 1, 1, 1);
#line 164 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp82_ = self->priv->number_system_grid;
#line 164 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp83_ = self->priv->dec_number_label;
#line 164 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp82_, (GtkWidget*) _tmp83_, 1, 1, 1, 1);
#line 165 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp84_ = self->priv->number_system_grid;
#line 165 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp85_ = self->oct_label;
#line 165 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp84_, (GtkWidget*) _tmp85_, 0, 2, 1, 1);
#line 166 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp86_ = self->priv->number_system_grid;
#line 166 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp87_ = self->priv->oct_number_label;
#line 166 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp86_, (GtkWidget*) _tmp87_, 1, 2, 1, 1);
#line 167 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp88_ = self->priv->number_system_grid;
#line 167 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp89_ = self->bin_label;
#line 167 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp88_, (GtkWidget*) _tmp89_, 0, 3, 1, 1);
#line 168 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp90_ = self->priv->number_system_grid;
#line 168 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp91_ = self->priv->bin_number_label;
#line 168 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach (_tmp90_, (GtkWidget*) _tmp91_, 1, 3, 1, 1);
#line 169 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp92_ = self->priv->number_system_grid;
#line 169 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_set_column_spacing (_tmp92_, 8);
#line 170 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp93_ = self->priv->number_system_grid;
#line 170 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_set_row_spacing (_tmp93_, 4);
#line 171 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp94_ = self->priv->number_system_grid;
#line 171 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp94_, 8);
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp95_ = self->priv->settings;
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp96_ = pebbles_settings_get_prog_output_text (_tmp95_);
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp97_ = _tmp96_;
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp98_ = (GtkLabel*) gtk_label_new (_tmp97_);
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp98_);
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->answer_label);
#line 175 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->answer_label = _tmp98_;
#line 176 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp99_ = self->answer_label;
#line 176 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp99_, GTK_ALIGN_END);
#line 177 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp100_ = self->answer_label;
#line 177 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp101_ = gtk_widget_get_style_context ((GtkWidget*) _tmp100_);
#line 177 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp101_, "pebbles_h1");
#line 178 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp102_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 178 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp102_);
#line 178 "../src/Views/Displays/ProgrammerDisplay.vala"
	scrollable = _tmp102_;
#line 179 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp103_ = self->answer_label;
#line 179 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_container_add ((GtkContainer*) scrollable, (GtkWidget*) _tmp103_);
#line 180 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_scrolled_window_set_propagate_natural_height (scrollable, TRUE);
#line 181 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_scrolled_window_set_shadow_type (scrollable, GTK_SHADOW_NONE);
#line 182 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp104_ = gtk_widget_get_style_context ((GtkWidget*) scrollable);
#line 182 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp104_, "pebbles_h1");
#line 185 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp105_ = (GtkEntry*) gtk_entry_new ();
#line 185 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp105_);
#line 185 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->input_entry);
#line 185 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->input_entry = _tmp105_;
#line 186 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp106_ = self->input_entry;
#line 186 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_entry_set_has_frame (_tmp106_, FALSE);
#line 187 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp107_ = self->input_entry;
#line 187 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_entry_set_text (_tmp107_, "0");
#line 188 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp108_ = self->input_entry;
#line 188 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp109_ = gtk_widget_get_style_context ((GtkWidget*) _tmp108_);
#line 188 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp109_, "pebbles_h2");
#line 189 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp110_ = self->input_entry;
#line 189 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp110_, GTK_ALIGN_START);
#line 190 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp111_ = self->input_entry;
#line 190 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_set ((GtkWidget*) _tmp111_, "width-request", 265, NULL);
#line 191 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp112_ = self->input_entry;
#line 191 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_entry_set_max_width_chars (_tmp112_, 20);
#line 195 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp113_ = (GtkSeparator*) gtk_separator_new (GTK_ORIENTATION_HORIZONTAL);
#line 195 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp113_);
#line 195 "../src/Views/Displays/ProgrammerDisplay.vala"
	lcd_separator_h = _tmp113_;
#line 196 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) lcd_separator_h, 0.6);
#line 197 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp114_ = (GtkSeparator*) gtk_separator_new (GTK_ORIENTATION_VERTICAL);
#line 197 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_ref_sink (_tmp114_);
#line 197 "../src/Views/Displays/ProgrammerDisplay.vala"
	lcd_separator_v = _tmp114_;
#line 198 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) lcd_separator_v, 0.6);
#line 199 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) lcd_separator_v, 8);
#line 200 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_margin_end ((GtkWidget*) lcd_separator_v, 7);
#line 201 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) lcd_separator_v, GTK_ALIGN_CENTER);
#line 204 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp115_ = self->priv->lcd_status_bar;
#line 204 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp115_, 0, 0, 3, 1);
#line 205 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp116_ = self->priv->number_system_grid;
#line 205 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp116_, 0, 1, 1, 3);
#line 206 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) lcd_separator_v, 1, 1, 1, 3);
#line 207 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) scrollable, 2, 1, 1, 1);
#line 208 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) lcd_separator_h, 2, 2, 1, 1);
#line 209 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp117_ = self->input_entry;
#line 209 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp117_, 2, 3, 1, 1);
#line 211 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_object_set ((GtkWidget*) self, "width-request", 530, NULL);
#line 88 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (lcd_separator_v);
#line 88 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (lcd_separator_h);
#line 88 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (scrollable);
#line 88 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (word_mode_display);
#line 1219 "ProgrammerDisplay.c"
}

static gboolean*
_vala_array_dup41 (gboolean* self,
                   gint length)
{
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (length > 0) {
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		return g_memdup (self, length * sizeof (gboolean));
#line 1230 "ProgrammerDisplay.c"
	}
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
	return NULL;
#line 1234 "ProgrammerDisplay.c"
}

static gchar*
string_replace (const gchar* self,
                const gchar* old,
                const gchar* replacement)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (old != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (replacement != NULL, NULL);
#line 1535 "glib-2.0.vapi"
	if ((*((gchar*) self)) == '\0') {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = TRUE;
#line 1256 "ProgrammerDisplay.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = (*((gchar*) old)) == '\0';
#line 1260 "ProgrammerDisplay.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp1_) {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = TRUE;
#line 1266 "ProgrammerDisplay.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = g_strcmp0 (old, replacement) == 0;
#line 1270 "ProgrammerDisplay.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp0_) {
#line 1274 "ProgrammerDisplay.c"
		gchar* _tmp2_;
#line 1536 "glib-2.0.vapi"
		_tmp2_ = g_strdup (self);
#line 1536 "glib-2.0.vapi"
		result = _tmp2_;
#line 1536 "glib-2.0.vapi"
		return result;
#line 1282 "ProgrammerDisplay.c"
	}
	{
		GRegex* regex = NULL;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GRegex* _tmp5_;
		GRegex* _tmp6_;
		gchar* _tmp7_ = NULL;
		GRegex* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 1539 "glib-2.0.vapi"
		_tmp3_ = g_regex_escape_string (old, -1);
#line 1539 "glib-2.0.vapi"
		_tmp4_ = _tmp3_;
#line 1539 "glib-2.0.vapi"
		_tmp5_ = g_regex_new (_tmp4_, 0, 0, &_inner_error0_);
#line 1539 "glib-2.0.vapi"
		_tmp6_ = _tmp5_;
#line 1539 "glib-2.0.vapi"
		_g_free0 (_tmp4_);
#line 1539 "glib-2.0.vapi"
		regex = _tmp6_;
#line 1539 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1539 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1539 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1539 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 1314 "ProgrammerDisplay.c"
				goto __catch0_g_regex_error;
			}
#line 1539 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1539 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1539 "glib-2.0.vapi"
			return NULL;
#line 1323 "ProgrammerDisplay.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp8_ = regex;
#line 1540 "glib-2.0.vapi"
		_tmp9_ = g_regex_replace_literal (_tmp8_, self, (gssize) -1, 0, replacement, 0, &_inner_error0_);
#line 1540 "glib-2.0.vapi"
		_tmp7_ = _tmp9_;
#line 1540 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1540 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 1339 "ProgrammerDisplay.c"
				goto __catch0_g_regex_error;
			}
#line 1540 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1540 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1540 "glib-2.0.vapi"
			return NULL;
#line 1348 "ProgrammerDisplay.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp10_ = _tmp7_;
#line 1540 "glib-2.0.vapi"
		_tmp7_ = NULL;
#line 1540 "glib-2.0.vapi"
		result = _tmp10_;
#line 1540 "glib-2.0.vapi"
		_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
		_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
		return result;
#line 1362 "ProgrammerDisplay.c"
	}
	goto __finally0;
	__catch0_g_regex_error:
	{
#line 1538 "glib-2.0.vapi"
		g_clear_error (&_inner_error0_);
#line 1542 "glib-2.0.vapi"
		g_assert_not_reached ();
#line 1371 "ProgrammerDisplay.c"
	}
	__finally0:
#line 1538 "glib-2.0.vapi"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1538 "glib-2.0.vapi"
	g_clear_error (&_inner_error0_);
#line 1538 "glib-2.0.vapi"
	return NULL;
#line 1380 "ProgrammerDisplay.c"
}

static gboolean
_bool_equal (const gboolean * s1,
             const gboolean * s2)
{
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (s1 == s2) {
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
		return TRUE;
#line 1391 "ProgrammerDisplay.c"
	}
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (s1 == NULL) {
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
		return FALSE;
#line 1397 "ProgrammerDisplay.c"
	}
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (s2 == NULL) {
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
		return FALSE;
#line 1403 "ProgrammerDisplay.c"
	}
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
	return (*s1) == (*s2);
#line 1407 "ProgrammerDisplay.c"
}

static void
_vala_PebblesProgrammerCalculatorToken_array_free (PebblesProgrammerCalculatorToken * array,
                                                   gint array_length)
{
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (array != NULL) {
#line 1416 "ProgrammerDisplay.c"
		gint i;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
		for (i = 0; i < array_length; i = i + 1) {
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			pebbles_programmer_calculator_token_destroy (&array[i]);
#line 1422 "ProgrammerDisplay.c"
		}
	}
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_free (array);
#line 1427 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_get_answer_evaluate (PebblesProgrammerDisplay* self,
                                                gboolean* dont_push_history)
{
	PebblesProgrammerView* _tmp0_;
	PebblesMainWindow* _tmp1_;
	PebblesHistoryManager* _tmp2_;
	PebblesEvaluationResultResultSource _tmp3_;
	gchar* _result_ = NULL;
	gchar* _tmp30_;
	GtkLabel* _tmp44_;
	const gchar* _tmp45_;
	const gchar* _tmp46_;
	GError* _inner_error0_ = NULL;
#line 214 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->priv->prog_view;
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = _tmp0_->window;
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = _tmp1_->history_manager;
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_PROG;
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (!pebbles_history_manager_is_empty (_tmp2_, &_tmp3_)) {
#line 1456 "ProgrammerDisplay.c"
		gboolean* last_output_array = NULL;
		PebblesProgrammerView* _tmp4_;
		PebblesMainWindow* _tmp5_;
		PebblesHistoryManager* _tmp6_;
		PebblesEvaluationResultResultSource _tmp7_;
		PebblesEvaluationResult* _tmp8_;
		PebblesEvaluationResult* _tmp9_;
		gboolean* _tmp10_;
		gint _tmp10__length1;
		gint _tmp11_ = 0;
		gboolean* _tmp12_;
		gint _tmp12__length1;
		gboolean* _tmp13_;
		gint _tmp13__length1;
		gboolean* _tmp14_;
		gint _tmp14__length1;
		gint last_output_array_length1;
		gint _last_output_array_size_;
		gchar* last_answer = NULL;
		PebblesProgrammerCalculator* _tmp15_;
		gboolean* _tmp16_;
		gint _tmp16__length1;
		PebblesSettings* _tmp17_;
		PebblesGlobalWordLength _tmp18_;
		PebblesGlobalWordLength _tmp19_;
		PebblesSettings* _tmp20_;
		PebblesNumberSystem _tmp21_;
		PebblesNumberSystem _tmp22_;
		gchar* _tmp23_;
		GtkEntry* _tmp24_;
		GtkEntry* _tmp25_;
		const gchar* _tmp26_;
		const gchar* _tmp27_;
		gchar* _tmp28_;
		gchar* _tmp29_;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp4_ = self->priv->prog_view;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp5_ = _tmp4_->window;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp6_ = _tmp5_->history_manager;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp7_ = PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_PROG;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp8_ = pebbles_history_manager_get_last_evaluation_result (_tmp6_, &_tmp7_);
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp9_ = _tmp8_;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp10_ = pebbles_evaluation_result_get_prog_output (_tmp9_, &_tmp11_);
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp10__length1 = _tmp11_;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp12_ = _tmp10_;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp12__length1 = _tmp10__length1;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp13_ = (_tmp12_ != NULL) ? _vala_array_dup41 (_tmp12_, _tmp12__length1) : ((gpointer) _tmp12_);
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp13__length1 = _tmp12__length1;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp14_ = _tmp13_;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp14__length1 = _tmp13__length1;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_pebbles_evaluation_result_unref0 (_tmp9_);
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		last_output_array = _tmp14_;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		last_output_array_length1 = _tmp14__length1;
#line 216 "../src/Views/Displays/ProgrammerDisplay.vala"
		_last_output_array_size_ = last_output_array_length1;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp15_ = self->priv->programmer_calculator_front_end;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp16_ = last_output_array;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp16__length1 = last_output_array_length1;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp17_ = self->priv->settings;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp18_ = pebbles_settings_get_global_word_length (_tmp17_);
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp19_ = _tmp18_;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp20_ = self->priv->settings;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp21_ = pebbles_settings_get_number_system (_tmp20_);
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp22_ = _tmp21_;
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp23_ = pebbles_programmer_calculator_bool_array_to_string (_tmp15_, _tmp16_, (gint) _tmp16__length1, _tmp19_, _tmp22_);
#line 217 "../src/Views/Displays/ProgrammerDisplay.vala"
		last_answer = _tmp23_;
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp24_ = self->input_entry;
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp25_ = self->input_entry;
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp26_ = gtk_entry_get_text (_tmp25_);
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp27_ = last_answer;
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp28_ = string_replace (_tmp26_, "ans", _tmp27_);
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp29_ = _tmp28_;
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_entry_set_text (_tmp24_, _tmp29_);
#line 218 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (_tmp29_);
#line 219 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_set_number_system (self);
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (last_answer);
#line 215 "../src/Views/Displays/ProgrammerDisplay.vala"
		last_output_array = (g_free (last_output_array), NULL);
#line 1572 "ProgrammerDisplay.c"
	}
#line 221 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp30_ = g_strdup ("");
#line 221 "../src/Views/Displays/ProgrammerDisplay.vala"
	_result_ = _tmp30_;
#line 1578 "ProgrammerDisplay.c"
	{
		gchar* _tmp31_ = NULL;
		PebblesProgrammerCalculator* _tmp32_;
		PebblesSettings* _tmp33_;
		PebblesGlobalWordLength _tmp34_;
		PebblesGlobalWordLength _tmp35_;
		PebblesSettings* _tmp36_;
		PebblesNumberSystem _tmp37_;
		PebblesNumberSystem _tmp38_;
		gboolean* _tmp39_ = NULL;
		gint _tmp40_ = 0;
		gchar* _tmp41_;
		gchar* _tmp42_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp32_ = self->priv->programmer_calculator_front_end;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp33_ = self->priv->settings;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp34_ = pebbles_settings_get_global_word_length (_tmp33_);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp35_ = _tmp34_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp36_ = self->priv->settings;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp37_ = pebbles_settings_get_number_system (_tmp36_);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp38_ = _tmp37_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp41_ = pebbles_programmer_calculator_evaluate_exp (_tmp32_, &_tmp35_, _tmp38_, &_tmp39_, &_tmp40_, &_inner_error0_);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		self->priv->answer_array = (g_free (self->priv->answer_array), NULL);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		self->priv->answer_array = _tmp39_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		self->priv->answer_array_length1 = _tmp40_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		self->priv->_answer_array_size_ = self->priv->answer_array_length1;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp31_ = _tmp41_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
			if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 1622 "ProgrammerDisplay.c"
				goto __catch0_pebbles_calc_error;
			}
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
			_g_free0 (_result_);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
			g_clear_error (&_inner_error0_);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
			return;
#line 1633 "ProgrammerDisplay.c"
		}
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp42_ = _tmp31_;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp31_ = NULL;
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (_result_);
#line 223 "../src/Views/Displays/ProgrammerDisplay.vala"
		_result_ = _tmp42_;
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (_tmp31_);
#line 1645 "ProgrammerDisplay.c"
	}
	goto __finally0;
	__catch0_pebbles_calc_error:
	{
		gchar* _tmp43_;
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
		g_clear_error (&_inner_error0_);
#line 225 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp43_ = g_strdup ("E");
#line 225 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (_result_);
#line 225 "../src/Views/Displays/ProgrammerDisplay.vala"
		_result_ = _tmp43_;
#line 1659 "ProgrammerDisplay.c"
	}
	__finally0:
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (_result_);
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
		g_clear_error (&_inner_error0_);
#line 222 "../src/Views/Displays/ProgrammerDisplay.vala"
		return;
#line 1672 "ProgrammerDisplay.c"
	}
#line 227 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp44_ = self->answer_label;
#line 227 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp45_ = _result_;
#line 227 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_text (_tmp44_, _tmp45_);
#line 228 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp46_ = _result_;
#line 228 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (g_strcmp0 (_tmp46_, "E") == 0) {
#line 229 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_shake (self);
#line 1686 "ProgrammerDisplay.c"
	} else {
		gboolean _tmp47_;
		PebblesSettings* _tmp65_;
		const gchar* _tmp66_;
		PebblesSettings* _tmp67_;
		GtkEntry* _tmp68_;
		const gchar* _tmp69_;
		PebblesProgrammerView* _tmp70_;
		PebblesStyledButton* _tmp71_;
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp47_ = TRUE;
#line 232 "../src/Views/Displays/ProgrammerDisplay.vala"
		if (_bool_equal (dont_push_history, &_tmp47_) != TRUE) {
#line 1700 "ProgrammerDisplay.c"
			PebblesProgrammerView* _tmp48_;
			PebblesMainWindow* _tmp49_;
			PebblesHistoryManager* _tmp50_;
			GtkEntry* _tmp51_;
			const gchar* _tmp52_;
			const gchar* _tmp53_;
			gdouble _tmp54_;
			gdouble _tmp55_;
			gdouble _tmp56_;
			PebblesProgrammerCalculator* _tmp57_;
			gint _tmp58_ = 0;
			PebblesProgrammerCalculatorToken* _tmp59_;
			PebblesProgrammerCalculatorToken* _tmp60_;
			gint _tmp60__length1;
			gboolean* _tmp61_;
			gint _tmp61__length1;
			PebblesSettings* _tmp62_;
			PebblesGlobalWordLength _tmp63_;
			PebblesGlobalWordLength _tmp64_;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp48_ = self->priv->prog_view;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp49_ = _tmp48_->window;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp50_ = _tmp49_->history_manager;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp51_ = self->input_entry;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp52_ = gtk_entry_get_text (_tmp51_);
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp53_ = _result_;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp54_ = (gdouble) 0;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp55_ = (gdouble) 0;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp56_ = (gdouble) 0;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp57_ = self->priv->programmer_calculator_front_end;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp59_ = pebbles_programmer_calculator_get_token_array (_tmp57_, &_tmp58_);
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp60_ = _tmp59_;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp60__length1 = _tmp58_;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp61_ = self->priv->answer_array;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp61__length1 = self->priv->answer_array_length1;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp62_ = self->priv->settings;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp63_ = pebbles_settings_get_global_word_length (_tmp62_);
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp64_ = _tmp63_;
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			pebbles_history_manager_append_from_strings (_tmp50_, PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_PROG, _tmp52_, _tmp53_, NULL, NULL, &_tmp54_, &_tmp55_, &_tmp56_, _tmp60_, (gint) _tmp58_, _tmp61_, (gint) _tmp61__length1, &_tmp64_);
#line 233 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp60_ = (_vala_PebblesProgrammerCalculatorToken_array_free (_tmp60_, _tmp60__length1), NULL);
#line 1760 "ProgrammerDisplay.c"
		}
#line 244 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp65_ = self->priv->settings;
#line 244 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp66_ = _result_;
#line 244 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_settings_set_prog_output_text (_tmp65_, _tmp66_);
#line 245 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp67_ = self->priv->settings;
#line 245 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp68_ = self->input_entry;
#line 245 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp69_ = gtk_entry_get_text (_tmp68_);
#line 245 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_settings_set_prog_input_text (_tmp67_, _tmp69_);
#line 246 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp70_ = self->priv->prog_view;
#line 246 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp71_ = _tmp70_->ans_button;
#line 246 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_widget_set_sensitive ((GtkWidget*) _tmp71_, TRUE);
#line 1782 "ProgrammerDisplay.c"
	}
#line 214 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_result_);
#line 1786 "ProgrammerDisplay.c"
}

static gboolean
__lambda55_ (PebblesProgrammerDisplay* self)
{
	GtkStyleContext* _tmp0_;
	gboolean result = FALSE;
#line 253 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 253 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_remove_class (_tmp0_, "pebbles_shake");
#line 254 "../src/Views/Displays/ProgrammerDisplay.vala"
	result = FALSE;
#line 254 "../src/Views/Displays/ProgrammerDisplay.vala"
	return result;
#line 1802 "ProgrammerDisplay.c"
}

static gboolean
___lambda55__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda55_ ((PebblesProgrammerDisplay*) self);
#line 252 "../src/Views/Displays/ProgrammerDisplay.vala"
	return result;
#line 1812 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_shake (PebblesProgrammerDisplay* self)
{
	GtkStyleContext* _tmp0_;
#line 250 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 251 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 251 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_style_context_add_class (_tmp0_, "pebbles_shake");
#line 252 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 450, ___lambda55__gsource_func, g_object_ref (self), g_object_unref);
#line 1827 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_memory_append (PebblesProgrammerDisplay* self,
                                          gboolean subtract)
{
	gchar* output = NULL;
	GtkLabel* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gboolean* output_array = NULL;
	PebblesProgrammerCalculator* _tmp3_;
	PebblesSettings* _tmp4_;
	PebblesNumberSystem _tmp5_;
	PebblesNumberSystem _tmp6_;
	PebblesSettings* _tmp7_;
	PebblesGlobalWordLength _tmp8_;
	PebblesGlobalWordLength _tmp9_;
	gint _tmp10_ = 0;
	gboolean* _tmp11_;
	gint output_array_length1;
	gint _output_array_size_;
	gchar* int_string = NULL;
	PebblesProgrammerCalculator* _tmp12_;
	PebblesSettings* _tmp13_;
	PebblesGlobalWordLength _tmp14_;
	PebblesGlobalWordLength _tmp15_;
	gchar* _tmp16_;
	gint64 output_integer = 0LL;
	gint64 _tmp17_ = 0LL;
	gchar* _tmp18_;
	gchar* _tmp19_;
	GError* _inner_error0_ = NULL;
#line 258 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 259 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->answer_label;
#line 259 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = gtk_label_get_text (_tmp0_);
#line 259 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = g_strdup (_tmp1_);
#line 259 "../src/Views/Displays/ProgrammerDisplay.vala"
	output = _tmp2_;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = self->priv->programmer_calculator_front_end;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = self->priv->settings;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp5_ = pebbles_settings_get_number_system (_tmp4_);
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp6_ = _tmp5_;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp7_ = self->priv->settings;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp8_ = pebbles_settings_get_global_word_length (_tmp7_);
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp9_ = _tmp8_;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp11_ = pebbles_programmer_calculator_string_to_bool_array (_tmp3_, output, _tmp6_, _tmp9_, &_tmp10_);
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_array = _tmp11_;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_array_length1 = _tmp10_;
#line 260 "../src/Views/Displays/ProgrammerDisplay.vala"
	_output_array_size_ = output_array_length1;
#line 261 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp12_ = self->priv->programmer_calculator_front_end;
#line 261 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp13_ = self->priv->settings;
#line 261 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp14_ = pebbles_settings_get_global_word_length (_tmp13_);
#line 261 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp15_ = _tmp14_;
#line 261 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp16_ = pebbles_programmer_calculator_bool_array_to_string (_tmp12_, output_array, (gint) output_array_length1, _tmp15_, PEBBLES_NUMBER_SYSTEM_DECIMAL);
#line 261 "../src/Views/Displays/ProgrammerDisplay.vala"
	int_string = _tmp16_;
#line 262 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_integer = (gint64) 0;
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_ascii_string_to_signed (int_string, 10U, G_MININT64, G_MAXINT64, &_tmp17_, &_inner_error0_);
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_integer = _tmp17_;
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (int_string);
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
		output_array = (g_free (output_array), NULL);
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (output);
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
		g_clear_error (&_inner_error0_);
#line 263 "../src/Views/Displays/ProgrammerDisplay.vala"
		return;
#line 1925 "ProgrammerDisplay.c"
	}
#line 264 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp18_ = g_strdup_printf ("%" G_GINT64_FORMAT, output_integer);
#line 264 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp19_ = _tmp18_;
#line 264 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_print ("memory: %s\n", _tmp19_);
#line 264 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp19_);
#line 265 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (subtract) {
#line 1937 "ProgrammerDisplay.c"
		gint64 _tmp20_;
		gint64 _tmp21_;
#line 266 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp20_ = pebbles_programmer_display_get_memory_reserve (self);
#line 266 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp21_ = _tmp20_;
#line 266 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_set_memory_reserve (self, _tmp21_ - output_integer);
#line 1946 "ProgrammerDisplay.c"
	} else {
		gint64 _tmp22_;
		gint64 _tmp23_;
#line 268 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp22_ = pebbles_programmer_display_get_memory_reserve (self);
#line 268 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp23_ = _tmp22_;
#line 268 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_set_memory_reserve (self, _tmp23_ + output_integer);
#line 1956 "ProgrammerDisplay.c"
	}
#line 258 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (int_string);
#line 258 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_array = (g_free (output_array), NULL);
#line 258 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (output);
#line 1964 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_memory_recall (PebblesProgrammerDisplay* self)
{
	gboolean* output_array = NULL;
	PebblesProgrammerCalculator* _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	PebblesSettings* _tmp5_;
	PebblesGlobalWordLength _tmp6_;
	PebblesGlobalWordLength _tmp7_;
	gint _tmp8_ = 0;
	gboolean* _tmp9_;
	gboolean* _tmp10_;
	gint _tmp10__length1;
	gint output_array_length1;
	gint _output_array_size_;
	gchar* output = NULL;
	PebblesProgrammerCalculator* _tmp11_;
	PebblesSettings* _tmp12_;
	PebblesGlobalWordLength _tmp13_;
	PebblesGlobalWordLength _tmp14_;
	PebblesSettings* _tmp15_;
	PebblesNumberSystem _tmp16_;
	PebblesNumberSystem _tmp17_;
	gchar* _tmp18_;
#line 272 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->priv->programmer_calculator_front_end;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = pebbles_programmer_display_get_memory_reserve (self);
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = _tmp1_;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp2_);
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = _tmp3_;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp5_ = self->priv->settings;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp6_ = pebbles_settings_get_global_word_length (_tmp5_);
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp7_ = _tmp6_;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp9_ = pebbles_programmer_calculator_string_to_bool_array (_tmp0_, _tmp4_, PEBBLES_NUMBER_SYSTEM_DECIMAL, _tmp7_, &_tmp8_);
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp10_ = _tmp9_;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp10__length1 = _tmp8_;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp4_);
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_array = _tmp10_;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_array_length1 = _tmp10__length1;
#line 273 "../src/Views/Displays/ProgrammerDisplay.vala"
	_output_array_size_ = output_array_length1;
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp11_ = self->priv->programmer_calculator_front_end;
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp12_ = self->priv->settings;
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp13_ = pebbles_settings_get_global_word_length (_tmp12_);
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp14_ = _tmp13_;
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp15_ = self->priv->settings;
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp16_ = pebbles_settings_get_number_system (_tmp15_);
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp17_ = _tmp16_;
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp18_ = pebbles_programmer_calculator_bool_array_to_string (_tmp11_, output_array, (gint) output_array_length1, _tmp14_, _tmp17_);
#line 274 "../src/Views/Displays/ProgrammerDisplay.vala"
	output = _tmp18_;
#line 275 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_insert_text (self, output);
#line 272 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (output);
#line 272 "../src/Views/Displays/ProgrammerDisplay.vala"
	output_array = (g_free (output_array), NULL);
#line 2050 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_memory_clear (PebblesProgrammerDisplay* self)
{
#line 278 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 279 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_set_memory_reserve (self, (gint64) 0);
#line 2060 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_set_last_token_from_bit_grid (PebblesProgrammerDisplay* self,
                                                         gboolean* arr,
                                                         gint arr_length1)
{
	GtkEntry* _tmp0_;
	PebblesProgrammerCalculator* _tmp1_;
	PebblesSettings* _tmp2_;
	PebblesGlobalWordLength _tmp3_;
	PebblesGlobalWordLength _tmp4_;
	PebblesSettings* _tmp5_;
	PebblesNumberSystem _tmp6_;
	PebblesNumberSystem _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	GtkEntry* _tmp10_;
#line 282 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->input_entry;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = self->priv->programmer_calculator_front_end;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = self->priv->settings;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = pebbles_settings_get_global_word_length (_tmp2_);
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = _tmp3_;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp5_ = self->priv->settings;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp6_ = pebbles_settings_get_number_system (_tmp5_);
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp7_ = _tmp6_;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp8_ = pebbles_programmer_calculator_set_last_token (_tmp1_, arr, (gint) arr_length1, _tmp4_, _tmp7_);
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp9_ = _tmp8_;
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_entry_set_text (_tmp0_, _tmp9_);
#line 283 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp9_);
#line 284 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp10_ = self->input_entry;
#line 284 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_signal_emit_by_name (_tmp10_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 2109 "ProgrammerDisplay.c"
}

static gchar*
string_slice (const gchar* self,
              glong start,
              glong end)
{
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 1480 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1481 "glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1481 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1481 "glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1482 "glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 1483 "glib-2.0.vapi"
		start = string_length + start;
#line 2136 "ProgrammerDisplay.c"
	}
#line 1485 "glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 1486 "glib-2.0.vapi"
		end = string_length + end;
#line 2142 "ProgrammerDisplay.c"
	}
#line 1488 "glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = start <= string_length;
#line 2148 "ProgrammerDisplay.c"
	} else {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = FALSE;
#line 2152 "ProgrammerDisplay.c"
	}
#line 1488 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp2_, NULL);
#line 1489 "glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = end <= string_length;
#line 2160 "ProgrammerDisplay.c"
	} else {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = FALSE;
#line 2164 "ProgrammerDisplay.c"
	}
#line 1489 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp3_, NULL);
#line 1490 "glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1491 "glib-2.0.vapi"
	_tmp4_ = g_strndup (((gchar*) self) + start, (gsize) (end - start));
#line 1491 "glib-2.0.vapi"
	result = _tmp4_;
#line 1491 "glib-2.0.vapi"
	return result;
#line 2176 "ProgrammerDisplay.c"
}

static gchar*
string_chug (const gchar* self)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1351 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1352 "glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1352 "glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1353 "glib-2.0.vapi"
	g_strchug (_result_);
#line 1354 "glib-2.0.vapi"
	result = _result_;
#line 1354 "glib-2.0.vapi"
	return result;
#line 2197 "ProgrammerDisplay.c"
}

static void
__lambda54_ (PebblesProgrammerDisplay* self)
{
	gboolean _tmp0_ = FALSE;
	GtkEntry* _tmp1_;
	const gchar* _tmp2_;
	GtkEntry* _tmp18_;
	const gchar* _tmp19_;
	gchar* _tmp20_;
	gchar* _tmp21_;
	gboolean _tmp22_;
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = self->input_entry;
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (g_str_has_prefix (_tmp2_, "0")) {
#line 2217 "ProgrammerDisplay.c"
		GtkEntry* _tmp3_;
		const gchar* _tmp4_;
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp3_ = self->input_entry;
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp4_ = gtk_entry_get_text (_tmp3_);
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp0_ = _tmp4_ != NULL;
#line 2226 "ProgrammerDisplay.c"
	} else {
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp0_ = FALSE;
#line 2230 "ProgrammerDisplay.c"
	}
#line 289 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (_tmp0_) {
#line 2234 "ProgrammerDisplay.c"
		GtkEntry* _tmp5_;
		const gchar* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
#line 290 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp5_ = self->input_entry;
#line 290 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp6_ = gtk_entry_get_text (_tmp5_);
#line 290 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp7_ = strlen (_tmp6_);
#line 290 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp8_ = _tmp7_;
#line 290 "../src/Views/Displays/ProgrammerDisplay.vala"
		if (_tmp8_ != 1) {
#line 2249 "ProgrammerDisplay.c"
			GtkEntry* _tmp9_;
			GtkEntry* _tmp10_;
			const gchar* _tmp11_;
			GtkEntry* _tmp12_;
			const gchar* _tmp13_;
			gint _tmp14_;
			gint _tmp15_;
			gchar* _tmp16_;
			gchar* _tmp17_;
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp9_ = self->input_entry;
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp10_ = self->input_entry;
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp11_ = gtk_entry_get_text (_tmp10_);
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp12_ = self->input_entry;
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp13_ = gtk_entry_get_text (_tmp12_);
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp14_ = strlen (_tmp13_);
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp15_ = _tmp14_;
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp16_ = string_slice (_tmp11_, (glong) 1, (glong) _tmp15_);
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp17_ = _tmp16_;
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_entry_set_text (_tmp9_, _tmp17_);
#line 291 "../src/Views/Displays/ProgrammerDisplay.vala"
			_g_free0 (_tmp17_);
#line 2281 "ProgrammerDisplay.c"
		}
	}
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp18_ = self->input_entry;
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp19_ = gtk_entry_get_text (_tmp18_);
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp20_ = string_chug (_tmp19_);
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp21_ = _tmp20_;
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp22_ = g_strcmp0 (_tmp21_, "") != 0;
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp21_);
#line 294 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (_tmp22_) {
#line 2298 "ProgrammerDisplay.c"
		PebblesProgrammerCalculator* _tmp23_;
		GtkEntry* _tmp24_;
		const gchar* _tmp25_;
#line 295 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp23_ = self->priv->programmer_calculator_front_end;
#line 295 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp24_ = self->input_entry;
#line 295 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp25_ = gtk_entry_get_text (_tmp24_);
#line 295 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_calculator_populate_token_array (_tmp23_, _tmp25_);
#line 2310 "ProgrammerDisplay.c"
	}
#line 296 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_display_all_number_systems (self);
#line 2314 "ProgrammerDisplay.c"
}

static void
___lambda54__gtk_editable_changed (GtkEditable* _sender,
                                   gpointer self)
{
#line 288 "../src/Views/Displays/ProgrammerDisplay.vala"
	__lambda54_ ((PebblesProgrammerDisplay*) self);
#line 2323 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_prog_display_make_events (PebblesProgrammerDisplay* self)
{
	GtkEntry* _tmp0_;
#line 287 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 288 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->input_entry;
#line 288 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_signal_connect_object ((GtkEditable*) _tmp0_, "changed", (GCallback) ___lambda54__gtk_editable_changed, self, 0);
#line 2336 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_display_all_number_systems (PebblesProgrammerDisplay* self)
{
	PebblesProgrammerCalculatorToken current_input = {0};
	PebblesProgrammerCalculator* _tmp0_;
	PebblesProgrammerCalculatorToken _tmp1_ = {0};
	gchar* binary_value = NULL;
	gchar* _tmp2_;
	gchar* decimal_value = NULL;
	gchar* _tmp3_;
	gchar* octal_value = NULL;
	gchar* _tmp4_;
	gchar* hex_value = NULL;
	gchar* _tmp5_;
	PebblesProgrammerCalculatorToken _tmp6_;
	PebblesProgrammerCalculatorTokenType _tmp7_;
	GtkLabel* _tmp121_;
	const gchar* _tmp122_;
	GtkLabel* _tmp123_;
	const gchar* _tmp124_;
	GtkLabel* _tmp125_;
	const gchar* _tmp126_;
	GtkLabel* _tmp127_;
	const gchar* _tmp128_;
	gboolean* bool_array = NULL;
	PebblesProgrammerCalculator* _tmp129_;
	PebblesProgrammerCalculatorToken _tmp130_;
	const gchar* _tmp131_;
	PebblesProgrammerCalculatorToken _tmp132_;
	PebblesNumberSystem _tmp133_;
	PebblesSettings* _tmp134_;
	PebblesGlobalWordLength _tmp135_;
	PebblesGlobalWordLength _tmp136_;
	gint _tmp137_ = 0;
	gboolean* _tmp138_;
	gint bool_array_length1;
	gint _bool_array_size_;
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 301 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->priv->programmer_calculator_front_end;
#line 301 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_calculator_get_last_token (_tmp0_, &_tmp1_);
#line 301 "../src/Views/Displays/ProgrammerDisplay.vala"
	current_input = _tmp1_;
#line 302 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = pebbles_programmer_display_get_binary_length (self);
#line 302 "../src/Views/Displays/ProgrammerDisplay.vala"
	binary_value = _tmp2_;
#line 303 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = g_strdup ("0");
#line 303 "../src/Views/Displays/ProgrammerDisplay.vala"
	decimal_value = _tmp3_;
#line 304 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = g_strdup ("0");
#line 304 "../src/Views/Displays/ProgrammerDisplay.vala"
	octal_value = _tmp4_;
#line 305 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp5_ = g_strdup ("0");
#line 305 "../src/Views/Displays/ProgrammerDisplay.vala"
	hex_value = _tmp5_;
#line 306 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp6_ = current_input;
#line 306 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp7_ = _tmp6_.type;
#line 306 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (_tmp7_ == PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND) {
#line 2406 "ProgrammerDisplay.c"
		PebblesProgrammerCalculatorToken _tmp8_;
		PebblesNumberSystem _tmp9_;
#line 307 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp8_ = current_input;
#line 307 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp9_ = _tmp8_.number_system;
#line 307 "../src/Views/Displays/ProgrammerDisplay.vala"
		if (_tmp9_ == PEBBLES_NUMBER_SYSTEM_DECIMAL) {
#line 2415 "ProgrammerDisplay.c"
			PebblesProgrammerCalculatorToken _tmp10_;
			const gchar* _tmp11_;
			gchar* _tmp12_;
			PebblesProgrammerCalculator* _tmp13_;
			PebblesProgrammerCalculatorToken _tmp14_;
			const gchar* _tmp15_;
			PebblesSettings* _tmp16_;
			PebblesGlobalWordLength _tmp17_;
			PebblesGlobalWordLength _tmp18_;
			gchar* _tmp19_;
			PebblesProgrammerCalculator* _tmp20_;
			PebblesProgrammerCalculatorToken _tmp21_;
			const gchar* _tmp22_;
			PebblesGlobalWordLength _tmp23_;
			gchar* _tmp24_;
			PebblesProgrammerCalculator* _tmp25_;
			PebblesProgrammerCalculatorToken _tmp26_;
			const gchar* _tmp27_;
			PebblesSettings* _tmp28_;
			PebblesGlobalWordLength _tmp29_;
			PebblesGlobalWordLength _tmp30_;
			gboolean _tmp31_;
			gchar* _tmp32_;
#line 308 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp10_ = current_input;
#line 308 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp11_ = _tmp10_.token;
#line 308 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp12_ = g_strdup (_tmp11_);
#line 308 "../src/Views/Displays/ProgrammerDisplay.vala"
			_g_free0 (decimal_value);
#line 308 "../src/Views/Displays/ProgrammerDisplay.vala"
			decimal_value = _tmp12_;
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp13_ = self->priv->programmer_calculator_front_end;
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp14_ = current_input;
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp15_ = _tmp14_.token;
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp16_ = self->priv->settings;
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp17_ = pebbles_settings_get_global_word_length (_tmp16_);
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp18_ = _tmp17_;
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp19_ = pebbles_programmer_calculator_convert_decimal_to_octal (_tmp13_, _tmp15_, &_tmp18_);
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			_g_free0 (octal_value);
#line 309 "../src/Views/Displays/ProgrammerDisplay.vala"
			octal_value = _tmp19_;
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp20_ = self->priv->programmer_calculator_front_end;
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp21_ = current_input;
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp22_ = _tmp21_.token;
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp23_ = PEBBLES_GLOBAL_WORD_LENGTH_WRD;
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp24_ = pebbles_programmer_calculator_convert_decimal_to_hexadecimal (_tmp20_, _tmp22_, &_tmp23_);
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			_g_free0 (hex_value);
#line 310 "../src/Views/Displays/ProgrammerDisplay.vala"
			hex_value = _tmp24_;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp25_ = self->priv->programmer_calculator_front_end;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp26_ = current_input;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp27_ = _tmp26_.token;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp28_ = self->priv->settings;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp29_ = pebbles_settings_get_global_word_length (_tmp28_);
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp30_ = _tmp29_;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp31_ = TRUE;
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp32_ = pebbles_programmer_calculator_convert_decimal_to_binary (_tmp25_, _tmp27_, &_tmp30_, &_tmp31_);
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			_g_free0 (binary_value);
#line 311 "../src/Views/Displays/ProgrammerDisplay.vala"
			binary_value = _tmp32_;
#line 2501 "ProgrammerDisplay.c"
		} else {
			PebblesProgrammerCalculatorToken _tmp33_;
			PebblesNumberSystem _tmp34_;
#line 313 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp33_ = current_input;
#line 313 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp34_ = _tmp33_.number_system;
#line 313 "../src/Views/Displays/ProgrammerDisplay.vala"
			if (_tmp34_ == PEBBLES_NUMBER_SYSTEM_BINARY) {
#line 2511 "ProgrammerDisplay.c"
				PebblesProgrammerCalculator* _tmp35_;
				PebblesProgrammerCalculatorToken _tmp36_;
				const gchar* _tmp37_;
				PebblesSettings* _tmp38_;
				PebblesGlobalWordLength _tmp39_;
				PebblesGlobalWordLength _tmp40_;
				gboolean _tmp41_;
				gchar* _tmp42_;
				PebblesProgrammerCalculator* _tmp43_;
				PebblesProgrammerCalculatorToken _tmp44_;
				const gchar* _tmp45_;
				PebblesSettings* _tmp46_;
				PebblesGlobalWordLength _tmp47_;
				PebblesGlobalWordLength _tmp48_;
				gboolean _tmp49_;
				gchar* _tmp50_;
				PebblesProgrammerCalculator* _tmp51_;
				PebblesProgrammerCalculatorToken _tmp52_;
				const gchar* _tmp53_;
				PebblesSettings* _tmp54_;
				PebblesGlobalWordLength _tmp55_;
				PebblesGlobalWordLength _tmp56_;
				gboolean _tmp57_;
				gchar* _tmp58_;
				PebblesProgrammerCalculator* _tmp59_;
				PebblesProgrammerCalculatorToken _tmp60_;
				const gchar* _tmp61_;
				PebblesSettings* _tmp62_;
				PebblesGlobalWordLength _tmp63_;
				PebblesGlobalWordLength _tmp64_;
				gboolean _tmp65_;
				gchar* _tmp66_;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp35_ = self->priv->programmer_calculator_front_end;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp36_ = current_input;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp37_ = _tmp36_.token;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp38_ = self->priv->settings;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp39_ = pebbles_settings_get_global_word_length (_tmp38_);
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp40_ = _tmp39_;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp41_ = FALSE;
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp42_ = pebbles_programmer_calculator_convert_binary_to_decimal (_tmp35_, _tmp37_, &_tmp40_, &_tmp41_);
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				_g_free0 (decimal_value);
#line 314 "../src/Views/Displays/ProgrammerDisplay.vala"
				decimal_value = _tmp42_;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp43_ = self->priv->programmer_calculator_front_end;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp44_ = current_input;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp45_ = _tmp44_.token;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp46_ = self->priv->settings;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp47_ = pebbles_settings_get_global_word_length (_tmp46_);
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp48_ = _tmp47_;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp49_ = TRUE;
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp50_ = pebbles_programmer_calculator_represent_binary_by_word_length (_tmp43_, _tmp45_, _tmp48_, &_tmp49_);
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				_g_free0 (binary_value);
#line 315 "../src/Views/Displays/ProgrammerDisplay.vala"
				binary_value = _tmp50_;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp51_ = self->priv->programmer_calculator_front_end;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp52_ = current_input;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp53_ = _tmp52_.token;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp54_ = self->priv->settings;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp55_ = pebbles_settings_get_global_word_length (_tmp54_);
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp56_ = _tmp55_;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp57_ = FALSE;
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp58_ = pebbles_programmer_calculator_convert_binary_to_octal (_tmp51_, _tmp53_, &_tmp56_, &_tmp57_);
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				_g_free0 (octal_value);
#line 316 "../src/Views/Displays/ProgrammerDisplay.vala"
				octal_value = _tmp58_;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp59_ = self->priv->programmer_calculator_front_end;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp60_ = current_input;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp61_ = _tmp60_.token;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp62_ = self->priv->settings;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp63_ = pebbles_settings_get_global_word_length (_tmp62_);
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp64_ = _tmp63_;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp65_ = FALSE;
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp66_ = pebbles_programmer_calculator_convert_binary_to_hexadecimal (_tmp59_, _tmp61_, &_tmp64_, &_tmp65_);
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				_g_free0 (hex_value);
#line 317 "../src/Views/Displays/ProgrammerDisplay.vala"
				hex_value = _tmp66_;
#line 2624 "ProgrammerDisplay.c"
			} else {
				PebblesProgrammerCalculatorToken _tmp67_;
				PebblesNumberSystem _tmp68_;
#line 319 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp67_ = current_input;
#line 319 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp68_ = _tmp67_.number_system;
#line 319 "../src/Views/Displays/ProgrammerDisplay.vala"
				if (_tmp68_ == PEBBLES_NUMBER_SYSTEM_HEXADECIMAL) {
#line 2634 "ProgrammerDisplay.c"
					PebblesProgrammerCalculatorToken _tmp69_;
					const gchar* _tmp70_;
					gchar* _tmp71_;
					PebblesProgrammerCalculator* _tmp72_;
					PebblesProgrammerCalculatorToken _tmp73_;
					const gchar* _tmp74_;
					PebblesSettings* _tmp75_;
					PebblesGlobalWordLength _tmp76_;
					PebblesGlobalWordLength _tmp77_;
					gchar* _tmp78_;
					PebblesProgrammerCalculator* _tmp79_;
					PebblesProgrammerCalculatorToken _tmp80_;
					const gchar* _tmp81_;
					PebblesSettings* _tmp82_;
					PebblesGlobalWordLength _tmp83_;
					PebblesGlobalWordLength _tmp84_;
					gboolean _tmp85_;
					gchar* _tmp86_;
					PebblesProgrammerCalculator* _tmp87_;
					PebblesProgrammerCalculatorToken _tmp88_;
					const gchar* _tmp89_;
					PebblesSettings* _tmp90_;
					PebblesGlobalWordLength _tmp91_;
					PebblesGlobalWordLength _tmp92_;
					gchar* _tmp93_;
#line 320 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp69_ = current_input;
#line 320 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp70_ = _tmp69_.token;
#line 320 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp71_ = g_strdup (_tmp70_);
#line 320 "../src/Views/Displays/ProgrammerDisplay.vala"
					_g_free0 (hex_value);
#line 320 "../src/Views/Displays/ProgrammerDisplay.vala"
					hex_value = _tmp71_;
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp72_ = self->priv->programmer_calculator_front_end;
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp73_ = current_input;
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp74_ = _tmp73_.token;
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp75_ = self->priv->settings;
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp76_ = pebbles_settings_get_global_word_length (_tmp75_);
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp77_ = _tmp76_;
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp78_ = pebbles_programmer_calculator_convert_hexadecimal_to_octal (_tmp72_, _tmp74_, &_tmp77_);
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					_g_free0 (octal_value);
#line 321 "../src/Views/Displays/ProgrammerDisplay.vala"
					octal_value = _tmp78_;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp79_ = self->priv->programmer_calculator_front_end;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp80_ = current_input;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp81_ = _tmp80_.token;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp82_ = self->priv->settings;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp83_ = pebbles_settings_get_global_word_length (_tmp82_);
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp84_ = _tmp83_;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp85_ = TRUE;
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp86_ = pebbles_programmer_calculator_convert_hexadecimal_to_binary (_tmp79_, _tmp81_, &_tmp84_, &_tmp85_);
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					_g_free0 (binary_value);
#line 322 "../src/Views/Displays/ProgrammerDisplay.vala"
					binary_value = _tmp86_;
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp87_ = self->priv->programmer_calculator_front_end;
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp88_ = current_input;
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp89_ = _tmp88_.token;
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp90_ = self->priv->settings;
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp91_ = pebbles_settings_get_global_word_length (_tmp90_);
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp92_ = _tmp91_;
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp93_ = pebbles_programmer_calculator_convert_hexadecimal_to_decimal (_tmp87_, _tmp89_, &_tmp92_);
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					_g_free0 (decimal_value);
#line 323 "../src/Views/Displays/ProgrammerDisplay.vala"
					decimal_value = _tmp93_;
#line 2726 "ProgrammerDisplay.c"
				} else {
					PebblesProgrammerCalculatorToken _tmp94_;
					PebblesNumberSystem _tmp95_;
#line 325 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp94_ = current_input;
#line 325 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp95_ = _tmp94_.number_system;
#line 325 "../src/Views/Displays/ProgrammerDisplay.vala"
					if (_tmp95_ == PEBBLES_NUMBER_SYSTEM_OCTAL) {
#line 2736 "ProgrammerDisplay.c"
						PebblesProgrammerCalculator* _tmp96_;
						PebblesProgrammerCalculatorToken _tmp97_;
						const gchar* _tmp98_;
						PebblesSettings* _tmp99_;
						PebblesGlobalWordLength _tmp100_;
						PebblesGlobalWordLength _tmp101_;
						gboolean _tmp102_;
						gchar* _tmp103_;
						PebblesProgrammerCalculator* _tmp104_;
						PebblesProgrammerCalculatorToken _tmp105_;
						const gchar* _tmp106_;
						PebblesSettings* _tmp107_;
						PebblesGlobalWordLength _tmp108_;
						PebblesGlobalWordLength _tmp109_;
						gchar* _tmp110_;
						PebblesProgrammerCalculatorToken _tmp111_;
						const gchar* _tmp112_;
						gchar* _tmp113_;
						PebblesProgrammerCalculator* _tmp114_;
						PebblesProgrammerCalculatorToken _tmp115_;
						const gchar* _tmp116_;
						PebblesSettings* _tmp117_;
						PebblesGlobalWordLength _tmp118_;
						PebblesGlobalWordLength _tmp119_;
						gchar* _tmp120_;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp96_ = self->priv->programmer_calculator_front_end;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp97_ = current_input;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp98_ = _tmp97_.token;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp99_ = self->priv->settings;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp100_ = pebbles_settings_get_global_word_length (_tmp99_);
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp101_ = _tmp100_;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp102_ = TRUE;
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp103_ = pebbles_programmer_calculator_convert_octal_to_binary (_tmp96_, _tmp98_, &_tmp101_, &_tmp102_);
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						_g_free0 (binary_value);
#line 326 "../src/Views/Displays/ProgrammerDisplay.vala"
						binary_value = _tmp103_;
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp104_ = self->priv->programmer_calculator_front_end;
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp105_ = current_input;
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp106_ = _tmp105_.token;
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp107_ = self->priv->settings;
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp108_ = pebbles_settings_get_global_word_length (_tmp107_);
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp109_ = _tmp108_;
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp110_ = pebbles_programmer_calculator_convert_octal_to_decimal (_tmp104_, _tmp106_, &_tmp109_);
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						_g_free0 (decimal_value);
#line 327 "../src/Views/Displays/ProgrammerDisplay.vala"
						decimal_value = _tmp110_;
#line 328 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp111_ = current_input;
#line 328 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp112_ = _tmp111_.token;
#line 328 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp113_ = g_strdup (_tmp112_);
#line 328 "../src/Views/Displays/ProgrammerDisplay.vala"
						_g_free0 (octal_value);
#line 328 "../src/Views/Displays/ProgrammerDisplay.vala"
						octal_value = _tmp113_;
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp114_ = self->priv->programmer_calculator_front_end;
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp115_ = current_input;
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp116_ = _tmp115_.token;
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp117_ = self->priv->settings;
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp118_ = pebbles_settings_get_global_word_length (_tmp117_);
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp119_ = _tmp118_;
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_tmp120_ = pebbles_programmer_calculator_convert_octal_to_hexadecimal (_tmp114_, _tmp116_, &_tmp119_);
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						_g_free0 (hex_value);
#line 329 "../src/Views/Displays/ProgrammerDisplay.vala"
						hex_value = _tmp120_;
#line 2828 "ProgrammerDisplay.c"
					}
				}
			}
		}
	}
#line 333 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp121_ = self->priv->hex_number_label;
#line 333 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp122_ = hex_value;
#line 333 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_text (_tmp121_, _tmp122_);
#line 334 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp123_ = self->priv->dec_number_label;
#line 334 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp124_ = decimal_value;
#line 334 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_text (_tmp123_, _tmp124_);
#line 335 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp125_ = self->priv->oct_number_label;
#line 335 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp126_ = octal_value;
#line 335 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_text (_tmp125_, _tmp126_);
#line 336 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp127_ = self->priv->bin_number_label;
#line 336 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp128_ = binary_value;
#line 336 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_label_set_text (_tmp127_, _tmp128_);
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp129_ = self->priv->programmer_calculator_front_end;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp130_ = current_input;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp131_ = _tmp130_.token;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp132_ = current_input;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp133_ = _tmp132_.number_system;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp134_ = self->priv->settings;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp135_ = pebbles_settings_get_global_word_length (_tmp134_);
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp136_ = _tmp135_;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp138_ = pebbles_programmer_calculator_string_to_bool_array (_tmp129_, _tmp131_, _tmp133_, _tmp136_, &_tmp137_);
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	bool_array = _tmp138_;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	bool_array_length1 = _tmp137_;
#line 338 "../src/Views/Displays/ProgrammerDisplay.vala"
	_bool_array_size_ = bool_array_length1;
#line 344 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_signal_emit (self, pebbles_programmer_display_signals[PEBBLES_PROGRAMMER_DISPLAY_LAST_TOKEN_CHANGED_SIGNAL], 0, bool_array, (gint) bool_array_length1);
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	bool_array = (g_free (bool_array), NULL);
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (hex_value);
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (octal_value);
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (decimal_value);
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (binary_value);
#line 300 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_calculator_token_destroy (&current_input);
#line 2896 "ProgrammerDisplay.c"
}

static gchar*
pebbles_programmer_display_get_binary_length (PebblesProgrammerDisplay* self)
{
	gchar* binary_value = NULL;
	gchar* _tmp0_;
	gint max_num = 0;
	PebblesSettings* _tmp1_;
	PebblesGlobalWordLength _tmp2_;
	PebblesGlobalWordLength _tmp3_;
	gchar* result = NULL;
#line 346 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 347 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = g_strdup ("");
#line 347 "../src/Views/Displays/ProgrammerDisplay.vala"
	binary_value = _tmp0_;
#line 348 "../src/Views/Displays/ProgrammerDisplay.vala"
	max_num = 0;
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = self->priv->settings;
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = pebbles_settings_get_global_word_length (_tmp1_);
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = _tmp2_;
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
	switch (_tmp3_) {
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_BYT:
#line 2927 "ProgrammerDisplay.c"
		{
#line 351 "../src/Views/Displays/ProgrammerDisplay.vala"
			max_num = 8;
#line 352 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 2933 "ProgrammerDisplay.c"
		}
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_WRD:
#line 2937 "ProgrammerDisplay.c"
		{
#line 354 "../src/Views/Displays/ProgrammerDisplay.vala"
			max_num = 16;
#line 355 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 2943 "ProgrammerDisplay.c"
		}
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_DWD:
#line 2947 "ProgrammerDisplay.c"
		{
#line 357 "../src/Views/Displays/ProgrammerDisplay.vala"
			max_num = 32;
#line 358 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 2953 "ProgrammerDisplay.c"
		}
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_QWD:
#line 2957 "ProgrammerDisplay.c"
		{
#line 360 "../src/Views/Displays/ProgrammerDisplay.vala"
			max_num = 64;
#line 361 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 2963 "ProgrammerDisplay.c"
		}
		default:
#line 349 "../src/Views/Displays/ProgrammerDisplay.vala"
		break;
#line 2968 "ProgrammerDisplay.c"
	}
	{
		gint i = 0;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
		i = 0;
#line 2974 "ProgrammerDisplay.c"
		{
			gboolean _tmp4_ = FALSE;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp4_ = TRUE;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
			while (TRUE) {
#line 2981 "ProgrammerDisplay.c"
				const gchar* _tmp6_;
				gchar* _tmp7_;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
				if (!_tmp4_) {
#line 2986 "ProgrammerDisplay.c"
					gint _tmp5_;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp5_ = i;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
					i = _tmp5_ + 1;
#line 2992 "ProgrammerDisplay.c"
				}
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp4_ = FALSE;
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
				if (!(i < max_num)) {
#line 363 "../src/Views/Displays/ProgrammerDisplay.vala"
					break;
#line 3000 "ProgrammerDisplay.c"
				}
#line 364 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp6_ = binary_value;
#line 364 "../src/Views/Displays/ProgrammerDisplay.vala"
				_tmp7_ = g_strconcat (_tmp6_, "0", NULL);
#line 364 "../src/Views/Displays/ProgrammerDisplay.vala"
				_g_free0 (binary_value);
#line 364 "../src/Views/Displays/ProgrammerDisplay.vala"
				binary_value = _tmp7_;
#line 365 "../src/Views/Displays/ProgrammerDisplay.vala"
				if (((i + 1) % 8) == 0) {
#line 3012 "ProgrammerDisplay.c"
					const gchar* _tmp8_;
					gchar* _tmp9_;
#line 366 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp8_ = binary_value;
#line 366 "../src/Views/Displays/ProgrammerDisplay.vala"
					_tmp9_ = g_strconcat (_tmp8_, " ", NULL);
#line 366 "../src/Views/Displays/ProgrammerDisplay.vala"
					_g_free0 (binary_value);
#line 366 "../src/Views/Displays/ProgrammerDisplay.vala"
					binary_value = _tmp9_;
#line 3023 "ProgrammerDisplay.c"
				}
			}
		}
	}
#line 369 "../src/Views/Displays/ProgrammerDisplay.vala"
	result = binary_value;
#line 369 "../src/Views/Displays/ProgrammerDisplay.vala"
	return result;
#line 3032 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_set_number_system (PebblesProgrammerDisplay* self)
{
	PebblesSettings* _tmp0_;
	PebblesNumberSystem _tmp1_;
	PebblesNumberSystem _tmp2_;
	GtkEntry* _tmp35_;
	PebblesProgrammerCalculator* _tmp36_;
	GtkEntry* _tmp37_;
	const gchar* _tmp38_;
	PebblesSettings* _tmp39_;
	PebblesGlobalWordLength _tmp40_;
	PebblesGlobalWordLength _tmp41_;
	gboolean _tmp42_;
	gchar* _tmp43_;
	gchar* _tmp44_;
	gboolean* _tmp45_;
	gint _tmp45__length1;
#line 371 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->priv->settings;
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = pebbles_settings_get_number_system (_tmp0_);
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = _tmp1_;
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
	switch (_tmp2_) {
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_NUMBER_SYSTEM_HEXADECIMAL:
#line 3065 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp3_;
			GtkStyleContext* _tmp4_;
			GtkLabel* _tmp5_;
			GtkStyleContext* _tmp6_;
			GtkLabel* _tmp7_;
			GtkStyleContext* _tmp8_;
			GtkLabel* _tmp9_;
			GtkStyleContext* _tmp10_;
#line 374 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp3_ = self->dec_label;
#line 374 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 374 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp4_, "PebblesLCDSwitchSelected");
#line 375 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp5_ = self->oct_label;
#line 375 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp6_ = gtk_widget_get_style_context ((GtkWidget*) _tmp5_);
#line 375 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp6_, "PebblesLCDSwitchSelected");
#line 376 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp7_ = self->bin_label;
#line 376 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 376 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp8_, "PebblesLCDSwitchSelected");
#line 377 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp9_ = self->hex_label;
#line 377 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp10_ = gtk_widget_get_style_context ((GtkWidget*) _tmp9_);
#line 377 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_add_class (_tmp10_, "PebblesLCDSwitchSelected");
#line 378 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3101 "ProgrammerDisplay.c"
		}
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_NUMBER_SYSTEM_BINARY:
#line 3105 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp11_;
			GtkStyleContext* _tmp12_;
			GtkLabel* _tmp13_;
			GtkStyleContext* _tmp14_;
			GtkLabel* _tmp15_;
			GtkStyleContext* _tmp16_;
			GtkLabel* _tmp17_;
			GtkStyleContext* _tmp18_;
#line 380 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp11_ = self->dec_label;
#line 380 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp12_ = gtk_widget_get_style_context ((GtkWidget*) _tmp11_);
#line 380 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp12_, "PebblesLCDSwitchSelected");
#line 381 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp13_ = self->oct_label;
#line 381 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp14_ = gtk_widget_get_style_context ((GtkWidget*) _tmp13_);
#line 381 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp14_, "PebblesLCDSwitchSelected");
#line 382 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp15_ = self->bin_label;
#line 382 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) _tmp15_);
#line 382 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_add_class (_tmp16_, "PebblesLCDSwitchSelected");
#line 383 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp17_ = self->hex_label;
#line 383 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp18_ = gtk_widget_get_style_context ((GtkWidget*) _tmp17_);
#line 383 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp18_, "PebblesLCDSwitchSelected");
#line 384 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3141 "ProgrammerDisplay.c"
		}
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_NUMBER_SYSTEM_DECIMAL:
#line 3145 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp19_;
			GtkStyleContext* _tmp20_;
			GtkLabel* _tmp21_;
			GtkStyleContext* _tmp22_;
			GtkLabel* _tmp23_;
			GtkStyleContext* _tmp24_;
			GtkLabel* _tmp25_;
			GtkStyleContext* _tmp26_;
#line 386 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp19_ = self->dec_label;
#line 386 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp20_ = gtk_widget_get_style_context ((GtkWidget*) _tmp19_);
#line 386 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_add_class (_tmp20_, "PebblesLCDSwitchSelected");
#line 387 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp21_ = self->oct_label;
#line 387 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp22_ = gtk_widget_get_style_context ((GtkWidget*) _tmp21_);
#line 387 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp22_, "PebblesLCDSwitchSelected");
#line 388 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp23_ = self->bin_label;
#line 388 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp24_ = gtk_widget_get_style_context ((GtkWidget*) _tmp23_);
#line 388 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp24_, "PebblesLCDSwitchSelected");
#line 389 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp25_ = self->hex_label;
#line 389 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp26_ = gtk_widget_get_style_context ((GtkWidget*) _tmp25_);
#line 389 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp26_, "PebblesLCDSwitchSelected");
#line 390 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3181 "ProgrammerDisplay.c"
		}
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
		case PEBBLES_NUMBER_SYSTEM_OCTAL:
#line 3185 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp27_;
			GtkStyleContext* _tmp28_;
			GtkLabel* _tmp29_;
			GtkStyleContext* _tmp30_;
			GtkLabel* _tmp31_;
			GtkStyleContext* _tmp32_;
			GtkLabel* _tmp33_;
			GtkStyleContext* _tmp34_;
#line 392 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp27_ = self->dec_label;
#line 392 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp28_ = gtk_widget_get_style_context ((GtkWidget*) _tmp27_);
#line 392 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp28_, "PebblesLCDSwitchSelected");
#line 393 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp29_ = self->oct_label;
#line 393 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp30_ = gtk_widget_get_style_context ((GtkWidget*) _tmp29_);
#line 393 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_add_class (_tmp30_, "PebblesLCDSwitchSelected");
#line 394 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp31_ = self->bin_label;
#line 394 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp32_ = gtk_widget_get_style_context ((GtkWidget*) _tmp31_);
#line 394 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp32_, "PebblesLCDSwitchSelected");
#line 395 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp33_ = self->hex_label;
#line 395 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp34_ = gtk_widget_get_style_context ((GtkWidget*) _tmp33_);
#line 395 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_style_context_remove_class (_tmp34_, "PebblesLCDSwitchSelected");
#line 396 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3221 "ProgrammerDisplay.c"
		}
		default:
#line 372 "../src/Views/Displays/ProgrammerDisplay.vala"
		break;
#line 3226 "ProgrammerDisplay.c"
	}
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp35_ = self->input_entry;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp36_ = self->priv->programmer_calculator_front_end;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp37_ = self->input_entry;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp38_ = gtk_entry_get_text (_tmp37_);
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp39_ = self->priv->settings;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp40_ = pebbles_settings_get_global_word_length (_tmp39_);
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp41_ = _tmp40_;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp42_ = FALSE;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp43_ = pebbles_programmer_calculator_set_number_system (_tmp36_, _tmp38_, &_tmp41_, &_tmp42_);
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp44_ = _tmp43_;
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_entry_set_text (_tmp35_, _tmp44_);
#line 398 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp44_);
#line 399 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp45_ = self->priv->answer_array;
#line 399 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp45__length1 = self->priv->answer_array_length1;
#line 399 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (_tmp45_ != NULL) {
#line 3258 "ProgrammerDisplay.c"
		GtkLabel* _tmp46_;
		PebblesProgrammerCalculator* _tmp47_;
		gboolean* _tmp48_;
		gint _tmp48__length1;
		PebblesSettings* _tmp49_;
		PebblesGlobalWordLength _tmp50_;
		PebblesGlobalWordLength _tmp51_;
		PebblesSettings* _tmp52_;
		PebblesNumberSystem _tmp53_;
		PebblesNumberSystem _tmp54_;
		gchar* _tmp55_;
		gchar* _tmp56_;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp46_ = self->answer_label;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp47_ = self->priv->programmer_calculator_front_end;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp48_ = self->priv->answer_array;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp48__length1 = self->priv->answer_array_length1;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp49_ = self->priv->settings;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp50_ = pebbles_settings_get_global_word_length (_tmp49_);
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp51_ = _tmp50_;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp52_ = self->priv->settings;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp53_ = pebbles_settings_get_number_system (_tmp52_);
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp54_ = _tmp53_;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp55_ = pebbles_programmer_calculator_bool_array_to_string (_tmp47_, _tmp48_, (gint) _tmp48__length1, _tmp51_, _tmp54_);
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp56_ = _tmp55_;
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_label_set_text (_tmp46_, _tmp56_);
#line 400 "../src/Views/Displays/ProgrammerDisplay.vala"
		_g_free0 (_tmp56_);
#line 3299 "ProgrammerDisplay.c"
	} else {
		gboolean _tmp57_;
#line 402 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp57_ = TRUE;
#line 402 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_get_answer_evaluate (self, &_tmp57_);
#line 3306 "ProgrammerDisplay.c"
	}
}

void
pebbles_programmer_display_set_shift_enable (PebblesProgrammerDisplay* self,
                                             gboolean s_on)
{
#line 405 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 406 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (s_on) {
#line 3318 "ProgrammerDisplay.c"
		GtkLabel* _tmp0_;
#line 407 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp0_ = self->priv->shift_label;
#line 407 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp0_, (gdouble) 1);
#line 3324 "ProgrammerDisplay.c"
	} else {
		GtkLabel* _tmp1_;
#line 410 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp1_ = self->priv->shift_label;
#line 410 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp1_, 0.2);
#line 3331 "ProgrammerDisplay.c"
	}
}

void
pebbles_programmer_display_set_word_length_status (PebblesProgrammerDisplay* self,
                                                   gint state)
{
#line 413 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 414 "../src/Views/Displays/ProgrammerDisplay.vala"
	switch (state) {
#line 414 "../src/Views/Displays/ProgrammerDisplay.vala"
		case 1:
#line 3345 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp0_;
			GtkLabel* _tmp1_;
			GtkLabel* _tmp2_;
			GtkLabel* _tmp3_;
#line 416 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp0_ = self->priv->qwd_label;
#line 416 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp0_, 0.2);
#line 417 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp1_ = self->priv->dwd_label;
#line 417 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp1_, (gdouble) 1);
#line 418 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp2_ = self->priv->wrd_label;
#line 418 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp2_, 0.2);
#line 419 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp3_ = self->priv->byt_label;
#line 419 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp3_, 0.2);
#line 420 "../src/Views/Displays/ProgrammerDisplay.vala"
			self->priv->word_mode = PEBBLES_GLOBAL_WORD_LENGTH_DWD;
#line 421 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3371 "ProgrammerDisplay.c"
		}
#line 414 "../src/Views/Displays/ProgrammerDisplay.vala"
		case 2:
#line 3375 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp4_;
			GtkLabel* _tmp5_;
			GtkLabel* _tmp6_;
			GtkLabel* _tmp7_;
#line 423 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp4_ = self->priv->qwd_label;
#line 423 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp4_, 0.2);
#line 424 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp5_ = self->priv->dwd_label;
#line 424 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp5_, 0.2);
#line 425 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp6_ = self->priv->wrd_label;
#line 425 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp6_, (gdouble) 1);
#line 426 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp7_ = self->priv->byt_label;
#line 426 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp7_, 0.2);
#line 427 "../src/Views/Displays/ProgrammerDisplay.vala"
			self->priv->word_mode = PEBBLES_GLOBAL_WORD_LENGTH_WRD;
#line 428 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3401 "ProgrammerDisplay.c"
		}
#line 414 "../src/Views/Displays/ProgrammerDisplay.vala"
		case 3:
#line 3405 "ProgrammerDisplay.c"
		{
			GtkLabel* _tmp8_;
			GtkLabel* _tmp9_;
			GtkLabel* _tmp10_;
			GtkLabel* _tmp11_;
#line 430 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp8_ = self->priv->qwd_label;
#line 430 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp8_, 0.2);
#line 431 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp9_ = self->priv->dwd_label;
#line 431 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp9_, 0.2);
#line 432 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp10_ = self->priv->wrd_label;
#line 432 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp10_, 0.2);
#line 433 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp11_ = self->priv->byt_label;
#line 433 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp11_, (gdouble) 1);
#line 434 "../src/Views/Displays/ProgrammerDisplay.vala"
			self->priv->word_mode = PEBBLES_GLOBAL_WORD_LENGTH_BYT;
#line 435 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3431 "ProgrammerDisplay.c"
		}
		default:
		{
			GtkLabel* _tmp12_;
			GtkLabel* _tmp13_;
			GtkLabel* _tmp14_;
			GtkLabel* _tmp15_;
#line 437 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp12_ = self->priv->qwd_label;
#line 437 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp12_, (gdouble) 1);
#line 438 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp13_ = self->priv->dwd_label;
#line 438 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp13_, 0.2);
#line 439 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp14_ = self->priv->wrd_label;
#line 439 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp14_, 0.2);
#line 440 "../src/Views/Displays/ProgrammerDisplay.vala"
			_tmp15_ = self->priv->byt_label;
#line 440 "../src/Views/Displays/ProgrammerDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp15_, 0.2);
#line 441 "../src/Views/Displays/ProgrammerDisplay.vala"
			self->priv->word_mode = PEBBLES_GLOBAL_WORD_LENGTH_QWD;
#line 442 "../src/Views/Displays/ProgrammerDisplay.vala"
			break;
#line 3459 "ProgrammerDisplay.c"
		}
	}
}

void
pebbles_programmer_display_display_off (PebblesProgrammerDisplay* self)
{
	GtkLabel* _tmp0_;
	GtkGrid* _tmp1_;
	GtkEntry* _tmp2_;
	GtkGrid* _tmp3_;
#line 446 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 447 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->answer_label;
#line 447 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, 0.1);
#line 448 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = self->priv->number_system_grid;
#line 448 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp1_, 0.1);
#line 449 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = self->input_entry;
#line 449 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp2_, 0.1);
#line 450 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = self->priv->lcd_status_bar;
#line 450 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp3_, 0.1);
#line 3489 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_display_on (PebblesProgrammerDisplay* self)
{
	GtkLabel* _tmp0_;
	GtkGrid* _tmp1_;
	GtkEntry* _tmp2_;
	GtkGrid* _tmp3_;
#line 453 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 454 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->answer_label;
#line 454 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, (gdouble) 1);
#line 455 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = self->priv->number_system_grid;
#line 455 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp1_, (gdouble) 1);
#line 456 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = self->input_entry;
#line 456 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp2_, (gdouble) 1);
#line 457 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = self->priv->lcd_status_bar;
#line 457 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp3_, (gdouble) 1);
#line 3517 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_send_backspace (PebblesProgrammerDisplay* self)
{
	GtkEntry* _tmp0_;
	GtkEntry* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gboolean _tmp5_;
#line 460 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 461 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->input_entry;
#line 461 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_signal_emit_by_name (_tmp0_, "backspace");
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = self->input_entry;
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = string_chug (_tmp2_);
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = _tmp3_;
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp5_ = g_strcmp0 (_tmp4_, "") == 0;
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_free0 (_tmp4_);
#line 462 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (_tmp5_) {
#line 3549 "ProgrammerDisplay.c"
		GtkEntry* _tmp6_;
		GtkEntry* _tmp7_;
#line 463 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp6_ = self->input_entry;
#line 463 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_entry_set_text (_tmp6_, "0");
#line 464 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp7_ = self->input_entry;
#line 464 "../src/Views/Displays/ProgrammerDisplay.vala"
		g_signal_emit_by_name (_tmp7_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 3560 "ProgrammerDisplay.c"
	}
}

void
pebbles_programmer_display_insert_text (PebblesProgrammerDisplay* self,
                                        const gchar* text)
{
	GtkEntry* _tmp0_;
	const gchar* _tmp1_;
	GtkEntry* _tmp3_;
	GtkEntry* _tmp4_;
#line 468 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 468 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (text != NULL);
#line 469 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp0_ = self->input_entry;
#line 469 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp1_ = gtk_entry_get_text (_tmp0_);
#line 469 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (g_strcmp0 (_tmp1_, "0") == 0) {
#line 3582 "ProgrammerDisplay.c"
		GtkEntry* _tmp2_;
#line 470 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp2_ = self->input_entry;
#line 470 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_entry_set_text (_tmp2_, "");
#line 3588 "ProgrammerDisplay.c"
	}
#line 472 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp3_ = self->input_entry;
#line 472 "../src/Views/Displays/ProgrammerDisplay.vala"
	gtk_entry_grab_focus_without_selecting (_tmp3_);
#line 473 "../src/Views/Displays/ProgrammerDisplay.vala"
	_tmp4_ = self->input_entry;
#line 473 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_signal_emit_by_name (_tmp4_, "insert-at-cursor", text);
#line 3598 "ProgrammerDisplay.c"
}

void
pebbles_programmer_display_set_memory_status (PebblesProgrammerDisplay* self,
                                              gboolean state)
{
#line 476 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 477 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (state) {
#line 3609 "ProgrammerDisplay.c"
		GtkLabel* _tmp0_;
#line 478 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp0_ = self->priv->memory_label;
#line 478 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp0_, (gdouble) 1);
#line 3615 "ProgrammerDisplay.c"
	} else {
		GtkLabel* _tmp1_;
#line 481 "../src/Views/Displays/ProgrammerDisplay.vala"
		_tmp1_ = self->priv->memory_label;
#line 481 "../src/Views/Displays/ProgrammerDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp1_, 0.2);
#line 3622 "ProgrammerDisplay.c"
	}
}

static gint64
pebbles_programmer_display_get_memory_reserve (PebblesProgrammerDisplay* self)
{
	gint64 result;
#line 64 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_val_if_fail (self != NULL, 0LL);
#line 64 "../src/Views/Displays/ProgrammerDisplay.vala"
	result = self->priv->_memory_reserve;
#line 64 "../src/Views/Displays/ProgrammerDisplay.vala"
	return result;
#line 3636 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_set_memory_reserve (PebblesProgrammerDisplay* self,
                                               gint64 value)
{
#line 65 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (self != NULL);
#line 66 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->_memory_reserve = value;
#line 67 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (self->priv->_memory_reserve == ((gint64) 0)) {
#line 68 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_set_memory_status (self, FALSE);
#line 3651 "ProgrammerDisplay.c"
	} else {
#line 71 "../src/Views/Displays/ProgrammerDisplay.vala"
		pebbles_programmer_display_set_memory_status (self, TRUE);
#line 3655 "ProgrammerDisplay.c"
	}
}

static void
g_cclosure_user_marshal_VOID__POINTER_INT (GClosure * closure,
                                           GValue * return_value,
                                           guint n_param_values,
                                           const GValue * param_values,
                                           gpointer invocation_hint,
                                           gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__POINTER_INT) (gpointer data1, gpointer arg_1, gint arg_2, gpointer data2);
	register GMarshalFunc_VOID__POINTER_INT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_return_if_fail (n_param_values == 3);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		data1 = closure->data;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		data2 = param_values->data[0].v_pointer;
#line 3681 "ProgrammerDisplay.c"
	} else {
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		data1 = param_values->data[0].v_pointer;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		data2 = closure->data;
#line 3687 "ProgrammerDisplay.c"
	}
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	callback = (GMarshalFunc_VOID__POINTER_INT) (marshal_data ? marshal_data : cc->callback);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	callback (data1, g_value_get_pointer (param_values + 1), g_value_get_int (param_values + 2), data2);
#line 3693 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_class_init (PebblesProgrammerDisplayClass * klass,
                                       gpointer klass_data)
{
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	g_type_class_adjust_private_offset (klass, &PebblesProgrammerDisplay_private_offset);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_pebbles_programmer_display_get_property;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_pebbles_programmer_display_set_property;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	G_OBJECT_CLASS (klass)->finalize = pebbles_programmer_display_finalize;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	pebbles_programmer_display_signals[PEBBLES_PROGRAMMER_DISPLAY_LAST_TOKEN_CHANGED_SIGNAL] = g_signal_new ("last-token-changed", PEBBLES_TYPE_PROGRAMMER_DISPLAY, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__POINTER_INT, G_TYPE_NONE, 2, G_TYPE_POINTER, G_TYPE_INT);
#line 3712 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_instance_init (PebblesProgrammerDisplay * self,
                                          gpointer klass)
{
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv = pebbles_programmer_display_get_instance_private (self);
#line 3721 "ProgrammerDisplay.c"
}

static void
pebbles_programmer_display_finalize (GObject * obj)
{
	PebblesProgrammerDisplay * self;
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_PROGRAMMER_DISPLAY, PebblesProgrammerDisplay);
#line 24 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->settings);
#line 26 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->lcd_status_bar);
#line 27 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->qwd_label);
#line 28 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->dwd_label);
#line 29 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->wrd_label);
#line 30 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->byt_label);
#line 31 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->memory_label);
#line 32 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->shift_label);
#line 35 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->number_system_grid);
#line 37 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->hex_label);
#line 38 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->dec_label);
#line 39 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->oct_label);
#line 40 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->bin_label);
#line 42 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->hex_number_label);
#line 43 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->dec_number_label);
#line 44 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->oct_number_label);
#line 45 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->bin_number_label);
#line 48 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->answer_label);
#line 51 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->input_entry);
#line 57 "../src/Views/Displays/ProgrammerDisplay.vala"
	_pebbles_programmer_calculator_unref0 (self->priv->programmer_calculator_front_end);
#line 58 "../src/Views/Displays/ProgrammerDisplay.vala"
	self->priv->answer_array = (g_free (self->priv->answer_array), NULL);
#line 59 "../src/Views/Displays/ProgrammerDisplay.vala"
	_g_object_unref0 (self->priv->prog_view);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	G_OBJECT_CLASS (pebbles_programmer_display_parent_class)->finalize (obj);
#line 3776 "ProgrammerDisplay.c"
}

static GType
pebbles_programmer_display_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesProgrammerDisplayClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_programmer_display_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesProgrammerDisplay), 0, (GInstanceInitFunc) pebbles_programmer_display_instance_init, NULL };
	GType pebbles_programmer_display_type_id;
	pebbles_programmer_display_type_id = g_type_register_static (gtk_grid_get_type (), "PebblesProgrammerDisplay", &g_define_type_info, 0);
	PebblesProgrammerDisplay_private_offset = g_type_add_instance_private (pebbles_programmer_display_type_id, sizeof (PebblesProgrammerDisplayPrivate));
	return pebbles_programmer_display_type_id;
}

GType
pebbles_programmer_display_get_type (void)
{
	static volatile gsize pebbles_programmer_display_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_programmer_display_type_id__volatile)) {
		GType pebbles_programmer_display_type_id;
		pebbles_programmer_display_type_id = pebbles_programmer_display_get_type_once ();
		g_once_init_leave (&pebbles_programmer_display_type_id__volatile, pebbles_programmer_display_type_id);
	}
	return pebbles_programmer_display_type_id__volatile;
}

static void
_vala_pebbles_programmer_display_get_property (GObject * object,
                                               guint property_id,
                                               GValue * value,
                                               GParamSpec * pspec)
{
	PebblesProgrammerDisplay * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, PEBBLES_TYPE_PROGRAMMER_DISPLAY, PebblesProgrammerDisplay);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	switch (property_id) {
#line 3811 "ProgrammerDisplay.c"
		default:
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		break;
#line 3817 "ProgrammerDisplay.c"
	}
}

static void
_vala_pebbles_programmer_display_set_property (GObject * object,
                                               guint property_id,
                                               const GValue * value,
                                               GParamSpec * pspec)
{
	PebblesProgrammerDisplay * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, PEBBLES_TYPE_PROGRAMMER_DISPLAY, PebblesProgrammerDisplay);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
	switch (property_id) {
#line 3831 "ProgrammerDisplay.c"
		default:
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Views/Displays/ProgrammerDisplay.vala"
		break;
#line 3837 "ProgrammerDisplay.c"
	}
}

