/* ApplicationView.c generated by valac 0.48.14, the Vala compiler
 * generated from ApplicationView.vala, do not modify */

/*
 *  Copyright 2019 elementary, Inc. (https://elementary.io)
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include "granite.h"
#include <gio/gio.h>

#define TYPE_APPLICATION_VIEW (application_view_get_type ())
#define APPLICATION_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_APPLICATION_VIEW, ApplicationView))
#define APPLICATION_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_APPLICATION_VIEW, ApplicationViewClass))
#define IS_APPLICATION_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_APPLICATION_VIEW))
#define IS_APPLICATION_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_APPLICATION_VIEW))
#define APPLICATION_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_APPLICATION_VIEW, ApplicationViewClass))

typedef struct _ApplicationView ApplicationView;
typedef struct _ApplicationViewClass ApplicationViewClass;
typedef struct _ApplicationViewPrivate ApplicationViewPrivate;
enum  {
	APPLICATION_VIEW_0_PROPERTY,
	APPLICATION_VIEW_NUM_PROPERTIES
};
static GParamSpec* application_view_properties[APPLICATION_VIEW_NUM_PROPERTIES];
typedef struct _Block3Data Block3Data;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))

struct _ApplicationView {
	GtkGrid parent_instance;
	ApplicationViewPrivate * priv;
};

struct _ApplicationViewClass {
	GtkGridClass parent_class;
};

struct _Block3Data {
	int _ref_count_;
	ApplicationView* self;
	GtkSwitch* progress_visible_switch;
	GtkScale* progress_scale;
	GtkSwitch* badge_visible_switch;
	GtkSpinButton* badge_spin;
};

static gpointer application_view_parent_class = NULL;

GType application_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ApplicationView, g_object_unref)
ApplicationView* application_view_new (void);
ApplicationView* application_view_construct (GType object_type);
static GObject * application_view_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
static void _application_view___lambda35_ (Block3Data* _data3_);
static void __lambda36_ (ApplicationView* self,
                  GObject* obj,
                  GAsyncResult* res);
static void ___lambda36__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void __application_view___lambda35__gtk_range_value_changed (GtkRange* _sender,
                                                             gpointer self);
static void _application_view___lambda37_ (Block3Data* _data3_);
static void __lambda38_ (ApplicationView* self,
                  GObject* obj,
                  GAsyncResult* res);
static void ___lambda38__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void __application_view___lambda37__g_object_notify (GObject* _sender,
                                                     GParamSpec* pspec,
                                                     gpointer self);
static void _application_view___lambda39_ (Block3Data* _data3_);
static void __lambda40_ (ApplicationView* self,
                  GObject* obj,
                  GAsyncResult* res);
static void ___lambda40__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void __application_view___lambda39__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                   gpointer self);
static void _application_view___lambda41_ (Block3Data* _data3_);
static void __lambda42_ (ApplicationView* self,
                  GObject* obj,
                  GAsyncResult* res);
static void ___lambda42__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void __application_view___lambda41__g_object_notify (GObject* _sender,
                                                     GParamSpec* pspec,
                                                     gpointer self);
static GType application_view_get_type_once (void);

ApplicationView*
application_view_construct (GType object_type)
{
	ApplicationView * self = NULL;
#line 20 "../demo/Views/ApplicationView.vala"
	self = (ApplicationView*) g_object_new (object_type, NULL);
#line 20 "../demo/Views/ApplicationView.vala"
	return self;
#line 128 "ApplicationView.c"
}

ApplicationView*
application_view_new (void)
{
#line 20 "../demo/Views/ApplicationView.vala"
	return application_view_construct (TYPE_APPLICATION_VIEW);
#line 136 "ApplicationView.c"
}

static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
#line 21 "../demo/Views/ApplicationView.vala"
	g_atomic_int_inc (&_data3_->_ref_count_);
#line 21 "../demo/Views/ApplicationView.vala"
	return _data3_;
#line 146 "ApplicationView.c"
}

static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
#line 21 "../demo/Views/ApplicationView.vala"
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
#line 156 "ApplicationView.c"
		ApplicationView* self;
#line 21 "../demo/Views/ApplicationView.vala"
		self = _data3_->self;
#line 21 "../demo/Views/ApplicationView.vala"
		_g_object_unref0 (_data3_->badge_spin);
#line 21 "../demo/Views/ApplicationView.vala"
		_g_object_unref0 (_data3_->badge_visible_switch);
#line 21 "../demo/Views/ApplicationView.vala"
		_g_object_unref0 (_data3_->progress_scale);
#line 21 "../demo/Views/ApplicationView.vala"
		_g_object_unref0 (_data3_->progress_visible_switch);
#line 21 "../demo/Views/ApplicationView.vala"
		_g_object_unref0 (self);
#line 21 "../demo/Views/ApplicationView.vala"
		g_slice_free (Block3Data, _data3_);
#line 172 "ApplicationView.c"
	}
}

static void
__lambda36_ (ApplicationView* self,
             GObject* obj,
             GAsyncResult* res)
{
	GError* _inner_error0_ = NULL;
#line 52 "../demo/Views/ApplicationView.vala"
	g_return_if_fail (res != NULL);
#line 184 "ApplicationView.c"
	{
#line 54 "../demo/Views/ApplicationView.vala"
		granite_services_application_set_progress_finish (res, &_inner_error0_);
#line 54 "../demo/Views/ApplicationView.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 190 "ApplicationView.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp0_;
		const gchar* _tmp1_;
#line 53 "../demo/Views/ApplicationView.vala"
		e = _inner_error0_;
#line 53 "../demo/Views/ApplicationView.vala"
		_inner_error0_ = NULL;
#line 56 "../demo/Views/ApplicationView.vala"
		_tmp0_ = e;
#line 56 "../demo/Views/ApplicationView.vala"
		_tmp1_ = _tmp0_->message;
#line 56 "../demo/Views/ApplicationView.vala"
		g_critical ("ApplicationView.vala:56: %s", _tmp1_);
#line 53 "../demo/Views/ApplicationView.vala"
		_g_error_free0 (e);
#line 212 "ApplicationView.c"
	}
	__finally0:
#line 53 "../demo/Views/ApplicationView.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 53 "../demo/Views/ApplicationView.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 53 "../demo/Views/ApplicationView.vala"
		g_clear_error (&_inner_error0_);
#line 53 "../demo/Views/ApplicationView.vala"
		return;
#line 223 "ApplicationView.c"
	}
}

static void
___lambda36__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 52 "../demo/Views/ApplicationView.vala"
	__lambda36_ ((ApplicationView*) self, source_object, res);
#line 52 "../demo/Views/ApplicationView.vala"
	g_object_unref (self);
#line 236 "ApplicationView.c"
}

static void
_application_view___lambda35_ (Block3Data* _data3_)
{
	ApplicationView* self;
	GtkScale* _tmp0_;
#line 51 "../demo/Views/ApplicationView.vala"
	self = _data3_->self;
#line 52 "../demo/Views/ApplicationView.vala"
	_tmp0_ = _data3_->progress_scale;
#line 52 "../demo/Views/ApplicationView.vala"
	granite_services_application_set_progress (gtk_range_get_value ((GtkRange*) _tmp0_), ___lambda36__gasync_ready_callback, g_object_ref (self));
#line 250 "ApplicationView.c"
}

static void
__application_view___lambda35__gtk_range_value_changed (GtkRange* _sender,
                                                        gpointer self)
{
#line 51 "../demo/Views/ApplicationView.vala"
	_application_view___lambda35_ (self);
#line 259 "ApplicationView.c"
}

static void
__lambda38_ (ApplicationView* self,
             GObject* obj,
             GAsyncResult* res)
{
	GError* _inner_error0_ = NULL;
#line 62 "../demo/Views/ApplicationView.vala"
	g_return_if_fail (res != NULL);
#line 270 "ApplicationView.c"
	{
#line 64 "../demo/Views/ApplicationView.vala"
		granite_services_application_set_progress_visible_finish (res, &_inner_error0_);
#line 64 "../demo/Views/ApplicationView.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 276 "ApplicationView.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp0_;
		const gchar* _tmp1_;
#line 63 "../demo/Views/ApplicationView.vala"
		e = _inner_error0_;
#line 63 "../demo/Views/ApplicationView.vala"
		_inner_error0_ = NULL;
#line 66 "../demo/Views/ApplicationView.vala"
		_tmp0_ = e;
#line 66 "../demo/Views/ApplicationView.vala"
		_tmp1_ = _tmp0_->message;
#line 66 "../demo/Views/ApplicationView.vala"
		g_critical ("ApplicationView.vala:66: %s", _tmp1_);
#line 63 "../demo/Views/ApplicationView.vala"
		_g_error_free0 (e);
#line 298 "ApplicationView.c"
	}
	__finally0:
#line 63 "../demo/Views/ApplicationView.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 63 "../demo/Views/ApplicationView.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 63 "../demo/Views/ApplicationView.vala"
		g_clear_error (&_inner_error0_);
#line 63 "../demo/Views/ApplicationView.vala"
		return;
#line 309 "ApplicationView.c"
	}
}

static void
___lambda38__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 62 "../demo/Views/ApplicationView.vala"
	__lambda38_ ((ApplicationView*) self, source_object, res);
#line 62 "../demo/Views/ApplicationView.vala"
	g_object_unref (self);
#line 322 "ApplicationView.c"
}

static void
_application_view___lambda37_ (Block3Data* _data3_)
{
	ApplicationView* self;
	GtkSwitch* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 61 "../demo/Views/ApplicationView.vala"
	self = _data3_->self;
#line 62 "../demo/Views/ApplicationView.vala"
	_tmp0_ = _data3_->progress_visible_switch;
#line 62 "../demo/Views/ApplicationView.vala"
	_tmp1_ = gtk_switch_get_active (_tmp0_);
#line 62 "../demo/Views/ApplicationView.vala"
	_tmp2_ = _tmp1_;
#line 62 "../demo/Views/ApplicationView.vala"
	granite_services_application_set_progress_visible (_tmp2_, ___lambda38__gasync_ready_callback, g_object_ref (self));
#line 342 "ApplicationView.c"
}

static void
__application_view___lambda37__g_object_notify (GObject* _sender,
                                                GParamSpec* pspec,
                                                gpointer self)
{
#line 61 "../demo/Views/ApplicationView.vala"
	_application_view___lambda37_ (self);
#line 352 "ApplicationView.c"
}

static void
__lambda40_ (ApplicationView* self,
             GObject* obj,
             GAsyncResult* res)
{
	GError* _inner_error0_ = NULL;
#line 72 "../demo/Views/ApplicationView.vala"
	g_return_if_fail (res != NULL);
#line 363 "ApplicationView.c"
	{
#line 74 "../demo/Views/ApplicationView.vala"
		granite_services_application_set_badge_finish (res, &_inner_error0_);
#line 74 "../demo/Views/ApplicationView.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 369 "ApplicationView.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp0_;
		const gchar* _tmp1_;
#line 73 "../demo/Views/ApplicationView.vala"
		e = _inner_error0_;
#line 73 "../demo/Views/ApplicationView.vala"
		_inner_error0_ = NULL;
#line 76 "../demo/Views/ApplicationView.vala"
		_tmp0_ = e;
#line 76 "../demo/Views/ApplicationView.vala"
		_tmp1_ = _tmp0_->message;
#line 76 "../demo/Views/ApplicationView.vala"
		g_critical ("ApplicationView.vala:76: %s", _tmp1_);
#line 73 "../demo/Views/ApplicationView.vala"
		_g_error_free0 (e);
#line 391 "ApplicationView.c"
	}
	__finally0:
#line 73 "../demo/Views/ApplicationView.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 73 "../demo/Views/ApplicationView.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 73 "../demo/Views/ApplicationView.vala"
		g_clear_error (&_inner_error0_);
#line 73 "../demo/Views/ApplicationView.vala"
		return;
#line 402 "ApplicationView.c"
	}
}

static void
___lambda40__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 72 "../demo/Views/ApplicationView.vala"
	__lambda40_ ((ApplicationView*) self, source_object, res);
#line 72 "../demo/Views/ApplicationView.vala"
	g_object_unref (self);
#line 415 "ApplicationView.c"
}

static void
_application_view___lambda39_ (Block3Data* _data3_)
{
	ApplicationView* self;
	GtkSpinButton* _tmp0_;
	gdouble _tmp1_;
	gdouble _tmp2_;
#line 71 "../demo/Views/ApplicationView.vala"
	self = _data3_->self;
#line 72 "../demo/Views/ApplicationView.vala"
	_tmp0_ = _data3_->badge_spin;
#line 72 "../demo/Views/ApplicationView.vala"
	_tmp1_ = gtk_spin_button_get_value (_tmp0_);
#line 72 "../demo/Views/ApplicationView.vala"
	_tmp2_ = _tmp1_;
#line 72 "../demo/Views/ApplicationView.vala"
	granite_services_application_set_badge ((gint64) _tmp2_, ___lambda40__gasync_ready_callback, g_object_ref (self));
#line 435 "ApplicationView.c"
}

static void
__application_view___lambda39__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                              gpointer self)
{
#line 71 "../demo/Views/ApplicationView.vala"
	_application_view___lambda39_ (self);
#line 444 "ApplicationView.c"
}

static void
__lambda42_ (ApplicationView* self,
             GObject* obj,
             GAsyncResult* res)
{
	GError* _inner_error0_ = NULL;
#line 82 "../demo/Views/ApplicationView.vala"
	g_return_if_fail (res != NULL);
#line 455 "ApplicationView.c"
	{
#line 84 "../demo/Views/ApplicationView.vala"
		granite_services_application_set_badge_visible_finish (res, &_inner_error0_);
#line 84 "../demo/Views/ApplicationView.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 461 "ApplicationView.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp0_;
		const gchar* _tmp1_;
#line 83 "../demo/Views/ApplicationView.vala"
		e = _inner_error0_;
#line 83 "../demo/Views/ApplicationView.vala"
		_inner_error0_ = NULL;
#line 86 "../demo/Views/ApplicationView.vala"
		_tmp0_ = e;
#line 86 "../demo/Views/ApplicationView.vala"
		_tmp1_ = _tmp0_->message;
#line 86 "../demo/Views/ApplicationView.vala"
		g_critical ("ApplicationView.vala:86: %s", _tmp1_);
#line 83 "../demo/Views/ApplicationView.vala"
		_g_error_free0 (e);
#line 483 "ApplicationView.c"
	}
	__finally0:
#line 83 "../demo/Views/ApplicationView.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 83 "../demo/Views/ApplicationView.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 83 "../demo/Views/ApplicationView.vala"
		g_clear_error (&_inner_error0_);
#line 83 "../demo/Views/ApplicationView.vala"
		return;
#line 494 "ApplicationView.c"
	}
}

static void
___lambda42__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 82 "../demo/Views/ApplicationView.vala"
	__lambda42_ ((ApplicationView*) self, source_object, res);
#line 82 "../demo/Views/ApplicationView.vala"
	g_object_unref (self);
#line 507 "ApplicationView.c"
}

static void
_application_view___lambda41_ (Block3Data* _data3_)
{
	ApplicationView* self;
	GtkSwitch* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 81 "../demo/Views/ApplicationView.vala"
	self = _data3_->self;
#line 82 "../demo/Views/ApplicationView.vala"
	_tmp0_ = _data3_->badge_visible_switch;
#line 82 "../demo/Views/ApplicationView.vala"
	_tmp1_ = gtk_switch_get_active (_tmp0_);
#line 82 "../demo/Views/ApplicationView.vala"
	_tmp2_ = _tmp1_;
#line 82 "../demo/Views/ApplicationView.vala"
	granite_services_application_set_badge_visible (_tmp2_, ___lambda42__gasync_ready_callback, g_object_ref (self));
#line 527 "ApplicationView.c"
}

static void
__application_view___lambda41__g_object_notify (GObject* _sender,
                                                GParamSpec* pspec,
                                                gpointer self)
{
#line 81 "../demo/Views/ApplicationView.vala"
	_application_view___lambda41_ (self);
#line 537 "ApplicationView.c"
}

static GObject *
application_view_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ApplicationView * self;
	Block3Data* _data3_;
	GtkLabel* progress_visible_label = NULL;
	GtkLabel* _tmp0_;
	GtkSwitch* _tmp1_;
	GtkSwitch* _tmp2_;
	GtkScale* _tmp3_;
	GtkLabel* badge_visible_label = NULL;
	GtkLabel* _tmp4_;
	GtkSwitch* _tmp5_;
	GtkSwitch* _tmp6_;
	GtkSpinButton* _tmp7_;
	GtkLabel* _tmp8_;
	GtkSwitch* _tmp9_;
	GtkScale* _tmp10_;
	GtkLabel* _tmp11_;
	GtkSwitch* _tmp12_;
	GtkSpinButton* _tmp13_;
	GtkSwitch* _tmp14_;
	GtkScale* _tmp15_;
	GtkSwitch* _tmp16_;
	GtkSpinButton* _tmp17_;
	GtkScale* _tmp18_;
	GtkSwitch* _tmp19_;
	GtkSpinButton* _tmp20_;
	GtkSwitch* _tmp21_;
#line 21 "../demo/Views/ApplicationView.vala"
	parent_class = G_OBJECT_CLASS (application_view_parent_class);
#line 21 "../demo/Views/ApplicationView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 21 "../demo/Views/ApplicationView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_APPLICATION_VIEW, ApplicationView);
#line 21 "../demo/Views/ApplicationView.vala"
	_data3_ = g_slice_new0 (Block3Data);
#line 21 "../demo/Views/ApplicationView.vala"
	_data3_->_ref_count_ = 1;
#line 21 "../demo/Views/ApplicationView.vala"
	_data3_->self = g_object_ref (self);
#line 22 "../demo/Views/ApplicationView.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new ("Show Progress:");
#line 22 "../demo/Views/ApplicationView.vala"
	g_object_ref_sink (_tmp0_);
#line 22 "../demo/Views/ApplicationView.vala"
	progress_visible_label = _tmp0_;
#line 24 "../demo/Views/ApplicationView.vala"
	_tmp1_ = (GtkSwitch*) gtk_switch_new ();
#line 24 "../demo/Views/ApplicationView.vala"
	g_object_ref_sink (_tmp1_);
#line 24 "../demo/Views/ApplicationView.vala"
	_data3_->progress_visible_switch = _tmp1_;
#line 25 "../demo/Views/ApplicationView.vala"
	_tmp2_ = _data3_->progress_visible_switch;
#line 25 "../demo/Views/ApplicationView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp2_, GTK_ALIGN_CENTER);
#line 27 "../demo/Views/ApplicationView.vala"
	_tmp3_ = (GtkScale*) gtk_scale_new_with_range (GTK_ORIENTATION_HORIZONTAL, (gdouble) 0, (gdouble) 1, 0.05);
#line 27 "../demo/Views/ApplicationView.vala"
	g_object_ref_sink (_tmp3_);
#line 27 "../demo/Views/ApplicationView.vala"
	_data3_->progress_scale = _tmp3_;
#line 29 "../demo/Views/ApplicationView.vala"
	_tmp4_ = (GtkLabel*) gtk_label_new ("Show Badge:");
#line 29 "../demo/Views/ApplicationView.vala"
	g_object_ref_sink (_tmp4_);
#line 29 "../demo/Views/ApplicationView.vala"
	badge_visible_label = _tmp4_;
#line 31 "../demo/Views/ApplicationView.vala"
	_tmp5_ = (GtkSwitch*) gtk_switch_new ();
#line 31 "../demo/Views/ApplicationView.vala"
	g_object_ref_sink (_tmp5_);
#line 31 "../demo/Views/ApplicationView.vala"
	_data3_->badge_visible_switch = _tmp5_;
#line 32 "../demo/Views/ApplicationView.vala"
	_tmp6_ = _data3_->badge_visible_switch;
#line 32 "../demo/Views/ApplicationView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp6_, GTK_ALIGN_CENTER);
#line 34 "../demo/Views/ApplicationView.vala"
	_tmp7_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 0, (gdouble) G_MAXINT64, (gdouble) 1);
#line 34 "../demo/Views/ApplicationView.vala"
	g_object_ref_sink (_tmp7_);
#line 34 "../demo/Views/ApplicationView.vala"
	_data3_->badge_spin = _tmp7_;
#line 36 "../demo/Views/ApplicationView.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 12);
#line 37 "../demo/Views/ApplicationView.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 6);
#line 38 "../demo/Views/ApplicationView.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) self, GTK_ORIENTATION_VERTICAL);
#line 39 "../demo/Views/ApplicationView.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 40 "../demo/Views/ApplicationView.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 41 "../demo/Views/ApplicationView.vala"
	_tmp8_ = progress_visible_label;
#line 41 "../demo/Views/ApplicationView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp8_, 0, 0, 1, 1);
#line 42 "../demo/Views/ApplicationView.vala"
	_tmp9_ = _data3_->progress_visible_switch;
#line 42 "../demo/Views/ApplicationView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp9_, 1, 0, 1, 1);
#line 43 "../demo/Views/ApplicationView.vala"
	_tmp10_ = _data3_->progress_scale;
#line 43 "../demo/Views/ApplicationView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp10_, 2, 0, 1, 1);
#line 44 "../demo/Views/ApplicationView.vala"
	_tmp11_ = badge_visible_label;
#line 44 "../demo/Views/ApplicationView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp11_, 0, 1, 1, 1);
#line 45 "../demo/Views/ApplicationView.vala"
	_tmp12_ = _data3_->badge_visible_switch;
#line 45 "../demo/Views/ApplicationView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp12_, 1, 1, 1, 1);
#line 46 "../demo/Views/ApplicationView.vala"
	_tmp13_ = _data3_->badge_spin;
#line 46 "../demo/Views/ApplicationView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp13_, 2, 1, 1, 1);
#line 48 "../demo/Views/ApplicationView.vala"
	_tmp14_ = _data3_->progress_visible_switch;
#line 48 "../demo/Views/ApplicationView.vala"
	_tmp15_ = _data3_->progress_scale;
#line 48 "../demo/Views/ApplicationView.vala"
	g_object_bind_property_with_closures ((GObject*) _tmp14_, "active", (GObject*) _tmp15_, "sensitive", G_BINDING_SYNC_CREATE, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 49 "../demo/Views/ApplicationView.vala"
	_tmp16_ = _data3_->badge_visible_switch;
#line 49 "../demo/Views/ApplicationView.vala"
	_tmp17_ = _data3_->badge_spin;
#line 49 "../demo/Views/ApplicationView.vala"
	g_object_bind_property_with_closures ((GObject*) _tmp16_, "active", (GObject*) _tmp17_, "sensitive", G_BINDING_SYNC_CREATE, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 51 "../demo/Views/ApplicationView.vala"
	_tmp18_ = _data3_->progress_scale;
#line 51 "../demo/Views/ApplicationView.vala"
	g_signal_connect_data ((GtkRange*) _tmp18_, "value-changed", (GCallback) __application_view___lambda35__gtk_range_value_changed, block3_data_ref (_data3_), (GClosureNotify) block3_data_unref, 0);
#line 61 "../demo/Views/ApplicationView.vala"
	_tmp19_ = _data3_->progress_visible_switch;
#line 61 "../demo/Views/ApplicationView.vala"
	g_signal_connect_data ((GObject*) _tmp19_, "notify::active", (GCallback) __application_view___lambda37__g_object_notify, block3_data_ref (_data3_), (GClosureNotify) block3_data_unref, 0);
#line 71 "../demo/Views/ApplicationView.vala"
	_tmp20_ = _data3_->badge_spin;
#line 71 "../demo/Views/ApplicationView.vala"
	g_signal_connect_data (_tmp20_, "value-changed", (GCallback) __application_view___lambda39__gtk_spin_button_value_changed, block3_data_ref (_data3_), (GClosureNotify) block3_data_unref, 0);
#line 81 "../demo/Views/ApplicationView.vala"
	_tmp21_ = _data3_->badge_visible_switch;
#line 81 "../demo/Views/ApplicationView.vala"
	g_signal_connect_data ((GObject*) _tmp21_, "notify::active", (GCallback) __application_view___lambda41__g_object_notify, block3_data_ref (_data3_), (GClosureNotify) block3_data_unref, 0);
#line 21 "../demo/Views/ApplicationView.vala"
	_g_object_unref0 (badge_visible_label);
#line 21 "../demo/Views/ApplicationView.vala"
	_g_object_unref0 (progress_visible_label);
#line 21 "../demo/Views/ApplicationView.vala"
	block3_data_unref (_data3_);
#line 21 "../demo/Views/ApplicationView.vala"
	_data3_ = NULL;
#line 21 "../demo/Views/ApplicationView.vala"
	return obj;
#line 701 "ApplicationView.c"
}

static void
application_view_class_init (ApplicationViewClass * klass,
                             gpointer klass_data)
{
#line 20 "../demo/Views/ApplicationView.vala"
	application_view_parent_class = g_type_class_peek_parent (klass);
#line 20 "../demo/Views/ApplicationView.vala"
	G_OBJECT_CLASS (klass)->constructor = application_view_constructor;
#line 712 "ApplicationView.c"
}

static void
application_view_instance_init (ApplicationView * self,
                                gpointer klass)
{
}

static GType
application_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ApplicationViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) application_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ApplicationView), 0, (GInstanceInitFunc) application_view_instance_init, NULL };
	GType application_view_type_id;
	application_view_type_id = g_type_register_static (gtk_grid_get_type (), "ApplicationView", &g_define_type_info, 0);
	return application_view_type_id;
}

GType
application_view_get_type (void)
{
	static volatile gsize application_view_type_id__volatile = 0;
	if (g_once_init_enter (&application_view_type_id__volatile)) {
		GType application_view_type_id;
		application_view_type_id = application_view_get_type_once ();
		g_once_init_leave (&application_view_type_id__volatile, application_view_type_id);
	}
	return application_view_type_id__volatile;
}

