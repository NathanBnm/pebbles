/* AccelLabelView.c generated by valac 0.48.14, the Vala compiler
 * generated from AccelLabelView.vala, do not modify */

/*
 *  Copyright 2019 elementary, Inc. (https://elementary.io)
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include "granite.h"
#include <glib.h>

#define TYPE_ACCEL_LABEL_VIEW (accel_label_view_get_type ())
#define ACCEL_LABEL_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ACCEL_LABEL_VIEW, AccelLabelView))
#define ACCEL_LABEL_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_ACCEL_LABEL_VIEW, AccelLabelViewClass))
#define IS_ACCEL_LABEL_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ACCEL_LABEL_VIEW))
#define IS_ACCEL_LABEL_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_ACCEL_LABEL_VIEW))
#define ACCEL_LABEL_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ACCEL_LABEL_VIEW, AccelLabelViewClass))

typedef struct _AccelLabelView AccelLabelView;
typedef struct _AccelLabelViewClass AccelLabelViewClass;
typedef struct _AccelLabelViewPrivate AccelLabelViewPrivate;
enum  {
	ACCEL_LABEL_VIEW_0_PROPERTY,
	ACCEL_LABEL_VIEW_NUM_PROPERTIES
};
static GParamSpec* accel_label_view_properties[ACCEL_LABEL_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _AccelLabelView {
	GtkGrid parent_instance;
	AccelLabelViewPrivate * priv;
};

struct _AccelLabelViewClass {
	GtkGridClass parent_class;
};

static gpointer accel_label_view_parent_class = NULL;

GType accel_label_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (AccelLabelView, g_object_unref)
AccelLabelView* accel_label_view_new (void);
AccelLabelView* accel_label_view_construct (GType object_type);
static GObject * accel_label_view_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
static GType accel_label_view_get_type_once (void);

AccelLabelView*
accel_label_view_construct (GType object_type)
{
	AccelLabelView * self = NULL;
#line 20 "../demo/Views/AccelLabelView.vala"
	self = (AccelLabelView*) g_object_new (object_type, NULL);
#line 20 "../demo/Views/AccelLabelView.vala"
	return self;
#line 74 "AccelLabelView.c"
}

AccelLabelView*
accel_label_view_new (void)
{
#line 20 "../demo/Views/AccelLabelView.vala"
	return accel_label_view_construct (TYPE_ACCEL_LABEL_VIEW);
#line 82 "AccelLabelView.c"
}

static GObject *
accel_label_view_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	AccelLabelView * self;
	GtkLabel* accellabel_label = NULL;
	GtkLabel* _tmp0_;
	GtkLabel* _tmp1_;
	GraniteAccelLabel* copy_label = NULL;
	GraniteAccelLabel* _tmp2_;
	GtkLabel* popover_label = NULL;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkModelButton* lock_button = NULL;
	GtkModelButton* _tmp5_;
	GtkModelButton* _tmp6_;
	GtkWidget* _tmp7_;
	GtkModelButton* _tmp8_;
	GraniteAccelLabel* _tmp9_;
	GraniteAccelLabel* _tmp10_;
	GtkModelButton* logout_button = NULL;
	GtkModelButton* _tmp11_;
	GtkModelButton* _tmp12_;
	GtkWidget* _tmp13_;
	GtkModelButton* _tmp14_;
	GraniteAccelLabel* _tmp15_;
	GraniteAccelLabel* _tmp16_;
	GtkGrid* popover_grid = NULL;
	GtkGrid* _tmp17_;
	GtkGrid* _tmp18_;
	GtkGrid* _tmp19_;
	GtkGrid* _tmp20_;
	GtkGrid* _tmp21_;
	GtkModelButton* _tmp22_;
	GtkGrid* _tmp23_;
	GtkModelButton* _tmp24_;
	GtkGrid* _tmp25_;
	GtkPopover* popover = NULL;
	GtkPopover* _tmp26_;
	GtkPopover* _tmp27_;
	GtkGrid* _tmp28_;
	GtkMenuButton* popover_button = NULL;
	GtkMenuButton* _tmp29_;
	GtkMenuButton* _tmp30_;
	GtkPopover* _tmp31_;
	GtkMenuItem* undo_menuitem = NULL;
	GtkMenuItem* _tmp32_;
	GtkMenuItem* _tmp33_;
	GraniteAccelLabel* _tmp34_;
	GraniteAccelLabel* _tmp35_;
	GtkMenuItem* redo_menuitem = NULL;
	GtkMenuItem* _tmp36_;
	GtkMenuItem* _tmp37_;
	GraniteAccelLabel* _tmp38_;
	GraniteAccelLabel* _tmp39_;
	GtkLabel* menu_label = NULL;
	GtkLabel* _tmp40_;
	GtkLabel* _tmp41_;
	GtkMenu* menu = NULL;
	GtkMenu* _tmp42_;
	GtkMenu* _tmp43_;
	GtkMenuItem* _tmp44_;
	GtkMenu* _tmp45_;
	GtkMenuItem* _tmp46_;
	GtkMenu* _tmp47_;
	GtkMenuButton* menu_button = NULL;
	GtkMenuButton* _tmp48_;
	GtkMenuButton* _tmp49_;
	GtkMenu* _tmp50_;
	GtkLabel* _tmp51_;
	GraniteAccelLabel* _tmp52_;
	GtkLabel* _tmp53_;
	GtkMenuButton* _tmp54_;
	GtkLabel* _tmp55_;
	GtkMenuButton* _tmp56_;
#line 21 "../demo/Views/AccelLabelView.vala"
	parent_class = G_OBJECT_CLASS (accel_label_view_parent_class);
#line 21 "../demo/Views/AccelLabelView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 21 "../demo/Views/AccelLabelView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_ACCEL_LABEL_VIEW, AccelLabelView);
#line 22 "../demo/Views/AccelLabelView.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new ("AccelLabel:");
#line 22 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp0_);
#line 22 "../demo/Views/AccelLabelView.vala"
	accellabel_label = _tmp0_;
#line 23 "../demo/Views/AccelLabelView.vala"
	_tmp1_ = accellabel_label;
#line 23 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp1_, GTK_ALIGN_END);
#line 25 "../demo/Views/AccelLabelView.vala"
	_tmp2_ = granite_accel_label_new ("Copy", "<Ctrl>C");
#line 25 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp2_);
#line 25 "../demo/Views/AccelLabelView.vala"
	copy_label = _tmp2_;
#line 27 "../demo/Views/AccelLabelView.vala"
	_tmp3_ = (GtkLabel*) gtk_label_new ("In a Popover:");
#line 27 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp3_);
#line 27 "../demo/Views/AccelLabelView.vala"
	popover_label = _tmp3_;
#line 28 "../demo/Views/AccelLabelView.vala"
	_tmp4_ = popover_label;
#line 28 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp4_, GTK_ALIGN_END);
#line 30 "../demo/Views/AccelLabelView.vala"
	_tmp5_ = (GtkModelButton*) gtk_model_button_new ();
#line 30 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp5_);
#line 30 "../demo/Views/AccelLabelView.vala"
	lock_button = _tmp5_;
#line 31 "../demo/Views/AccelLabelView.vala"
	_tmp6_ = lock_button;
#line 31 "../demo/Views/AccelLabelView.vala"
	_tmp7_ = gtk_bin_get_child ((GtkBin*) _tmp6_);
#line 31 "../demo/Views/AccelLabelView.vala"
	gtk_widget_destroy (_tmp7_);
#line 32 "../demo/Views/AccelLabelView.vala"
	_tmp8_ = lock_button;
#line 32 "../demo/Views/AccelLabelView.vala"
	_tmp9_ = granite_accel_label_new ("Lock", "<Super>L");
#line 32 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp9_);
#line 32 "../demo/Views/AccelLabelView.vala"
	_tmp10_ = _tmp9_;
#line 32 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp8_, (GtkWidget*) _tmp10_);
#line 32 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (_tmp10_);
#line 34 "../demo/Views/AccelLabelView.vala"
	_tmp11_ = (GtkModelButton*) gtk_model_button_new ();
#line 34 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp11_);
#line 34 "../demo/Views/AccelLabelView.vala"
	logout_button = _tmp11_;
#line 35 "../demo/Views/AccelLabelView.vala"
	_tmp12_ = logout_button;
#line 35 "../demo/Views/AccelLabelView.vala"
	_tmp13_ = gtk_bin_get_child ((GtkBin*) _tmp12_);
#line 35 "../demo/Views/AccelLabelView.vala"
	gtk_widget_destroy (_tmp13_);
#line 36 "../demo/Views/AccelLabelView.vala"
	_tmp14_ = logout_button;
#line 36 "../demo/Views/AccelLabelView.vala"
	_tmp15_ = granite_accel_label_new ("Log Outâ€¦", "<Ctrl><Alt>Delete");
#line 36 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp15_);
#line 36 "../demo/Views/AccelLabelView.vala"
	_tmp16_ = _tmp15_;
#line 36 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp14_, (GtkWidget*) _tmp16_);
#line 36 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (_tmp16_);
#line 38 "../demo/Views/AccelLabelView.vala"
	_tmp17_ = (GtkGrid*) gtk_grid_new ();
#line 38 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp17_);
#line 38 "../demo/Views/AccelLabelView.vala"
	popover_grid = _tmp17_;
#line 39 "../demo/Views/AccelLabelView.vala"
	_tmp18_ = popover_grid;
#line 39 "../demo/Views/AccelLabelView.vala"
	_tmp19_ = popover_grid;
#line 39 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp19_, 3);
#line 39 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp18_, 3);
#line 40 "../demo/Views/AccelLabelView.vala"
	_tmp20_ = popover_grid;
#line 40 "../demo/Views/AccelLabelView.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp20_, GTK_ORIENTATION_VERTICAL);
#line 41 "../demo/Views/AccelLabelView.vala"
	_tmp21_ = popover_grid;
#line 41 "../demo/Views/AccelLabelView.vala"
	_tmp22_ = lock_button;
#line 41 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp21_, (GtkWidget*) _tmp22_);
#line 42 "../demo/Views/AccelLabelView.vala"
	_tmp23_ = popover_grid;
#line 42 "../demo/Views/AccelLabelView.vala"
	_tmp24_ = logout_button;
#line 42 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp23_, (GtkWidget*) _tmp24_);
#line 43 "../demo/Views/AccelLabelView.vala"
	_tmp25_ = popover_grid;
#line 43 "../demo/Views/AccelLabelView.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp25_);
#line 45 "../demo/Views/AccelLabelView.vala"
	_tmp26_ = (GtkPopover*) gtk_popover_new (NULL);
#line 45 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp26_);
#line 45 "../demo/Views/AccelLabelView.vala"
	popover = _tmp26_;
#line 46 "../demo/Views/AccelLabelView.vala"
	_tmp27_ = popover;
#line 46 "../demo/Views/AccelLabelView.vala"
	_tmp28_ = popover_grid;
#line 46 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp27_, (GtkWidget*) _tmp28_);
#line 48 "../demo/Views/AccelLabelView.vala"
	_tmp29_ = (GtkMenuButton*) gtk_menu_button_new ();
#line 48 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp29_);
#line 48 "../demo/Views/AccelLabelView.vala"
	popover_button = _tmp29_;
#line 49 "../demo/Views/AccelLabelView.vala"
	_tmp30_ = popover_button;
#line 49 "../demo/Views/AccelLabelView.vala"
	_tmp31_ = popover;
#line 49 "../demo/Views/AccelLabelView.vala"
	gtk_menu_button_set_popover (_tmp30_, _tmp31_);
#line 51 "../demo/Views/AccelLabelView.vala"
	_tmp32_ = (GtkMenuItem*) gtk_menu_item_new ();
#line 51 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp32_);
#line 51 "../demo/Views/AccelLabelView.vala"
	undo_menuitem = _tmp32_;
#line 52 "../demo/Views/AccelLabelView.vala"
	_tmp33_ = undo_menuitem;
#line 52 "../demo/Views/AccelLabelView.vala"
	_tmp34_ = granite_accel_label_new ("Undo", "<Ctrl>Z");
#line 52 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp34_);
#line 52 "../demo/Views/AccelLabelView.vala"
	_tmp35_ = _tmp34_;
#line 52 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp33_, (GtkWidget*) _tmp35_);
#line 52 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (_tmp35_);
#line 54 "../demo/Views/AccelLabelView.vala"
	_tmp36_ = (GtkMenuItem*) gtk_menu_item_new ();
#line 54 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp36_);
#line 54 "../demo/Views/AccelLabelView.vala"
	redo_menuitem = _tmp36_;
#line 55 "../demo/Views/AccelLabelView.vala"
	_tmp37_ = redo_menuitem;
#line 55 "../demo/Views/AccelLabelView.vala"
	_tmp38_ = granite_accel_label_new ("Redo", "<Ctrl><Shift>Z");
#line 55 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp38_);
#line 55 "../demo/Views/AccelLabelView.vala"
	_tmp39_ = _tmp38_;
#line 55 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp37_, (GtkWidget*) _tmp39_);
#line 55 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (_tmp39_);
#line 57 "../demo/Views/AccelLabelView.vala"
	_tmp40_ = (GtkLabel*) gtk_label_new ("In a Menu:");
#line 57 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp40_);
#line 57 "../demo/Views/AccelLabelView.vala"
	menu_label = _tmp40_;
#line 58 "../demo/Views/AccelLabelView.vala"
	_tmp41_ = menu_label;
#line 58 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp41_, GTK_ALIGN_END);
#line 60 "../demo/Views/AccelLabelView.vala"
	_tmp42_ = (GtkMenu*) gtk_menu_new ();
#line 60 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp42_);
#line 60 "../demo/Views/AccelLabelView.vala"
	menu = _tmp42_;
#line 61 "../demo/Views/AccelLabelView.vala"
	_tmp43_ = menu;
#line 61 "../demo/Views/AccelLabelView.vala"
	_tmp44_ = undo_menuitem;
#line 61 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp43_, (GtkWidget*) _tmp44_);
#line 62 "../demo/Views/AccelLabelView.vala"
	_tmp45_ = menu;
#line 62 "../demo/Views/AccelLabelView.vala"
	_tmp46_ = redo_menuitem;
#line 62 "../demo/Views/AccelLabelView.vala"
	gtk_container_add ((GtkContainer*) _tmp45_, (GtkWidget*) _tmp46_);
#line 63 "../demo/Views/AccelLabelView.vala"
	_tmp47_ = menu;
#line 63 "../demo/Views/AccelLabelView.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp47_);
#line 65 "../demo/Views/AccelLabelView.vala"
	_tmp48_ = (GtkMenuButton*) gtk_menu_button_new ();
#line 65 "../demo/Views/AccelLabelView.vala"
	g_object_ref_sink (_tmp48_);
#line 65 "../demo/Views/AccelLabelView.vala"
	menu_button = _tmp48_;
#line 66 "../demo/Views/AccelLabelView.vala"
	_tmp49_ = menu_button;
#line 66 "../demo/Views/AccelLabelView.vala"
	_tmp50_ = menu;
#line 66 "../demo/Views/AccelLabelView.vala"
	gtk_menu_button_set_popup (_tmp49_, _tmp50_);
#line 68 "../demo/Views/AccelLabelView.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 12);
#line 69 "../demo/Views/AccelLabelView.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 12);
#line 70 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 71 "../demo/Views/AccelLabelView.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 72 "../demo/Views/AccelLabelView.vala"
	_tmp51_ = accellabel_label;
#line 72 "../demo/Views/AccelLabelView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp51_, 0, 0, 1, 1);
#line 73 "../demo/Views/AccelLabelView.vala"
	_tmp52_ = copy_label;
#line 73 "../demo/Views/AccelLabelView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp52_, 1, 0, 1, 1);
#line 74 "../demo/Views/AccelLabelView.vala"
	_tmp53_ = popover_label;
#line 74 "../demo/Views/AccelLabelView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp53_, 0, 1, 1, 1);
#line 75 "../demo/Views/AccelLabelView.vala"
	_tmp54_ = popover_button;
#line 75 "../demo/Views/AccelLabelView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp54_, 1, 1, 1, 1);
#line 76 "../demo/Views/AccelLabelView.vala"
	_tmp55_ = menu_label;
#line 76 "../demo/Views/AccelLabelView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp55_, 0, 2, 1, 1);
#line 77 "../demo/Views/AccelLabelView.vala"
	_tmp56_ = menu_button;
#line 77 "../demo/Views/AccelLabelView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp56_, 1, 2, 1, 1);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (menu_button);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (menu);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (menu_label);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (redo_menuitem);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (undo_menuitem);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (popover_button);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (popover);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (popover_grid);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (logout_button);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (lock_button);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (popover_label);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (copy_label);
#line 21 "../demo/Views/AccelLabelView.vala"
	_g_object_unref0 (accellabel_label);
#line 21 "../demo/Views/AccelLabelView.vala"
	return obj;
#line 441 "AccelLabelView.c"
}

static void
accel_label_view_class_init (AccelLabelViewClass * klass,
                             gpointer klass_data)
{
#line 20 "../demo/Views/AccelLabelView.vala"
	accel_label_view_parent_class = g_type_class_peek_parent (klass);
#line 20 "../demo/Views/AccelLabelView.vala"
	G_OBJECT_CLASS (klass)->constructor = accel_label_view_constructor;
#line 452 "AccelLabelView.c"
}

static void
accel_label_view_instance_init (AccelLabelView * self,
                                gpointer klass)
{
}

static GType
accel_label_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (AccelLabelViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) accel_label_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (AccelLabelView), 0, (GInstanceInitFunc) accel_label_view_instance_init, NULL };
	GType accel_label_view_type_id;
	accel_label_view_type_id = g_type_register_static (gtk_grid_get_type (), "AccelLabelView", &g_define_type_info, 0);
	return accel_label_view_type_id;
}

GType
accel_label_view_get_type (void)
{
	static volatile gsize accel_label_view_type_id__volatile = 0;
	if (g_once_init_enter (&accel_label_view_type_id__volatile)) {
		GType accel_label_view_type_id;
		accel_label_view_type_id = accel_label_view_get_type_once ();
		g_once_init_leave (&accel_label_view_type_id__volatile, accel_label_view_type_id);
	}
	return accel_label_view_type_id__volatile;
}

