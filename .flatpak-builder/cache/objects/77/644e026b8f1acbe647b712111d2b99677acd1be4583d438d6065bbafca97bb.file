/* UtilsView.c generated by valac 0.48.14, the Vala compiler
 * generated from UtilsView.vala, do not modify */

/*
* Copyright (c) 2018 elementary, Inc. (https://elementary.io)
*
* This library is free software; you can redistribute it and/or
* modify it under the terms of the GNU Lesser General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this library; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA.
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gdk/gdk.h>
#include "granite.h"

#define TYPE_UTILS_VIEW (utils_view_get_type ())
#define UTILS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTILS_VIEW, UtilsView))
#define UTILS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTILS_VIEW, UtilsViewClass))
#define IS_UTILS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTILS_VIEW))
#define IS_UTILS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTILS_VIEW))
#define UTILS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTILS_VIEW, UtilsViewClass))

typedef struct _UtilsView UtilsView;
typedef struct _UtilsViewClass UtilsViewClass;
typedef struct _UtilsViewPrivate UtilsViewPrivate;
enum  {
	UTILS_VIEW_0_PROPERTY,
	UTILS_VIEW_NUM_PROPERTIES
};
static GParamSpec* utils_view_properties[UTILS_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _Block16Data Block16Data;
typedef struct _Block17Data Block17Data;

struct _UtilsView {
	GtkGrid parent_instance;
	UtilsViewPrivate * priv;
};

struct _UtilsViewClass {
	GtkGridClass parent_class;
};

struct _UtilsViewPrivate {
	GtkStyleContext* demo_label_style_context;
};

struct _Block16Data {
	int _ref_count_;
	UtilsView* self;
	GdkRGBA gdk_demo_bg;
};

struct _Block17Data {
	int _ref_count_;
	Block16Data * _data16_;
	GtkColorSelection* widget;
};

static gint UtilsView_private_offset;
static gpointer utils_view_parent_class = NULL;

GType utils_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (UtilsView, g_object_unref)
#define UTILS_VIEW_CSS "\n" \
"        .contrast-demo {\n" \
"            background: %s;\n" \
"            color: %s;\n" \
"            text-shadow: none;\n" \
"        }\n" \
"    "
#define UTILS_VIEW_DARK_BG "#273445"
static void utils_view_style_contrast_demo (UtilsView* self,
                                     GdkRGBA* bg_color);
UtilsView* utils_view_new (void);
UtilsView* utils_view_construct (GType object_type);
static GObject * utils_view_constructor (GType type,
                                  guint n_construct_properties,
                                  GObjectConstructParam * construct_properties);
static Block16Data* block16_data_ref (Block16Data* _data16_);
static void block16_data_unref (void * _userdata_);
static void _utils_view___lambda27_ (Block16Data* _data16_);
static Block17Data* block17_data_ref (Block17Data* _data17_);
static void block17_data_unref (void * _userdata_);
static void __lambda28_ (Block17Data* _data17_);
static void ___lambda28__gtk_color_selection_color_changed (GtkColorSelection* _sender,
                                                     gpointer self);
static void __utils_view___lambda27__gtk_button_clicked (GtkButton* _sender,
                                                  gpointer self);
static void utils_view_finalize (GObject * obj);
static GType utils_view_get_type_once (void);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);

static inline gpointer
utils_view_get_instance_private (UtilsView* self)
{
	return G_STRUCT_MEMBER_P (self, UtilsView_private_offset);
}

static void
utils_view_style_contrast_demo (UtilsView* self,
                                GdkRGBA* bg_color)
{
	GtkCssProvider* provider = NULL;
	GtkCssProvider* _tmp0_;
	GError* _inner_error0_ = NULL;
#line 87 "../demo/Views/UtilsView.vala"
	g_return_if_fail (self != NULL);
#line 87 "../demo/Views/UtilsView.vala"
	g_return_if_fail (bg_color != NULL);
#line 88 "../demo/Views/UtilsView.vala"
	_tmp0_ = gtk_css_provider_new ();
#line 88 "../demo/Views/UtilsView.vala"
	provider = _tmp0_;
#line 132 "UtilsView.c"
	{
		gchar* css = NULL;
		gchar* _tmp1_;
		gchar* _tmp2_;
		GdkRGBA _tmp3_;
		GdkRGBA _tmp4_ = {0};
		gchar* _tmp5_;
		gchar* _tmp6_;
		gchar* _tmp7_;
		gchar* _tmp8_;
		GtkCssProvider* _tmp9_;
		const gchar* _tmp10_;
		const gchar* _tmp11_;
		gint _tmp12_;
		gint _tmp13_;
		GtkStyleContext* _tmp14_;
		GtkCssProvider* _tmp15_;
#line 90 "../demo/Views/UtilsView.vala"
		_tmp1_ = gdk_rgba_to_string (bg_color);
#line 90 "../demo/Views/UtilsView.vala"
		_tmp2_ = _tmp1_;
#line 90 "../demo/Views/UtilsView.vala"
		_tmp3_ = *bg_color;
#line 90 "../demo/Views/UtilsView.vala"
		granite_contrasting_foreground_color (&_tmp3_, &_tmp4_);
#line 90 "../demo/Views/UtilsView.vala"
		_tmp5_ = gdk_rgba_to_string (&_tmp4_);
#line 90 "../demo/Views/UtilsView.vala"
		_tmp6_ = _tmp5_;
#line 90 "../demo/Views/UtilsView.vala"
		_tmp7_ = g_strdup_printf (UTILS_VIEW_CSS, _tmp2_, _tmp6_);
#line 90 "../demo/Views/UtilsView.vala"
		_tmp8_ = _tmp7_;
#line 90 "../demo/Views/UtilsView.vala"
		_g_free0 (_tmp6_);
#line 90 "../demo/Views/UtilsView.vala"
		_g_free0 (_tmp2_);
#line 90 "../demo/Views/UtilsView.vala"
		css = _tmp8_;
#line 95 "../demo/Views/UtilsView.vala"
		_tmp9_ = provider;
#line 95 "../demo/Views/UtilsView.vala"
		_tmp10_ = css;
#line 95 "../demo/Views/UtilsView.vala"
		_tmp11_ = css;
#line 95 "../demo/Views/UtilsView.vala"
		_tmp12_ = strlen (_tmp11_);
#line 95 "../demo/Views/UtilsView.vala"
		_tmp13_ = _tmp12_;
#line 95 "../demo/Views/UtilsView.vala"
		gtk_css_provider_load_from_data (_tmp9_, _tmp10_, (gssize) _tmp13_, &_inner_error0_);
#line 95 "../demo/Views/UtilsView.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 95 "../demo/Views/UtilsView.vala"
			_g_free0 (css);
#line 188 "UtilsView.c"
			goto __catch0_g_error;
		}
#line 96 "../demo/Views/UtilsView.vala"
		_tmp14_ = self->priv->demo_label_style_context;
#line 96 "../demo/Views/UtilsView.vala"
		_tmp15_ = provider;
#line 96 "../demo/Views/UtilsView.vala"
		gtk_style_context_add_provider (_tmp14_, (GtkStyleProvider*) _tmp15_, (guint) GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
#line 89 "../demo/Views/UtilsView.vala"
		_g_free0 (css);
#line 199 "UtilsView.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp16_;
		const gchar* _tmp17_;
#line 89 "../demo/Views/UtilsView.vala"
		e = _inner_error0_;
#line 89 "../demo/Views/UtilsView.vala"
		_inner_error0_ = NULL;
#line 101 "../demo/Views/UtilsView.vala"
		_tmp16_ = e;
#line 101 "../demo/Views/UtilsView.vala"
		_tmp17_ = _tmp16_->message;
#line 101 "../demo/Views/UtilsView.vala"
		g_critical ("UtilsView.vala:101: %s", _tmp17_);
#line 102 "../demo/Views/UtilsView.vala"
		_g_error_free0 (e);
#line 102 "../demo/Views/UtilsView.vala"
		_g_object_unref0 (provider);
#line 102 "../demo/Views/UtilsView.vala"
		return;
#line 223 "UtilsView.c"
	}
	__finally0:
#line 89 "../demo/Views/UtilsView.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 89 "../demo/Views/UtilsView.vala"
		_g_object_unref0 (provider);
#line 89 "../demo/Views/UtilsView.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 89 "../demo/Views/UtilsView.vala"
		g_clear_error (&_inner_error0_);
#line 89 "../demo/Views/UtilsView.vala"
		return;
#line 236 "UtilsView.c"
	}
#line 87 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (provider);
#line 240 "UtilsView.c"
}

UtilsView*
utils_view_construct (GType object_type)
{
	UtilsView * self = NULL;
#line 20 "../demo/Views/UtilsView.vala"
	self = (UtilsView*) g_object_new (object_type, NULL);
#line 20 "../demo/Views/UtilsView.vala"
	return self;
#line 251 "UtilsView.c"
}

UtilsView*
utils_view_new (void)
{
#line 20 "../demo/Views/UtilsView.vala"
	return utils_view_construct (TYPE_UTILS_VIEW);
#line 259 "UtilsView.c"
}

static Block16Data*
block16_data_ref (Block16Data* _data16_)
{
#line 32 "../demo/Views/UtilsView.vala"
	g_atomic_int_inc (&_data16_->_ref_count_);
#line 32 "../demo/Views/UtilsView.vala"
	return _data16_;
#line 269 "UtilsView.c"
}

static void
block16_data_unref (void * _userdata_)
{
	Block16Data* _data16_;
	_data16_ = (Block16Data*) _userdata_;
#line 32 "../demo/Views/UtilsView.vala"
	if (g_atomic_int_dec_and_test (&_data16_->_ref_count_)) {
#line 279 "UtilsView.c"
		UtilsView* self;
#line 32 "../demo/Views/UtilsView.vala"
		self = _data16_->self;
#line 32 "../demo/Views/UtilsView.vala"
		_g_object_unref0 (self);
#line 32 "../demo/Views/UtilsView.vala"
		g_slice_free (Block16Data, _data16_);
#line 287 "UtilsView.c"
	}
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 50 "../demo/Views/UtilsView.vala"
	return self ? g_object_ref (self) : NULL;
#line 296 "UtilsView.c"
}

static Block17Data*
block17_data_ref (Block17Data* _data17_)
{
#line 69 "../demo/Views/UtilsView.vala"
	g_atomic_int_inc (&_data17_->_ref_count_);
#line 69 "../demo/Views/UtilsView.vala"
	return _data17_;
#line 306 "UtilsView.c"
}

static void
block17_data_unref (void * _userdata_)
{
	Block17Data* _data17_;
	_data17_ = (Block17Data*) _userdata_;
#line 69 "../demo/Views/UtilsView.vala"
	if (g_atomic_int_dec_and_test (&_data17_->_ref_count_)) {
#line 316 "UtilsView.c"
		UtilsView* self;
#line 69 "../demo/Views/UtilsView.vala"
		self = _data17_->_data16_->self;
#line 69 "../demo/Views/UtilsView.vala"
		block16_data_unref (_data17_->_data16_);
#line 69 "../demo/Views/UtilsView.vala"
		_data17_->_data16_ = NULL;
#line 69 "../demo/Views/UtilsView.vala"
		g_slice_free (Block17Data, _data17_);
#line 326 "UtilsView.c"
	}
}

static void
__lambda28_ (Block17Data* _data17_)
{
	Block16Data* _data16_;
	UtilsView* self;
	GtkColorSelection* _tmp0_;
	GdkRGBA _tmp1_ = {0};
	GdkRGBA _tmp2_;
	GtkColorSelection* _tmp3_;
	GdkRGBA _tmp4_ = {0};
	GdkRGBA _tmp5_;
#line 77 "../demo/Views/UtilsView.vala"
	_data16_ = _data17_->_data16_;
#line 77 "../demo/Views/UtilsView.vala"
	self = _data16_->self;
#line 78 "../demo/Views/UtilsView.vala"
	_tmp0_ = _data17_->widget;
#line 78 "../demo/Views/UtilsView.vala"
	gtk_color_selection_get_current_rgba (_tmp0_, &_tmp1_);
#line 78 "../demo/Views/UtilsView.vala"
	_tmp2_ = _tmp1_;
#line 78 "../demo/Views/UtilsView.vala"
	utils_view_style_contrast_demo (self, &_tmp2_);
#line 79 "../demo/Views/UtilsView.vala"
	_tmp3_ = _data17_->widget;
#line 79 "../demo/Views/UtilsView.vala"
	gtk_color_selection_get_current_rgba (_tmp3_, &_tmp4_);
#line 79 "../demo/Views/UtilsView.vala"
	_tmp5_ = _tmp4_;
#line 79 "../demo/Views/UtilsView.vala"
	_data16_->gdk_demo_bg = _tmp5_;
#line 361 "UtilsView.c"
}

static void
___lambda28__gtk_color_selection_color_changed (GtkColorSelection* _sender,
                                                gpointer self)
{
#line 77 "../demo/Views/UtilsView.vala"
	__lambda28_ (self);
#line 370 "UtilsView.c"
}

static void
_utils_view___lambda27_ (Block16Data* _data16_)
{
	UtilsView* self;
	Block17Data* _data17_;
	GtkColorSelectionDialog* dialog = NULL;
	GtkColorSelectionDialog* _tmp0_;
	GtkColorSelectionDialog* _tmp1_;
	GtkColorSelectionDialog* _tmp2_;
	GtkWidget* _tmp3_;
	GtkColorSelectionDialog* _tmp4_;
	GtkColorSelection* _tmp5_;
	GtkColorSelection* _tmp6_;
	GdkRGBA _tmp7_;
	GtkColorSelection* _tmp8_;
	GtkColorSelectionDialog* _tmp9_;
	GtkColorSelectionDialog* _tmp10_;
#line 69 "../demo/Views/UtilsView.vala"
	self = _data16_->self;
#line 69 "../demo/Views/UtilsView.vala"
	_data17_ = g_slice_new0 (Block17Data);
#line 69 "../demo/Views/UtilsView.vala"
	_data17_->_ref_count_ = 1;
#line 69 "../demo/Views/UtilsView.vala"
	_data17_->_data16_ = block16_data_ref (_data16_);
#line 70 "../demo/Views/UtilsView.vala"
	_tmp0_ = (GtkColorSelectionDialog*) gtk_color_selection_dialog_new ("");
#line 70 "../demo/Views/UtilsView.vala"
	g_object_ref_sink (_tmp0_);
#line 70 "../demo/Views/UtilsView.vala"
	dialog = _tmp0_;
#line 71 "../demo/Views/UtilsView.vala"
	_tmp1_ = dialog;
#line 71 "../demo/Views/UtilsView.vala"
	gtk_window_set_deletable ((GtkWindow*) _tmp1_, FALSE);
#line 72 "../demo/Views/UtilsView.vala"
	_tmp2_ = dialog;
#line 72 "../demo/Views/UtilsView.vala"
	_tmp3_ = gtk_widget_get_toplevel ((GtkWidget*) self);
#line 72 "../demo/Views/UtilsView.vala"
	gtk_window_set_transient_for ((GtkWindow*) _tmp2_, G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_window_get_type (), GtkWindow));
#line 74 "../demo/Views/UtilsView.vala"
	_tmp4_ = dialog;
#line 74 "../demo/Views/UtilsView.vala"
	_tmp5_ = gtk_color_selection_dialog_get_color_selection (_tmp4_);
#line 74 "../demo/Views/UtilsView.vala"
	_data17_->widget = _tmp5_;
#line 75 "../demo/Views/UtilsView.vala"
	_tmp6_ = _data17_->widget;
#line 75 "../demo/Views/UtilsView.vala"
	_tmp7_ = _data16_->gdk_demo_bg;
#line 75 "../demo/Views/UtilsView.vala"
	gtk_color_selection_set_current_rgba (_tmp6_, &_tmp7_);
#line 77 "../demo/Views/UtilsView.vala"
	_tmp8_ = _data17_->widget;
#line 77 "../demo/Views/UtilsView.vala"
	g_signal_connect_data (_tmp8_, "color-changed", (GCallback) ___lambda28__gtk_color_selection_color_changed, block17_data_ref (_data17_), (GClosureNotify) block17_data_unref, 0);
#line 82 "../demo/Views/UtilsView.vala"
	_tmp9_ = dialog;
#line 82 "../demo/Views/UtilsView.vala"
	gtk_dialog_run ((GtkDialog*) _tmp9_);
#line 83 "../demo/Views/UtilsView.vala"
	_tmp10_ = dialog;
#line 83 "../demo/Views/UtilsView.vala"
	gtk_widget_destroy ((GtkWidget*) _tmp10_);
#line 69 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (dialog);
#line 69 "../demo/Views/UtilsView.vala"
	block17_data_unref (_data17_);
#line 69 "../demo/Views/UtilsView.vala"
	_data17_ = NULL;
#line 444 "UtilsView.c"
}

static void
__utils_view___lambda27__gtk_button_clicked (GtkButton* _sender,
                                             gpointer self)
{
#line 69 "../demo/Views/UtilsView.vala"
	_utils_view___lambda27_ (self);
#line 453 "UtilsView.c"
}

static GObject *
utils_view_constructor (GType type,
                        guint n_construct_properties,
                        GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	UtilsView * self;
	Block16Data* _data16_;
	GtkLabel* tooltip_markup_label = NULL;
	GtkLabel* _tmp0_;
	GtkLabel* _tmp1_;
	GtkButton* tooltip_button_one = NULL;
	GtkButton* _tmp2_;
	GtkButton* _tmp3_;
	gchar* _tmp4_;
	gchar** _tmp5_;
	gchar** _tmp6_;
	gint _tmp6__length1;
	gchar* _tmp7_;
	gchar* _tmp8_;
	GtkButton* tooltip_button_two = NULL;
	GtkButton* _tmp9_;
	GtkButton* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	gchar** _tmp14_;
	gchar** _tmp15_;
	gint _tmp15__length1;
	gchar* _tmp16_;
	gchar* _tmp17_;
	GtkLabel* contrasting_foreground_color_label = NULL;
	GtkLabel* _tmp18_;
	GtkLabel* _tmp19_;
	GtkButton* contrast_demo_button = NULL;
	GtkButton* _tmp20_;
	GtkButton* _tmp21_;
	GtkButton* _tmp22_;
	GtkStyleContext* _tmp23_;
	GtkStyleContext* _tmp24_;
	GtkStyleContext* _tmp25_;
	GtkStyleContext* _tmp26_;
	GtkLabel* _tmp27_;
	GtkButton* _tmp28_;
	GtkButton* _tmp29_;
	GtkLabel* _tmp30_;
	GtkButton* _tmp31_;
	GdkRGBA _tmp32_;
	GtkButton* _tmp33_;
#line 32 "../demo/Views/UtilsView.vala"
	parent_class = G_OBJECT_CLASS (utils_view_parent_class);
#line 32 "../demo/Views/UtilsView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 32 "../demo/Views/UtilsView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_UTILS_VIEW, UtilsView);
#line 32 "../demo/Views/UtilsView.vala"
	_data16_ = g_slice_new0 (Block16Data);
#line 32 "../demo/Views/UtilsView.vala"
	_data16_->_ref_count_ = 1;
#line 32 "../demo/Views/UtilsView.vala"
	_data16_->self = g_object_ref (self);
#line 33 "../demo/Views/UtilsView.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new ("Markup Accel Tooltips:");
#line 33 "../demo/Views/UtilsView.vala"
	g_object_ref_sink (_tmp0_);
#line 33 "../demo/Views/UtilsView.vala"
	tooltip_markup_label = _tmp0_;
#line 34 "../demo/Views/UtilsView.vala"
	_tmp1_ = tooltip_markup_label;
#line 34 "../demo/Views/UtilsView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp1_, GTK_ALIGN_END);
#line 36 "../demo/Views/UtilsView.vala"
	_tmp2_ = (GtkButton*) gtk_button_new_from_icon_name ("mail-reply-all", (GtkIconSize) GTK_ICON_SIZE_LARGE_TOOLBAR);
#line 36 "../demo/Views/UtilsView.vala"
	g_object_ref_sink (_tmp2_);
#line 36 "../demo/Views/UtilsView.vala"
	tooltip_button_one = _tmp2_;
#line 37 "../demo/Views/UtilsView.vala"
	_tmp3_ = tooltip_button_one;
#line 37 "../demo/Views/UtilsView.vala"
	_tmp4_ = g_strdup ("<Ctrl><Shift>R");
#line 37 "../demo/Views/UtilsView.vala"
	_tmp5_ = g_new0 (gchar*, 1 + 1);
#line 37 "../demo/Views/UtilsView.vala"
	_tmp5_[0] = _tmp4_;
#line 37 "../demo/Views/UtilsView.vala"
	_tmp6_ = _tmp5_;
#line 37 "../demo/Views/UtilsView.vala"
	_tmp6__length1 = 1;
#line 37 "../demo/Views/UtilsView.vala"
	_tmp7_ = granite_markup_accel_tooltip (_tmp6_, (gint) 1, "Reply All");
#line 37 "../demo/Views/UtilsView.vala"
	_tmp8_ = _tmp7_;
#line 37 "../demo/Views/UtilsView.vala"
	gtk_widget_set_tooltip_markup ((GtkWidget*) _tmp3_, _tmp8_);
#line 37 "../demo/Views/UtilsView.vala"
	_g_free0 (_tmp8_);
#line 37 "../demo/Views/UtilsView.vala"
	_tmp6_ = (_vala_array_free (_tmp6_, _tmp6__length1, (GDestroyNotify) g_free), NULL);
#line 39 "../demo/Views/UtilsView.vala"
	_tmp9_ = (GtkButton*) gtk_button_new_with_label ("Label Buttons");
#line 39 "../demo/Views/UtilsView.vala"
	g_object_ref_sink (_tmp9_);
#line 39 "../demo/Views/UtilsView.vala"
	tooltip_button_two = _tmp9_;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp10_ = tooltip_button_two;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp11_ = g_strdup ("<Super>R");
#line 40 "../demo/Views/UtilsView.vala"
	_tmp12_ = g_strdup ("<Ctrl><Shift>Up");
#line 40 "../demo/Views/UtilsView.vala"
	_tmp13_ = g_strdup ("<Ctrl>Return");
#line 40 "../demo/Views/UtilsView.vala"
	_tmp14_ = g_new0 (gchar*, 3 + 1);
#line 40 "../demo/Views/UtilsView.vala"
	_tmp14_[0] = _tmp11_;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp14_[1] = _tmp12_;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp14_[2] = _tmp13_;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp15_ = _tmp14_;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp15__length1 = 3;
#line 40 "../demo/Views/UtilsView.vala"
	_tmp16_ = granite_markup_accel_tooltip (_tmp15_, (gint) 3, NULL);
#line 40 "../demo/Views/UtilsView.vala"
	_tmp17_ = _tmp16_;
#line 40 "../demo/Views/UtilsView.vala"
	gtk_widget_set_tooltip_markup ((GtkWidget*) _tmp10_, _tmp17_);
#line 40 "../demo/Views/UtilsView.vala"
	_g_free0 (_tmp17_);
#line 40 "../demo/Views/UtilsView.vala"
	_tmp15_ = (_vala_array_free (_tmp15_, _tmp15__length1, (GDestroyNotify) g_free), NULL);
#line 44 "../demo/Views/UtilsView.vala"
	_tmp18_ = (GtkLabel*) gtk_label_new ("Contrasting Foreground Color:");
#line 44 "../demo/Views/UtilsView.vala"
	g_object_ref_sink (_tmp18_);
#line 44 "../demo/Views/UtilsView.vala"
	contrasting_foreground_color_label = _tmp18_;
#line 45 "../demo/Views/UtilsView.vala"
	_tmp19_ = contrasting_foreground_color_label;
#line 45 "../demo/Views/UtilsView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp19_, GTK_ALIGN_END);
#line 47 "../demo/Views/UtilsView.vala"
	_tmp20_ = (GtkButton*) gtk_button_new ();
#line 47 "../demo/Views/UtilsView.vala"
	g_object_ref_sink (_tmp20_);
#line 47 "../demo/Views/UtilsView.vala"
	contrast_demo_button = _tmp20_;
#line 48 "../demo/Views/UtilsView.vala"
	_tmp21_ = contrast_demo_button;
#line 48 "../demo/Views/UtilsView.vala"
	gtk_button_set_label (_tmp21_, "Contrast Demo");
#line 50 "../demo/Views/UtilsView.vala"
	_tmp22_ = contrast_demo_button;
#line 50 "../demo/Views/UtilsView.vala"
	_tmp23_ = gtk_widget_get_style_context ((GtkWidget*) _tmp22_);
#line 50 "../demo/Views/UtilsView.vala"
	_tmp24_ = _g_object_ref0 (_tmp23_);
#line 50 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (self->priv->demo_label_style_context);
#line 50 "../demo/Views/UtilsView.vala"
	self->priv->demo_label_style_context = _tmp24_;
#line 51 "../demo/Views/UtilsView.vala"
	_tmp25_ = self->priv->demo_label_style_context;
#line 51 "../demo/Views/UtilsView.vala"
	gtk_style_context_add_class (_tmp25_, "contrast-demo");
#line 52 "../demo/Views/UtilsView.vala"
	_tmp26_ = self->priv->demo_label_style_context;
#line 52 "../demo/Views/UtilsView.vala"
	gtk_style_context_add_class (_tmp26_, GTK_STYLE_CLASS_FLAT);
#line 54 "../demo/Views/UtilsView.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 54 "../demo/Views/UtilsView.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 55 "../demo/Views/UtilsView.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 12);
#line 56 "../demo/Views/UtilsView.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 12);
#line 58 "../demo/Views/UtilsView.vala"
	_tmp27_ = tooltip_markup_label;
#line 58 "../demo/Views/UtilsView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp27_, 0, 0, 1, 1);
#line 59 "../demo/Views/UtilsView.vala"
	_tmp28_ = tooltip_button_one;
#line 59 "../demo/Views/UtilsView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp28_, 1, 0, 1, 1);
#line 60 "../demo/Views/UtilsView.vala"
	_tmp29_ = tooltip_button_two;
#line 60 "../demo/Views/UtilsView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp29_, 2, 0, 1, 1);
#line 61 "../demo/Views/UtilsView.vala"
	_tmp30_ = contrasting_foreground_color_label;
#line 61 "../demo/Views/UtilsView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp30_, 0, 1, 1, 1);
#line 62 "../demo/Views/UtilsView.vala"
	_tmp31_ = contrast_demo_button;
#line 62 "../demo/Views/UtilsView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp31_, 1, 1, 2, 1);
#line 64 "../demo/Views/UtilsView.vala"
	memset (&_data16_->gdk_demo_bg, 0, sizeof (GdkRGBA));
#line 65 "../demo/Views/UtilsView.vala"
	gdk_rgba_parse (&_data16_->gdk_demo_bg, UTILS_VIEW_DARK_BG);
#line 67 "../demo/Views/UtilsView.vala"
	_tmp32_ = _data16_->gdk_demo_bg;
#line 67 "../demo/Views/UtilsView.vala"
	utils_view_style_contrast_demo (self, &_tmp32_);
#line 69 "../demo/Views/UtilsView.vala"
	_tmp33_ = contrast_demo_button;
#line 69 "../demo/Views/UtilsView.vala"
	g_signal_connect_data (_tmp33_, "clicked", (GCallback) __utils_view___lambda27__gtk_button_clicked, block16_data_ref (_data16_), (GClosureNotify) block16_data_unref, 0);
#line 32 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (contrast_demo_button);
#line 32 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (contrasting_foreground_color_label);
#line 32 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (tooltip_button_two);
#line 32 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (tooltip_button_one);
#line 32 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (tooltip_markup_label);
#line 32 "../demo/Views/UtilsView.vala"
	block16_data_unref (_data16_);
#line 32 "../demo/Views/UtilsView.vala"
	_data16_ = NULL;
#line 32 "../demo/Views/UtilsView.vala"
	return obj;
#line 686 "UtilsView.c"
}

static void
utils_view_class_init (UtilsViewClass * klass,
                       gpointer klass_data)
{
#line 20 "../demo/Views/UtilsView.vala"
	utils_view_parent_class = g_type_class_peek_parent (klass);
#line 20 "../demo/Views/UtilsView.vala"
	g_type_class_adjust_private_offset (klass, &UtilsView_private_offset);
#line 20 "../demo/Views/UtilsView.vala"
	G_OBJECT_CLASS (klass)->constructor = utils_view_constructor;
#line 20 "../demo/Views/UtilsView.vala"
	G_OBJECT_CLASS (klass)->finalize = utils_view_finalize;
#line 701 "UtilsView.c"
}

static void
utils_view_instance_init (UtilsView * self,
                          gpointer klass)
{
#line 20 "../demo/Views/UtilsView.vala"
	self->priv = utils_view_get_instance_private (self);
#line 710 "UtilsView.c"
}

static void
utils_view_finalize (GObject * obj)
{
	UtilsView * self;
#line 20 "../demo/Views/UtilsView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_UTILS_VIEW, UtilsView);
#line 30 "../demo/Views/UtilsView.vala"
	_g_object_unref0 (self->priv->demo_label_style_context);
#line 20 "../demo/Views/UtilsView.vala"
	G_OBJECT_CLASS (utils_view_parent_class)->finalize (obj);
#line 723 "UtilsView.c"
}

static GType
utils_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (UtilsViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) utils_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UtilsView), 0, (GInstanceInitFunc) utils_view_instance_init, NULL };
	GType utils_view_type_id;
	utils_view_type_id = g_type_register_static (gtk_grid_get_type (), "UtilsView", &g_define_type_info, 0);
	UtilsView_private_offset = g_type_add_instance_private (utils_view_type_id, sizeof (UtilsViewPrivate));
	return utils_view_type_id;
}

GType
utils_view_get_type (void)
{
	static volatile gsize utils_view_type_id__volatile = 0;
	if (g_once_init_enter (&utils_view_type_id__volatile)) {
		GType utils_view_type_id;
		utils_view_type_id = utils_view_get_type_once ();
		g_once_init_leave (&utils_view_type_id__volatile, utils_view_type_id);
	}
	return utils_view_type_id__volatile;
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

