/* DialogsView.c generated by valac 0.48.14, the Vala compiler
 * generated from DialogsView.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2017 elementary LLC. (https://elementary.io)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include "granite.h"
#include <glib.h>
#include <gio/gio.h>

#define TYPE_DIALOGS_VIEW (dialogs_view_get_type ())
#define DIALOGS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DIALOGS_VIEW, DialogsView))
#define DIALOGS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_DIALOGS_VIEW, DialogsViewClass))
#define IS_DIALOGS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DIALOGS_VIEW))
#define IS_DIALOGS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_DIALOGS_VIEW))
#define DIALOGS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DIALOGS_VIEW, DialogsViewClass))

typedef struct _DialogsView DialogsView;
typedef struct _DialogsViewClass DialogsViewClass;
typedef struct _DialogsViewPrivate DialogsViewPrivate;
enum  {
	DIALOGS_VIEW_0_PROPERTY,
	DIALOGS_VIEW_WINDOW_PROPERTY,
	DIALOGS_VIEW_NUM_PROPERTIES
};
static GParamSpec* dialogs_view_properties[DIALOGS_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block6Data Block6Data;
typedef struct _Block7Data Block7Data;

struct _DialogsView {
	GtkOverlay parent_instance;
	DialogsViewPrivate * priv;
};

struct _DialogsViewClass {
	GtkOverlayClass parent_class;
};

struct _DialogsViewPrivate {
	GtkWindow* _window;
	GraniteWidgetsToast* toast;
};

struct _Block6Data {
	int _ref_count_;
	DialogsView* self;
	GraniteDialog* dialog;
};

struct _Block7Data {
	int _ref_count_;
	DialogsView* self;
	GraniteMessageDialog* message_dialog;
};

static gint DialogsView_private_offset;
static gpointer dialogs_view_parent_class = NULL;

GType dialogs_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsView, g_object_unref)
GtkWindow* dialogs_view_get_window (DialogsView* self);
static void dialogs_view_set_window (DialogsView* self,
                              GtkWindow* value);
DialogsView* dialogs_view_new (GtkWindow* window);
DialogsView* dialogs_view_construct (GType object_type,
                                     GtkWindow* window);
static void dialogs_view_show_dialog (DialogsView* self);
static Block6Data* block6_data_ref (Block6Data* _data6_);
static void block6_data_unref (void * _userdata_);
static void __lambda30_ (Block6Data* _data6_,
                  gint response_id);
static void ___lambda30__gtk_dialog_response (GtkDialog* _sender,
                                       gint response_id,
                                       gpointer self);
static void dialogs_view_show_message_dialog (DialogsView* self);
static Block7Data* block7_data_ref (Block7Data* _data7_);
static void block7_data_unref (void * _userdata_);
static void __lambda31_ (Block7Data* _data7_,
                  gint response_id);
static void ___lambda31__gtk_dialog_response (GtkDialog* _sender,
                                       gint response_id,
                                       gpointer self);
static GObject * dialogs_view_constructor (GType type,
                                    guint n_construct_properties,
                                    GObjectConstructParam * construct_properties);
static void _dialogs_view_show_dialog_gtk_button_clicked (GtkButton* _sender,
                                                   gpointer self);
static void _dialogs_view_show_message_dialog_gtk_button_clicked (GtkButton* _sender,
                                                           gpointer self);
static void dialogs_view_finalize (GObject * obj);
static GType dialogs_view_get_type_once (void);
static void _vala_dialogs_view_get_property (GObject * object,
                                      guint property_id,
                                      GValue * value,
                                      GParamSpec * pspec);
static void _vala_dialogs_view_set_property (GObject * object,
                                      guint property_id,
                                      const GValue * value,
                                      GParamSpec * pspec);

static inline gpointer
dialogs_view_get_instance_private (DialogsView* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsView_private_offset);
}

GtkWindow*
dialogs_view_get_window (DialogsView* self)
{
	GtkWindow* result;
	GtkWindow* _tmp0_;
#line 22 "../demo/Views/DialogsView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 22 "../demo/Views/DialogsView.vala"
	_tmp0_ = self->priv->_window;
#line 22 "../demo/Views/DialogsView.vala"
	result = _tmp0_;
#line 22 "../demo/Views/DialogsView.vala"
	return result;
#line 141 "DialogsView.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 22 "../demo/Views/DialogsView.vala"
	return self ? g_object_ref (self) : NULL;
#line 149 "DialogsView.c"
}

static void
dialogs_view_set_window (DialogsView* self,
                         GtkWindow* value)
{
	GtkWindow* old_value;
#line 22 "../demo/Views/DialogsView.vala"
	g_return_if_fail (self != NULL);
#line 22 "../demo/Views/DialogsView.vala"
	old_value = dialogs_view_get_window (self);
#line 22 "../demo/Views/DialogsView.vala"
	if (old_value != value) {
#line 163 "DialogsView.c"
		GtkWindow* _tmp0_;
#line 22 "../demo/Views/DialogsView.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 22 "../demo/Views/DialogsView.vala"
		_g_object_unref0 (self->priv->_window);
#line 22 "../demo/Views/DialogsView.vala"
		self->priv->_window = _tmp0_;
#line 22 "../demo/Views/DialogsView.vala"
		g_object_notify_by_pspec ((GObject *) self, dialogs_view_properties[DIALOGS_VIEW_WINDOW_PROPERTY]);
#line 173 "DialogsView.c"
	}
}

DialogsView*
dialogs_view_construct (GType object_type,
                        GtkWindow* window)
{
	DialogsView * self = NULL;
#line 26 "../demo/Views/DialogsView.vala"
	g_return_val_if_fail (window != NULL, NULL);
#line 27 "../demo/Views/DialogsView.vala"
	self = (DialogsView*) g_object_new (object_type, "window", window, NULL);
#line 26 "../demo/Views/DialogsView.vala"
	return self;
#line 188 "DialogsView.c"
}

DialogsView*
dialogs_view_new (GtkWindow* window)
{
#line 26 "../demo/Views/DialogsView.vala"
	return dialogs_view_construct (TYPE_DIALOGS_VIEW, window);
#line 196 "DialogsView.c"
}

static Block6Data*
block6_data_ref (Block6Data* _data6_)
{
#line 52 "../demo/Views/DialogsView.vala"
	g_atomic_int_inc (&_data6_->_ref_count_);
#line 52 "../demo/Views/DialogsView.vala"
	return _data6_;
#line 206 "DialogsView.c"
}

static void
block6_data_unref (void * _userdata_)
{
	Block6Data* _data6_;
	_data6_ = (Block6Data*) _userdata_;
#line 52 "../demo/Views/DialogsView.vala"
	if (g_atomic_int_dec_and_test (&_data6_->_ref_count_)) {
#line 216 "DialogsView.c"
		DialogsView* self;
#line 52 "../demo/Views/DialogsView.vala"
		self = _data6_->self;
#line 52 "../demo/Views/DialogsView.vala"
		_g_object_unref0 (_data6_->dialog);
#line 52 "../demo/Views/DialogsView.vala"
		_g_object_unref0 (self);
#line 52 "../demo/Views/DialogsView.vala"
		g_slice_free (Block6Data, _data6_);
#line 226 "DialogsView.c"
	}
}

static void
__lambda30_ (Block6Data* _data6_,
             gint response_id)
{
	DialogsView* self;
#line 78 "../demo/Views/DialogsView.vala"
	self = _data6_->self;
#line 79 "../demo/Views/DialogsView.vala"
	if (response_id == ((gint) GTK_RESPONSE_ACCEPT)) {
#line 239 "DialogsView.c"
		GraniteWidgetsToast* _tmp0_;
#line 80 "../demo/Views/DialogsView.vala"
		_tmp0_ = self->priv->toast;
#line 80 "../demo/Views/DialogsView.vala"
		granite_widgets_toast_send_notification (_tmp0_);
#line 245 "DialogsView.c"
	}
#line 83 "../demo/Views/DialogsView.vala"
	gtk_widget_destroy ((GtkWidget*) _data6_->dialog);
#line 249 "DialogsView.c"
}

static void
___lambda30__gtk_dialog_response (GtkDialog* _sender,
                                  gint response_id,
                                  gpointer self)
{
#line 78 "../demo/Views/DialogsView.vala"
	__lambda30_ (self, response_id);
#line 259 "DialogsView.c"
}

static void
dialogs_view_show_dialog (DialogsView* self)
{
	Block6Data* _data6_;
	GraniteHeaderLabel* header = NULL;
	GraniteHeaderLabel* _tmp0_;
	GtkEntry* entry = NULL;
	GtkEntry* _tmp1_;
	GtkSwitch* gtk_switch = NULL;
	GtkSwitch* _tmp2_ = NULL;
	GtkGrid* layout = NULL;
	GtkGrid* _tmp3_ = NULL;
	GtkWindow* _tmp4_;
	GtkWindow* _tmp5_;
	GraniteDialog* _tmp6_ = NULL;
	GtkBox* _tmp7_;
	GtkWidget* suggested_button = NULL;
	GtkWidget* _tmp8_;
	GtkWidget* _tmp9_;
	GtkStyleContext* _tmp10_;
#line 52 "../demo/Views/DialogsView.vala"
	g_return_if_fail (self != NULL);
#line 52 "../demo/Views/DialogsView.vala"
	_data6_ = g_slice_new0 (Block6Data);
#line 52 "../demo/Views/DialogsView.vala"
	_data6_->_ref_count_ = 1;
#line 52 "../demo/Views/DialogsView.vala"
	_data6_->self = g_object_ref (self);
#line 53 "../demo/Views/DialogsView.vala"
	_tmp0_ = granite_header_label_new ("Header");
#line 53 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp0_);
#line 53 "../demo/Views/DialogsView.vala"
	header = _tmp0_;
#line 54 "../demo/Views/DialogsView.vala"
	_tmp1_ = (GtkEntry*) gtk_entry_new ();
#line 54 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp1_);
#line 54 "../demo/Views/DialogsView.vala"
	entry = _tmp1_;
#line 55 "../demo/Views/DialogsView.vala"
	_tmp2_ = (GtkSwitch*) gtk_switch_new ();
#line 55 "../demo/Views/DialogsView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp2_, GTK_ALIGN_START);
#line 55 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp2_);
#line 55 "../demo/Views/DialogsView.vala"
	gtk_switch = _tmp2_;
#line 59 "../demo/Views/DialogsView.vala"
	_tmp3_ = (GtkGrid*) gtk_grid_new ();
#line 59 "../demo/Views/DialogsView.vala"
	g_object_set ((GtkWidget*) _tmp3_, "margin", 12, NULL);
#line 59 "../demo/Views/DialogsView.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp3_, 0);
#line 59 "../demo/Views/DialogsView.vala"
	gtk_grid_set_row_spacing (_tmp3_, 12);
#line 59 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp3_);
#line 59 "../demo/Views/DialogsView.vala"
	layout = _tmp3_;
#line 64 "../demo/Views/DialogsView.vala"
	gtk_grid_attach (layout, (GtkWidget*) header, 0, 1, 1, 1);
#line 65 "../demo/Views/DialogsView.vala"
	gtk_grid_attach (layout, (GtkWidget*) entry, 0, 2, 1, 1);
#line 66 "../demo/Views/DialogsView.vala"
	gtk_grid_attach (layout, (GtkWidget*) gtk_switch, 0, 3, 1, 1);
#line 68 "../demo/Views/DialogsView.vala"
	_tmp4_ = self->priv->_window;
#line 68 "../demo/Views/DialogsView.vala"
	_tmp5_ = _g_object_ref0 (_tmp4_);
#line 68 "../demo/Views/DialogsView.vala"
	_tmp6_ = granite_dialog_new ();
#line 68 "../demo/Views/DialogsView.vala"
	gtk_window_set_transient_for ((GtkWindow*) _tmp6_, _tmp5_);
#line 68 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (_tmp5_);
#line 68 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp6_);
#line 68 "../demo/Views/DialogsView.vala"
	_data6_->dialog = _tmp6_;
#line 71 "../demo/Views/DialogsView.vala"
	_tmp7_ = gtk_dialog_get_content_area ((GtkDialog*) _data6_->dialog);
#line 71 "../demo/Views/DialogsView.vala"
	gtk_container_add ((GtkContainer*) _tmp7_, (GtkWidget*) layout);
#line 72 "../demo/Views/DialogsView.vala"
	gtk_dialog_add_button ((GtkDialog*) _data6_->dialog, "Cancel", (gint) GTK_RESPONSE_CANCEL);
#line 74 "../demo/Views/DialogsView.vala"
	_tmp8_ = gtk_dialog_add_button ((GtkDialog*) _data6_->dialog, "Suggested Action", (gint) GTK_RESPONSE_ACCEPT);
#line 74 "../demo/Views/DialogsView.vala"
	_tmp9_ = _g_object_ref0 (_tmp8_);
#line 74 "../demo/Views/DialogsView.vala"
	suggested_button = _tmp9_;
#line 75 "../demo/Views/DialogsView.vala"
	_tmp10_ = gtk_widget_get_style_context (suggested_button);
#line 75 "../demo/Views/DialogsView.vala"
	gtk_style_context_add_class (_tmp10_, GTK_STYLE_CLASS_SUGGESTED_ACTION);
#line 77 "../demo/Views/DialogsView.vala"
	gtk_widget_show_all ((GtkWidget*) _data6_->dialog);
#line 78 "../demo/Views/DialogsView.vala"
	g_signal_connect_data ((GtkDialog*) _data6_->dialog, "response", (GCallback) ___lambda30__gtk_dialog_response, block6_data_ref (_data6_), (GClosureNotify) block6_data_unref, 0);
#line 52 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (suggested_button);
#line 52 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (layout);
#line 52 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (gtk_switch);
#line 52 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (entry);
#line 52 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (header);
#line 52 "../demo/Views/DialogsView.vala"
	block6_data_unref (_data6_);
#line 52 "../demo/Views/DialogsView.vala"
	_data6_ = NULL;
#line 376 "DialogsView.c"
}

static Block7Data*
block7_data_ref (Block7Data* _data7_)
{
#line 87 "../demo/Views/DialogsView.vala"
	g_atomic_int_inc (&_data7_->_ref_count_);
#line 87 "../demo/Views/DialogsView.vala"
	return _data7_;
#line 386 "DialogsView.c"
}

static void
block7_data_unref (void * _userdata_)
{
	Block7Data* _data7_;
	_data7_ = (Block7Data*) _userdata_;
#line 87 "../demo/Views/DialogsView.vala"
	if (g_atomic_int_dec_and_test (&_data7_->_ref_count_)) {
#line 396 "DialogsView.c"
		DialogsView* self;
#line 87 "../demo/Views/DialogsView.vala"
		self = _data7_->self;
#line 87 "../demo/Views/DialogsView.vala"
		_g_object_unref0 (_data7_->message_dialog);
#line 87 "../demo/Views/DialogsView.vala"
		_g_object_unref0 (self);
#line 87 "../demo/Views/DialogsView.vala"
		g_slice_free (Block7Data, _data7_);
#line 406 "DialogsView.c"
	}
}

static void
__lambda31_ (Block7Data* _data7_,
             gint response_id)
{
	DialogsView* self;
#line 107 "../demo/Views/DialogsView.vala"
	self = _data7_->self;
#line 108 "../demo/Views/DialogsView.vala"
	if (response_id == ((gint) GTK_RESPONSE_ACCEPT)) {
#line 419 "DialogsView.c"
		GraniteWidgetsToast* _tmp0_;
#line 109 "../demo/Views/DialogsView.vala"
		_tmp0_ = self->priv->toast;
#line 109 "../demo/Views/DialogsView.vala"
		granite_widgets_toast_send_notification (_tmp0_);
#line 425 "DialogsView.c"
	}
#line 112 "../demo/Views/DialogsView.vala"
	gtk_widget_destroy ((GtkWidget*) _data7_->message_dialog);
#line 429 "DialogsView.c"
}

static void
___lambda31__gtk_dialog_response (GtkDialog* _sender,
                                  gint response_id,
                                  gpointer self)
{
#line 107 "../demo/Views/DialogsView.vala"
	__lambda31_ (self, response_id);
#line 439 "DialogsView.c"
}

static void
dialogs_view_show_message_dialog (DialogsView* self)
{
	Block7Data* _data7_;
	GraniteMessageDialog* _tmp0_;
	GThemedIcon* _tmp1_;
	GThemedIcon* _tmp2_;
	GtkWindow* _tmp3_;
	GtkButton* suggested_button = NULL;
	GtkButton* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkCheckButton* custom_widget = NULL;
	GtkCheckButton* _tmp6_;
	GtkBin* _tmp7_;
	GtkBin* _tmp8_;
#line 87 "../demo/Views/DialogsView.vala"
	g_return_if_fail (self != NULL);
#line 87 "../demo/Views/DialogsView.vala"
	_data7_ = g_slice_new0 (Block7Data);
#line 87 "../demo/Views/DialogsView.vala"
	_data7_->_ref_count_ = 1;
#line 87 "../demo/Views/DialogsView.vala"
	_data7_->self = g_object_ref (self);
#line 88 "../demo/Views/DialogsView.vala"
	_tmp0_ = granite_message_dialog_new_with_image_from_icon_name ("Basic information and a suggestion", "Further details, including information that explains any unobvious con" \
"sequences of actions.", "phone", GTK_BUTTONS_CANCEL);
#line 88 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp0_);
#line 88 "../demo/Views/DialogsView.vala"
	_data7_->message_dialog = _tmp0_;
#line 94 "../demo/Views/DialogsView.vala"
	_tmp1_ = (GThemedIcon*) g_themed_icon_new ("dialog-information");
#line 94 "../demo/Views/DialogsView.vala"
	_tmp2_ = _tmp1_;
#line 94 "../demo/Views/DialogsView.vala"
	granite_message_dialog_set_badge_icon (_data7_->message_dialog, (GIcon*) _tmp2_);
#line 94 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (_tmp2_);
#line 95 "../demo/Views/DialogsView.vala"
	_tmp3_ = self->priv->_window;
#line 95 "../demo/Views/DialogsView.vala"
	gtk_window_set_transient_for ((GtkWindow*) _data7_->message_dialog, _tmp3_);
#line 97 "../demo/Views/DialogsView.vala"
	_tmp4_ = (GtkButton*) gtk_button_new_with_label ("Suggested Action");
#line 97 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp4_);
#line 97 "../demo/Views/DialogsView.vala"
	suggested_button = _tmp4_;
#line 98 "../demo/Views/DialogsView.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) suggested_button);
#line 98 "../demo/Views/DialogsView.vala"
	gtk_style_context_add_class (_tmp5_, GTK_STYLE_CLASS_SUGGESTED_ACTION);
#line 99 "../demo/Views/DialogsView.vala"
	gtk_dialog_add_action_widget ((GtkDialog*) _data7_->message_dialog, (GtkWidget*) suggested_button, (gint) GTK_RESPONSE_ACCEPT);
#line 101 "../demo/Views/DialogsView.vala"
	_tmp6_ = (GtkCheckButton*) gtk_check_button_new_with_label ("Custom widget");
#line 101 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp6_);
#line 101 "../demo/Views/DialogsView.vala"
	custom_widget = _tmp6_;
#line 103 "../demo/Views/DialogsView.vala"
	granite_message_dialog_show_error_details (_data7_->message_dialog, "The details of a possible error.");
#line 104 "../demo/Views/DialogsView.vala"
	_tmp7_ = granite_message_dialog_get_custom_bin (_data7_->message_dialog);
#line 104 "../demo/Views/DialogsView.vala"
	_tmp8_ = _tmp7_;
#line 104 "../demo/Views/DialogsView.vala"
	gtk_container_add ((GtkContainer*) _tmp8_, (GtkWidget*) custom_widget);
#line 106 "../demo/Views/DialogsView.vala"
	gtk_widget_show_all ((GtkWidget*) _data7_->message_dialog);
#line 107 "../demo/Views/DialogsView.vala"
	g_signal_connect_data ((GtkDialog*) _data7_->message_dialog, "response", (GCallback) ___lambda31__gtk_dialog_response, block7_data_ref (_data7_), (GClosureNotify) block7_data_unref, 0);
#line 87 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (custom_widget);
#line 87 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (suggested_button);
#line 87 "../demo/Views/DialogsView.vala"
	block7_data_unref (_data7_);
#line 87 "../demo/Views/DialogsView.vala"
	_data7_ = NULL;
#line 521 "DialogsView.c"
}

static void
_dialogs_view_show_dialog_gtk_button_clicked (GtkButton* _sender,
                                              gpointer self)
{
#line 48 "../demo/Views/DialogsView.vala"
	dialogs_view_show_dialog ((DialogsView*) self);
#line 530 "DialogsView.c"
}

static void
_dialogs_view_show_message_dialog_gtk_button_clicked (GtkButton* _sender,
                                                      gpointer self)
{
#line 49 "../demo/Views/DialogsView.vala"
	dialogs_view_show_message_dialog ((DialogsView*) self);
#line 539 "DialogsView.c"
}

static GObject *
dialogs_view_constructor (GType type,
                          guint n_construct_properties,
                          GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsView * self;
	GtkButton* dialog_button = NULL;
	GtkButton* _tmp0_;
	GtkButton* message_button = NULL;
	GtkButton* _tmp1_;
	GraniteWidgetsToast* _tmp2_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp3_ = NULL;
	GtkGrid* _tmp4_;
	GtkButton* _tmp5_;
	GtkGrid* _tmp6_;
	GtkButton* _tmp7_;
	GtkGrid* _tmp8_;
	GraniteWidgetsToast* _tmp9_;
	GtkButton* _tmp10_;
	GtkButton* _tmp11_;
#line 30 "../demo/Views/DialogsView.vala"
	parent_class = G_OBJECT_CLASS (dialogs_view_parent_class);
#line 30 "../demo/Views/DialogsView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 30 "../demo/Views/DialogsView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_DIALOGS_VIEW, DialogsView);
#line 31 "../demo/Views/DialogsView.vala"
	_tmp0_ = (GtkButton*) gtk_button_new_with_label ("Show Dialog");
#line 31 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp0_);
#line 31 "../demo/Views/DialogsView.vala"
	dialog_button = _tmp0_;
#line 33 "../demo/Views/DialogsView.vala"
	_tmp1_ = (GtkButton*) gtk_button_new_with_label ("Show MessageDialog");
#line 33 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp1_);
#line 33 "../demo/Views/DialogsView.vala"
	message_button = _tmp1_;
#line 35 "../demo/Views/DialogsView.vala"
	_tmp2_ = granite_widgets_toast_new ("Did something");
#line 35 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp2_);
#line 35 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (self->priv->toast);
#line 35 "../demo/Views/DialogsView.vala"
	self->priv->toast = _tmp2_;
#line 37 "../demo/Views/DialogsView.vala"
	_tmp3_ = (GtkGrid*) gtk_grid_new ();
#line 37 "../demo/Views/DialogsView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp3_, GTK_ALIGN_CENTER);
#line 37 "../demo/Views/DialogsView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp3_, GTK_ALIGN_CENTER);
#line 37 "../demo/Views/DialogsView.vala"
	gtk_grid_set_row_spacing (_tmp3_, 12);
#line 37 "../demo/Views/DialogsView.vala"
	g_object_ref_sink (_tmp3_);
#line 37 "../demo/Views/DialogsView.vala"
	grid = _tmp3_;
#line 42 "../demo/Views/DialogsView.vala"
	_tmp4_ = grid;
#line 42 "../demo/Views/DialogsView.vala"
	_tmp5_ = dialog_button;
#line 42 "../demo/Views/DialogsView.vala"
	gtk_grid_attach (_tmp4_, (GtkWidget*) _tmp5_, 0, 1, 1, 1);
#line 43 "../demo/Views/DialogsView.vala"
	_tmp6_ = grid;
#line 43 "../demo/Views/DialogsView.vala"
	_tmp7_ = message_button;
#line 43 "../demo/Views/DialogsView.vala"
	gtk_grid_attach (_tmp6_, (GtkWidget*) _tmp7_, 0, 2, 1, 1);
#line 45 "../demo/Views/DialogsView.vala"
	_tmp8_ = grid;
#line 45 "../demo/Views/DialogsView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp8_);
#line 46 "../demo/Views/DialogsView.vala"
	_tmp9_ = self->priv->toast;
#line 46 "../demo/Views/DialogsView.vala"
	gtk_overlay_add_overlay ((GtkOverlay*) self, (GtkWidget*) _tmp9_);
#line 48 "../demo/Views/DialogsView.vala"
	_tmp10_ = dialog_button;
#line 48 "../demo/Views/DialogsView.vala"
	g_signal_connect_object (_tmp10_, "clicked", (GCallback) _dialogs_view_show_dialog_gtk_button_clicked, self, 0);
#line 49 "../demo/Views/DialogsView.vala"
	_tmp11_ = message_button;
#line 49 "../demo/Views/DialogsView.vala"
	g_signal_connect_object (_tmp11_, "clicked", (GCallback) _dialogs_view_show_message_dialog_gtk_button_clicked, self, 0);
#line 30 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (grid);
#line 30 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (message_button);
#line 30 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (dialog_button);
#line 30 "../demo/Views/DialogsView.vala"
	return obj;
#line 639 "DialogsView.c"
}

static void
dialogs_view_class_init (DialogsViewClass * klass,
                         gpointer klass_data)
{
#line 21 "../demo/Views/DialogsView.vala"
	dialogs_view_parent_class = g_type_class_peek_parent (klass);
#line 21 "../demo/Views/DialogsView.vala"
	g_type_class_adjust_private_offset (klass, &DialogsView_private_offset);
#line 21 "../demo/Views/DialogsView.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_view_get_property;
#line 21 "../demo/Views/DialogsView.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_view_set_property;
#line 21 "../demo/Views/DialogsView.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_view_constructor;
#line 21 "../demo/Views/DialogsView.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_view_finalize;
#line 21 "../demo/Views/DialogsView.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_VIEW_WINDOW_PROPERTY, dialogs_view_properties[DIALOGS_VIEW_WINDOW_PROPERTY] = g_param_spec_object ("window", "window", "window", gtk_window_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 660 "DialogsView.c"
}

static void
dialogs_view_instance_init (DialogsView * self,
                            gpointer klass)
{
#line 21 "../demo/Views/DialogsView.vala"
	self->priv = dialogs_view_get_instance_private (self);
#line 669 "DialogsView.c"
}

static void
dialogs_view_finalize (GObject * obj)
{
	DialogsView * self;
#line 21 "../demo/Views/DialogsView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_DIALOGS_VIEW, DialogsView);
#line 22 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (self->priv->_window);
#line 24 "../demo/Views/DialogsView.vala"
	_g_object_unref0 (self->priv->toast);
#line 21 "../demo/Views/DialogsView.vala"
	G_OBJECT_CLASS (dialogs_view_parent_class)->finalize (obj);
#line 684 "DialogsView.c"
}

static GType
dialogs_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsView), 0, (GInstanceInitFunc) dialogs_view_instance_init, NULL };
	GType dialogs_view_type_id;
	dialogs_view_type_id = g_type_register_static (gtk_overlay_get_type (), "DialogsView", &g_define_type_info, 0);
	DialogsView_private_offset = g_type_add_instance_private (dialogs_view_type_id, sizeof (DialogsViewPrivate));
	return dialogs_view_type_id;
}

GType
dialogs_view_get_type (void)
{
	static volatile gsize dialogs_view_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_view_type_id__volatile)) {
		GType dialogs_view_type_id;
		dialogs_view_type_id = dialogs_view_get_type_once ();
		g_once_init_leave (&dialogs_view_type_id__volatile, dialogs_view_type_id);
	}
	return dialogs_view_type_id__volatile;
}

static void
_vala_dialogs_view_get_property (GObject * object,
                                 guint property_id,
                                 GValue * value,
                                 GParamSpec * pspec)
{
	DialogsView * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, TYPE_DIALOGS_VIEW, DialogsView);
#line 21 "../demo/Views/DialogsView.vala"
	switch (property_id) {
#line 21 "../demo/Views/DialogsView.vala"
		case DIALOGS_VIEW_WINDOW_PROPERTY:
#line 21 "../demo/Views/DialogsView.vala"
		g_value_set_object (value, dialogs_view_get_window (self));
#line 21 "../demo/Views/DialogsView.vala"
		break;
#line 725 "DialogsView.c"
		default:
#line 21 "../demo/Views/DialogsView.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 21 "../demo/Views/DialogsView.vala"
		break;
#line 731 "DialogsView.c"
	}
}

static void
_vala_dialogs_view_set_property (GObject * object,
                                 guint property_id,
                                 const GValue * value,
                                 GParamSpec * pspec)
{
	DialogsView * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, TYPE_DIALOGS_VIEW, DialogsView);
#line 21 "../demo/Views/DialogsView.vala"
	switch (property_id) {
#line 21 "../demo/Views/DialogsView.vala"
		case DIALOGS_VIEW_WINDOW_PROPERTY:
#line 21 "../demo/Views/DialogsView.vala"
		dialogs_view_set_window (self, g_value_get_object (value));
#line 21 "../demo/Views/DialogsView.vala"
		break;
#line 751 "DialogsView.c"
		default:
#line 21 "../demo/Views/DialogsView.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 21 "../demo/Views/DialogsView.vala"
		break;
#line 757 "DialogsView.c"
	}
}

