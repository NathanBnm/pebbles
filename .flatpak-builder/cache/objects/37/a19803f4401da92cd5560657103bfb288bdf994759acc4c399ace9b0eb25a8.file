/* Application.c generated by valac 0.48.14, the Vala compiler
 * generated from Application.vala, do not modify */

/*
 *  Copyright 2019 elementary, Inc. (https://elementary.io)
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <glib-object.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <float.h>
#include <math.h>

#define GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY (granite_services_application_unity_launcher_entry_get_type ())
#define GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY, GraniteServicesApplicationUnityLauncherEntry))
#define GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY, GraniteServicesApplicationUnityLauncherEntryClass))
#define GRANITE_SERVICES_APPLICATION_IS_UNITY_LAUNCHER_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY))
#define GRANITE_SERVICES_APPLICATION_IS_UNITY_LAUNCHER_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY))
#define GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY, GraniteServicesApplicationUnityLauncherEntryClass))

typedef struct _GraniteServicesApplicationUnityLauncherEntry GraniteServicesApplicationUnityLauncherEntry;
typedef struct _GraniteServicesApplicationUnityLauncherEntryClass GraniteServicesApplicationUnityLauncherEntryClass;
typedef struct _GraniteServicesApplicationUnityLauncherEntryPrivate GraniteServicesApplicationUnityLauncherEntryPrivate;
enum  {
	GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_0_PROPERTY,
	GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_NUM_PROPERTIES
};
static GParamSpec* granite_services_application_unity_launcher_entry_properties[GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_NUM_PROPERTIES];

#define GRANITE_SERVICES_TYPE_ASYNC_MUTEX (granite_services_async_mutex_get_type ())
#define GRANITE_SERVICES_ASYNC_MUTEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_SERVICES_TYPE_ASYNC_MUTEX, GraniteServicesAsyncMutex))
#define GRANITE_SERVICES_ASYNC_MUTEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_SERVICES_TYPE_ASYNC_MUTEX, GraniteServicesAsyncMutexClass))
#define GRANITE_SERVICES_IS_ASYNC_MUTEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_SERVICES_TYPE_ASYNC_MUTEX))
#define GRANITE_SERVICES_IS_ASYNC_MUTEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_SERVICES_TYPE_ASYNC_MUTEX))
#define GRANITE_SERVICES_ASYNC_MUTEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_SERVICES_TYPE_ASYNC_MUTEX, GraniteServicesAsyncMutexClass))

typedef struct _GraniteServicesAsyncMutex GraniteServicesAsyncMutex;
typedef struct _GraniteServicesAsyncMutexClass GraniteServicesAsyncMutexClass;
#define _granite_services_async_mutex_unref0(var) ((var == NULL) ? NULL : (var = (granite_services_async_mutex_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _GraniteServicesApplicationUnityLauncherEntryGetInstanceData GraniteServicesApplicationUnityLauncherEntryGetInstanceData;
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
enum  {
	GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_UPDATE_SIGNAL,
	GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_NUM_SIGNALS
};
static guint granite_services_application_unity_launcher_entry_signals[GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_NUM_SIGNALS] = {0};
#define _g_variant_unref0(var) ((var == NULL) ? NULL : (var = (g_variant_unref (var), NULL)))
typedef struct _GraniteServicesApplicationSetBadgeData GraniteServicesApplicationSetBadgeData;
typedef struct _GraniteServicesApplicationSetBadgeVisibleData GraniteServicesApplicationSetBadgeVisibleData;
typedef struct _GraniteServicesApplicationSetProgressData GraniteServicesApplicationSetProgressData;
typedef struct _GraniteServicesApplicationSetProgressVisibleData GraniteServicesApplicationSetProgressVisibleData;

struct _GraniteServicesApplicationUnityLauncherEntry {
	GObject parent_instance;
	GraniteServicesApplicationUnityLauncherEntryPrivate * priv;
};

struct _GraniteServicesApplicationUnityLauncherEntryClass {
	GObjectClass parent_class;
};

struct _GraniteServicesApplicationUnityLauncherEntryPrivate {
	gchar* app_uri;
	GHashTable* properties;
};

struct _GraniteServicesApplicationUnityLauncherEntryGetInstanceData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GraniteServicesApplicationUnityLauncherEntry* result;
	GraniteServicesAsyncMutex* _tmp0_;
	GraniteServicesAsyncMutex* _tmp1_;
	GraniteServicesAsyncMutex* _tmp2_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp3_;
	GraniteServicesAsyncMutex* _tmp4_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp5_;
	GApplication* app;
	GApplication* _tmp6_;
	GApplication* _tmp7_;
	GraniteServicesAsyncMutex* _tmp8_;
	GError* _tmp9_;
	GApplication* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	GraniteServicesAsyncMutex* _tmp13_;
	GError* _tmp14_;
	GraniteServicesApplicationUnityLauncherEntry* local_instance;
	GraniteServicesApplicationUnityLauncherEntry* _tmp15_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp16_;
	GApplication* _tmp17_;
	const gchar* _tmp18_;
	const gchar* _tmp19_;
	gchar* _tmp20_;
	char* object_path;
	GraniteServicesApplicationUnityLauncherEntry* _tmp21_;
	const gchar* _tmp22_;
	gchar* _tmp23_;
	gchar* _tmp24_;
	char* _tmp25_;
	char* _tmp26_;
	GDBusConnection* session_connection;
	GDBusConnection* _tmp27_;
	GDBusConnection* _tmp28_;
	const char* _tmp29_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp30_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp31_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp32_;
	GError* e;
	GraniteServicesAsyncMutex* _tmp33_;
	GError* _tmp34_;
	GError* _tmp35_;
	GraniteServicesAsyncMutex* _tmp36_;
	GraniteServicesApplicationUnityLauncherEntry* _tmp37_;
	GError* _inner_error0_;
};

struct _GraniteServicesApplicationSetBadgeData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	gint64 count;
	gboolean result;
	GraniteServicesApplicationUnityLauncherEntry* instance;
	GraniteServicesApplicationUnityLauncherEntry* _tmp0_;
	GVariant* _tmp1_;
	GVariant* _tmp2_;
	GError* _inner_error0_;
};

struct _GraniteServicesApplicationSetBadgeVisibleData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	gboolean visible;
	gboolean result;
	GraniteServicesApplicationUnityLauncherEntry* instance;
	GraniteServicesApplicationUnityLauncherEntry* _tmp0_;
	GVariant* _tmp1_;
	GVariant* _tmp2_;
	GError* _inner_error0_;
};

struct _GraniteServicesApplicationSetProgressData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	gdouble progress;
	gboolean result;
	GraniteServicesApplicationUnityLauncherEntry* instance;
	GraniteServicesApplicationUnityLauncherEntry* _tmp0_;
	GVariant* _tmp1_;
	GVariant* _tmp2_;
	GError* _inner_error0_;
};

struct _GraniteServicesApplicationSetProgressVisibleData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	gboolean visible;
	gboolean result;
	GraniteServicesApplicationUnityLauncherEntry* instance;
	GraniteServicesApplicationUnityLauncherEntry* _tmp0_;
	GVariant* _tmp1_;
	GVariant* _tmp2_;
	GError* _inner_error0_;
};

static gint GraniteServicesApplicationUnityLauncherEntry_private_offset;
static gpointer granite_services_application_unity_launcher_entry_parent_class = NULL;
static GraniteServicesAsyncMutex* granite_services_application_unity_launcher_entry_instance_mutex;
static GraniteServicesAsyncMutex* granite_services_application_unity_launcher_entry_instance_mutex = NULL;
static GraniteServicesApplicationUnityLauncherEntry* granite_services_application_unity_launcher_entry_instance;
static GraniteServicesApplicationUnityLauncherEntry* granite_services_application_unity_launcher_entry_instance = NULL;

G_GNUC_INTERNAL GType granite_services_application_unity_launcher_entry_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteServicesApplicationUnityLauncherEntry, g_object_unref)
G_GNUC_INTERNAL guint granite_services_application_unity_launcher_entry_register_object (void* object,
                                                                         GDBusConnection* connection,
                                                                         const gchar* path,
                                                                         GError** error);
G_GNUC_INTERNAL gpointer granite_services_async_mutex_ref (gpointer instance);
G_GNUC_INTERNAL void granite_services_async_mutex_unref (gpointer instance);
G_GNUC_INTERNAL GParamSpec* granite_services_param_spec_async_mutex (const gchar* name,
                                                     const gchar* nick,
                                                     const gchar* blurb,
                                                     GType object_type,
                                                     GParamFlags flags);
G_GNUC_INTERNAL void granite_services_value_set_async_mutex (GValue* value,
                                             gpointer v_object) G_GNUC_UNUSED;
G_GNUC_INTERNAL void granite_services_value_take_async_mutex (GValue* value,
                                              gpointer v_object);
G_GNUC_INTERNAL gpointer granite_services_value_get_async_mutex (const GValue* value) G_GNUC_UNUSED;
G_GNUC_INTERNAL GType granite_services_async_mutex_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteServicesAsyncMutex, granite_services_async_mutex_unref)
static void granite_services_application_unity_launcher_entry_get_instance_data_free (gpointer _data);
G_GNUC_INTERNAL void granite_services_application_unity_launcher_entry_get_instance (GAsyncReadyCallback _callback_,
                                                                     gpointer _user_data_);
G_GNUC_INTERNAL GraniteServicesApplicationUnityLauncherEntry* granite_services_application_unity_launcher_entry_get_instance_finish (GAsyncResult* _res_,
                                                                                                                     GError** error);
static gboolean granite_services_application_unity_launcher_entry_get_instance_co (GraniteServicesApplicationUnityLauncherEntryGetInstanceData* _data_);
G_GNUC_INTERNAL GraniteServicesAsyncMutex* granite_services_async_mutex_new (void);
G_GNUC_INTERNAL GraniteServicesAsyncMutex* granite_services_async_mutex_construct (GType object_type);
G_GNUC_INTERNAL void granite_services_async_mutex_lock (GraniteServicesAsyncMutex* self,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_);
G_GNUC_INTERNAL void granite_services_async_mutex_lock_finish (GraniteServicesAsyncMutex* self,
                                               GAsyncResult* _res_);
static void granite_services_application_unity_launcher_entry_get_instance_ready (GObject* source_object,
                                                                           GAsyncResult* _res_,
                                                                           gpointer _user_data_);
G_GNUC_INTERNAL void granite_services_async_mutex_unlock (GraniteServicesAsyncMutex* self);
G_GNUC_INTERNAL GraniteServicesApplicationUnityLauncherEntry* granite_services_application_unity_launcher_entry_new (void);
G_GNUC_INTERNAL GraniteServicesApplicationUnityLauncherEntry* granite_services_application_unity_launcher_entry_construct (GType object_type);
G_GNUC_INTERNAL void granite_services_application_unity_launcher_entry_set_app_property (GraniteServicesApplicationUnityLauncherEntry* self,
                                                                         const gchar* property,
                                                                         GVariant* var);
static void _g_free0_ (gpointer var);
static void _g_variant_unref0_ (gpointer var);
static void g_cclosure_user_marshal_VOID__STRING_BOXED (GClosure * closure,
                                                 GValue * return_value,
                                                 guint n_param_values,
                                                 const GValue * param_values,
                                                 gpointer invocation_hint,
                                                 gpointer marshal_data);
G_GNUC_INTERNAL GHashTable* granite_services_application_unity_launcher_entry_query (GraniteServicesApplicationUnityLauncherEntry* self,
                                                                     GError** error);
static GObject * granite_services_application_unity_launcher_entry_constructor (GType type,
                                                                         guint n_construct_properties,
                                                                         GObjectConstructParam * construct_properties);
static void granite_services_application_unity_launcher_entry_finalize (GObject * obj);
static GType granite_services_application_unity_launcher_entry_get_type_once (void);
static void _dbus_granite_services_application_unity_launcher_entry_query (GraniteServicesApplicationUnityLauncherEntry* self,
                                                                    GVariant* _parameters_,
                                                                    GDBusMethodInvocation* invocation);
static void granite_services_application_unity_launcher_entry_dbus_interface_method_call (GDBusConnection* connection,
                                                                                   const gchar* sender,
                                                                                   const gchar* object_path,
                                                                                   const gchar* interface_name,
                                                                                   const gchar* method_name,
                                                                                   GVariant* parameters,
                                                                                   GDBusMethodInvocation* invocation,
                                                                                   gpointer user_data);
static GVariant* granite_services_application_unity_launcher_entry_dbus_interface_get_property (GDBusConnection* connection,
                                                                                         const gchar* sender,
                                                                                         const gchar* object_path,
                                                                                         const gchar* interface_name,
                                                                                         const gchar* property_name,
                                                                                         GError** error,
                                                                                         gpointer user_data);
static gboolean granite_services_application_unity_launcher_entry_dbus_interface_set_property (GDBusConnection* connection,
                                                                                        const gchar* sender,
                                                                                        const gchar* object_path,
                                                                                        const gchar* interface_name,
                                                                                        const gchar* property_name,
                                                                                        GVariant* value,
                                                                                        GError** error,
                                                                                        gpointer user_data);
static void _dbus_granite_services_application_unity_launcher_entry_update (GObject* _sender,
                                                                     const gchar* app_uri,
                                                                     GHashTable* properties,
                                                                     gpointer* _data);
static void _granite_services_application_unity_launcher_entry_unregister_object (gpointer user_data);
static void granite_services_application_set_badge_data_free (gpointer _data);
void granite_services_application_set_badge (gint64 count,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_);
gboolean granite_services_application_set_badge_finish (GAsyncResult* _res_,
                                                        GError** error);
static gboolean granite_services_application_set_badge_co (GraniteServicesApplicationSetBadgeData* _data_);
static void granite_services_application_set_badge_ready (GObject* source_object,
                                                   GAsyncResult* _res_,
                                                   gpointer _user_data_);
static void granite_services_application_set_badge_visible_data_free (gpointer _data);
void granite_services_application_set_badge_visible (gboolean visible,
                                                     GAsyncReadyCallback _callback_,
                                                     gpointer _user_data_);
gboolean granite_services_application_set_badge_visible_finish (GAsyncResult* _res_,
                                                                GError** error);
static gboolean granite_services_application_set_badge_visible_co (GraniteServicesApplicationSetBadgeVisibleData* _data_);
static void granite_services_application_set_badge_visible_ready (GObject* source_object,
                                                           GAsyncResult* _res_,
                                                           gpointer _user_data_);
static void granite_services_application_set_progress_data_free (gpointer _data);
void granite_services_application_set_progress (gdouble progress,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
gboolean granite_services_application_set_progress_finish (GAsyncResult* _res_,
                                                           GError** error);
static gboolean granite_services_application_set_progress_co (GraniteServicesApplicationSetProgressData* _data_);
static void granite_services_application_set_progress_ready (GObject* source_object,
                                                      GAsyncResult* _res_,
                                                      gpointer _user_data_);
static void granite_services_application_set_progress_visible_data_free (gpointer _data);
void granite_services_application_set_progress_visible (gboolean visible,
                                                        GAsyncReadyCallback _callback_,
                                                        gpointer _user_data_);
gboolean granite_services_application_set_progress_visible_finish (GAsyncResult* _res_,
                                                                   GError** error);
static gboolean granite_services_application_set_progress_visible_co (GraniteServicesApplicationSetProgressVisibleData* _data_);
static void granite_services_application_set_progress_visible_ready (GObject* source_object,
                                                              GAsyncResult* _res_,
                                                              gpointer _user_data_);

static const GDBusArgInfo _granite_services_application_unity_launcher_entry_dbus_arg_info_query_result = {-1, "result", "a{sv}", NULL};
static const GDBusArgInfo * const _granite_services_application_unity_launcher_entry_dbus_arg_info_query_in[] = {NULL};
static const GDBusArgInfo * const _granite_services_application_unity_launcher_entry_dbus_arg_info_query_out[] = {&_granite_services_application_unity_launcher_entry_dbus_arg_info_query_result, NULL};
static const GDBusMethodInfo _granite_services_application_unity_launcher_entry_dbus_method_info_query = {-1, "Query", (GDBusArgInfo **) (&_granite_services_application_unity_launcher_entry_dbus_arg_info_query_in), (GDBusArgInfo **) (&_granite_services_application_unity_launcher_entry_dbus_arg_info_query_out), NULL};
static const GDBusMethodInfo * const _granite_services_application_unity_launcher_entry_dbus_method_info[] = {&_granite_services_application_unity_launcher_entry_dbus_method_info_query, NULL};
static const GDBusArgInfo _granite_services_application_unity_launcher_entry_dbus_arg_info_update_app_uri = {-1, "app_uri", "s", NULL};
static const GDBusArgInfo _granite_services_application_unity_launcher_entry_dbus_arg_info_update_properties = {-1, "properties", "a{sv}", NULL};
static const GDBusArgInfo * const _granite_services_application_unity_launcher_entry_dbus_arg_info_update[] = {&_granite_services_application_unity_launcher_entry_dbus_arg_info_update_app_uri, &_granite_services_application_unity_launcher_entry_dbus_arg_info_update_properties, NULL};
static const GDBusSignalInfo _granite_services_application_unity_launcher_entry_dbus_signal_info_update = {-1, "Update", (GDBusArgInfo **) (&_granite_services_application_unity_launcher_entry_dbus_arg_info_update), NULL};
static const GDBusSignalInfo * const _granite_services_application_unity_launcher_entry_dbus_signal_info[] = {&_granite_services_application_unity_launcher_entry_dbus_signal_info_update, NULL};
static const GDBusPropertyInfo * const _granite_services_application_unity_launcher_entry_dbus_property_info[] = {NULL};
static const GDBusInterfaceInfo _granite_services_application_unity_launcher_entry_dbus_interface_info = {-1, "com.canonical.Unity.LauncherEntry", (GDBusMethodInfo **) (&_granite_services_application_unity_launcher_entry_dbus_method_info), (GDBusSignalInfo **) (&_granite_services_application_unity_launcher_entry_dbus_signal_info), (GDBusPropertyInfo **) (&_granite_services_application_unity_launcher_entry_dbus_property_info), NULL};
static const GDBusInterfaceVTable _granite_services_application_unity_launcher_entry_dbus_interface_vtable = {granite_services_application_unity_launcher_entry_dbus_interface_method_call, granite_services_application_unity_launcher_entry_dbus_interface_get_property, granite_services_application_unity_launcher_entry_dbus_interface_set_property};

static inline gpointer
granite_services_application_unity_launcher_entry_get_instance_private (GraniteServicesApplicationUnityLauncherEntry* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteServicesApplicationUnityLauncherEntry_private_offset);
}

static void
granite_services_application_unity_launcher_entry_get_instance_data_free (gpointer _data)
{
	GraniteServicesApplicationUnityLauncherEntryGetInstanceData* _data_;
	_data_ = _data;
#line 27 "../lib/Services/Application.vala"
	g_slice_free (GraniteServicesApplicationUnityLauncherEntryGetInstanceData, _data_);
#line 359 "Application.c"
}

G_GNUC_INTERNAL void
granite_services_application_unity_launcher_entry_get_instance (GAsyncReadyCallback _callback_,
                                                                gpointer _user_data_)
{
	GraniteServicesApplicationUnityLauncherEntryGetInstanceData* _data_;
#line 27 "../lib/Services/Application.vala"
	_data_ = g_slice_new0 (GraniteServicesApplicationUnityLauncherEntryGetInstanceData);
#line 27 "../lib/Services/Application.vala"
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
#line 27 "../lib/Services/Application.vala"
	g_task_set_task_data (_data_->_async_result, _data_, granite_services_application_unity_launcher_entry_get_instance_data_free);
#line 27 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_get_instance_co (_data_);
#line 375 "Application.c"
}

G_GNUC_INTERNAL GraniteServicesApplicationUnityLauncherEntry*
granite_services_application_unity_launcher_entry_get_instance_finish (GAsyncResult* _res_,
                                                                       GError** error)
{
	GraniteServicesApplicationUnityLauncherEntry* result;
	GraniteServicesApplicationUnityLauncherEntryGetInstanceData* _data_;
#line 27 "../lib/Services/Application.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 27 "../lib/Services/Application.vala"
	if (NULL == _data_) {
#line 27 "../lib/Services/Application.vala"
		return NULL;
#line 390 "Application.c"
	}
#line 27 "../lib/Services/Application.vala"
	result = _data_->result;
#line 27 "../lib/Services/Application.vala"
	_data_->result = NULL;
#line 27 "../lib/Services/Application.vala"
	return result;
#line 398 "Application.c"
}

static void
granite_services_application_unity_launcher_entry_get_instance_ready (GObject* source_object,
                                                                      GAsyncResult* _res_,
                                                                      gpointer _user_data_)
{
	GraniteServicesApplicationUnityLauncherEntryGetInstanceData* _data_;
#line 35 "../lib/Services/Application.vala"
	_data_ = _user_data_;
#line 35 "../lib/Services/Application.vala"
	_data_->_source_object_ = source_object;
#line 35 "../lib/Services/Application.vala"
	_data_->_res_ = _res_;
#line 35 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_get_instance_co (_data_);
#line 415 "Application.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 59 "../lib/Services/Application.vala"
	return self ? g_object_ref (self) : NULL;
#line 423 "Application.c"
}

static gpointer
_g_error_copy0 (gpointer self)
{
#line 62 "../lib/Services/Application.vala"
	return self ? g_error_copy (self) : NULL;
#line 431 "Application.c"
}

static gboolean
granite_services_application_unity_launcher_entry_get_instance_co (GraniteServicesApplicationUnityLauncherEntryGetInstanceData* _data_)
{
#line 30 "../lib/Services/Application.vala"
	switch (_data_->_state_) {
#line 30 "../lib/Services/Application.vala"
		case 0:
#line 441 "Application.c"
		goto _state_0;
#line 30 "../lib/Services/Application.vala"
		case 1:
#line 445 "Application.c"
		goto _state_1;
#line 30 "../lib/Services/Application.vala"
		case 2:
#line 449 "Application.c"
		goto _state_2;
		default:
#line 30 "../lib/Services/Application.vala"
		g_assert_not_reached ();
#line 454 "Application.c"
	}
	_state_0:
#line 31 "../lib/Services/Application.vala"
	_data_->_tmp0_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 31 "../lib/Services/Application.vala"
	if (_data_->_tmp0_ == NULL) {
#line 32 "../lib/Services/Application.vala"
		_data_->_tmp1_ = granite_services_async_mutex_new ();
#line 32 "../lib/Services/Application.vala"
		_granite_services_async_mutex_unref0 (granite_services_application_unity_launcher_entry_instance_mutex);
#line 32 "../lib/Services/Application.vala"
		granite_services_application_unity_launcher_entry_instance_mutex = _data_->_tmp1_;
#line 467 "Application.c"
	}
#line 35 "../lib/Services/Application.vala"
	_data_->_tmp2_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 35 "../lib/Services/Application.vala"
	_data_->_state_ = 1;
#line 35 "../lib/Services/Application.vala"
	granite_services_async_mutex_lock (_data_->_tmp2_, granite_services_application_unity_launcher_entry_get_instance_ready, _data_);
#line 35 "../lib/Services/Application.vala"
	return FALSE;
#line 477 "Application.c"
	_state_1:
#line 35 "../lib/Services/Application.vala"
	granite_services_async_mutex_lock_finish (_data_->_tmp2_, _data_->_res_);
#line 37 "../lib/Services/Application.vala"
	_data_->_tmp3_ = granite_services_application_unity_launcher_entry_instance;
#line 37 "../lib/Services/Application.vala"
	if (_data_->_tmp3_ != NULL) {
#line 38 "../lib/Services/Application.vala"
		_data_->_tmp4_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 38 "../lib/Services/Application.vala"
		granite_services_async_mutex_unlock (_data_->_tmp4_);
#line 39 "../lib/Services/Application.vala"
		_data_->_tmp5_ = granite_services_application_unity_launcher_entry_instance;
#line 39 "../lib/Services/Application.vala"
		_data_->result = _data_->_tmp5_;
#line 39 "../lib/Services/Application.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 39 "../lib/Services/Application.vala"
		if (_data_->_state_ != 0) {
#line 39 "../lib/Services/Application.vala"
			while (!g_task_get_completed (_data_->_async_result)) {
#line 39 "../lib/Services/Application.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 501 "Application.c"
			}
		}
#line 39 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 39 "../lib/Services/Application.vala"
		return FALSE;
#line 508 "Application.c"
	}
#line 42 "../lib/Services/Application.vala"
	_data_->_tmp6_ = g_application_get_default ();
#line 42 "../lib/Services/Application.vala"
	_data_->app = _data_->_tmp6_;
#line 43 "../lib/Services/Application.vala"
	_data_->_tmp7_ = _data_->app;
#line 43 "../lib/Services/Application.vala"
	if (_data_->_tmp7_ == NULL) {
#line 44 "../lib/Services/Application.vala"
		_data_->_tmp8_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 44 "../lib/Services/Application.vala"
		granite_services_async_mutex_unlock (_data_->_tmp8_);
#line 45 "../lib/Services/Application.vala"
		_data_->_tmp9_ = g_error_new_literal (G_IO_ERROR, G_IO_ERROR_FAILED, "No GApplication has been defined");
#line 45 "../lib/Services/Application.vala"
		_data_->_inner_error0_ = _data_->_tmp9_;
#line 45 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 45 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 45 "../lib/Services/Application.vala"
		return FALSE;
#line 532 "Application.c"
	}
#line 48 "../lib/Services/Application.vala"
	_data_->_tmp10_ = _data_->app;
#line 48 "../lib/Services/Application.vala"
	_data_->_tmp11_ = g_application_get_application_id (_data_->_tmp10_);
#line 48 "../lib/Services/Application.vala"
	_data_->_tmp12_ = _data_->_tmp11_;
#line 48 "../lib/Services/Application.vala"
	if (_data_->_tmp12_ == NULL) {
#line 49 "../lib/Services/Application.vala"
		_data_->_tmp13_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 49 "../lib/Services/Application.vala"
		granite_services_async_mutex_unlock (_data_->_tmp13_);
#line 50 "../lib/Services/Application.vala"
		_data_->_tmp14_ = g_error_new_literal (G_IO_ERROR, G_IO_ERROR_FAILED, "The GApplication has no application-id defined");
#line 50 "../lib/Services/Application.vala"
		_data_->_inner_error0_ = _data_->_tmp14_;
#line 50 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 50 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 50 "../lib/Services/Application.vala"
		return FALSE;
#line 556 "Application.c"
	}
#line 53 "../lib/Services/Application.vala"
	_data_->_tmp15_ = granite_services_application_unity_launcher_entry_new ();
#line 53 "../lib/Services/Application.vala"
	_data_->local_instance = _data_->_tmp15_;
#line 54 "../lib/Services/Application.vala"
	_data_->_tmp16_ = _data_->local_instance;
#line 54 "../lib/Services/Application.vala"
	_data_->_tmp17_ = _data_->app;
#line 54 "../lib/Services/Application.vala"
	_data_->_tmp18_ = g_application_get_application_id (_data_->_tmp17_);
#line 54 "../lib/Services/Application.vala"
	_data_->_tmp19_ = _data_->_tmp18_;
#line 54 "../lib/Services/Application.vala"
	_data_->_tmp20_ = g_strdup_printf ("application://%s.desktop", _data_->_tmp19_);
#line 54 "../lib/Services/Application.vala"
	_g_free0 (_data_->_tmp16_->priv->app_uri);
#line 54 "../lib/Services/Application.vala"
	_data_->_tmp16_->priv->app_uri = _data_->_tmp20_;
#line 55 "../lib/Services/Application.vala"
	_data_->_tmp21_ = _data_->local_instance;
#line 55 "../lib/Services/Application.vala"
	_data_->_tmp22_ = _data_->_tmp21_->priv->app_uri;
#line 55 "../lib/Services/Application.vala"
	_data_->_tmp23_ = g_strdup_printf ("/com/canonical/unity/launcherentry/%u", g_str_hash (_data_->_tmp22_));
#line 55 "../lib/Services/Application.vala"
	_data_->_tmp24_ = _data_->_tmp23_;
#line 55 "../lib/Services/Application.vala"
	_data_->_tmp25_ = g_strdup (_data_->_tmp24_);
#line 55 "../lib/Services/Application.vala"
	_data_->_tmp26_ = _data_->_tmp25_;
#line 55 "../lib/Services/Application.vala"
	_g_free0 (_data_->_tmp24_);
#line 55 "../lib/Services/Application.vala"
	_data_->object_path = _data_->_tmp26_;
#line 592 "Application.c"
	{
#line 57 "../lib/Services/Application.vala"
		_data_->_state_ = 2;
#line 57 "../lib/Services/Application.vala"
		g_bus_get (G_BUS_TYPE_SESSION, NULL, granite_services_application_unity_launcher_entry_get_instance_ready, _data_);
#line 57 "../lib/Services/Application.vala"
		return FALSE;
#line 600 "Application.c"
		_state_2:
#line 57 "../lib/Services/Application.vala"
		_data_->_tmp27_ = g_bus_get_finish (_data_->_res_, &_data_->_inner_error0_);
#line 57 "../lib/Services/Application.vala"
		_data_->session_connection = _data_->_tmp27_;
#line 57 "../lib/Services/Application.vala"
		if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 608 "Application.c"
			goto __catch0_g_error;
		}
#line 58 "../lib/Services/Application.vala"
		_data_->_tmp28_ = _data_->session_connection;
#line 58 "../lib/Services/Application.vala"
		_data_->_tmp29_ = _data_->object_path;
#line 58 "../lib/Services/Application.vala"
		_data_->_tmp30_ = _data_->local_instance;
#line 58 "../lib/Services/Application.vala"
		granite_services_application_unity_launcher_entry_register_object (_data_->_tmp30_, _data_->_tmp28_, (const gchar*) _data_->_tmp29_, &_data_->_inner_error0_);
#line 58 "../lib/Services/Application.vala"
		if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 58 "../lib/Services/Application.vala"
			_g_object_unref0 (_data_->session_connection);
#line 623 "Application.c"
			goto __catch0_g_error;
		}
#line 59 "../lib/Services/Application.vala"
		_data_->_tmp31_ = _data_->local_instance;
#line 59 "../lib/Services/Application.vala"
		_data_->_tmp32_ = _g_object_ref0 (_data_->_tmp31_);
#line 59 "../lib/Services/Application.vala"
		_g_object_unref0 (granite_services_application_unity_launcher_entry_instance);
#line 59 "../lib/Services/Application.vala"
		granite_services_application_unity_launcher_entry_instance = _data_->_tmp32_;
#line 56 "../lib/Services/Application.vala"
		_g_object_unref0 (_data_->session_connection);
#line 636 "Application.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
#line 56 "../lib/Services/Application.vala"
		_data_->e = _data_->_inner_error0_;
#line 56 "../lib/Services/Application.vala"
		_data_->_inner_error0_ = NULL;
#line 61 "../lib/Services/Application.vala"
		_data_->_tmp33_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 61 "../lib/Services/Application.vala"
		granite_services_async_mutex_unlock (_data_->_tmp33_);
#line 62 "../lib/Services/Application.vala"
		_data_->_tmp34_ = _data_->e;
#line 62 "../lib/Services/Application.vala"
		_data_->_tmp35_ = _g_error_copy0 (_data_->_tmp34_);
#line 62 "../lib/Services/Application.vala"
		_data_->_inner_error0_ = _data_->_tmp35_;
#line 62 "../lib/Services/Application.vala"
		_g_error_free0 (_data_->e);
#line 657 "Application.c"
		goto __finally0;
	}
	__finally0:
#line 56 "../lib/Services/Application.vala"
	if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 56 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 56 "../lib/Services/Application.vala"
		_g_free0 (_data_->object_path);
#line 56 "../lib/Services/Application.vala"
		_g_object_unref0 (_data_->local_instance);
#line 56 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 56 "../lib/Services/Application.vala"
		return FALSE;
#line 673 "Application.c"
	}
#line 65 "../lib/Services/Application.vala"
	_data_->_tmp36_ = granite_services_application_unity_launcher_entry_instance_mutex;
#line 65 "../lib/Services/Application.vala"
	granite_services_async_mutex_unlock (_data_->_tmp36_);
#line 66 "../lib/Services/Application.vala"
	_data_->_tmp37_ = granite_services_application_unity_launcher_entry_instance;
#line 66 "../lib/Services/Application.vala"
	_data_->result = _data_->_tmp37_;
#line 66 "../lib/Services/Application.vala"
	_g_free0 (_data_->object_path);
#line 66 "../lib/Services/Application.vala"
	_g_object_unref0 (_data_->local_instance);
#line 66 "../lib/Services/Application.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 66 "../lib/Services/Application.vala"
	if (_data_->_state_ != 0) {
#line 66 "../lib/Services/Application.vala"
		while (!g_task_get_completed (_data_->_async_result)) {
#line 66 "../lib/Services/Application.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 695 "Application.c"
		}
	}
#line 66 "../lib/Services/Application.vala"
	g_object_unref (_data_->_async_result);
#line 66 "../lib/Services/Application.vala"
	return FALSE;
#line 702 "Application.c"
}

static void
_g_free0_ (gpointer var)
{
#line 82 "../lib/Services/Application.vala"
	var = (g_free (var), NULL);
#line 710 "Application.c"
}

static void
_g_variant_unref0_ (gpointer var)
{
#line 82 "../lib/Services/Application.vala"
	(var == NULL) ? NULL : (var = (g_variant_unref (var), NULL));
#line 718 "Application.c"
}

static gpointer
_g_variant_ref0 (gpointer self)
{
#line 83 "../lib/Services/Application.vala"
	return self ? g_variant_ref (self) : NULL;
#line 726 "Application.c"
}

G_GNUC_INTERNAL void
granite_services_application_unity_launcher_entry_set_app_property (GraniteServicesApplicationUnityLauncherEntry* self,
                                                                    const gchar* property,
                                                                    GVariant* var)
{
	GHashTable* updated_properties = NULL;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	gchar* _tmp3_;
	GVariant* _tmp4_;
	GHashTable* _tmp5_;
	gchar* _tmp6_;
	GVariant* _tmp7_;
	const gchar* _tmp8_;
#line 81 "../lib/Services/Application.vala"
	g_return_if_fail (self != NULL);
#line 81 "../lib/Services/Application.vala"
	g_return_if_fail (property != NULL);
#line 81 "../lib/Services/Application.vala"
	g_return_if_fail (var != NULL);
#line 82 "../lib/Services/Application.vala"
	_tmp0_ = g_str_hash;
#line 82 "../lib/Services/Application.vala"
	_tmp1_ = g_str_equal;
#line 82 "../lib/Services/Application.vala"
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_variant_unref0_);
#line 82 "../lib/Services/Application.vala"
	updated_properties = _tmp2_;
#line 83 "../lib/Services/Application.vala"
	_tmp3_ = g_strdup (property);
#line 83 "../lib/Services/Application.vala"
	_tmp4_ = _g_variant_ref0 (var);
#line 83 "../lib/Services/Application.vala"
	g_hash_table_insert (updated_properties, _tmp3_, _tmp4_);
#line 84 "../lib/Services/Application.vala"
	_tmp5_ = self->priv->properties;
#line 84 "../lib/Services/Application.vala"
	_tmp6_ = g_strdup (property);
#line 84 "../lib/Services/Application.vala"
	_tmp7_ = _g_variant_ref0 (var);
#line 84 "../lib/Services/Application.vala"
	g_hash_table_insert (_tmp5_, _tmp6_, _tmp7_);
#line 85 "../lib/Services/Application.vala"
	_tmp8_ = self->priv->app_uri;
#line 85 "../lib/Services/Application.vala"
	g_signal_emit (self, granite_services_application_unity_launcher_entry_signals[GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_UPDATE_SIGNAL], 0, _tmp8_, updated_properties);
#line 81 "../lib/Services/Application.vala"
	_g_hash_table_unref0 (updated_properties);
#line 778 "Application.c"
}

static void
g_cclosure_user_marshal_VOID__STRING_BOXED (GClosure * closure,
                                            GValue * return_value,
                                            guint n_param_values,
                                            const GValue * param_values,
                                            gpointer invocation_hint,
                                            gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__STRING_BOXED) (gpointer data1, const char* arg_1, gpointer arg_2, gpointer data2);
	register GMarshalFunc_VOID__STRING_BOXED callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 27 "../lib/Services/Application.vala"
	g_return_if_fail (n_param_values == 3);
#line 27 "../lib/Services/Application.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 27 "../lib/Services/Application.vala"
		data1 = closure->data;
#line 27 "../lib/Services/Application.vala"
		data2 = param_values->data[0].v_pointer;
#line 803 "Application.c"
	} else {
#line 27 "../lib/Services/Application.vala"
		data1 = param_values->data[0].v_pointer;
#line 27 "../lib/Services/Application.vala"
		data2 = closure->data;
#line 809 "Application.c"
	}
#line 27 "../lib/Services/Application.vala"
	callback = (GMarshalFunc_VOID__STRING_BOXED) (marshal_data ? marshal_data : cc->callback);
#line 27 "../lib/Services/Application.vala"
	callback (data1, g_value_get_string (param_values + 1), g_value_get_boxed (param_values + 2), data2);
#line 815 "Application.c"
}

static gpointer
_g_hash_table_ref0 (gpointer self)
{
#line 91 "../lib/Services/Application.vala"
	return self ? g_hash_table_ref (self) : NULL;
#line 823 "Application.c"
}

G_GNUC_INTERNAL GHashTable*
granite_services_application_unity_launcher_entry_query (GraniteServicesApplicationUnityLauncherEntry* self,
                                                         GError** error)
{
	GHashTable* _tmp0_;
	GHashTable* _tmp1_;
	GHashTable* result = NULL;
#line 90 "../lib/Services/Application.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 91 "../lib/Services/Application.vala"
	_tmp0_ = self->priv->properties;
#line 91 "../lib/Services/Application.vala"
	_tmp1_ = _g_hash_table_ref0 (_tmp0_);
#line 91 "../lib/Services/Application.vala"
	result = _tmp1_;
#line 91 "../lib/Services/Application.vala"
	return result;
#line 843 "Application.c"
}

G_GNUC_INTERNAL GraniteServicesApplicationUnityLauncherEntry*
granite_services_application_unity_launcher_entry_construct (GType object_type)
{
	GraniteServicesApplicationUnityLauncherEntry * self = NULL;
#line 27 "../lib/Services/Application.vala"
	self = (GraniteServicesApplicationUnityLauncherEntry*) g_object_new (object_type, NULL);
#line 27 "../lib/Services/Application.vala"
	return self;
#line 854 "Application.c"
}

G_GNUC_INTERNAL GraniteServicesApplicationUnityLauncherEntry*
granite_services_application_unity_launcher_entry_new (void)
{
#line 27 "../lib/Services/Application.vala"
	return granite_services_application_unity_launcher_entry_construct (GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY);
#line 862 "Application.c"
}

static GObject *
granite_services_application_unity_launcher_entry_constructor (GType type,
                                                               guint n_construct_properties,
                                                               GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteServicesApplicationUnityLauncherEntry * self;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	GHashTable* _tmp3_;
	gchar* _tmp4_;
	GVariant* _tmp5_;
	GHashTable* _tmp6_;
	gchar* _tmp7_;
	GVariant* _tmp8_;
	GHashTable* _tmp9_;
	gchar* _tmp10_;
	GVariant* _tmp11_;
	GHashTable* _tmp12_;
	gchar* _tmp13_;
	GVariant* _tmp14_;
	GHashTable* _tmp15_;
	gchar* _tmp16_;
	GVariant* _tmp17_;
#line 69 "../lib/Services/Application.vala"
	parent_class = G_OBJECT_CLASS (granite_services_application_unity_launcher_entry_parent_class);
#line 69 "../lib/Services/Application.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 69 "../lib/Services/Application.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY, GraniteServicesApplicationUnityLauncherEntry);
#line 70 "../lib/Services/Application.vala"
	_tmp0_ = g_str_hash;
#line 70 "../lib/Services/Application.vala"
	_tmp1_ = g_str_equal;
#line 70 "../lib/Services/Application.vala"
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_variant_unref0_);
#line 70 "../lib/Services/Application.vala"
	_g_hash_table_unref0 (self->priv->properties);
#line 70 "../lib/Services/Application.vala"
	self->priv->properties = _tmp2_;
#line 71 "../lib/Services/Application.vala"
	_tmp3_ = self->priv->properties;
#line 71 "../lib/Services/Application.vala"
	_tmp4_ = g_strdup ("urgent");
#line 71 "../lib/Services/Application.vala"
	_tmp5_ = g_variant_new_boolean (FALSE);
#line 71 "../lib/Services/Application.vala"
	g_variant_ref_sink (_tmp5_);
#line 71 "../lib/Services/Application.vala"
	g_hash_table_insert (_tmp3_, _tmp4_, _tmp5_);
#line 72 "../lib/Services/Application.vala"
	_tmp6_ = self->priv->properties;
#line 72 "../lib/Services/Application.vala"
	_tmp7_ = g_strdup ("count");
#line 72 "../lib/Services/Application.vala"
	_tmp8_ = g_variant_new_int64 ((gint64) 0);
#line 72 "../lib/Services/Application.vala"
	g_variant_ref_sink (_tmp8_);
#line 72 "../lib/Services/Application.vala"
	g_hash_table_insert (_tmp6_, _tmp7_, _tmp8_);
#line 73 "../lib/Services/Application.vala"
	_tmp9_ = self->priv->properties;
#line 73 "../lib/Services/Application.vala"
	_tmp10_ = g_strdup ("count-visible");
#line 73 "../lib/Services/Application.vala"
	_tmp11_ = g_variant_new_boolean (FALSE);
#line 73 "../lib/Services/Application.vala"
	g_variant_ref_sink (_tmp11_);
#line 73 "../lib/Services/Application.vala"
	g_hash_table_insert (_tmp9_, _tmp10_, _tmp11_);
#line 74 "../lib/Services/Application.vala"
	_tmp12_ = self->priv->properties;
#line 74 "../lib/Services/Application.vala"
	_tmp13_ = g_strdup ("progress");
#line 74 "../lib/Services/Application.vala"
	_tmp14_ = g_variant_new_double (0.0);
#line 74 "../lib/Services/Application.vala"
	g_variant_ref_sink (_tmp14_);
#line 74 "../lib/Services/Application.vala"
	g_hash_table_insert (_tmp12_, _tmp13_, _tmp14_);
#line 75 "../lib/Services/Application.vala"
	_tmp15_ = self->priv->properties;
#line 75 "../lib/Services/Application.vala"
	_tmp16_ = g_strdup ("progress-visible");
#line 75 "../lib/Services/Application.vala"
	_tmp17_ = g_variant_new_boolean (FALSE);
#line 75 "../lib/Services/Application.vala"
	g_variant_ref_sink (_tmp17_);
#line 75 "../lib/Services/Application.vala"
	g_hash_table_insert (_tmp15_, _tmp16_, _tmp17_);
#line 69 "../lib/Services/Application.vala"
	return obj;
#line 959 "Application.c"
}

static void
granite_services_application_unity_launcher_entry_class_init (GraniteServicesApplicationUnityLauncherEntryClass * klass,
                                                              gpointer klass_data)
{
#line 27 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_parent_class = g_type_class_peek_parent (klass);
#line 27 "../lib/Services/Application.vala"
	g_type_class_adjust_private_offset (klass, &GraniteServicesApplicationUnityLauncherEntry_private_offset);
#line 27 "../lib/Services/Application.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_services_application_unity_launcher_entry_constructor;
#line 27 "../lib/Services/Application.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_services_application_unity_launcher_entry_finalize;
#line 27 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_signals[GRANITE_SERVICES_APPLICATION_UNITY_LAUNCHER_ENTRY_UPDATE_SIGNAL] = g_signal_new ("update", GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__STRING_BOXED, G_TYPE_NONE, 2, G_TYPE_STRING, G_TYPE_HASH_TABLE);
#line 976 "Application.c"
}

static void
granite_services_application_unity_launcher_entry_instance_init (GraniteServicesApplicationUnityLauncherEntry * self,
                                                                 gpointer klass)
{
#line 27 "../lib/Services/Application.vala"
	self->priv = granite_services_application_unity_launcher_entry_get_instance_private (self);
#line 985 "Application.c"
}

static void
granite_services_application_unity_launcher_entry_finalize (GObject * obj)
{
	GraniteServicesApplicationUnityLauncherEntry * self;
#line 27 "../lib/Services/Application.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_SERVICES_APPLICATION_TYPE_UNITY_LAUNCHER_ENTRY, GraniteServicesApplicationUnityLauncherEntry);
#line 78 "../lib/Services/Application.vala"
	_g_free0 (self->priv->app_uri);
#line 79 "../lib/Services/Application.vala"
	_g_hash_table_unref0 (self->priv->properties);
#line 27 "../lib/Services/Application.vala"
	G_OBJECT_CLASS (granite_services_application_unity_launcher_entry_parent_class)->finalize (obj);
#line 1000 "Application.c"
}

static GType
granite_services_application_unity_launcher_entry_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteServicesApplicationUnityLauncherEntryClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_services_application_unity_launcher_entry_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteServicesApplicationUnityLauncherEntry), 0, (GInstanceInitFunc) granite_services_application_unity_launcher_entry_instance_init, NULL };
	GType granite_services_application_unity_launcher_entry_type_id;
	granite_services_application_unity_launcher_entry_type_id = g_type_register_static (G_TYPE_OBJECT, "GraniteServicesApplicationUnityLauncherEntry", &g_define_type_info, 0);
	g_type_set_qdata (granite_services_application_unity_launcher_entry_type_id, g_quark_from_static_string ("vala-dbus-register-object"), (void*) granite_services_application_unity_launcher_entry_register_object);
	GraniteServicesApplicationUnityLauncherEntry_private_offset = g_type_add_instance_private (granite_services_application_unity_launcher_entry_type_id, sizeof (GraniteServicesApplicationUnityLauncherEntryPrivate));
	return granite_services_application_unity_launcher_entry_type_id;
}

G_GNUC_INTERNAL GType
granite_services_application_unity_launcher_entry_get_type (void)
{
	static volatile gsize granite_services_application_unity_launcher_entry_type_id__volatile = 0;
	if (g_once_init_enter (&granite_services_application_unity_launcher_entry_type_id__volatile)) {
		GType granite_services_application_unity_launcher_entry_type_id;
		granite_services_application_unity_launcher_entry_type_id = granite_services_application_unity_launcher_entry_get_type_once ();
		g_once_init_leave (&granite_services_application_unity_launcher_entry_type_id__volatile, granite_services_application_unity_launcher_entry_type_id);
	}
	return granite_services_application_unity_launcher_entry_type_id__volatile;
}

static void
_dbus_granite_services_application_unity_launcher_entry_query (GraniteServicesApplicationUnityLauncherEntry* self,
                                                               GVariant* _parameters_,
                                                               GDBusMethodInvocation* invocation)
{
	GError* error = NULL;
	GVariantIter _arguments_iter;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	GHashTable* result;
	GVariantBuilder _tmp0_;
	GHashTableIter _tmp1_;
	gpointer _tmp2_;
	gpointer _tmp3_;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	result = granite_services_application_unity_launcher_entry_query (self, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	g_hash_table_iter_init (&_tmp1_, result);
	g_variant_builder_init (&_tmp0_, G_VARIANT_TYPE ("a{sv}"));
	while (g_hash_table_iter_next (&_tmp1_, &_tmp2_, &_tmp3_)) {
		gchar* _key;
		GVariant* _value;
		_key = (gchar*) _tmp2_;
		_value = (GVariant*) _tmp3_;
		g_variant_builder_add (&_tmp0_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
	}
	g_variant_builder_add_value (&_reply_builder, g_variant_builder_end (&_tmp0_));
	_g_hash_table_unref0 (result);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}

static void
granite_services_application_unity_launcher_entry_dbus_interface_method_call (GDBusConnection* connection,
                                                                              const gchar* sender,
                                                                              const gchar* object_path,
                                                                              const gchar* interface_name,
                                                                              const gchar* method_name,
                                                                              GVariant* parameters,
                                                                              GDBusMethodInvocation* invocation,
                                                                              gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	if (strcmp (method_name, "Query") == 0) {
		_dbus_granite_services_application_unity_launcher_entry_query (object, parameters, invocation);
	} else {
		g_object_unref (invocation);
	}
}

static GVariant*
granite_services_application_unity_launcher_entry_dbus_interface_get_property (GDBusConnection* connection,
                                                                               const gchar* sender,
                                                                               const gchar* object_path,
                                                                               const gchar* interface_name,
                                                                               const gchar* property_name,
                                                                               GError** error,
                                                                               gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	return NULL;
}

static gboolean
granite_services_application_unity_launcher_entry_dbus_interface_set_property (GDBusConnection* connection,
                                                                               const gchar* sender,
                                                                               const gchar* object_path,
                                                                               const gchar* interface_name,
                                                                               const gchar* property_name,
                                                                               GVariant* value,
                                                                               GError** error,
                                                                               gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	return FALSE;
}

static void
_dbus_granite_services_application_unity_launcher_entry_update (GObject* _sender,
                                                                const gchar* app_uri,
                                                                GHashTable* properties,
                                                                gpointer* _data)
{
	GDBusConnection * _connection;
	const gchar * _path;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	GVariantBuilder _tmp4_;
	GHashTableIter _tmp5_;
	gpointer _tmp6_;
	gpointer _tmp7_;
	_connection = _data[1];
	_path = _data[2];
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string (app_uri));
	g_hash_table_iter_init (&_tmp5_, properties);
	g_variant_builder_init (&_tmp4_, G_VARIANT_TYPE ("a{sv}"));
	while (g_hash_table_iter_next (&_tmp5_, &_tmp6_, &_tmp7_)) {
		gchar* _key;
		GVariant* _value;
		_key = (gchar*) _tmp6_;
		_value = (GVariant*) _tmp7_;
		g_variant_builder_add (&_tmp4_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
	}
	g_variant_builder_add_value (&_arguments_builder, g_variant_builder_end (&_tmp4_));
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_connection_emit_signal (_connection, NULL, _path, "com.canonical.Unity.LauncherEntry", "Update", _arguments, NULL);
}

G_GNUC_INTERNAL guint
granite_services_application_unity_launcher_entry_register_object (gpointer object,
                                                                   GDBusConnection* connection,
                                                                   const gchar* path,
                                                                   GError** error)
{
	guint result;
	gpointer *data;
	data = g_new (gpointer, 3);
	data[0] = g_object_ref (object);
	data[1] = g_object_ref (connection);
	data[2] = g_strdup (path);
	result = g_dbus_connection_register_object (connection, path, (GDBusInterfaceInfo *) (&_granite_services_application_unity_launcher_entry_dbus_interface_info), &_granite_services_application_unity_launcher_entry_dbus_interface_vtable, data, _granite_services_application_unity_launcher_entry_unregister_object, error);
	if (!result) {
		return 0;
	}
	g_signal_connect (object, "update", (GCallback) _dbus_granite_services_application_unity_launcher_entry_update, data);
	return result;
}

static void
_granite_services_application_unity_launcher_entry_unregister_object (gpointer user_data)
{
	gpointer* data;
	data = user_data;
	g_signal_handlers_disconnect_by_func (data[0], _dbus_granite_services_application_unity_launcher_entry_update, data);
	g_object_unref (data[0]);
	g_object_unref (data[1]);
	g_free (data[2]);
	g_free (data);
}

static void
granite_services_application_set_badge_data_free (gpointer _data)
{
	GraniteServicesApplicationSetBadgeData* _data_;
	_data_ = _data;
	g_slice_free (GraniteServicesApplicationSetBadgeData, _data_);
}

void
granite_services_application_set_badge (gint64 count,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_)
{
	GraniteServicesApplicationSetBadgeData* _data_;
	_data_ = g_slice_new0 (GraniteServicesApplicationSetBadgeData);
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
	g_task_set_task_data (_data_->_async_result, _data_, granite_services_application_set_badge_data_free);
	_data_->count = count;
	granite_services_application_set_badge_co (_data_);
}

gboolean
granite_services_application_set_badge_finish (GAsyncResult* _res_,
                                               GError** error)
{
	gboolean result;
	GraniteServicesApplicationSetBadgeData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		gboolean _tmp0_ = FALSE;
		return _tmp0_;
	}
	result = _data_->result;
	return result;
}

/**
         * Set the badge count, usually visible with the dock in the desktop. There is no guarantee
         * that the target environment supports it in any way.
         * For it to be visible, one has to make sure to call set_badge_visible().
         */
static void
granite_services_application_set_badge_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_)
{
	GraniteServicesApplicationSetBadgeData* _data_;
#line 101 "../lib/Services/Application.vala"
	_data_ = _user_data_;
#line 101 "../lib/Services/Application.vala"
	_data_->_source_object_ = source_object;
#line 101 "../lib/Services/Application.vala"
	_data_->_res_ = _res_;
#line 101 "../lib/Services/Application.vala"
	granite_services_application_set_badge_co (_data_);
#line 1241 "Application.c"
}

static gboolean
granite_services_application_set_badge_co (GraniteServicesApplicationSetBadgeData* _data_)
{
#line 100 "../lib/Services/Application.vala"
	switch (_data_->_state_) {
#line 100 "../lib/Services/Application.vala"
		case 0:
#line 1251 "Application.c"
		goto _state_0;
#line 100 "../lib/Services/Application.vala"
		case 1:
#line 1255 "Application.c"
		goto _state_1;
		default:
#line 100 "../lib/Services/Application.vala"
		g_assert_not_reached ();
#line 1260 "Application.c"
	}
	_state_0:
#line 101 "../lib/Services/Application.vala"
	_data_->_state_ = 1;
#line 101 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_get_instance (granite_services_application_set_badge_ready, _data_);
#line 101 "../lib/Services/Application.vala"
	return FALSE;
#line 1269 "Application.c"
	_state_1:
#line 101 "../lib/Services/Application.vala"
	_data_->_tmp0_ = granite_services_application_unity_launcher_entry_get_instance_finish (_data_->_res_, &_data_->_inner_error0_);
#line 101 "../lib/Services/Application.vala"
	_data_->instance = _data_->_tmp0_;
#line 101 "../lib/Services/Application.vala"
	if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 101 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 101 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 101 "../lib/Services/Application.vala"
		return FALSE;
#line 1283 "Application.c"
	}
#line 102 "../lib/Services/Application.vala"
	_data_->_tmp1_ = g_variant_new_int64 (_data_->count);
#line 102 "../lib/Services/Application.vala"
	g_variant_ref_sink (_data_->_tmp1_);
#line 102 "../lib/Services/Application.vala"
	_data_->_tmp2_ = _data_->_tmp1_;
#line 102 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_set_app_property (_data_->instance, "count", _data_->_tmp2_);
#line 102 "../lib/Services/Application.vala"
	_g_variant_unref0 (_data_->_tmp2_);
#line 103 "../lib/Services/Application.vala"
	_data_->result = TRUE;
#line 103 "../lib/Services/Application.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 103 "../lib/Services/Application.vala"
	if (_data_->_state_ != 0) {
#line 103 "../lib/Services/Application.vala"
		while (!g_task_get_completed (_data_->_async_result)) {
#line 103 "../lib/Services/Application.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1305 "Application.c"
		}
	}
#line 103 "../lib/Services/Application.vala"
	g_object_unref (_data_->_async_result);
#line 103 "../lib/Services/Application.vala"
	return FALSE;
#line 1312 "Application.c"
}

static void
granite_services_application_set_badge_visible_data_free (gpointer _data)
{
	GraniteServicesApplicationSetBadgeVisibleData* _data_;
	_data_ = _data;
	g_slice_free (GraniteServicesApplicationSetBadgeVisibleData, _data_);
}

void
granite_services_application_set_badge_visible (gboolean visible,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_)
{
	GraniteServicesApplicationSetBadgeVisibleData* _data_;
	_data_ = g_slice_new0 (GraniteServicesApplicationSetBadgeVisibleData);
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
	g_task_set_task_data (_data_->_async_result, _data_, granite_services_application_set_badge_visible_data_free);
	_data_->visible = visible;
	granite_services_application_set_badge_visible_co (_data_);
}

gboolean
granite_services_application_set_badge_visible_finish (GAsyncResult* _res_,
                                                       GError** error)
{
	gboolean result;
	GraniteServicesApplicationSetBadgeVisibleData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		gboolean _tmp0_ = FALSE;
		return _tmp0_;
	}
	result = _data_->result;
	return result;
}

/**
         * Set the badge visibility.
         */
static void
granite_services_application_set_badge_visible_ready (GObject* source_object,
                                                      GAsyncResult* _res_,
                                                      gpointer _user_data_)
{
	GraniteServicesApplicationSetBadgeVisibleData* _data_;
#line 110 "../lib/Services/Application.vala"
	_data_ = _user_data_;
#line 110 "../lib/Services/Application.vala"
	_data_->_source_object_ = source_object;
#line 110 "../lib/Services/Application.vala"
	_data_->_res_ = _res_;
#line 110 "../lib/Services/Application.vala"
	granite_services_application_set_badge_visible_co (_data_);
#line 1368 "Application.c"
}

static gboolean
granite_services_application_set_badge_visible_co (GraniteServicesApplicationSetBadgeVisibleData* _data_)
{
#line 109 "../lib/Services/Application.vala"
	switch (_data_->_state_) {
#line 109 "../lib/Services/Application.vala"
		case 0:
#line 1378 "Application.c"
		goto _state_0;
#line 109 "../lib/Services/Application.vala"
		case 1:
#line 1382 "Application.c"
		goto _state_1;
		default:
#line 109 "../lib/Services/Application.vala"
		g_assert_not_reached ();
#line 1387 "Application.c"
	}
	_state_0:
#line 110 "../lib/Services/Application.vala"
	_data_->_state_ = 1;
#line 110 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_get_instance (granite_services_application_set_badge_visible_ready, _data_);
#line 110 "../lib/Services/Application.vala"
	return FALSE;
#line 1396 "Application.c"
	_state_1:
#line 110 "../lib/Services/Application.vala"
	_data_->_tmp0_ = granite_services_application_unity_launcher_entry_get_instance_finish (_data_->_res_, &_data_->_inner_error0_);
#line 110 "../lib/Services/Application.vala"
	_data_->instance = _data_->_tmp0_;
#line 110 "../lib/Services/Application.vala"
	if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 110 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 110 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 110 "../lib/Services/Application.vala"
		return FALSE;
#line 1410 "Application.c"
	}
#line 111 "../lib/Services/Application.vala"
	_data_->_tmp1_ = g_variant_new_boolean (_data_->visible);
#line 111 "../lib/Services/Application.vala"
	g_variant_ref_sink (_data_->_tmp1_);
#line 111 "../lib/Services/Application.vala"
	_data_->_tmp2_ = _data_->_tmp1_;
#line 111 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_set_app_property (_data_->instance, "count-visible", _data_->_tmp2_);
#line 111 "../lib/Services/Application.vala"
	_g_variant_unref0 (_data_->_tmp2_);
#line 112 "../lib/Services/Application.vala"
	_data_->result = TRUE;
#line 112 "../lib/Services/Application.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 112 "../lib/Services/Application.vala"
	if (_data_->_state_ != 0) {
#line 112 "../lib/Services/Application.vala"
		while (!g_task_get_completed (_data_->_async_result)) {
#line 112 "../lib/Services/Application.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1432 "Application.c"
		}
	}
#line 112 "../lib/Services/Application.vala"
	g_object_unref (_data_->_async_result);
#line 112 "../lib/Services/Application.vala"
	return FALSE;
#line 1439 "Application.c"
}

static void
granite_services_application_set_progress_data_free (gpointer _data)
{
	GraniteServicesApplicationSetProgressData* _data_;
	_data_ = _data;
	g_slice_free (GraniteServicesApplicationSetProgressData, _data_);
}

void
granite_services_application_set_progress (gdouble progress,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	GraniteServicesApplicationSetProgressData* _data_;
	_data_ = g_slice_new0 (GraniteServicesApplicationSetProgressData);
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
	g_task_set_task_data (_data_->_async_result, _data_, granite_services_application_set_progress_data_free);
	_data_->progress = progress;
	granite_services_application_set_progress_co (_data_);
}

gboolean
granite_services_application_set_progress_finish (GAsyncResult* _res_,
                                                  GError** error)
{
	gboolean result;
	GraniteServicesApplicationSetProgressData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		gboolean _tmp0_ = FALSE;
		return _tmp0_;
	}
	result = _data_->result;
	return result;
}

/**
         * Set the progress of the application, usually visible with the dock in the desktop.
         * There is no guarantee that the target environment supports it in any way.
         * For it to be visible, one has to make sure to call set_progress_visible().
         */
static void
granite_services_application_set_progress_ready (GObject* source_object,
                                                 GAsyncResult* _res_,
                                                 gpointer _user_data_)
{
	GraniteServicesApplicationSetProgressData* _data_;
#line 121 "../lib/Services/Application.vala"
	_data_ = _user_data_;
#line 121 "../lib/Services/Application.vala"
	_data_->_source_object_ = source_object;
#line 121 "../lib/Services/Application.vala"
	_data_->_res_ = _res_;
#line 121 "../lib/Services/Application.vala"
	granite_services_application_set_progress_co (_data_);
#line 1497 "Application.c"
}

static gboolean
granite_services_application_set_progress_co (GraniteServicesApplicationSetProgressData* _data_)
{
#line 120 "../lib/Services/Application.vala"
	switch (_data_->_state_) {
#line 120 "../lib/Services/Application.vala"
		case 0:
#line 1507 "Application.c"
		goto _state_0;
#line 120 "../lib/Services/Application.vala"
		case 1:
#line 1511 "Application.c"
		goto _state_1;
		default:
#line 120 "../lib/Services/Application.vala"
		g_assert_not_reached ();
#line 1516 "Application.c"
	}
	_state_0:
#line 121 "../lib/Services/Application.vala"
	_data_->_state_ = 1;
#line 121 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_get_instance (granite_services_application_set_progress_ready, _data_);
#line 121 "../lib/Services/Application.vala"
	return FALSE;
#line 1525 "Application.c"
	_state_1:
#line 121 "../lib/Services/Application.vala"
	_data_->_tmp0_ = granite_services_application_unity_launcher_entry_get_instance_finish (_data_->_res_, &_data_->_inner_error0_);
#line 121 "../lib/Services/Application.vala"
	_data_->instance = _data_->_tmp0_;
#line 121 "../lib/Services/Application.vala"
	if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 121 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 121 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 121 "../lib/Services/Application.vala"
		return FALSE;
#line 1539 "Application.c"
	}
#line 122 "../lib/Services/Application.vala"
	_data_->_tmp1_ = g_variant_new_double (_data_->progress);
#line 122 "../lib/Services/Application.vala"
	g_variant_ref_sink (_data_->_tmp1_);
#line 122 "../lib/Services/Application.vala"
	_data_->_tmp2_ = _data_->_tmp1_;
#line 122 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_set_app_property (_data_->instance, "progress", _data_->_tmp2_);
#line 122 "../lib/Services/Application.vala"
	_g_variant_unref0 (_data_->_tmp2_);
#line 123 "../lib/Services/Application.vala"
	_data_->result = TRUE;
#line 123 "../lib/Services/Application.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 123 "../lib/Services/Application.vala"
	if (_data_->_state_ != 0) {
#line 123 "../lib/Services/Application.vala"
		while (!g_task_get_completed (_data_->_async_result)) {
#line 123 "../lib/Services/Application.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1561 "Application.c"
		}
	}
#line 123 "../lib/Services/Application.vala"
	g_object_unref (_data_->_async_result);
#line 123 "../lib/Services/Application.vala"
	return FALSE;
#line 1568 "Application.c"
}

static void
granite_services_application_set_progress_visible_data_free (gpointer _data)
{
	GraniteServicesApplicationSetProgressVisibleData* _data_;
	_data_ = _data;
	g_slice_free (GraniteServicesApplicationSetProgressVisibleData, _data_);
}

void
granite_services_application_set_progress_visible (gboolean visible,
                                                   GAsyncReadyCallback _callback_,
                                                   gpointer _user_data_)
{
	GraniteServicesApplicationSetProgressVisibleData* _data_;
	_data_ = g_slice_new0 (GraniteServicesApplicationSetProgressVisibleData);
	_data_->_async_result = g_task_new (NULL, NULL, _callback_, _user_data_);
	g_task_set_task_data (_data_->_async_result, _data_, granite_services_application_set_progress_visible_data_free);
	_data_->visible = visible;
	granite_services_application_set_progress_visible_co (_data_);
}

gboolean
granite_services_application_set_progress_visible_finish (GAsyncResult* _res_,
                                                          GError** error)
{
	gboolean result;
	GraniteServicesApplicationSetProgressVisibleData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		gboolean _tmp0_ = FALSE;
		return _tmp0_;
	}
	result = _data_->result;
	return result;
}

/**
         * Set the progress visibility.
         */
static void
granite_services_application_set_progress_visible_ready (GObject* source_object,
                                                         GAsyncResult* _res_,
                                                         gpointer _user_data_)
{
	GraniteServicesApplicationSetProgressVisibleData* _data_;
#line 130 "../lib/Services/Application.vala"
	_data_ = _user_data_;
#line 130 "../lib/Services/Application.vala"
	_data_->_source_object_ = source_object;
#line 130 "../lib/Services/Application.vala"
	_data_->_res_ = _res_;
#line 130 "../lib/Services/Application.vala"
	granite_services_application_set_progress_visible_co (_data_);
#line 1624 "Application.c"
}

static gboolean
granite_services_application_set_progress_visible_co (GraniteServicesApplicationSetProgressVisibleData* _data_)
{
#line 129 "../lib/Services/Application.vala"
	switch (_data_->_state_) {
#line 129 "../lib/Services/Application.vala"
		case 0:
#line 1634 "Application.c"
		goto _state_0;
#line 129 "../lib/Services/Application.vala"
		case 1:
#line 1638 "Application.c"
		goto _state_1;
		default:
#line 129 "../lib/Services/Application.vala"
		g_assert_not_reached ();
#line 1643 "Application.c"
	}
	_state_0:
#line 130 "../lib/Services/Application.vala"
	_data_->_state_ = 1;
#line 130 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_get_instance (granite_services_application_set_progress_visible_ready, _data_);
#line 130 "../lib/Services/Application.vala"
	return FALSE;
#line 1652 "Application.c"
	_state_1:
#line 130 "../lib/Services/Application.vala"
	_data_->_tmp0_ = granite_services_application_unity_launcher_entry_get_instance_finish (_data_->_res_, &_data_->_inner_error0_);
#line 130 "../lib/Services/Application.vala"
	_data_->instance = _data_->_tmp0_;
#line 130 "../lib/Services/Application.vala"
	if (G_UNLIKELY (_data_->_inner_error0_ != NULL)) {
#line 130 "../lib/Services/Application.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error0_);
#line 130 "../lib/Services/Application.vala"
		g_object_unref (_data_->_async_result);
#line 130 "../lib/Services/Application.vala"
		return FALSE;
#line 1666 "Application.c"
	}
#line 131 "../lib/Services/Application.vala"
	_data_->_tmp1_ = g_variant_new_boolean (_data_->visible);
#line 131 "../lib/Services/Application.vala"
	g_variant_ref_sink (_data_->_tmp1_);
#line 131 "../lib/Services/Application.vala"
	_data_->_tmp2_ = _data_->_tmp1_;
#line 131 "../lib/Services/Application.vala"
	granite_services_application_unity_launcher_entry_set_app_property (_data_->instance, "progress-visible", _data_->_tmp2_);
#line 131 "../lib/Services/Application.vala"
	_g_variant_unref0 (_data_->_tmp2_);
#line 132 "../lib/Services/Application.vala"
	_data_->result = TRUE;
#line 132 "../lib/Services/Application.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 132 "../lib/Services/Application.vala"
	if (_data_->_state_ != 0) {
#line 132 "../lib/Services/Application.vala"
		while (!g_task_get_completed (_data_->_async_result)) {
#line 132 "../lib/Services/Application.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1688 "Application.c"
		}
	}
#line 132 "../lib/Services/Application.vala"
	g_object_unref (_data_->_async_result);
#line 132 "../lib/Services/Application.vala"
	return FALSE;
#line 1695 "Application.c"
}

