/* ModeButtonView.c generated by valac 0.48.14, the Vala compiler
 * generated from ModeButtonView.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2017 elementary LLC. (https://elementary.io)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 *
 * Authored by: Lucas Baudin <xapantu@gmail.com>
 *              Jaap Broekhuizen <jaapz.b@gmail.com>
 *              Victor Eduardo <victoreduardm@gmal.com>
 *              Tom Beckmann <tom@elementary.io>
 *              Corentin NoÃ«l <corentin@elementary.io>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include "granite.h"
#include <glib.h>

#define TYPE_MODE_BUTTON_VIEW (mode_button_view_get_type ())
#define MODE_BUTTON_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MODE_BUTTON_VIEW, ModeButtonView))
#define MODE_BUTTON_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MODE_BUTTON_VIEW, ModeButtonViewClass))
#define IS_MODE_BUTTON_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MODE_BUTTON_VIEW))
#define IS_MODE_BUTTON_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MODE_BUTTON_VIEW))
#define MODE_BUTTON_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MODE_BUTTON_VIEW, ModeButtonViewClass))

typedef struct _ModeButtonView ModeButtonView;
typedef struct _ModeButtonViewClass ModeButtonViewClass;
typedef struct _ModeButtonViewPrivate ModeButtonViewPrivate;
enum  {
	MODE_BUTTON_VIEW_0_PROPERTY,
	MODE_BUTTON_VIEW_NUM_PROPERTIES
};
static GParamSpec* mode_button_view_properties[MODE_BUTTON_VIEW_NUM_PROPERTIES];
typedef struct _Block9Data Block9Data;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

struct _ModeButtonView {
	GtkGrid parent_instance;
	ModeButtonViewPrivate * priv;
};

struct _ModeButtonViewClass {
	GtkGridClass parent_class;
};

struct _Block9Data {
	int _ref_count_;
	ModeButtonView* self;
	GraniteWidgetsModeButton* icon_mode;
	GraniteWidgetsModeButton* text_mode;
};

static gpointer mode_button_view_parent_class = NULL;

GType mode_button_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ModeButtonView, g_object_unref)
ModeButtonView* mode_button_view_new (void);
ModeButtonView* mode_button_view_construct (GType object_type);
static GObject * mode_button_view_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
static Block9Data* block9_data_ref (Block9Data* _data9_);
static void block9_data_unref (void * _userdata_);
static void _mode_button_view___lambda11_ (Block9Data* _data9_);
static void __mode_button_view___lambda11__gtk_button_clicked (GtkButton* _sender,
                                                        gpointer self);
static GType mode_button_view_get_type_once (void);

ModeButtonView*
mode_button_view_construct (GType object_type)
{
	ModeButtonView * self = NULL;
#line 27 "../demo/Views/ModeButtonView.vala"
	self = (ModeButtonView*) g_object_new (object_type, NULL);
#line 27 "../demo/Views/ModeButtonView.vala"
	return self;
#line 95 "ModeButtonView.c"
}

ModeButtonView*
mode_button_view_new (void)
{
#line 27 "../demo/Views/ModeButtonView.vala"
	return mode_button_view_construct (TYPE_MODE_BUTTON_VIEW);
#line 103 "ModeButtonView.c"
}

static Block9Data*
block9_data_ref (Block9Data* _data9_)
{
#line 28 "../demo/Views/ModeButtonView.vala"
	g_atomic_int_inc (&_data9_->_ref_count_);
#line 28 "../demo/Views/ModeButtonView.vala"
	return _data9_;
#line 113 "ModeButtonView.c"
}

static void
block9_data_unref (void * _userdata_)
{
	Block9Data* _data9_;
	_data9_ = (Block9Data*) _userdata_;
#line 28 "../demo/Views/ModeButtonView.vala"
	if (g_atomic_int_dec_and_test (&_data9_->_ref_count_)) {
#line 123 "ModeButtonView.c"
		ModeButtonView* self;
#line 28 "../demo/Views/ModeButtonView.vala"
		self = _data9_->self;
#line 28 "../demo/Views/ModeButtonView.vala"
		_g_object_unref0 (_data9_->text_mode);
#line 28 "../demo/Views/ModeButtonView.vala"
		_g_object_unref0 (_data9_->icon_mode);
#line 28 "../demo/Views/ModeButtonView.vala"
		_g_object_unref0 (self);
#line 28 "../demo/Views/ModeButtonView.vala"
		g_slice_free (Block9Data, _data9_);
#line 135 "ModeButtonView.c"
	}
}

static void
_mode_button_view___lambda11_ (Block9Data* _data9_)
{
	ModeButtonView* self;
	GraniteWidgetsModeButton* _tmp0_;
	GraniteWidgetsModeButton* _tmp1_;
#line 102 "../demo/Views/ModeButtonView.vala"
	self = _data9_->self;
#line 103 "../demo/Views/ModeButtonView.vala"
	_tmp0_ = _data9_->icon_mode;
#line 103 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_set_selected (_tmp0_, -1);
#line 104 "../demo/Views/ModeButtonView.vala"
	_tmp1_ = _data9_->text_mode;
#line 104 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_set_selected (_tmp1_, -1);
#line 155 "ModeButtonView.c"
}

static void
__mode_button_view___lambda11__gtk_button_clicked (GtkButton* _sender,
                                                   gpointer self)
{
#line 102 "../demo/Views/ModeButtonView.vala"
	_mode_button_view___lambda11_ (self);
#line 164 "ModeButtonView.c"
}

static GObject *
mode_button_view_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ModeButtonView * self;
	Block9Data* _data9_;
	GtkLabel* mode_button_label = NULL;
	GtkLabel* _tmp0_;
	GtkLabel* _tmp1_;
	GtkLabel* _tmp2_;
	GtkStyleContext* _tmp3_;
	GraniteWidgetsModeButton* _tmp4_;
	GraniteWidgetsModeButton* _tmp5_;
	GraniteWidgetsModeButton* _tmp6_;
	GraniteWidgetsModeButton* _tmp7_;
	GraniteWidgetsModeButton* _tmp8_;
	GraniteWidgetsModeButton* _tmp9_;
	GraniteWidgetsModeButton* _tmp10_;
	GtkButton* clear_button = NULL;
	GtkButton* _tmp11_;
	GtkLabel* mode_switch_label = NULL;
	GtkLabel* _tmp12_;
	GtkLabel* _tmp13_;
	GtkLabel* _tmp14_;
	GtkLabel* _tmp15_;
	GtkStyleContext* _tmp16_;
	GraniteModeSwitch* mode_switch = NULL;
	GraniteModeSwitch* _tmp17_;
	GraniteModeSwitch* _tmp18_;
	GraniteModeSwitch* _tmp19_;
	GraniteModeSwitch* _tmp20_;
	GraniteHeaderLabel* switchbutton_header = NULL;
	GraniteHeaderLabel* _tmp21_ = NULL;
	GraniteSwitchModelButton* header_switchmodelbutton = NULL;
	GraniteSwitchModelButton* _tmp22_;
	GraniteSwitchModelButton* _tmp23_;
	GtkStyleContext* _tmp24_;
	GraniteSwitchModelButton* switchmodelbutton = NULL;
	GraniteSwitchModelButton* _tmp25_;
	GraniteSwitchModelButton* description_switchmodelbutton = NULL;
	gchar* _tmp26_;
	GraniteSwitchModelButton* _tmp27_ = NULL;
	GtkGrid* switchbutton_grid = NULL;
	GtkGrid* _tmp28_ = NULL;
	GtkGrid* _tmp29_;
	GraniteSwitchModelButton* _tmp30_;
	GtkGrid* _tmp31_;
	GraniteSwitchModelButton* _tmp32_;
	GtkGrid* _tmp33_;
	GraniteSwitchModelButton* _tmp34_;
	GtkGrid* _tmp35_;
	GtkPopover* switchbutton_popover = NULL;
	GtkPopover* _tmp36_;
	GtkPopover* _tmp37_;
	GtkGrid* _tmp38_;
	GtkMenuButton* popover_button = NULL;
	GtkMenuButton* _tmp39_ = NULL;
	GtkMenuButton* _tmp40_;
	GtkPopover* _tmp41_;
	GtkLabel* _tmp42_;
	GraniteWidgetsModeButton* _tmp43_;
	GraniteWidgetsModeButton* _tmp44_;
	GtkButton* _tmp45_;
	GtkLabel* _tmp46_;
	GraniteModeSwitch* _tmp47_;
	GraniteHeaderLabel* _tmp48_;
	GtkMenuButton* _tmp49_;
	GtkButton* _tmp50_;
#line 28 "../demo/Views/ModeButtonView.vala"
	parent_class = G_OBJECT_CLASS (mode_button_view_parent_class);
#line 28 "../demo/Views/ModeButtonView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 28 "../demo/Views/ModeButtonView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_MODE_BUTTON_VIEW, ModeButtonView);
#line 28 "../demo/Views/ModeButtonView.vala"
	_data9_ = g_slice_new0 (Block9Data);
#line 28 "../demo/Views/ModeButtonView.vala"
	_data9_->_ref_count_ = 1;
#line 28 "../demo/Views/ModeButtonView.vala"
	_data9_->self = g_object_ref (self);
#line 29 "../demo/Views/ModeButtonView.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new ("ModeButton");
#line 29 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp0_);
#line 29 "../demo/Views/ModeButtonView.vala"
	mode_button_label = _tmp0_;
#line 30 "../demo/Views/ModeButtonView.vala"
	_tmp1_ = mode_button_label;
#line 30 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp1_, GTK_ALIGN_START);
#line 31 "../demo/Views/ModeButtonView.vala"
	_tmp2_ = mode_button_label;
#line 31 "../demo/Views/ModeButtonView.vala"
	_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) _tmp2_);
#line 31 "../demo/Views/ModeButtonView.vala"
	gtk_style_context_add_class (_tmp3_, GRANITE_STYLE_CLASS_H4_LABEL);
#line 33 "../demo/Views/ModeButtonView.vala"
	_tmp4_ = granite_widgets_mode_button_new ();
#line 33 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp4_);
#line 33 "../demo/Views/ModeButtonView.vala"
	_data9_->icon_mode = _tmp4_;
#line 34 "../demo/Views/ModeButtonView.vala"
	_tmp5_ = _data9_->icon_mode;
#line 34 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_append_icon (_tmp5_, "view-grid-symbolic", GTK_ICON_SIZE_BUTTON);
#line 35 "../demo/Views/ModeButtonView.vala"
	_tmp6_ = _data9_->icon_mode;
#line 35 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_append_icon (_tmp6_, "view-list-symbolic", GTK_ICON_SIZE_BUTTON);
#line 36 "../demo/Views/ModeButtonView.vala"
	_tmp7_ = _data9_->icon_mode;
#line 36 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_append_icon (_tmp7_, "view-column-symbolic", GTK_ICON_SIZE_BUTTON);
#line 38 "../demo/Views/ModeButtonView.vala"
	_tmp8_ = granite_widgets_mode_button_new ();
#line 38 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp8_);
#line 38 "../demo/Views/ModeButtonView.vala"
	_data9_->text_mode = _tmp8_;
#line 39 "../demo/Views/ModeButtonView.vala"
	_tmp9_ = _data9_->text_mode;
#line 39 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_append_text (_tmp9_, "Foo");
#line 40 "../demo/Views/ModeButtonView.vala"
	_tmp10_ = _data9_->text_mode;
#line 40 "../demo/Views/ModeButtonView.vala"
	granite_widgets_mode_button_append_text (_tmp10_, "Bar");
#line 42 "../demo/Views/ModeButtonView.vala"
	_tmp11_ = (GtkButton*) gtk_button_new_with_label ("Clear Selected");
#line 42 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp11_);
#line 42 "../demo/Views/ModeButtonView.vala"
	clear_button = _tmp11_;
#line 44 "../demo/Views/ModeButtonView.vala"
	_tmp12_ = (GtkLabel*) gtk_label_new ("ModeSwitch");
#line 44 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp12_);
#line 44 "../demo/Views/ModeButtonView.vala"
	mode_switch_label = _tmp12_;
#line 45 "../demo/Views/ModeButtonView.vala"
	_tmp13_ = mode_switch_label;
#line 45 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp13_, GTK_ALIGN_START);
#line 46 "../demo/Views/ModeButtonView.vala"
	_tmp14_ = mode_switch_label;
#line 46 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp14_, 12);
#line 47 "../demo/Views/ModeButtonView.vala"
	_tmp15_ = mode_switch_label;
#line 47 "../demo/Views/ModeButtonView.vala"
	_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) _tmp15_);
#line 47 "../demo/Views/ModeButtonView.vala"
	gtk_style_context_add_class (_tmp16_, GRANITE_STYLE_CLASS_H4_LABEL);
#line 49 "../demo/Views/ModeButtonView.vala"
	_tmp17_ = granite_mode_switch_new_from_icon_name ("display-brightness-symbolic", "weather-clear-night-symbolic");
#line 49 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp17_);
#line 49 "../demo/Views/ModeButtonView.vala"
	mode_switch = _tmp17_;
#line 53 "../demo/Views/ModeButtonView.vala"
	_tmp18_ = mode_switch;
#line 53 "../demo/Views/ModeButtonView.vala"
	granite_mode_switch_set_primary_icon_tooltip_text (_tmp18_, "Light background");
#line 54 "../demo/Views/ModeButtonView.vala"
	_tmp19_ = mode_switch;
#line 54 "../demo/Views/ModeButtonView.vala"
	granite_mode_switch_set_secondary_icon_tooltip_text (_tmp19_, "Dark background");
#line 55 "../demo/Views/ModeButtonView.vala"
	_tmp20_ = mode_switch;
#line 55 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp20_, GTK_ALIGN_CENTER);
#line 57 "../demo/Views/ModeButtonView.vala"
	_tmp21_ = granite_header_label_new ("SwitchModelButton");
#line 57 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp21_, 12);
#line 57 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp21_);
#line 57 "../demo/Views/ModeButtonView.vala"
	switchbutton_header = _tmp21_;
#line 61 "../demo/Views/ModeButtonView.vala"
	_tmp22_ = granite_switch_model_button_new ("Header");
#line 61 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp22_);
#line 61 "../demo/Views/ModeButtonView.vala"
	header_switchmodelbutton = _tmp22_;
#line 62 "../demo/Views/ModeButtonView.vala"
	_tmp23_ = header_switchmodelbutton;
#line 62 "../demo/Views/ModeButtonView.vala"
	_tmp24_ = gtk_widget_get_style_context ((GtkWidget*) _tmp23_);
#line 62 "../demo/Views/ModeButtonView.vala"
	gtk_style_context_add_class (_tmp24_, GRANITE_STYLE_CLASS_H4_LABEL);
#line 64 "../demo/Views/ModeButtonView.vala"
	_tmp25_ = granite_switch_model_button_new ("Default");
#line 64 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp25_);
#line 64 "../demo/Views/ModeButtonView.vala"
	switchmodelbutton = _tmp25_;
#line 66 "../demo/Views/ModeButtonView.vala"
	_tmp26_ = g_strdup ("A description of additional affects related to the activation state of" \
" this switch");
#line 66 "../demo/Views/ModeButtonView.vala"
	_tmp27_ = granite_switch_model_button_new ("With Description");
#line 66 "../demo/Views/ModeButtonView.vala"
	gtk_toggle_button_set_active ((GtkToggleButton*) _tmp27_, TRUE);
#line 66 "../demo/Views/ModeButtonView.vala"
	granite_switch_model_button_set_description (_tmp27_, _tmp26_);
#line 66 "../demo/Views/ModeButtonView.vala"
	_g_free0 (_tmp26_);
#line 66 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp27_);
#line 66 "../demo/Views/ModeButtonView.vala"
	description_switchmodelbutton = _tmp27_;
#line 71 "../demo/Views/ModeButtonView.vala"
	_tmp28_ = (GtkGrid*) gtk_grid_new ();
#line 71 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp28_, 3);
#line 71 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp28_, 3);
#line 71 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp28_);
#line 71 "../demo/Views/ModeButtonView.vala"
	switchbutton_grid = _tmp28_;
#line 75 "../demo/Views/ModeButtonView.vala"
	_tmp29_ = switchbutton_grid;
#line 75 "../demo/Views/ModeButtonView.vala"
	_tmp30_ = header_switchmodelbutton;
#line 75 "../demo/Views/ModeButtonView.vala"
	gtk_grid_attach (_tmp29_, (GtkWidget*) _tmp30_, 0, 0, 1, 1);
#line 76 "../demo/Views/ModeButtonView.vala"
	_tmp31_ = switchbutton_grid;
#line 76 "../demo/Views/ModeButtonView.vala"
	_tmp32_ = switchmodelbutton;
#line 76 "../demo/Views/ModeButtonView.vala"
	gtk_grid_attach (_tmp31_, (GtkWidget*) _tmp32_, 0, 1, 1, 1);
#line 77 "../demo/Views/ModeButtonView.vala"
	_tmp33_ = switchbutton_grid;
#line 77 "../demo/Views/ModeButtonView.vala"
	_tmp34_ = description_switchmodelbutton;
#line 77 "../demo/Views/ModeButtonView.vala"
	gtk_grid_attach (_tmp33_, (GtkWidget*) _tmp34_, 0, 2, 1, 1);
#line 78 "../demo/Views/ModeButtonView.vala"
	_tmp35_ = switchbutton_grid;
#line 78 "../demo/Views/ModeButtonView.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp35_);
#line 80 "../demo/Views/ModeButtonView.vala"
	_tmp36_ = (GtkPopover*) gtk_popover_new (NULL);
#line 80 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp36_);
#line 80 "../demo/Views/ModeButtonView.vala"
	switchbutton_popover = _tmp36_;
#line 81 "../demo/Views/ModeButtonView.vala"
	_tmp37_ = switchbutton_popover;
#line 81 "../demo/Views/ModeButtonView.vala"
	_tmp38_ = switchbutton_grid;
#line 81 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) _tmp37_, (GtkWidget*) _tmp38_);
#line 83 "../demo/Views/ModeButtonView.vala"
	_tmp39_ = (GtkMenuButton*) gtk_menu_button_new ();
#line 83 "../demo/Views/ModeButtonView.vala"
	gtk_menu_button_set_direction (_tmp39_, GTK_ARROW_UP);
#line 83 "../demo/Views/ModeButtonView.vala"
	g_object_ref_sink (_tmp39_);
#line 83 "../demo/Views/ModeButtonView.vala"
	popover_button = _tmp39_;
#line 86 "../demo/Views/ModeButtonView.vala"
	_tmp40_ = popover_button;
#line 86 "../demo/Views/ModeButtonView.vala"
	_tmp41_ = switchbutton_popover;
#line 86 "../demo/Views/ModeButtonView.vala"
	gtk_menu_button_set_popover (_tmp40_, _tmp41_);
#line 88 "../demo/Views/ModeButtonView.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 12);
#line 89 "../demo/Views/ModeButtonView.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 6);
#line 90 "../demo/Views/ModeButtonView.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) self, GTK_ORIENTATION_VERTICAL);
#line 91 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 92 "../demo/Views/ModeButtonView.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 93 "../demo/Views/ModeButtonView.vala"
	_tmp42_ = mode_button_label;
#line 93 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp42_);
#line 94 "../demo/Views/ModeButtonView.vala"
	_tmp43_ = _data9_->icon_mode;
#line 94 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp43_);
#line 95 "../demo/Views/ModeButtonView.vala"
	_tmp44_ = _data9_->text_mode;
#line 95 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp44_);
#line 96 "../demo/Views/ModeButtonView.vala"
	_tmp45_ = clear_button;
#line 96 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp45_);
#line 97 "../demo/Views/ModeButtonView.vala"
	_tmp46_ = mode_switch_label;
#line 97 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp46_);
#line 98 "../demo/Views/ModeButtonView.vala"
	_tmp47_ = mode_switch;
#line 98 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp47_);
#line 99 "../demo/Views/ModeButtonView.vala"
	_tmp48_ = switchbutton_header;
#line 99 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp48_);
#line 100 "../demo/Views/ModeButtonView.vala"
	_tmp49_ = popover_button;
#line 100 "../demo/Views/ModeButtonView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp49_);
#line 102 "../demo/Views/ModeButtonView.vala"
	_tmp50_ = clear_button;
#line 102 "../demo/Views/ModeButtonView.vala"
	g_signal_connect_data (_tmp50_, "clicked", (GCallback) __mode_button_view___lambda11__gtk_button_clicked, block9_data_ref (_data9_), (GClosureNotify) block9_data_unref, 0);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (popover_button);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (switchbutton_popover);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (switchbutton_grid);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (description_switchmodelbutton);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (switchmodelbutton);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (header_switchmodelbutton);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (switchbutton_header);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (mode_switch);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (mode_switch_label);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (clear_button);
#line 28 "../demo/Views/ModeButtonView.vala"
	_g_object_unref0 (mode_button_label);
#line 28 "../demo/Views/ModeButtonView.vala"
	block9_data_unref (_data9_);
#line 28 "../demo/Views/ModeButtonView.vala"
	_data9_ = NULL;
#line 28 "../demo/Views/ModeButtonView.vala"
	return obj;
#line 514 "ModeButtonView.c"
}

static void
mode_button_view_class_init (ModeButtonViewClass * klass,
                             gpointer klass_data)
{
#line 27 "../demo/Views/ModeButtonView.vala"
	mode_button_view_parent_class = g_type_class_peek_parent (klass);
#line 27 "../demo/Views/ModeButtonView.vala"
	G_OBJECT_CLASS (klass)->constructor = mode_button_view_constructor;
#line 525 "ModeButtonView.c"
}

static void
mode_button_view_instance_init (ModeButtonView * self,
                                gpointer klass)
{
}

static GType
mode_button_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ModeButtonViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) mode_button_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ModeButtonView), 0, (GInstanceInitFunc) mode_button_view_instance_init, NULL };
	GType mode_button_view_type_id;
	mode_button_view_type_id = g_type_register_static (gtk_grid_get_type (), "ModeButtonView", &g_define_type_info, 0);
	return mode_button_view_type_id;
}

GType
mode_button_view_get_type (void)
{
	static volatile gsize mode_button_view_type_id__volatile = 0;
	if (g_once_init_enter (&mode_button_view_type_id__volatile)) {
		GType mode_button_view_type_id;
		mode_button_view_type_id = mode_button_view_get_type_once ();
		g_once_init_leave (&mode_button_view_type_id__volatile, mode_button_view_type_id);
	}
	return mode_button_view_type_id__volatile;
}

