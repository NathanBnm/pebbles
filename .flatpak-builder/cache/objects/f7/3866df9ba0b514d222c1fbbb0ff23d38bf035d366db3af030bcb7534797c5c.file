/* StatisticsGraph.c generated by valac 0.48.14, the Vala compiler
 * generated from StatisticsGraph.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas  <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <cairo-gobject.h>
#include <stdio.h>

#define PEBBLES_TYPE_STATISTICS_GRAPH (pebbles_statistics_graph_get_type ())
#define PEBBLES_STATISTICS_GRAPH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_STATISTICS_GRAPH, PebblesStatisticsGraph))
#define PEBBLES_STATISTICS_GRAPH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_STATISTICS_GRAPH, PebblesStatisticsGraphClass))
#define PEBBLES_IS_STATISTICS_GRAPH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_STATISTICS_GRAPH))
#define PEBBLES_IS_STATISTICS_GRAPH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_STATISTICS_GRAPH))
#define PEBBLES_STATISTICS_GRAPH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_STATISTICS_GRAPH, PebblesStatisticsGraphClass))

typedef struct _PebblesStatisticsGraph PebblesStatisticsGraph;
typedef struct _PebblesStatisticsGraphClass PebblesStatisticsGraphClass;
typedef struct _PebblesStatisticsGraphPrivate PebblesStatisticsGraphPrivate;
enum  {
	PEBBLES_STATISTICS_GRAPH_0_PROPERTY,
	PEBBLES_STATISTICS_GRAPH_NUM_PROPERTIES
};
static GParamSpec* pebbles_statistics_graph_properties[PEBBLES_STATISTICS_GRAPH_NUM_PROPERTIES];

struct _PebblesStatisticsGraph {
	GtkDrawingArea parent_instance;
	PebblesStatisticsGraphPrivate * priv;
};

struct _PebblesStatisticsGraphClass {
	GtkDrawingAreaClass parent_class;
};

struct _PebblesStatisticsGraphPrivate {
	gint cardinality;
	gdouble* data_set;
	gint data_set_length1;
	gint _data_set_size_;
};

static gint PebblesStatisticsGraph_private_offset;
static gpointer pebbles_statistics_graph_parent_class = NULL;

GType pebbles_statistics_graph_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesStatisticsGraph, g_object_unref)
#define PEBBLES_STATISTICS_GRAPH_scale_x ((gdouble) 140)
#define PEBBLES_STATISTICS_GRAPH_scale_y ((gdouble) 56)
void pebbles_statistics_graph_set_data_set (PebblesStatisticsGraph* self,
                                            gchar** data_points,
                                            gint data_points_length1);
PebblesStatisticsGraph* pebbles_statistics_graph_new (void);
PebblesStatisticsGraph* pebbles_statistics_graph_construct (GType object_type);
static gboolean pebbles_statistics_graph_on_draw (PebblesStatisticsGraph* self,
                                           GtkWidget* widget,
                                           cairo_t* context);
static gboolean _pebbles_statistics_graph_on_draw_gtk_widget_draw (GtkWidget* _sender,
                                                            cairo_t* cr,
                                                            gpointer self);
static gdouble pebbles_statistics_graph_highest_point (PebblesStatisticsGraph* self,
                                                gdouble* arr,
                                                gint arr_length1);
static gdouble pebbles_statistics_graph_lowest_point (PebblesStatisticsGraph* self,
                                               gdouble* arr,
                                               gint arr_length1);
static void pebbles_statistics_graph_draw_bar (PebblesStatisticsGraph* self,
                                        cairo_t* ctx,
                                        gint width,
                                        gint height,
                                        gint x_offset,
                                        gint y_offset);
static void pebbles_statistics_graph_finalize (GObject * obj);
static GType pebbles_statistics_graph_get_type_once (void);

static inline gpointer
pebbles_statistics_graph_get_instance_private (PebblesStatisticsGraph* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesStatisticsGraph_private_offset);
}

static gdouble
double_parse (const gchar* str)
{
	gdouble result = 0.0;
#line 995 "glib-2.0.vapi"
	g_return_val_if_fail (str != NULL, 0.0);
#line 996 "glib-2.0.vapi"
	result = g_ascii_strtod (str, NULL);
#line 996 "glib-2.0.vapi"
	return result;
#line 116 "StatisticsGraph.c"
}

void
pebbles_statistics_graph_set_data_set (PebblesStatisticsGraph* self,
                                       gchar** data_points,
                                       gint data_points_length1)
{
	gdouble* _tmp0_;
#line 29 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_if_fail (self != NULL);
#line 30 "../src/Views/Displays/StatisticsGraph.vala"
	_tmp0_ = g_new0 (gdouble, data_points_length1);
#line 30 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv->data_set = (g_free (self->priv->data_set), NULL);
#line 30 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv->data_set = _tmp0_;
#line 30 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv->data_set_length1 = data_points_length1;
#line 30 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv->_data_set_size_ = self->priv->data_set_length1;
#line 137 "StatisticsGraph.c"
	{
		gint i = 0;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
		i = 0;
#line 142 "StatisticsGraph.c"
		{
			gboolean _tmp1_ = FALSE;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
			_tmp1_ = TRUE;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
			while (TRUE) {
#line 149 "StatisticsGraph.c"
				gdouble* _tmp3_;
				gint _tmp3__length1;
				const gchar* _tmp4_;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
				if (!_tmp1_) {
#line 155 "StatisticsGraph.c"
					gint _tmp2_;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp2_ = i;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
					i = _tmp2_ + 1;
#line 161 "StatisticsGraph.c"
				}
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp1_ = FALSE;
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
				if (!(i < data_points_length1)) {
#line 31 "../src/Views/Displays/StatisticsGraph.vala"
					break;
#line 169 "StatisticsGraph.c"
				}
#line 32 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp3_ = self->priv->data_set;
#line 32 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp3__length1 = self->priv->data_set_length1;
#line 32 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp4_ = data_points[i];
#line 32 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp3_[i] = double_parse (_tmp4_);
#line 179 "StatisticsGraph.c"
			}
		}
	}
#line 34 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv->cardinality = data_points_length1;
#line 185 "StatisticsGraph.c"
}

static gboolean
_pebbles_statistics_graph_on_draw_gtk_widget_draw (GtkWidget* _sender,
                                                   cairo_t* cr,
                                                   gpointer self)
{
	gboolean result;
	result = pebbles_statistics_graph_on_draw ((PebblesStatisticsGraph*) self, _sender, cr);
#line 38 "../src/Views/Displays/StatisticsGraph.vala"
	return result;
#line 197 "StatisticsGraph.c"
}

PebblesStatisticsGraph*
pebbles_statistics_graph_construct (GType object_type)
{
	PebblesStatisticsGraph * self = NULL;
#line 37 "../src/Views/Displays/StatisticsGraph.vala"
	self = (PebblesStatisticsGraph*) g_object_new (object_type, NULL);
#line 38 "../src/Views/Displays/StatisticsGraph.vala"
	g_signal_connect_object ((GtkWidget*) self, "draw", (GCallback) _pebbles_statistics_graph_on_draw_gtk_widget_draw, self, 0);
#line 39 "../src/Views/Displays/StatisticsGraph.vala"
	g_object_set ((GtkWidget*) self, "width-request", 140, NULL);
#line 40 "../src/Views/Displays/StatisticsGraph.vala"
	gtk_widget_queue_draw ((GtkWidget*) self);
#line 41 "../src/Views/Displays/StatisticsGraph.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 37 "../src/Views/Displays/StatisticsGraph.vala"
	return self;
#line 216 "StatisticsGraph.c"
}

PebblesStatisticsGraph*
pebbles_statistics_graph_new (void)
{
#line 37 "../src/Views/Displays/StatisticsGraph.vala"
	return pebbles_statistics_graph_construct (PEBBLES_TYPE_STATISTICS_GRAPH);
#line 224 "StatisticsGraph.c"
}

static gboolean
pebbles_statistics_graph_on_draw (PebblesStatisticsGraph* self,
                                  GtkWidget* widget,
                                  cairo_t* context)
{
	gboolean _tmp0_ = FALSE;
	gboolean result = FALSE;
#line 47 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 47 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_val_if_fail (widget != NULL, FALSE);
#line 47 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_val_if_fail (context != NULL, FALSE);
#line 49 "../src/Views/Displays/StatisticsGraph.vala"
	cairo_set_source_rgba (context, 0.152941176, 0.156862745, 0.388235294, 0.8);
#line 51 "../src/Views/Displays/StatisticsGraph.vala"
	if (self->priv->cardinality != 0) {
#line 244 "StatisticsGraph.c"
		gdouble* _tmp1_;
		gint _tmp1__length1;
#line 51 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp1_ = self->priv->data_set;
#line 51 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp1__length1 = self->priv->data_set_length1;
#line 51 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp0_ = _tmp1_ != NULL;
#line 253 "StatisticsGraph.c"
	} else {
#line 51 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp0_ = FALSE;
#line 257 "StatisticsGraph.c"
	}
#line 51 "../src/Views/Displays/StatisticsGraph.vala"
	if (_tmp0_) {
#line 261 "StatisticsGraph.c"
		gdouble max_point = 0.0;
		gdouble* _tmp2_;
		gint _tmp2__length1;
		gdouble min_point = 0.0;
		gdouble* _tmp3_;
		gint _tmp3__length1;
		gdouble max_height = 0.0;
		FILE* _tmp4_;
		gint baseline = 0;
		gdouble line_width = 0.0;
		gdouble gap = 0.0;
#line 52 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp2_ = self->priv->data_set;
#line 52 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp2__length1 = self->priv->data_set_length1;
#line 52 "../src/Views/Displays/StatisticsGraph.vala"
		max_point = pebbles_statistics_graph_highest_point (self, _tmp2_, (gint) _tmp2__length1);
#line 53 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp3_ = self->priv->data_set;
#line 53 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp3__length1 = self->priv->data_set_length1;
#line 53 "../src/Views/Displays/StatisticsGraph.vala"
		min_point = pebbles_statistics_graph_lowest_point (self, _tmp3_, (gint) _tmp3__length1);
#line 54 "../src/Views/Displays/StatisticsGraph.vala"
		max_height = max_point - min_point;
#line 55 "../src/Views/Displays/StatisticsGraph.vala"
		_tmp4_ = stdout;
#line 55 "../src/Views/Displays/StatisticsGraph.vala"
		fprintf (_tmp4_, "max: %lf, min: %lf\n", max_point, min_point);
#line 57 "../src/Views/Displays/StatisticsGraph.vala"
		baseline = (gint) ((-PEBBLES_STATISTICS_GRAPH_scale_y) * (min_point / max_height));
#line 59 "../src/Views/Displays/StatisticsGraph.vala"
		line_width = PEBBLES_STATISTICS_GRAPH_scale_x / self->priv->cardinality;
#line 60 "../src/Views/Displays/StatisticsGraph.vala"
		gap = CLAMP (line_width / 4, (gdouble) 0, (gdouble) 2);
#line 297 "StatisticsGraph.c"
		{
			gint i = 0;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
			i = 0;
#line 302 "StatisticsGraph.c"
			{
				gboolean _tmp5_ = FALSE;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp5_ = TRUE;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
				while (TRUE) {
#line 309 "StatisticsGraph.c"
					gdouble* _tmp7_;
					gint _tmp7__length1;
					gdouble _tmp8_;
					FILE* _tmp9_;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
					if (!_tmp5_) {
#line 316 "StatisticsGraph.c"
						gint _tmp6_;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
						_tmp6_ = i;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
						i = _tmp6_ + 1;
#line 322 "StatisticsGraph.c"
					}
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp5_ = FALSE;
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
					if (!(i < self->priv->cardinality)) {
#line 63 "../src/Views/Displays/StatisticsGraph.vala"
						break;
#line 330 "StatisticsGraph.c"
					}
#line 64 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp7_ = self->priv->data_set;
#line 64 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp7__length1 = self->priv->data_set_length1;
#line 64 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp8_ = _tmp7_[i];
#line 64 "../src/Views/Displays/StatisticsGraph.vala"
					pebbles_statistics_graph_draw_bar (self, context, (gint) (line_width - gap), (gint) ((_tmp8_ / max_height) * PEBBLES_STATISTICS_GRAPH_scale_y), (gint) (i * line_width), baseline);
#line 65 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp9_ = stdout;
#line 65 "../src/Views/Displays/StatisticsGraph.vala"
					fprintf (_tmp9_, "%d\n", i);
#line 344 "StatisticsGraph.c"
				}
			}
		}
	}
#line 69 "../src/Views/Displays/StatisticsGraph.vala"
	result = TRUE;
#line 69 "../src/Views/Displays/StatisticsGraph.vala"
	return result;
#line 353 "StatisticsGraph.c"
}

static void
pebbles_statistics_graph_draw_bar (PebblesStatisticsGraph* self,
                                   cairo_t* ctx,
                                   gint width,
                                   gint height,
                                   gint x_offset,
                                   gint y_offset)
{
#line 72 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_if_fail (self != NULL);
#line 72 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_if_fail (ctx != NULL);
#line 73 "../src/Views/Displays/StatisticsGraph.vala"
	cairo_set_line_width (ctx, (gdouble) width);
#line 74 "../src/Views/Displays/StatisticsGraph.vala"
	cairo_move_to (ctx, (gdouble) (x_offset + (width / 2)), (2 + PEBBLES_STATISTICS_GRAPH_scale_y) - y_offset);
#line 75 "../src/Views/Displays/StatisticsGraph.vala"
	cairo_line_to (ctx, (gdouble) (x_offset + (width / 2)), (2 + PEBBLES_STATISTICS_GRAPH_scale_y) - (height + y_offset));
#line 76 "../src/Views/Displays/StatisticsGraph.vala"
	cairo_stroke (ctx);
#line 376 "StatisticsGraph.c"
}

static gdouble
pebbles_statistics_graph_lowest_point (PebblesStatisticsGraph* self,
                                       gdouble* arr,
                                       gint arr_length1)
{
	gdouble x = 0.0;
	gdouble result = 0.0;
#line 79 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_val_if_fail (self != NULL, 0.0);
#line 80 "../src/Views/Displays/StatisticsGraph.vala"
	x = (gdouble) 0;
#line 390 "StatisticsGraph.c"
	{
		gint i = 0;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
		i = 0;
#line 395 "StatisticsGraph.c"
		{
			gboolean _tmp0_ = FALSE;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
			_tmp0_ = TRUE;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
			while (TRUE) {
#line 402 "StatisticsGraph.c"
				gdouble _tmp2_;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
				if (!_tmp0_) {
#line 406 "StatisticsGraph.c"
					gint _tmp1_;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp1_ = i;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
					i = _tmp1_ + 1;
#line 412 "StatisticsGraph.c"
				}
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp0_ = FALSE;
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
				if (!(i < arr_length1)) {
#line 81 "../src/Views/Displays/StatisticsGraph.vala"
					break;
#line 420 "StatisticsGraph.c"
				}
#line 82 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp2_ = arr[i];
#line 82 "../src/Views/Displays/StatisticsGraph.vala"
				if (_tmp2_ < x) {
#line 426 "StatisticsGraph.c"
					gdouble _tmp3_;
#line 83 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp3_ = arr[i];
#line 83 "../src/Views/Displays/StatisticsGraph.vala"
					x = _tmp3_;
#line 432 "StatisticsGraph.c"
				}
			}
		}
	}
#line 86 "../src/Views/Displays/StatisticsGraph.vala"
	result = x;
#line 86 "../src/Views/Displays/StatisticsGraph.vala"
	return result;
#line 441 "StatisticsGraph.c"
}

static gdouble
pebbles_statistics_graph_highest_point (PebblesStatisticsGraph* self,
                                        gdouble* arr,
                                        gint arr_length1)
{
	gdouble x = 0.0;
	gdouble result = 0.0;
#line 89 "../src/Views/Displays/StatisticsGraph.vala"
	g_return_val_if_fail (self != NULL, 0.0);
#line 90 "../src/Views/Displays/StatisticsGraph.vala"
	x = (gdouble) 0;
#line 455 "StatisticsGraph.c"
	{
		gint i = 0;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
		i = 0;
#line 460 "StatisticsGraph.c"
		{
			gboolean _tmp0_ = FALSE;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
			_tmp0_ = TRUE;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
			while (TRUE) {
#line 467 "StatisticsGraph.c"
				gdouble _tmp2_;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
				if (!_tmp0_) {
#line 471 "StatisticsGraph.c"
					gint _tmp1_;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp1_ = i;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
					i = _tmp1_ + 1;
#line 477 "StatisticsGraph.c"
				}
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp0_ = FALSE;
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
				if (!(i < arr_length1)) {
#line 91 "../src/Views/Displays/StatisticsGraph.vala"
					break;
#line 485 "StatisticsGraph.c"
				}
#line 92 "../src/Views/Displays/StatisticsGraph.vala"
				_tmp2_ = arr[i];
#line 92 "../src/Views/Displays/StatisticsGraph.vala"
				if (_tmp2_ > x) {
#line 491 "StatisticsGraph.c"
					gdouble _tmp3_;
#line 93 "../src/Views/Displays/StatisticsGraph.vala"
					_tmp3_ = arr[i];
#line 93 "../src/Views/Displays/StatisticsGraph.vala"
					x = _tmp3_;
#line 497 "StatisticsGraph.c"
				}
			}
		}
	}
#line 96 "../src/Views/Displays/StatisticsGraph.vala"
	result = x;
#line 96 "../src/Views/Displays/StatisticsGraph.vala"
	return result;
#line 506 "StatisticsGraph.c"
}

static void
pebbles_statistics_graph_class_init (PebblesStatisticsGraphClass * klass,
                                     gpointer klass_data)
{
#line 22 "../src/Views/Displays/StatisticsGraph.vala"
	pebbles_statistics_graph_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Views/Displays/StatisticsGraph.vala"
	g_type_class_adjust_private_offset (klass, &PebblesStatisticsGraph_private_offset);
#line 22 "../src/Views/Displays/StatisticsGraph.vala"
	G_OBJECT_CLASS (klass)->finalize = pebbles_statistics_graph_finalize;
#line 519 "StatisticsGraph.c"
}

static void
pebbles_statistics_graph_instance_init (PebblesStatisticsGraph * self,
                                        gpointer klass)
{
#line 22 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv = pebbles_statistics_graph_get_instance_private (self);
#line 528 "StatisticsGraph.c"
}

static void
pebbles_statistics_graph_finalize (GObject * obj)
{
	PebblesStatisticsGraph * self;
#line 22 "../src/Views/Displays/StatisticsGraph.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_STATISTICS_GRAPH, PebblesStatisticsGraph);
#line 24 "../src/Views/Displays/StatisticsGraph.vala"
	self->priv->data_set = (g_free (self->priv->data_set), NULL);
#line 22 "../src/Views/Displays/StatisticsGraph.vala"
	G_OBJECT_CLASS (pebbles_statistics_graph_parent_class)->finalize (obj);
#line 541 "StatisticsGraph.c"
}

static GType
pebbles_statistics_graph_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesStatisticsGraphClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_statistics_graph_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesStatisticsGraph), 0, (GInstanceInitFunc) pebbles_statistics_graph_instance_init, NULL };
	GType pebbles_statistics_graph_type_id;
	pebbles_statistics_graph_type_id = g_type_register_static (gtk_drawing_area_get_type (), "PebblesStatisticsGraph", &g_define_type_info, 0);
	PebblesStatisticsGraph_private_offset = g_type_add_instance_private (pebbles_statistics_graph_type_id, sizeof (PebblesStatisticsGraphPrivate));
	return pebbles_statistics_graph_type_id;
}

GType
pebbles_statistics_graph_get_type (void)
{
	static volatile gsize pebbles_statistics_graph_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_statistics_graph_type_id__volatile)) {
		GType pebbles_statistics_graph_type_id;
		pebbles_statistics_graph_type_id = pebbles_statistics_graph_get_type_once ();
		g_once_init_leave (&pebbles_statistics_graph_type_id__volatile, pebbles_statistics_graph_type_id);
	}
	return pebbles_statistics_graph_type_id__volatile;
}

