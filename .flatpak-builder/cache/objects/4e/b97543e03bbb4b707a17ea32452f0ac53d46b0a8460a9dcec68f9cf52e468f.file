/* SwitchModelButton.c generated by valac 0.48.14, the Vala compiler
 * generated from SwitchModelButton.vala, do not modify */

/*
* Copyright 2021 elementary, Inc. (https://elementary.io)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>

#define GRANITE_TYPE_SWITCH_MODEL_BUTTON (granite_switch_model_button_get_type ())
#define GRANITE_SWITCH_MODEL_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButton))
#define GRANITE_SWITCH_MODEL_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButtonClass))
#define GRANITE_IS_SWITCH_MODEL_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_TYPE_SWITCH_MODEL_BUTTON))
#define GRANITE_IS_SWITCH_MODEL_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_TYPE_SWITCH_MODEL_BUTTON))
#define GRANITE_SWITCH_MODEL_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButtonClass))

typedef struct _GraniteSwitchModelButton GraniteSwitchModelButton;
typedef struct _GraniteSwitchModelButtonClass GraniteSwitchModelButtonClass;
typedef struct _GraniteSwitchModelButtonPrivate GraniteSwitchModelButtonPrivate;
enum  {
	GRANITE_SWITCH_MODEL_BUTTON_0_PROPERTY,
	GRANITE_SWITCH_MODEL_BUTTON_TEXT_PROPERTY,
	GRANITE_SWITCH_MODEL_BUTTON_DESCRIPTION_PROPERTY,
	GRANITE_SWITCH_MODEL_BUTTON_NUM_PROPERTIES
};
static GParamSpec* granite_switch_model_button_properties[GRANITE_SWITCH_MODEL_BUTTON_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _Block13Data Block13Data;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _GraniteSwitchModelButton {
	GtkToggleButton parent_instance;
	GraniteSwitchModelButtonPrivate * priv;
};

struct _GraniteSwitchModelButtonClass {
	GtkToggleButtonClass parent_class;
};

struct _GraniteSwitchModelButtonPrivate {
	gchar* _text;
	gchar* _description;
};

struct _Block13Data {
	int _ref_count_;
	GraniteSwitchModelButton* self;
	GtkRevealer* description_revealer;
	GtkSwitch* button_switch;
	GtkGrid* grid;
};

static gint GraniteSwitchModelButton_private_offset;
static gpointer granite_switch_model_button_parent_class = NULL;

GType granite_switch_model_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteSwitchModelButton, g_object_unref)
const gchar* granite_switch_model_button_get_text (GraniteSwitchModelButton* self);
void granite_switch_model_button_set_text (GraniteSwitchModelButton* self,
                                           const gchar* value);
const gchar* granite_switch_model_button_get_description (GraniteSwitchModelButton* self);
void granite_switch_model_button_set_description (GraniteSwitchModelButton* self,
                                                  const gchar* value);
GraniteSwitchModelButton* granite_switch_model_button_new (const gchar* text);
GraniteSwitchModelButton* granite_switch_model_button_construct (GType object_type,
                                                                 const gchar* text);
static GObject * granite_switch_model_button_constructor (GType type,
                                                   guint n_construct_properties,
                                                   GObjectConstructParam * construct_properties);
static Block13Data* block13_data_ref (Block13Data* _data13_);
static void block13_data_unref (void * _userdata_);
#define GRANITE_STYLE_CLASS_SMALL_LABEL "small-label"
static gboolean _granite_switch_model_button___lambda82_ (Block13Data* _data13_);
static gboolean __granite_switch_model_button___lambda82__gtk_widget_button_release_event (GtkWidget* _sender,
                                                                                    GdkEventButton* event,
                                                                                    gpointer self);
static void _granite_switch_model_button___lambda83_ (Block13Data* _data13_);
static void __granite_switch_model_button___lambda83__g_object_notify (GObject* _sender,
                                                                GParamSpec* pspec,
                                                                gpointer self);
static void granite_switch_model_button_finalize (GObject * obj);
static GType granite_switch_model_button_get_type_once (void);
static void _vala_granite_switch_model_button_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec);
static void _vala_granite_switch_model_button_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec);

static inline gpointer
granite_switch_model_button_get_instance_private (GraniteSwitchModelButton* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteSwitchModelButton_private_offset);
}

const gchar*
granite_switch_model_button_get_text (GraniteSwitchModelButton* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	_tmp0_ = self->priv->_text;
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	result = _tmp0_;
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	return result;
#line 134 "SwitchModelButton.c"
}

void
granite_switch_model_button_set_text (GraniteSwitchModelButton* self,
                                      const gchar* value)
{
	gchar* old_value;
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	g_return_if_fail (self != NULL);
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	old_value = granite_switch_model_button_get_text (self);
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 148 "SwitchModelButton.c"
		gchar* _tmp0_;
#line 37 "../lib/Widgets/SwitchModelButton.vala"
		_tmp0_ = g_strdup (value);
#line 37 "../lib/Widgets/SwitchModelButton.vala"
		_g_free0 (self->priv->_text);
#line 37 "../lib/Widgets/SwitchModelButton.vala"
		self->priv->_text = _tmp0_;
#line 37 "../lib/Widgets/SwitchModelButton.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_switch_model_button_properties[GRANITE_SWITCH_MODEL_BUTTON_TEXT_PROPERTY]);
#line 158 "SwitchModelButton.c"
	}
}

const gchar*
granite_switch_model_button_get_description (GraniteSwitchModelButton* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	_tmp0_ = self->priv->_description;
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	result = _tmp0_;
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	return result;
#line 175 "SwitchModelButton.c"
}

void
granite_switch_model_button_set_description (GraniteSwitchModelButton* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	g_return_if_fail (self != NULL);
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	old_value = granite_switch_model_button_get_description (self);
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 189 "SwitchModelButton.c"
		gchar* _tmp0_;
#line 42 "../lib/Widgets/SwitchModelButton.vala"
		_tmp0_ = g_strdup (value);
#line 42 "../lib/Widgets/SwitchModelButton.vala"
		_g_free0 (self->priv->_description);
#line 42 "../lib/Widgets/SwitchModelButton.vala"
		self->priv->_description = _tmp0_;
#line 42 "../lib/Widgets/SwitchModelButton.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_switch_model_button_properties[GRANITE_SWITCH_MODEL_BUTTON_DESCRIPTION_PROPERTY]);
#line 199 "SwitchModelButton.c"
	}
}

GraniteSwitchModelButton*
granite_switch_model_button_construct (GType object_type,
                                       const gchar* text)
{
	GraniteSwitchModelButton * self = NULL;
#line 44 "../lib/Widgets/SwitchModelButton.vala"
	g_return_val_if_fail (text != NULL, NULL);
#line 45 "../lib/Widgets/SwitchModelButton.vala"
	self = (GraniteSwitchModelButton*) g_object_new (object_type, "text", text, NULL);
#line 44 "../lib/Widgets/SwitchModelButton.vala"
	return self;
#line 214 "SwitchModelButton.c"
}

GraniteSwitchModelButton*
granite_switch_model_button_new (const gchar* text)
{
#line 44 "../lib/Widgets/SwitchModelButton.vala"
	return granite_switch_model_button_construct (GRANITE_TYPE_SWITCH_MODEL_BUTTON, text);
#line 222 "SwitchModelButton.c"
}

static Block13Data*
block13_data_ref (Block13Data* _data13_)
{
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	g_atomic_int_inc (&_data13_->_ref_count_);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	return _data13_;
#line 232 "SwitchModelButton.c"
}

static void
block13_data_unref (void * _userdata_)
{
	Block13Data* _data13_;
	_data13_ = (Block13Data*) _userdata_;
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	if (g_atomic_int_dec_and_test (&_data13_->_ref_count_)) {
#line 242 "SwitchModelButton.c"
		GraniteSwitchModelButton* self;
#line 52 "../lib/Widgets/SwitchModelButton.vala"
		self = _data13_->self;
#line 52 "../lib/Widgets/SwitchModelButton.vala"
		_g_object_unref0 (_data13_->grid);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
		_g_object_unref0 (_data13_->button_switch);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
		_g_object_unref0 (_data13_->description_revealer);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
		_g_object_unref0 (self);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
		g_slice_free (Block13Data, _data13_);
#line 256 "SwitchModelButton.c"
	}
}

static gboolean
_granite_switch_model_button___lambda82_ (Block13Data* _data13_)
{
	GraniteSwitchModelButton* self;
	GtkSwitch* _tmp0_;
	gboolean result = FALSE;
#line 89 "../lib/Widgets/SwitchModelButton.vala"
	self = _data13_->self;
#line 90 "../lib/Widgets/SwitchModelButton.vala"
	_tmp0_ = _data13_->button_switch;
#line 90 "../lib/Widgets/SwitchModelButton.vala"
	g_signal_emit_by_name (_tmp0_, "activate");
#line 91 "../lib/Widgets/SwitchModelButton.vala"
	result = GDK_EVENT_STOP;
#line 91 "../lib/Widgets/SwitchModelButton.vala"
	return result;
#line 276 "SwitchModelButton.c"
}

static gboolean
__granite_switch_model_button___lambda82__gtk_widget_button_release_event (GtkWidget* _sender,
                                                                           GdkEventButton* event,
                                                                           gpointer self)
{
	gboolean result;
	result = _granite_switch_model_button___lambda82_ (self);
#line 89 "../lib/Widgets/SwitchModelButton.vala"
	return result;
#line 288 "SwitchModelButton.c"
}

static void
_granite_switch_model_button___lambda83_ (Block13Data* _data13_)
{
	GraniteSwitchModelButton* self;
	gboolean _tmp0_ = FALSE;
	const gchar* _tmp1_;
#line 94 "../lib/Widgets/SwitchModelButton.vala"
	self = _data13_->self;
#line 95 "../lib/Widgets/SwitchModelButton.vala"
	_tmp1_ = self->priv->_description;
#line 95 "../lib/Widgets/SwitchModelButton.vala"
	if (_tmp1_ == NULL) {
#line 95 "../lib/Widgets/SwitchModelButton.vala"
		_tmp0_ = TRUE;
#line 305 "SwitchModelButton.c"
	} else {
		const gchar* _tmp2_;
#line 95 "../lib/Widgets/SwitchModelButton.vala"
		_tmp2_ = self->priv->_description;
#line 95 "../lib/Widgets/SwitchModelButton.vala"
		_tmp0_ = g_strcmp0 (_tmp2_, "") == 0;
#line 312 "SwitchModelButton.c"
	}
#line 95 "../lib/Widgets/SwitchModelButton.vala"
	if (_tmp0_) {
#line 316 "SwitchModelButton.c"
		GtkGrid* _tmp3_;
		GtkRevealer* _tmp4_;
#line 96 "../lib/Widgets/SwitchModelButton.vala"
		_tmp3_ = _data13_->grid;
#line 96 "../lib/Widgets/SwitchModelButton.vala"
		_tmp4_ = _data13_->description_revealer;
#line 96 "../lib/Widgets/SwitchModelButton.vala"
		gtk_container_remove ((GtkContainer*) _tmp3_, (GtkWidget*) _tmp4_);
#line 325 "SwitchModelButton.c"
	} else {
		GtkGrid* _tmp5_;
		GtkRevealer* _tmp6_;
		GtkSwitch* _tmp7_;
		GtkRevealer* _tmp8_;
#line 98 "../lib/Widgets/SwitchModelButton.vala"
		_tmp5_ = _data13_->grid;
#line 98 "../lib/Widgets/SwitchModelButton.vala"
		_tmp6_ = _data13_->description_revealer;
#line 98 "../lib/Widgets/SwitchModelButton.vala"
		gtk_grid_attach (_tmp5_, (GtkWidget*) _tmp6_, 0, 1, 1, 1);
#line 99 "../lib/Widgets/SwitchModelButton.vala"
		_tmp7_ = _data13_->button_switch;
#line 99 "../lib/Widgets/SwitchModelButton.vala"
		_tmp8_ = _data13_->description_revealer;
#line 99 "../lib/Widgets/SwitchModelButton.vala"
		g_object_bind_property_with_closures ((GObject*) _tmp7_, "active", (GObject*) _tmp8_, "reveal-child", G_BINDING_SYNC_CREATE, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 343 "SwitchModelButton.c"
	}
}

static void
__granite_switch_model_button___lambda83__g_object_notify (GObject* _sender,
                                                           GParamSpec* pspec,
                                                           gpointer self)
{
#line 94 "../lib/Widgets/SwitchModelButton.vala"
	_granite_switch_model_button___lambda83_ (self);
#line 354 "SwitchModelButton.c"
}

static GObject *
granite_switch_model_button_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteSwitchModelButton * self;
	Block13Data* _data13_;
	GtkLabel* label = NULL;
	const gchar* _tmp0_;
	GtkLabel* _tmp1_ = NULL;
	GtkLabel* description_label = NULL;
	GtkLabel* _tmp2_ = NULL;
	GtkStyleContext* description_style_context = NULL;
	GtkLabel* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkStyleContext* _tmp6_;
	GtkRevealer* _tmp7_;
	GtkRevealer* _tmp8_;
	GtkLabel* _tmp9_;
	GtkSwitch* _tmp10_ = NULL;
	GtkGrid* _tmp11_ = NULL;
	GtkGrid* _tmp12_;
	GtkLabel* _tmp13_;
	GtkGrid* _tmp14_;
	GtkSwitch* _tmp15_;
	GtkGrid* _tmp16_;
	GtkLabel* _tmp17_;
	GtkLabel* _tmp18_;
	GtkSwitch* _tmp19_;
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	parent_class = G_OBJECT_CLASS (granite_switch_model_button_parent_class);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButton);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	_data13_ = g_slice_new0 (Block13Data);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	_data13_->_ref_count_ = 1;
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	_data13_->self = g_object_ref (self);
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	_tmp0_ = self->priv->_text;
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new (_tmp0_);
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp1_, GTK_ALIGN_START);
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp1_, TRUE);
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	gtk_widget_set_vexpand ((GtkWidget*) _tmp1_, TRUE);
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	g_object_ref_sink (_tmp1_);
#line 53 "../lib/Widgets/SwitchModelButton.vala"
	label = _tmp1_;
#line 59 "../lib/Widgets/SwitchModelButton.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (NULL);
#line 59 "../lib/Widgets/SwitchModelButton.vala"
	gtk_label_set_max_width_chars (_tmp2_, 25);
#line 59 "../lib/Widgets/SwitchModelButton.vala"
	g_object_set (_tmp2_, "wrap", TRUE, NULL);
#line 59 "../lib/Widgets/SwitchModelButton.vala"
	gtk_label_set_xalign (_tmp2_, (gfloat) 0);
#line 59 "../lib/Widgets/SwitchModelButton.vala"
	g_object_ref_sink (_tmp2_);
#line 59 "../lib/Widgets/SwitchModelButton.vala"
	description_label = _tmp2_;
#line 65 "../lib/Widgets/SwitchModelButton.vala"
	_tmp3_ = description_label;
#line 65 "../lib/Widgets/SwitchModelButton.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 65 "../lib/Widgets/SwitchModelButton.vala"
	description_style_context = _tmp4_;
#line 66 "../lib/Widgets/SwitchModelButton.vala"
	_tmp5_ = description_style_context;
#line 66 "../lib/Widgets/SwitchModelButton.vala"
	gtk_style_context_add_class (_tmp5_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 67 "../lib/Widgets/SwitchModelButton.vala"
	_tmp6_ = description_style_context;
#line 67 "../lib/Widgets/SwitchModelButton.vala"
	gtk_style_context_add_class (_tmp6_, GTK_STYLE_CLASS_DIM_LABEL);
#line 69 "../lib/Widgets/SwitchModelButton.vala"
	_tmp7_ = (GtkRevealer*) gtk_revealer_new ();
#line 69 "../lib/Widgets/SwitchModelButton.vala"
	g_object_ref_sink (_tmp7_);
#line 69 "../lib/Widgets/SwitchModelButton.vala"
	_data13_->description_revealer = _tmp7_;
#line 70 "../lib/Widgets/SwitchModelButton.vala"
	_tmp8_ = _data13_->description_revealer;
#line 70 "../lib/Widgets/SwitchModelButton.vala"
	_tmp9_ = description_label;
#line 70 "../lib/Widgets/SwitchModelButton.vala"
	gtk_container_add ((GtkContainer*) _tmp8_, (GtkWidget*) _tmp9_);
#line 72 "../lib/Widgets/SwitchModelButton.vala"
	_tmp10_ = (GtkSwitch*) gtk_switch_new ();
#line 72 "../lib/Widgets/SwitchModelButton.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp10_, GTK_ALIGN_START);
#line 72 "../lib/Widgets/SwitchModelButton.vala"
	g_object_ref_sink (_tmp10_);
#line 72 "../lib/Widgets/SwitchModelButton.vala"
	_data13_->button_switch = _tmp10_;
#line 76 "../lib/Widgets/SwitchModelButton.vala"
	_tmp11_ = (GtkGrid*) gtk_grid_new ();
#line 76 "../lib/Widgets/SwitchModelButton.vala"
	gtk_grid_set_column_spacing (_tmp11_, 12);
#line 76 "../lib/Widgets/SwitchModelButton.vala"
	g_object_ref_sink (_tmp11_);
#line 76 "../lib/Widgets/SwitchModelButton.vala"
	_data13_->grid = _tmp11_;
#line 79 "../lib/Widgets/SwitchModelButton.vala"
	_tmp12_ = _data13_->grid;
#line 79 "../lib/Widgets/SwitchModelButton.vala"
	_tmp13_ = label;
#line 79 "../lib/Widgets/SwitchModelButton.vala"
	gtk_grid_attach (_tmp12_, (GtkWidget*) _tmp13_, 0, 0, 1, 1);
#line 80 "../lib/Widgets/SwitchModelButton.vala"
	_tmp14_ = _data13_->grid;
#line 80 "../lib/Widgets/SwitchModelButton.vala"
	_tmp15_ = _data13_->button_switch;
#line 80 "../lib/Widgets/SwitchModelButton.vala"
	gtk_grid_attach (_tmp14_, (GtkWidget*) _tmp15_, 1, 0, 1, 2);
#line 82 "../lib/Widgets/SwitchModelButton.vala"
	_tmp16_ = _data13_->grid;
#line 82 "../lib/Widgets/SwitchModelButton.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp16_);
#line 84 "../lib/Widgets/SwitchModelButton.vala"
	_tmp17_ = label;
#line 84 "../lib/Widgets/SwitchModelButton.vala"
	g_object_bind_property_with_closures ((GObject*) self, "text", (GObject*) _tmp17_, "label", G_BINDING_DEFAULT, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 85 "../lib/Widgets/SwitchModelButton.vala"
	_tmp18_ = description_label;
#line 85 "../lib/Widgets/SwitchModelButton.vala"
	g_object_bind_property_with_closures ((GObject*) self, "description", (GObject*) _tmp18_, "label", G_BINDING_DEFAULT, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 86 "../lib/Widgets/SwitchModelButton.vala"
	_tmp19_ = _data13_->button_switch;
#line 86 "../lib/Widgets/SwitchModelButton.vala"
	g_object_bind_property_with_closures ((GObject*) self, "active", (GObject*) _tmp19_, "active", G_BINDING_BIDIRECTIONAL, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 89 "../lib/Widgets/SwitchModelButton.vala"
	g_signal_connect_data ((GtkWidget*) self, "button-release-event", (GCallback) __granite_switch_model_button___lambda82__gtk_widget_button_release_event, block13_data_ref (_data13_), (GClosureNotify) block13_data_unref, 0);
#line 94 "../lib/Widgets/SwitchModelButton.vala"
	g_signal_connect_data ((GObject*) self, "notify::description", (GCallback) __granite_switch_model_button___lambda83__g_object_notify, block13_data_ref (_data13_), (GClosureNotify) block13_data_unref, 0);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	_g_object_unref0 (description_label);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	_g_object_unref0 (label);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	block13_data_unref (_data13_);
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	_data13_ = NULL;
#line 52 "../lib/Widgets/SwitchModelButton.vala"
	return obj;
#line 511 "SwitchModelButton.c"
}

static void
granite_switch_model_button_base_init (GraniteSwitchModelButtonClass * klass)
{
#line 49 "../lib/Widgets/SwitchModelButton.vala"
	gtk_widget_class_set_css_name (GTK_WIDGET_CLASS (klass), GTK_STYLE_CLASS_MENUITEM);
#line 519 "SwitchModelButton.c"
}

static void
granite_switch_model_button_class_init (GraniteSwitchModelButtonClass * klass,
                                        gpointer klass_data)
{
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	granite_switch_model_button_parent_class = g_type_class_peek_parent (klass);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	g_type_class_adjust_private_offset (klass, &GraniteSwitchModelButton_private_offset);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_switch_model_button_get_property;
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_switch_model_button_set_property;
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_switch_model_button_constructor;
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_switch_model_button_finalize;
#line 538 "SwitchModelButton.c"
	/**
	     * The label for the button.
	     */
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SWITCH_MODEL_BUTTON_TEXT_PROPERTY, granite_switch_model_button_properties[GRANITE_SWITCH_MODEL_BUTTON_TEXT_PROPERTY] = g_param_spec_string ("text", "text", "text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 544 "SwitchModelButton.c"
	/**
	     * Small, dim description text shown when active.
	     */
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SWITCH_MODEL_BUTTON_DESCRIPTION_PROPERTY, granite_switch_model_button_properties[GRANITE_SWITCH_MODEL_BUTTON_DESCRIPTION_PROPERTY] = g_param_spec_string ("description", "description", "description", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 550 "SwitchModelButton.c"
}

static void
granite_switch_model_button_instance_init (GraniteSwitchModelButton * self,
                                           gpointer klass)
{
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	self->priv = granite_switch_model_button_get_instance_private (self);
#line 559 "SwitchModelButton.c"
}

static void
granite_switch_model_button_finalize (GObject * obj)
{
	GraniteSwitchModelButton * self;
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButton);
#line 37 "../lib/Widgets/SwitchModelButton.vala"
	_g_free0 (self->priv->_text);
#line 42 "../lib/Widgets/SwitchModelButton.vala"
	_g_free0 (self->priv->_description);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	G_OBJECT_CLASS (granite_switch_model_button_parent_class)->finalize (obj);
#line 574 "SwitchModelButton.c"
}

/**
 * SwitchModelButton is a {@link Gtk.ToggleButton} containing a {@link Gtk.Label}
 * and a {@link Gtk.Switch} and using the menuitem css name. It can optionally
 * show description text when activated.
 *
 * ''Example''<<BR>>
 * {{{
 *   var switchmodelbutton = new Granite.SwitchModelButton ("With Description") {
 *       active = true,
 *       description = "A description of additional affects related to the activation state of this switch"
 *   };
 * }}}
 */
static GType
granite_switch_model_button_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteSwitchModelButtonClass), (GBaseInitFunc) granite_switch_model_button_base_init, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_switch_model_button_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteSwitchModelButton), 0, (GInstanceInitFunc) granite_switch_model_button_instance_init, NULL };
	GType granite_switch_model_button_type_id;
	granite_switch_model_button_type_id = g_type_register_static (gtk_toggle_button_get_type (), "GraniteSwitchModelButton", &g_define_type_info, 0);
	GraniteSwitchModelButton_private_offset = g_type_add_instance_private (granite_switch_model_button_type_id, sizeof (GraniteSwitchModelButtonPrivate));
	return granite_switch_model_button_type_id;
}

GType
granite_switch_model_button_get_type (void)
{
	static volatile gsize granite_switch_model_button_type_id__volatile = 0;
	if (g_once_init_enter (&granite_switch_model_button_type_id__volatile)) {
		GType granite_switch_model_button_type_id;
		granite_switch_model_button_type_id = granite_switch_model_button_get_type_once ();
		g_once_init_leave (&granite_switch_model_button_type_id__volatile, granite_switch_model_button_type_id);
	}
	return granite_switch_model_button_type_id__volatile;
}

static void
_vala_granite_switch_model_button_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec)
{
	GraniteSwitchModelButton * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButton);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	switch (property_id) {
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		case GRANITE_SWITCH_MODEL_BUTTON_TEXT_PROPERTY:
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		g_value_set_string (value, granite_switch_model_button_get_text (self));
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		break;
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		case GRANITE_SWITCH_MODEL_BUTTON_DESCRIPTION_PROPERTY:
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		g_value_set_string (value, granite_switch_model_button_get_description (self));
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		break;
#line 634 "SwitchModelButton.c"
		default:
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		break;
#line 640 "SwitchModelButton.c"
	}
}

static void
_vala_granite_switch_model_button_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec)
{
	GraniteSwitchModelButton * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_TYPE_SWITCH_MODEL_BUTTON, GraniteSwitchModelButton);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
	switch (property_id) {
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		case GRANITE_SWITCH_MODEL_BUTTON_TEXT_PROPERTY:
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		granite_switch_model_button_set_text (self, g_value_get_string (value));
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		break;
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		case GRANITE_SWITCH_MODEL_BUTTON_DESCRIPTION_PROPERTY:
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		granite_switch_model_button_set_description (self, g_value_get_string (value));
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		break;
#line 666 "SwitchModelButton.c"
		default:
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "../lib/Widgets/SwitchModelButton.vala"
		break;
#line 672 "SwitchModelButton.c"
	}
}

