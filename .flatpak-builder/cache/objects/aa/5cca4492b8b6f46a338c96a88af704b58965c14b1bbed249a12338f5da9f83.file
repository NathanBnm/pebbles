/* ModeButton.c generated by valac 0.48.14, the Vala compiler
 * generated from ModeButton.vala, do not modify */

/*
 *  Copyright (C) 2019 elementary, Inc. (https://elementary.io)
 *                2008â€“2013 Christian Hergert <chris@dronelabs.com>,
 *                          Giulio Collura <random.cpp@gmail.com>,
 *                          Victor Eduardo <victoreduardm@gmail.com>,
 *                          ammonkey <am.monkeyd@gmail.com>
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <gee.h>
#include <gdk-pixbuf/gdk-pixbuf.h>
#include <stdlib.h>
#include <string.h>
#include <gdk/gdk.h>

#define GRANITE_WIDGETS_TYPE_MODE_BUTTON (granite_widgets_mode_button_get_type ())
#define GRANITE_WIDGETS_MODE_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButton))
#define GRANITE_WIDGETS_MODE_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButtonClass))
#define GRANITE_WIDGETS_IS_MODE_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_MODE_BUTTON))
#define GRANITE_WIDGETS_IS_MODE_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_TYPE_MODE_BUTTON))
#define GRANITE_WIDGETS_MODE_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButtonClass))

typedef struct _GraniteWidgetsModeButton GraniteWidgetsModeButton;
typedef struct _GraniteWidgetsModeButtonClass GraniteWidgetsModeButtonClass;
typedef struct _GraniteWidgetsModeButtonPrivate GraniteWidgetsModeButtonPrivate;

#define GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM (granite_widgets_mode_button_item_get_type ())
#define GRANITE_WIDGETS_MODE_BUTTON_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, GraniteWidgetsModeButtonItem))
#define GRANITE_WIDGETS_MODE_BUTTON_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, GraniteWidgetsModeButtonItemClass))
#define GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM))
#define GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM))
#define GRANITE_WIDGETS_MODE_BUTTON_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, GraniteWidgetsModeButtonItemClass))

typedef struct _GraniteWidgetsModeButtonItem GraniteWidgetsModeButtonItem;
typedef struct _GraniteWidgetsModeButtonItemClass GraniteWidgetsModeButtonItemClass;
enum  {
	GRANITE_WIDGETS_MODE_BUTTON_0_PROPERTY,
	GRANITE_WIDGETS_MODE_BUTTON_SELECTED_PROPERTY,
	GRANITE_WIDGETS_MODE_BUTTON_N_ITEMS_PROPERTY,
	GRANITE_WIDGETS_MODE_BUTTON_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_mode_button_properties[GRANITE_WIDGETS_MODE_BUTTON_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block10Data Block10Data;
typedef struct _GraniteWidgetsModeButtonItemPrivate GraniteWidgetsModeButtonItemPrivate;
enum  {
	GRANITE_WIDGETS_MODE_BUTTON_ITEM_0_PROPERTY,
	GRANITE_WIDGETS_MODE_BUTTON_ITEM_INDEX_PROPERTY,
	GRANITE_WIDGETS_MODE_BUTTON_ITEM_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_mode_button_item_properties[GRANITE_WIDGETS_MODE_BUTTON_ITEM_NUM_PROPERTIES];
enum  {
	GRANITE_WIDGETS_MODE_BUTTON_MODE_ADDED_SIGNAL,
	GRANITE_WIDGETS_MODE_BUTTON_MODE_REMOVED_SIGNAL,
	GRANITE_WIDGETS_MODE_BUTTON_MODE_CHANGED_SIGNAL,
	GRANITE_WIDGETS_MODE_BUTTON_NUM_SIGNALS
};
static guint granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_NUM_SIGNALS] = {0};
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _GraniteWidgetsModeButton {
	GtkBox parent_instance;
	GraniteWidgetsModeButtonPrivate * priv;
};

struct _GraniteWidgetsModeButtonClass {
	GtkBoxClass parent_class;
};

struct _GraniteWidgetsModeButtonPrivate {
	gint _selected;
	GeeHashMap* item_map;
};

struct _Block10Data {
	int _ref_count_;
	GraniteWidgetsModeButton* self;
	GraniteWidgetsModeButtonItem* item;
};

struct _GraniteWidgetsModeButtonItem {
	GtkToggleButton parent_instance;
	GraniteWidgetsModeButtonItemPrivate * priv;
};

struct _GraniteWidgetsModeButtonItemClass {
	GtkToggleButtonClass parent_class;
};

struct _GraniteWidgetsModeButtonItemPrivate {
	gint _index;
};

static gint GraniteWidgetsModeButton_private_offset;
static gpointer granite_widgets_mode_button_parent_class = NULL;
static gint GraniteWidgetsModeButtonItem_private_offset;
static gpointer granite_widgets_mode_button_item_parent_class = NULL;

GType granite_widgets_mode_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsModeButton, g_object_unref)
static GType granite_widgets_mode_button_item_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsModeButtonItem, g_object_unref)
static void g_cclosure_user_marshal_VOID__INT_OBJECT (GClosure * closure,
                                               GValue * return_value,
                                               guint n_param_values,
                                               const GValue * param_values,
                                               gpointer invocation_hint,
                                               gpointer marshal_data);
gint granite_widgets_mode_button_get_selected (GraniteWidgetsModeButton* self);
void granite_widgets_mode_button_set_selected (GraniteWidgetsModeButton* self,
                                               gint value);
void granite_widgets_mode_button_set_active (GraniteWidgetsModeButton* self,
                                             gint new_active_index);
guint granite_widgets_mode_button_get_n_items (GraniteWidgetsModeButton* self);
GraniteWidgetsModeButton* granite_widgets_mode_button_new (void);
GraniteWidgetsModeButton* granite_widgets_mode_button_construct (GType object_type);
gint granite_widgets_mode_button_append_pixbuf (GraniteWidgetsModeButton* self,
                                                GdkPixbuf* pixbuf);
gint granite_widgets_mode_button_append (GraniteWidgetsModeButton* self,
                                         GtkWidget* w);
gint granite_widgets_mode_button_append_text (GraniteWidgetsModeButton* self,
                                              const gchar* text);
gint granite_widgets_mode_button_append_icon (GraniteWidgetsModeButton* self,
                                              const gchar* icon_name,
                                              GtkIconSize size);
static Block10Data* block10_data_ref (Block10Data* _data10_);
static void block10_data_unref (void * _userdata_);
static GraniteWidgetsModeButtonItem* granite_widgets_mode_button_item_new (gint index);
static GraniteWidgetsModeButtonItem* granite_widgets_mode_button_item_construct (GType object_type,
                                                                          gint index);
static gboolean granite_widgets_mode_button_on_scroll_event (GraniteWidgetsModeButton* self,
                                                      GtkWidget* widget,
                                                      GdkEventScroll* ev);
static gboolean _granite_widgets_mode_button_on_scroll_event_gtk_widget_scroll_event (GtkWidget* _sender,
                                                                               GdkEventScroll* event,
                                                                               gpointer self);
static void __lambda60_ (Block10Data* _data10_);
static gint granite_widgets_mode_button_item_get_index (GraniteWidgetsModeButtonItem* self);
static void ___lambda60__gtk_toggle_button_toggled (GtkToggleButton* _sender,
                                             gpointer self);
static void granite_widgets_mode_button_clear_selected (GraniteWidgetsModeButton* self);
void granite_widgets_mode_button_set_item_visible (GraniteWidgetsModeButton* self,
                                                   gint index,
                                                   gboolean val);
void granite_widgets_mode_button_remove (GraniteWidgetsModeButton* self,
                                         gint index);
void granite_widgets_mode_button_clear_children (GraniteWidgetsModeButton* self);
static void granite_widgets_mode_button_item_set_index (GraniteWidgetsModeButtonItem* self,
                                                 gint value);
static void granite_widgets_mode_button_item_finalize (GObject * obj);
static GType granite_widgets_mode_button_item_get_type_once (void);
static void _vala_granite_widgets_mode_button_item_get_property (GObject * object,
                                                          guint property_id,
                                                          GValue * value,
                                                          GParamSpec * pspec);
static void _vala_granite_widgets_mode_button_item_set_property (GObject * object,
                                                          guint property_id,
                                                          const GValue * value,
                                                          GParamSpec * pspec);
static GObject * granite_widgets_mode_button_constructor (GType type,
                                                   guint n_construct_properties,
                                                   GObjectConstructParam * construct_properties);
static void granite_widgets_mode_button_finalize (GObject * obj);
static GType granite_widgets_mode_button_get_type_once (void);
static void _vala_granite_widgets_mode_button_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec);
static void _vala_granite_widgets_mode_button_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec);

static inline gpointer
granite_widgets_mode_button_get_instance_private (GraniteWidgetsModeButton* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsModeButton_private_offset);
}

static void
g_cclosure_user_marshal_VOID__INT_OBJECT (GClosure * closure,
                                          GValue * return_value,
                                          guint n_param_values,
                                          const GValue * param_values,
                                          gpointer invocation_hint,
                                          gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__INT_OBJECT) (gpointer data1, gint arg_1, gpointer arg_2, gpointer data2);
	register GMarshalFunc_VOID__INT_OBJECT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 31 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (n_param_values == 3);
#line 31 "../lib/Widgets/ModeButton.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 31 "../lib/Widgets/ModeButton.vala"
		data1 = closure->data;
#line 31 "../lib/Widgets/ModeButton.vala"
		data2 = param_values->data[0].v_pointer;
#line 226 "ModeButton.c"
	} else {
#line 31 "../lib/Widgets/ModeButton.vala"
		data1 = param_values->data[0].v_pointer;
#line 31 "../lib/Widgets/ModeButton.vala"
		data2 = closure->data;
#line 232 "ModeButton.c"
	}
#line 31 "../lib/Widgets/ModeButton.vala"
	callback = (GMarshalFunc_VOID__INT_OBJECT) (marshal_data ? marshal_data : cc->callback);
#line 31 "../lib/Widgets/ModeButton.vala"
	callback (data1, g_value_get_int (param_values + 1), g_value_get_object (param_values + 2), data2);
#line 238 "ModeButton.c"
}

gint
granite_widgets_mode_button_get_selected (GraniteWidgetsModeButton* self)
{
	gint result;
#line 50 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 50 "../lib/Widgets/ModeButton.vala"
	result = self->priv->_selected;
#line 50 "../lib/Widgets/ModeButton.vala"
	return result;
#line 251 "ModeButton.c"
}

void
granite_widgets_mode_button_set_selected (GraniteWidgetsModeButton* self,
                                          gint value)
{
#line 51 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 51 "../lib/Widgets/ModeButton.vala"
	granite_widgets_mode_button_set_active (self, value);
#line 51 "../lib/Widgets/ModeButton.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_mode_button_properties[GRANITE_WIDGETS_MODE_BUTTON_SELECTED_PROPERTY]);
#line 264 "ModeButton.c"
}

guint
granite_widgets_mode_button_get_n_items (GraniteWidgetsModeButton* self)
{
	guint result;
	GeeHashMap* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 58 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0U);
#line 58 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = self->priv->item_map;
#line 58 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = gee_abstract_map_get_size ((GeeAbstractMap*) _tmp0_);
#line 58 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = _tmp1_;
#line 58 "../lib/Widgets/ModeButton.vala"
	result = (guint) _tmp2_;
#line 58 "../lib/Widgets/ModeButton.vala"
	return result;
#line 286 "ModeButton.c"
}

/**
         * Makes new ModeButton
         */
GraniteWidgetsModeButton*
granite_widgets_mode_button_construct (GType object_type)
{
	GraniteWidgetsModeButton * self = NULL;
#line 67 "../lib/Widgets/ModeButton.vala"
	self = (GraniteWidgetsModeButton*) g_object_new (object_type, NULL);
#line 67 "../lib/Widgets/ModeButton.vala"
	return self;
#line 300 "ModeButton.c"
}

GraniteWidgetsModeButton*
granite_widgets_mode_button_new (void)
{
#line 67 "../lib/Widgets/ModeButton.vala"
	return granite_widgets_mode_button_construct (GRANITE_WIDGETS_TYPE_MODE_BUTTON);
#line 308 "ModeButton.c"
}

/**
         * Appends Pixbuf to ModeButton
         *
         * @param pixbuf Gdk.Pixbuf to append to ModeButton
         */
gint
granite_widgets_mode_button_append_pixbuf (GraniteWidgetsModeButton* self,
                                           GdkPixbuf* pixbuf)
{
	GtkImage* _tmp0_;
	GtkImage* _tmp1_;
	gint _tmp2_;
	gint result = 0;
#line 88 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 88 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (pixbuf != NULL, 0);
#line 89 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = (GtkImage*) gtk_image_new_from_pixbuf (pixbuf);
#line 89 "../lib/Widgets/ModeButton.vala"
	g_object_ref_sink (_tmp0_);
#line 89 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = _tmp0_;
#line 89 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = granite_widgets_mode_button_append (self, (GtkWidget*) _tmp1_);
#line 89 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (_tmp1_);
#line 89 "../lib/Widgets/ModeButton.vala"
	result = _tmp2_;
#line 89 "../lib/Widgets/ModeButton.vala"
	return result;
#line 342 "ModeButton.c"
}

/**
         * Appends text to ModeButton
         *
         * @param text text to append to ModeButton
         * @return index of new item
         */
gint
granite_widgets_mode_button_append_text (GraniteWidgetsModeButton* self,
                                         const gchar* text)
{
	GtkLabel* _tmp0_;
	GtkLabel* _tmp1_;
	gint _tmp2_;
	gint result = 0;
#line 98 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 98 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (text != NULL, 0);
#line 99 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new (text);
#line 99 "../lib/Widgets/ModeButton.vala"
	g_object_ref_sink (_tmp0_);
#line 99 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = _tmp0_;
#line 99 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = granite_widgets_mode_button_append (self, (GtkWidget*) _tmp1_);
#line 99 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (_tmp1_);
#line 99 "../lib/Widgets/ModeButton.vala"
	result = _tmp2_;
#line 99 "../lib/Widgets/ModeButton.vala"
	return result;
#line 377 "ModeButton.c"
}

/**
         * Appends icon to ModeButton
         *
         * @param icon_name name of icon to append
         * @param size desired size of icon
         * @return index of appended item
         */
gint
granite_widgets_mode_button_append_icon (GraniteWidgetsModeButton* self,
                                         const gchar* icon_name,
                                         GtkIconSize size)
{
	GtkImage* _tmp0_;
	GtkImage* _tmp1_;
	gint _tmp2_;
	gint result = 0;
#line 109 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 109 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (icon_name != NULL, 0);
#line 110 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = (GtkImage*) gtk_image_new_from_icon_name (icon_name, (GtkIconSize) size);
#line 110 "../lib/Widgets/ModeButton.vala"
	g_object_ref_sink (_tmp0_);
#line 110 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = _tmp0_;
#line 110 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = granite_widgets_mode_button_append (self, (GtkWidget*) _tmp1_);
#line 110 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (_tmp1_);
#line 110 "../lib/Widgets/ModeButton.vala"
	result = _tmp2_;
#line 110 "../lib/Widgets/ModeButton.vala"
	return result;
#line 414 "ModeButton.c"
}

/**
         * Appends given widget to ModeButton
         *
         * @param w widget to add to ModeButton
         * @return index of new item
         */
static Block10Data*
block10_data_ref (Block10Data* _data10_)
{
#line 119 "../lib/Widgets/ModeButton.vala"
	g_atomic_int_inc (&_data10_->_ref_count_);
#line 119 "../lib/Widgets/ModeButton.vala"
	return _data10_;
#line 430 "ModeButton.c"
}

static void
block10_data_unref (void * _userdata_)
{
	Block10Data* _data10_;
	_data10_ = (Block10Data*) _userdata_;
#line 119 "../lib/Widgets/ModeButton.vala"
	if (g_atomic_int_dec_and_test (&_data10_->_ref_count_)) {
#line 440 "ModeButton.c"
		GraniteWidgetsModeButton* self;
#line 119 "../lib/Widgets/ModeButton.vala"
		self = _data10_->self;
#line 119 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (_data10_->item);
#line 119 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (self);
#line 119 "../lib/Widgets/ModeButton.vala"
		g_slice_free (Block10Data, _data10_);
#line 450 "ModeButton.c"
	}
}

static gboolean
_granite_widgets_mode_button_on_scroll_event_gtk_widget_scroll_event (GtkWidget* _sender,
                                                                      GdkEventScroll* event,
                                                                      gpointer self)
{
	gboolean result;
	result = granite_widgets_mode_button_on_scroll_event ((GraniteWidgetsModeButton*) self, _sender, event);
#line 125 "../lib/Widgets/ModeButton.vala"
	return result;
#line 463 "ModeButton.c"
}

static void
__lambda60_ (Block10Data* _data10_)
{
	GraniteWidgetsModeButton* self;
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 128 "../lib/Widgets/ModeButton.vala"
	self = _data10_->self;
#line 129 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = gtk_toggle_button_get_active ((GtkToggleButton*) _data10_->item);
#line 129 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = _tmp0_;
#line 129 "../lib/Widgets/ModeButton.vala"
	if (_tmp1_) {
#line 480 "ModeButton.c"
		gint _tmp2_;
		gint _tmp3_;
#line 130 "../lib/Widgets/ModeButton.vala"
		_tmp2_ = granite_widgets_mode_button_item_get_index (_data10_->item);
#line 130 "../lib/Widgets/ModeButton.vala"
		_tmp3_ = _tmp2_;
#line 130 "../lib/Widgets/ModeButton.vala"
		granite_widgets_mode_button_set_selected (self, _tmp3_);
#line 489 "ModeButton.c"
	} else {
		gint _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _tmp7_;
#line 131 "../lib/Widgets/ModeButton.vala"
		_tmp4_ = granite_widgets_mode_button_get_selected (self);
#line 131 "../lib/Widgets/ModeButton.vala"
		_tmp5_ = _tmp4_;
#line 131 "../lib/Widgets/ModeButton.vala"
		_tmp6_ = granite_widgets_mode_button_item_get_index (_data10_->item);
#line 131 "../lib/Widgets/ModeButton.vala"
		_tmp7_ = _tmp6_;
#line 131 "../lib/Widgets/ModeButton.vala"
		if (_tmp5_ == _tmp7_) {
#line 135 "../lib/Widgets/ModeButton.vala"
			gtk_toggle_button_set_active ((GtkToggleButton*) _data10_->item, TRUE);
#line 507 "ModeButton.c"
		}
	}
}

static void
___lambda60__gtk_toggle_button_toggled (GtkToggleButton* _sender,
                                        gpointer self)
{
#line 128 "../lib/Widgets/ModeButton.vala"
	__lambda60_ (self);
#line 518 "ModeButton.c"
}

gint
granite_widgets_mode_button_append (GraniteWidgetsModeButton* self,
                                    GtkWidget* w)
{
	Block10Data* _data10_;
	gint index = 0;
	GeeHashMap* _tmp6_;
	gpointer _tmp7_;
	GraniteWidgetsModeButtonItem* _tmp8_;
	GraniteWidgetsModeButtonItem* _tmp9_;
	GeeHashMap* _tmp10_;
	gint result = 0;
#line 119 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 119 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (w != NULL, 0);
#line 119 "../lib/Widgets/ModeButton.vala"
	_data10_ = g_slice_new0 (Block10Data);
#line 119 "../lib/Widgets/ModeButton.vala"
	_data10_->_ref_count_ = 1;
#line 119 "../lib/Widgets/ModeButton.vala"
	_data10_->self = g_object_ref (self);
#line 543 "ModeButton.c"
	{
		GeeHashMap* _tmp0_;
		gint _tmp1_;
		gint _tmp2_;
		gboolean _tmp3_ = FALSE;
#line 121 "../lib/Widgets/ModeButton.vala"
		_tmp0_ = self->priv->item_map;
#line 121 "../lib/Widgets/ModeButton.vala"
		_tmp1_ = gee_abstract_map_get_size ((GeeAbstractMap*) _tmp0_);
#line 121 "../lib/Widgets/ModeButton.vala"
		_tmp2_ = _tmp1_;
#line 121 "../lib/Widgets/ModeButton.vala"
		index = _tmp2_;
#line 121 "../lib/Widgets/ModeButton.vala"
		_tmp3_ = TRUE;
#line 121 "../lib/Widgets/ModeButton.vala"
		while (TRUE) {
#line 561 "ModeButton.c"
			GeeHashMap* _tmp5_;
#line 121 "../lib/Widgets/ModeButton.vala"
			if (!_tmp3_) {
#line 565 "ModeButton.c"
				gint _tmp4_;
#line 121 "../lib/Widgets/ModeButton.vala"
				_tmp4_ = index;
#line 121 "../lib/Widgets/ModeButton.vala"
				index = _tmp4_ + 1;
#line 571 "ModeButton.c"
			}
#line 121 "../lib/Widgets/ModeButton.vala"
			_tmp3_ = FALSE;
#line 121 "../lib/Widgets/ModeButton.vala"
			_tmp5_ = self->priv->item_map;
#line 121 "../lib/Widgets/ModeButton.vala"
			if (!gee_abstract_map_has_key ((GeeAbstractMap*) _tmp5_, (gpointer) ((gintptr) index))) {
#line 121 "../lib/Widgets/ModeButton.vala"
				break;
#line 581 "ModeButton.c"
			}
		}
	}
#line 122 "../lib/Widgets/ModeButton.vala"
	_tmp6_ = self->priv->item_map;
#line 122 "../lib/Widgets/ModeButton.vala"
	_tmp7_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp6_, (gpointer) ((gintptr) index));
#line 122 "../lib/Widgets/ModeButton.vala"
	_tmp8_ = (GraniteWidgetsModeButtonItem*) _tmp7_;
#line 122 "../lib/Widgets/ModeButton.vala"
	_vala_assert (_tmp8_ == NULL, "item_map[index] == null");
#line 122 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (_tmp8_);
#line 124 "../lib/Widgets/ModeButton.vala"
	_tmp9_ = granite_widgets_mode_button_item_new (index);
#line 124 "../lib/Widgets/ModeButton.vala"
	g_object_ref_sink (_tmp9_);
#line 124 "../lib/Widgets/ModeButton.vala"
	_data10_->item = _tmp9_;
#line 125 "../lib/Widgets/ModeButton.vala"
	g_signal_connect_object ((GtkWidget*) _data10_->item, "scroll-event", (GCallback) _granite_widgets_mode_button_on_scroll_event_gtk_widget_scroll_event, self, 0);
#line 126 "../lib/Widgets/ModeButton.vala"
	gtk_container_add ((GtkContainer*) _data10_->item, w);
#line 128 "../lib/Widgets/ModeButton.vala"
	g_signal_connect_data ((GtkToggleButton*) _data10_->item, "toggled", (GCallback) ___lambda60__gtk_toggle_button_toggled, block10_data_ref (_data10_), (GClosureNotify) block10_data_unref, 0);
#line 139 "../lib/Widgets/ModeButton.vala"
	_tmp10_ = self->priv->item_map;
#line 139 "../lib/Widgets/ModeButton.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp10_, (gpointer) ((gintptr) index), _data10_->item);
#line 141 "../lib/Widgets/ModeButton.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _data10_->item);
#line 142 "../lib/Widgets/ModeButton.vala"
	gtk_widget_show_all ((GtkWidget*) _data10_->item);
#line 144 "../lib/Widgets/ModeButton.vala"
	g_signal_emit (self, granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_MODE_ADDED_SIGNAL], 0, index, w);
#line 146 "../lib/Widgets/ModeButton.vala"
	result = index;
#line 146 "../lib/Widgets/ModeButton.vala"
	block10_data_unref (_data10_);
#line 146 "../lib/Widgets/ModeButton.vala"
	_data10_ = NULL;
#line 146 "../lib/Widgets/ModeButton.vala"
	return result;
#line 625 "ModeButton.c"
}

/**
         * Clear selected items
         */
static void
granite_widgets_mode_button_clear_selected (GraniteWidgetsModeButton* self)
{
#line 152 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 156 "../lib/Widgets/ModeButton.vala"
	self->priv->_selected = -1;
#line 638 "ModeButton.c"
	{
		GeeIterator* _item_it = NULL;
		GeeHashMap* _tmp0_;
		GeeCollection* _tmp1_;
		GeeCollection* _tmp2_;
		GeeCollection* _tmp3_;
		GeeIterator* _tmp4_;
		GeeIterator* _tmp5_;
#line 158 "../lib/Widgets/ModeButton.vala"
		_tmp0_ = self->priv->item_map;
#line 158 "../lib/Widgets/ModeButton.vala"
		_tmp1_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp0_);
#line 158 "../lib/Widgets/ModeButton.vala"
		_tmp2_ = _tmp1_;
#line 158 "../lib/Widgets/ModeButton.vala"
		_tmp3_ = _tmp2_;
#line 158 "../lib/Widgets/ModeButton.vala"
		_tmp4_ = gee_iterable_iterator ((GeeIterable*) _tmp3_);
#line 158 "../lib/Widgets/ModeButton.vala"
		_tmp5_ = _tmp4_;
#line 158 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (_tmp3_);
#line 158 "../lib/Widgets/ModeButton.vala"
		_item_it = _tmp5_;
#line 158 "../lib/Widgets/ModeButton.vala"
		while (TRUE) {
#line 665 "ModeButton.c"
			GeeIterator* _tmp6_;
			GraniteWidgetsModeButtonItem* item = NULL;
			GeeIterator* _tmp7_;
			gpointer _tmp8_;
			gboolean _tmp9_ = FALSE;
			GraniteWidgetsModeButtonItem* _tmp10_;
#line 158 "../lib/Widgets/ModeButton.vala"
			_tmp6_ = _item_it;
#line 158 "../lib/Widgets/ModeButton.vala"
			if (!gee_iterator_next (_tmp6_)) {
#line 158 "../lib/Widgets/ModeButton.vala"
				break;
#line 678 "ModeButton.c"
			}
#line 158 "../lib/Widgets/ModeButton.vala"
			_tmp7_ = _item_it;
#line 158 "../lib/Widgets/ModeButton.vala"
			_tmp8_ = gee_iterator_get (_tmp7_);
#line 158 "../lib/Widgets/ModeButton.vala"
			item = (GraniteWidgetsModeButtonItem*) _tmp8_;
#line 159 "../lib/Widgets/ModeButton.vala"
			_tmp10_ = item;
#line 159 "../lib/Widgets/ModeButton.vala"
			if (_tmp10_ != NULL) {
#line 690 "ModeButton.c"
				GraniteWidgetsModeButtonItem* _tmp11_;
				gboolean _tmp12_;
				gboolean _tmp13_;
#line 159 "../lib/Widgets/ModeButton.vala"
				_tmp11_ = item;
#line 159 "../lib/Widgets/ModeButton.vala"
				_tmp12_ = gtk_toggle_button_get_active ((GtkToggleButton*) _tmp11_);
#line 159 "../lib/Widgets/ModeButton.vala"
				_tmp13_ = _tmp12_;
#line 159 "../lib/Widgets/ModeButton.vala"
				_tmp9_ = _tmp13_;
#line 702 "ModeButton.c"
			} else {
#line 159 "../lib/Widgets/ModeButton.vala"
				_tmp9_ = FALSE;
#line 706 "ModeButton.c"
			}
#line 159 "../lib/Widgets/ModeButton.vala"
			if (_tmp9_) {
#line 710 "ModeButton.c"
				GraniteWidgetsModeButtonItem* _tmp14_;
#line 160 "../lib/Widgets/ModeButton.vala"
				_tmp14_ = item;
#line 160 "../lib/Widgets/ModeButton.vala"
				gtk_toggle_button_set_active ((GtkToggleButton*) _tmp14_, FALSE);
#line 716 "ModeButton.c"
			}
#line 158 "../lib/Widgets/ModeButton.vala"
			_g_object_unref0 (item);
#line 720 "ModeButton.c"
		}
#line 158 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (_item_it);
#line 724 "ModeButton.c"
	}
}

/**
         * Sets item of given index's activity
         *
         * @param new_active_index index of changed item
         */
void
granite_widgets_mode_button_set_active (GraniteWidgetsModeButton* self,
                                        gint new_active_index)
{
	GeeHashMap* _tmp0_;
	GraniteWidgetsModeButtonItem* new_item = NULL;
	GeeHashMap* _tmp1_;
	gpointer _tmp2_;
	GraniteWidgetsModeButtonItem* _tmp3_;
	GraniteWidgetsModeButtonItem* _tmp4_;
	GraniteWidgetsModeButtonItem* _tmp5_;
#line 170 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 171 "../lib/Widgets/ModeButton.vala"
	if (new_active_index <= -1) {
#line 172 "../lib/Widgets/ModeButton.vala"
		granite_widgets_mode_button_clear_selected (self);
#line 173 "../lib/Widgets/ModeButton.vala"
		return;
#line 752 "ModeButton.c"
	}
#line 176 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = self->priv->item_map;
#line 176 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, (gpointer) ((gintptr) new_active_index)));
#line 177 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = self->priv->item_map;
#line 177 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp1_, (gpointer) ((gintptr) new_active_index));
#line 177 "../lib/Widgets/ModeButton.vala"
	_tmp3_ = (GraniteWidgetsModeButtonItem*) _tmp2_;
#line 177 "../lib/Widgets/ModeButton.vala"
	_tmp4_ = GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM (_tmp3_) ? ((GraniteWidgetsModeButtonItem*) _tmp3_) : NULL;
#line 177 "../lib/Widgets/ModeButton.vala"
	if (_tmp4_ == NULL) {
#line 177 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (_tmp3_);
#line 770 "ModeButton.c"
	}
#line 177 "../lib/Widgets/ModeButton.vala"
	new_item = _tmp4_;
#line 179 "../lib/Widgets/ModeButton.vala"
	_tmp5_ = new_item;
#line 179 "../lib/Widgets/ModeButton.vala"
	if (_tmp5_ != NULL) {
#line 778 "ModeButton.c"
		GraniteWidgetsModeButtonItem* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
		GraniteWidgetsModeButtonItem* _tmp9_;
		GraniteWidgetsModeButtonItem* old_item = NULL;
		GeeHashMap* _tmp10_;
		gpointer _tmp11_;
		GraniteWidgetsModeButtonItem* _tmp12_;
		GraniteWidgetsModeButtonItem* _tmp13_;
		GraniteWidgetsModeButtonItem* _tmp14_;
		GraniteWidgetsModeButtonItem* _tmp16_;
		GtkWidget* _tmp17_;
#line 180 "../lib/Widgets/ModeButton.vala"
		_tmp6_ = new_item;
#line 180 "../lib/Widgets/ModeButton.vala"
		_tmp7_ = granite_widgets_mode_button_item_get_index (_tmp6_);
#line 180 "../lib/Widgets/ModeButton.vala"
		_tmp8_ = _tmp7_;
#line 180 "../lib/Widgets/ModeButton.vala"
		_vala_assert (_tmp8_ == new_active_index, "new_item.index == new_active_index");
#line 181 "../lib/Widgets/ModeButton.vala"
		_tmp9_ = new_item;
#line 181 "../lib/Widgets/ModeButton.vala"
		gtk_toggle_button_set_active ((GtkToggleButton*) _tmp9_, TRUE);
#line 183 "../lib/Widgets/ModeButton.vala"
		if (self->priv->_selected == new_active_index) {
#line 184 "../lib/Widgets/ModeButton.vala"
			_g_object_unref0 (new_item);
#line 184 "../lib/Widgets/ModeButton.vala"
			return;
#line 809 "ModeButton.c"
		}
#line 188 "../lib/Widgets/ModeButton.vala"
		_tmp10_ = self->priv->item_map;
#line 188 "../lib/Widgets/ModeButton.vala"
		_tmp11_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp10_, (gpointer) ((gintptr) self->priv->_selected));
#line 188 "../lib/Widgets/ModeButton.vala"
		_tmp12_ = (GraniteWidgetsModeButtonItem*) _tmp11_;
#line 188 "../lib/Widgets/ModeButton.vala"
		_tmp13_ = GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM (_tmp12_) ? ((GraniteWidgetsModeButtonItem*) _tmp12_) : NULL;
#line 188 "../lib/Widgets/ModeButton.vala"
		if (_tmp13_ == NULL) {
#line 188 "../lib/Widgets/ModeButton.vala"
			_g_object_unref0 (_tmp12_);
#line 823 "ModeButton.c"
		}
#line 188 "../lib/Widgets/ModeButton.vala"
		old_item = _tmp13_;
#line 193 "../lib/Widgets/ModeButton.vala"
		self->priv->_selected = new_active_index;
#line 195 "../lib/Widgets/ModeButton.vala"
		_tmp14_ = old_item;
#line 195 "../lib/Widgets/ModeButton.vala"
		if (_tmp14_ != NULL) {
#line 833 "ModeButton.c"
			GraniteWidgetsModeButtonItem* _tmp15_;
#line 196 "../lib/Widgets/ModeButton.vala"
			_tmp15_ = old_item;
#line 196 "../lib/Widgets/ModeButton.vala"
			gtk_toggle_button_set_active ((GtkToggleButton*) _tmp15_, FALSE);
#line 839 "ModeButton.c"
		}
#line 199 "../lib/Widgets/ModeButton.vala"
		_tmp16_ = new_item;
#line 199 "../lib/Widgets/ModeButton.vala"
		_tmp17_ = gtk_bin_get_child ((GtkBin*) _tmp16_);
#line 199 "../lib/Widgets/ModeButton.vala"
		g_signal_emit (self, granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_MODE_CHANGED_SIGNAL], 0, _tmp17_);
#line 179 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (old_item);
#line 849 "ModeButton.c"
	}
#line 170 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (new_item);
#line 853 "ModeButton.c"
}

/**
         * Changes visibility of item of given index
         *
         * @param index index of item to be modified
         * @param val value to change the visiblity to
         */
void
granite_widgets_mode_button_set_item_visible (GraniteWidgetsModeButton* self,
                                              gint index,
                                              gboolean val)
{
	GeeHashMap* _tmp0_;
	GraniteWidgetsModeButtonItem* item = NULL;
	GeeHashMap* _tmp1_;
	gpointer _tmp2_;
	GraniteWidgetsModeButtonItem* _tmp3_;
	GraniteWidgetsModeButtonItem* _tmp4_;
	GraniteWidgetsModeButtonItem* _tmp5_;
#line 209 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 210 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = self->priv->item_map;
#line 210 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, (gpointer) ((gintptr) index)));
#line 211 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = self->priv->item_map;
#line 211 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp1_, (gpointer) ((gintptr) index));
#line 211 "../lib/Widgets/ModeButton.vala"
	_tmp3_ = (GraniteWidgetsModeButtonItem*) _tmp2_;
#line 211 "../lib/Widgets/ModeButton.vala"
	_tmp4_ = GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM (_tmp3_) ? ((GraniteWidgetsModeButtonItem*) _tmp3_) : NULL;
#line 211 "../lib/Widgets/ModeButton.vala"
	if (_tmp4_ == NULL) {
#line 211 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (_tmp3_);
#line 892 "ModeButton.c"
	}
#line 211 "../lib/Widgets/ModeButton.vala"
	item = _tmp4_;
#line 213 "../lib/Widgets/ModeButton.vala"
	_tmp5_ = item;
#line 213 "../lib/Widgets/ModeButton.vala"
	if (_tmp5_ != NULL) {
#line 900 "ModeButton.c"
		GraniteWidgetsModeButtonItem* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
		GraniteWidgetsModeButtonItem* _tmp9_;
		GraniteWidgetsModeButtonItem* _tmp10_;
#line 214 "../lib/Widgets/ModeButton.vala"
		_tmp6_ = item;
#line 214 "../lib/Widgets/ModeButton.vala"
		_tmp7_ = granite_widgets_mode_button_item_get_index (_tmp6_);
#line 214 "../lib/Widgets/ModeButton.vala"
		_tmp8_ = _tmp7_;
#line 214 "../lib/Widgets/ModeButton.vala"
		_vala_assert (_tmp8_ == index, "item.index == index");
#line 215 "../lib/Widgets/ModeButton.vala"
		_tmp9_ = item;
#line 215 "../lib/Widgets/ModeButton.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp9_, !val);
#line 216 "../lib/Widgets/ModeButton.vala"
		_tmp10_ = item;
#line 216 "../lib/Widgets/ModeButton.vala"
		gtk_widget_set_visible ((GtkWidget*) _tmp10_, val);
#line 922 "ModeButton.c"
	}
#line 209 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (item);
#line 926 "ModeButton.c"
}

/**
         * Removes item at given index
         *
         * @param index index of item to remove
         */
void
granite_widgets_mode_button_remove (GraniteWidgetsModeButton* self,
                                    gint index)
{
	GeeHashMap* _tmp0_;
	GraniteWidgetsModeButtonItem* item = NULL;
	GeeHashMap* _tmp1_;
	gpointer _tmp2_;
	GraniteWidgetsModeButtonItem* _tmp3_;
	GraniteWidgetsModeButtonItem* _tmp4_;
	GraniteWidgetsModeButtonItem* _tmp5_;
#line 225 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 226 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = self->priv->item_map;
#line 226 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, (gpointer) ((gintptr) index)));
#line 227 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = self->priv->item_map;
#line 227 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp1_, (gpointer) ((gintptr) index));
#line 227 "../lib/Widgets/ModeButton.vala"
	_tmp3_ = (GraniteWidgetsModeButtonItem*) _tmp2_;
#line 227 "../lib/Widgets/ModeButton.vala"
	_tmp4_ = GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM (_tmp3_) ? ((GraniteWidgetsModeButtonItem*) _tmp3_) : NULL;
#line 227 "../lib/Widgets/ModeButton.vala"
	if (_tmp4_ == NULL) {
#line 227 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (_tmp3_);
#line 963 "ModeButton.c"
	}
#line 227 "../lib/Widgets/ModeButton.vala"
	item = _tmp4_;
#line 229 "../lib/Widgets/ModeButton.vala"
	_tmp5_ = item;
#line 229 "../lib/Widgets/ModeButton.vala"
	if (_tmp5_ != NULL) {
#line 971 "ModeButton.c"
		GraniteWidgetsModeButtonItem* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
		GeeHashMap* _tmp9_;
		GraniteWidgetsModeButtonItem* _tmp10_;
		GtkWidget* _tmp11_;
		GraniteWidgetsModeButtonItem* _tmp12_;
#line 230 "../lib/Widgets/ModeButton.vala"
		_tmp6_ = item;
#line 230 "../lib/Widgets/ModeButton.vala"
		_tmp7_ = granite_widgets_mode_button_item_get_index (_tmp6_);
#line 230 "../lib/Widgets/ModeButton.vala"
		_tmp8_ = _tmp7_;
#line 230 "../lib/Widgets/ModeButton.vala"
		_vala_assert (_tmp8_ == index, "item.index == index");
#line 231 "../lib/Widgets/ModeButton.vala"
		_tmp9_ = self->priv->item_map;
#line 231 "../lib/Widgets/ModeButton.vala"
		gee_abstract_map_unset ((GeeAbstractMap*) _tmp9_, (gpointer) ((gintptr) index), NULL);
#line 232 "../lib/Widgets/ModeButton.vala"
		_tmp10_ = item;
#line 232 "../lib/Widgets/ModeButton.vala"
		_tmp11_ = gtk_bin_get_child ((GtkBin*) _tmp10_);
#line 232 "../lib/Widgets/ModeButton.vala"
		g_signal_emit (self, granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_MODE_REMOVED_SIGNAL], 0, index, _tmp11_);
#line 233 "../lib/Widgets/ModeButton.vala"
		_tmp12_ = item;
#line 233 "../lib/Widgets/ModeButton.vala"
		gtk_widget_destroy ((GtkWidget*) _tmp12_);
#line 1001 "ModeButton.c"
	}
#line 225 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (item);
#line 1005 "ModeButton.c"
}

/**
         * Clears all children
         */
void
granite_widgets_mode_button_clear_children (GraniteWidgetsModeButton* self)
{
	GList* _tmp0_;
	GeeHashMap* _tmp5_;
#line 240 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 241 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = gtk_container_get_children ((GtkContainer*) self);
#line 1020 "ModeButton.c"
	{
		GList* button_collection = NULL;
		GList* button_it = NULL;
#line 241 "../lib/Widgets/ModeButton.vala"
		button_collection = _tmp0_;
#line 241 "../lib/Widgets/ModeButton.vala"
		for (button_it = button_collection; button_it != NULL; button_it = button_it->next) {
#line 1028 "ModeButton.c"
			GtkWidget* button = NULL;
#line 241 "../lib/Widgets/ModeButton.vala"
			button = (GtkWidget*) button_it->data;
#line 1032 "ModeButton.c"
			{
				GtkWidget* _tmp1_;
				GtkWidget* _tmp2_;
				GtkContainer* _tmp3_;
#line 242 "../lib/Widgets/ModeButton.vala"
				_tmp1_ = button;
#line 242 "../lib/Widgets/ModeButton.vala"
				gtk_widget_hide (_tmp1_);
#line 243 "../lib/Widgets/ModeButton.vala"
				_tmp2_ = button;
#line 243 "../lib/Widgets/ModeButton.vala"
				_tmp3_ = gtk_widget_get_parent (_tmp2_);
#line 243 "../lib/Widgets/ModeButton.vala"
				if (_tmp3_ != NULL) {
#line 1047 "ModeButton.c"
					GtkWidget* _tmp4_;
#line 244 "../lib/Widgets/ModeButton.vala"
					_tmp4_ = button;
#line 244 "../lib/Widgets/ModeButton.vala"
					GTK_CONTAINER_CLASS (granite_widgets_mode_button_parent_class)->remove ((GtkContainer*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_box_get_type (), GtkBox), _tmp4_);
#line 1053 "ModeButton.c"
				}
			}
		}
#line 241 "../lib/Widgets/ModeButton.vala"
		(button_collection == NULL) ? NULL : (button_collection = (g_list_free (button_collection), NULL));
#line 1059 "ModeButton.c"
	}
#line 248 "../lib/Widgets/ModeButton.vala"
	_tmp5_ = self->priv->item_map;
#line 248 "../lib/Widgets/ModeButton.vala"
	gee_abstract_map_clear ((GeeAbstractMap*) _tmp5_);
#line 250 "../lib/Widgets/ModeButton.vala"
	self->priv->_selected = -1;
#line 1067 "ModeButton.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 287 "../lib/Widgets/ModeButton.vala"
	return self ? g_object_ref (self) : NULL;
#line 1075 "ModeButton.c"
}

static gboolean
granite_widgets_mode_button_on_scroll_event (GraniteWidgetsModeButton* self,
                                             GtkWidget* widget,
                                             GdkEventScroll* ev)
{
	gint offset = 0;
	GdkScrollDirection _tmp0_;
	GList* children = NULL;
	GList* _tmp1_;
	guint n_children = 0U;
	GList* _tmp2_;
	GraniteWidgetsModeButtonItem* selected_item = NULL;
	GeeHashMap* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	gpointer _tmp6_;
	GraniteWidgetsModeButtonItem* _tmp7_;
	gint new_item = 0;
	GList* _tmp8_;
	GraniteWidgetsModeButtonItem* _tmp9_;
	gboolean result = FALSE;
#line 253 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 253 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (widget != NULL, FALSE);
#line 253 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (ev != NULL, FALSE);
#line 256 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = ev->direction;
#line 256 "../lib/Widgets/ModeButton.vala"
	switch (_tmp0_) {
#line 256 "../lib/Widgets/ModeButton.vala"
		case GDK_SCROLL_DOWN:
#line 256 "../lib/Widgets/ModeButton.vala"
		case GDK_SCROLL_RIGHT:
#line 1113 "ModeButton.c"
		{
#line 259 "../lib/Widgets/ModeButton.vala"
			offset = 1;
#line 260 "../lib/Widgets/ModeButton.vala"
			break;
#line 1119 "ModeButton.c"
		}
#line 256 "../lib/Widgets/ModeButton.vala"
		case GDK_SCROLL_UP:
#line 256 "../lib/Widgets/ModeButton.vala"
		case GDK_SCROLL_LEFT:
#line 1125 "ModeButton.c"
		{
#line 263 "../lib/Widgets/ModeButton.vala"
			offset = -1;
#line 264 "../lib/Widgets/ModeButton.vala"
			break;
#line 1131 "ModeButton.c"
		}
		default:
		{
#line 266 "../lib/Widgets/ModeButton.vala"
			result = FALSE;
#line 266 "../lib/Widgets/ModeButton.vala"
			return result;
#line 1139 "ModeButton.c"
		}
	}
#line 272 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = gtk_container_get_children ((GtkContainer*) self);
#line 272 "../lib/Widgets/ModeButton.vala"
	children = _tmp1_;
#line 273 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = children;
#line 273 "../lib/Widgets/ModeButton.vala"
	n_children = g_list_length (_tmp2_);
#line 275 "../lib/Widgets/ModeButton.vala"
	_tmp3_ = self->priv->item_map;
#line 275 "../lib/Widgets/ModeButton.vala"
	_tmp4_ = granite_widgets_mode_button_get_selected (self);
#line 275 "../lib/Widgets/ModeButton.vala"
	_tmp5_ = _tmp4_;
#line 275 "../lib/Widgets/ModeButton.vala"
	_tmp6_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp3_, (gpointer) ((gintptr) _tmp5_));
#line 275 "../lib/Widgets/ModeButton.vala"
	selected_item = (GraniteWidgetsModeButtonItem*) _tmp6_;
#line 276 "../lib/Widgets/ModeButton.vala"
	_tmp7_ = selected_item;
#line 276 "../lib/Widgets/ModeButton.vala"
	if (_tmp7_ == NULL) {
#line 277 "../lib/Widgets/ModeButton.vala"
		result = FALSE;
#line 277 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (selected_item);
#line 277 "../lib/Widgets/ModeButton.vala"
		(children == NULL) ? NULL : (children = (g_list_free (children), NULL));
#line 277 "../lib/Widgets/ModeButton.vala"
		return result;
#line 1172 "ModeButton.c"
	}
#line 280 "../lib/Widgets/ModeButton.vala"
	_tmp8_ = children;
#line 280 "../lib/Widgets/ModeButton.vala"
	_tmp9_ = selected_item;
#line 280 "../lib/Widgets/ModeButton.vala"
	new_item = g_list_index (_tmp8_, (GtkWidget*) _tmp9_);
#line 281 "../lib/Widgets/ModeButton.vala"
	if (new_item < 0) {
#line 282 "../lib/Widgets/ModeButton.vala"
		result = FALSE;
#line 282 "../lib/Widgets/ModeButton.vala"
		_g_object_unref0 (selected_item);
#line 282 "../lib/Widgets/ModeButton.vala"
		(children == NULL) ? NULL : (children = (g_list_free (children), NULL));
#line 282 "../lib/Widgets/ModeButton.vala"
		return result;
#line 1190 "ModeButton.c"
	}
	{
		gboolean _tmp10_ = FALSE;
#line 285 "../lib/Widgets/ModeButton.vala"
		_tmp10_ = TRUE;
#line 285 "../lib/Widgets/ModeButton.vala"
		while (TRUE) {
#line 1198 "ModeButton.c"
			GraniteWidgetsModeButtonItem* item = NULL;
			GList* _tmp12_;
			gconstpointer _tmp13_;
			GtkWidget* _tmp14_;
			GraniteWidgetsModeButtonItem* _tmp15_;
			gboolean _tmp16_ = FALSE;
			gboolean _tmp17_ = FALSE;
			GraniteWidgetsModeButtonItem* _tmp18_;
#line 285 "../lib/Widgets/ModeButton.vala"
			if (!_tmp10_) {
#line 1209 "ModeButton.c"
				gboolean _tmp11_ = FALSE;
#line 293 "../lib/Widgets/ModeButton.vala"
				if (new_item >= 0) {
#line 293 "../lib/Widgets/ModeButton.vala"
					_tmp11_ = ((guint) new_item) < n_children;
#line 1215 "ModeButton.c"
				} else {
#line 293 "../lib/Widgets/ModeButton.vala"
					_tmp11_ = FALSE;
#line 1219 "ModeButton.c"
				}
#line 293 "../lib/Widgets/ModeButton.vala"
				if (!_tmp11_) {
#line 293 "../lib/Widgets/ModeButton.vala"
					break;
#line 1225 "ModeButton.c"
				}
			}
#line 285 "../lib/Widgets/ModeButton.vala"
			_tmp10_ = FALSE;
#line 286 "../lib/Widgets/ModeButton.vala"
			new_item += offset;
#line 287 "../lib/Widgets/ModeButton.vala"
			_tmp12_ = children;
#line 287 "../lib/Widgets/ModeButton.vala"
			_tmp13_ = g_list_nth_data (_tmp12_, (guint) new_item);
#line 287 "../lib/Widgets/ModeButton.vala"
			_tmp14_ = (GtkWidget*) _tmp13_;
#line 287 "../lib/Widgets/ModeButton.vala"
			_tmp15_ = _g_object_ref0 (GRANITE_WIDGETS_MODE_BUTTON_IS_ITEM (_tmp14_) ? ((GraniteWidgetsModeButtonItem*) _tmp14_) : NULL);
#line 287 "../lib/Widgets/ModeButton.vala"
			item = _tmp15_;
#line 289 "../lib/Widgets/ModeButton.vala"
			_tmp18_ = item;
#line 289 "../lib/Widgets/ModeButton.vala"
			if (_tmp18_ != NULL) {
#line 1246 "ModeButton.c"
				GraniteWidgetsModeButtonItem* _tmp19_;
				gboolean _tmp20_;
				gboolean _tmp21_;
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp19_ = item;
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp20_ = gtk_widget_get_visible ((GtkWidget*) _tmp19_);
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp21_ = _tmp20_;
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp17_ = _tmp21_;
#line 1258 "ModeButton.c"
			} else {
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp17_ = FALSE;
#line 1262 "ModeButton.c"
			}
#line 289 "../lib/Widgets/ModeButton.vala"
			if (_tmp17_) {
#line 1266 "ModeButton.c"
				GraniteWidgetsModeButtonItem* _tmp22_;
				gboolean _tmp23_;
				gboolean _tmp24_;
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp22_ = item;
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp23_ = gtk_widget_get_sensitive ((GtkWidget*) _tmp22_);
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp24_ = _tmp23_;
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp16_ = _tmp24_;
#line 1278 "ModeButton.c"
			} else {
#line 289 "../lib/Widgets/ModeButton.vala"
				_tmp16_ = FALSE;
#line 1282 "ModeButton.c"
			}
#line 289 "../lib/Widgets/ModeButton.vala"
			if (_tmp16_) {
#line 1286 "ModeButton.c"
				GraniteWidgetsModeButtonItem* _tmp25_;
				gint _tmp26_;
				gint _tmp27_;
#line 290 "../lib/Widgets/ModeButton.vala"
				_tmp25_ = item;
#line 290 "../lib/Widgets/ModeButton.vala"
				_tmp26_ = granite_widgets_mode_button_item_get_index (_tmp25_);
#line 290 "../lib/Widgets/ModeButton.vala"
				_tmp27_ = _tmp26_;
#line 290 "../lib/Widgets/ModeButton.vala"
				granite_widgets_mode_button_set_selected (self, _tmp27_);
#line 291 "../lib/Widgets/ModeButton.vala"
				_g_object_unref0 (item);
#line 291 "../lib/Widgets/ModeButton.vala"
				break;
#line 1302 "ModeButton.c"
			}
#line 285 "../lib/Widgets/ModeButton.vala"
			_g_object_unref0 (item);
#line 1306 "ModeButton.c"
		}
	}
#line 295 "../lib/Widgets/ModeButton.vala"
	result = FALSE;
#line 295 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (selected_item);
#line 295 "../lib/Widgets/ModeButton.vala"
	(children == NULL) ? NULL : (children = (g_list_free (children), NULL));
#line 295 "../lib/Widgets/ModeButton.vala"
	return result;
#line 1317 "ModeButton.c"
}

static inline gpointer
granite_widgets_mode_button_item_get_instance_private (GraniteWidgetsModeButtonItem* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsModeButtonItem_private_offset);
}

static gint
granite_widgets_mode_button_item_get_index (GraniteWidgetsModeButtonItem* self)
{
	gint result;
#line 34 "../lib/Widgets/ModeButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 34 "../lib/Widgets/ModeButton.vala"
	result = self->priv->_index;
#line 34 "../lib/Widgets/ModeButton.vala"
	return result;
#line 1336 "ModeButton.c"
}

static void
granite_widgets_mode_button_item_set_index (GraniteWidgetsModeButtonItem* self,
                                            gint value)
{
	gint old_value;
#line 34 "../lib/Widgets/ModeButton.vala"
	g_return_if_fail (self != NULL);
#line 34 "../lib/Widgets/ModeButton.vala"
	old_value = granite_widgets_mode_button_item_get_index (self);
#line 34 "../lib/Widgets/ModeButton.vala"
	if (old_value != value) {
#line 34 "../lib/Widgets/ModeButton.vala"
		self->priv->_index = value;
#line 34 "../lib/Widgets/ModeButton.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_mode_button_item_properties[GRANITE_WIDGETS_MODE_BUTTON_ITEM_INDEX_PROPERTY]);
#line 1354 "ModeButton.c"
	}
}

static GraniteWidgetsModeButtonItem*
granite_widgets_mode_button_item_construct (GType object_type,
                                            gint index)
{
	GraniteWidgetsModeButtonItem * self = NULL;
#line 36 "../lib/Widgets/ModeButton.vala"
	self = (GraniteWidgetsModeButtonItem*) g_object_new (object_type, "index", index, NULL);
#line 37 "../lib/Widgets/ModeButton.vala"
	gtk_widget_set_can_focus ((GtkWidget*) self, FALSE);
#line 38 "../lib/Widgets/ModeButton.vala"
	gtk_widget_add_events ((GtkWidget*) self, (gint) GDK_SCROLL_MASK);
#line 35 "../lib/Widgets/ModeButton.vala"
	return self;
#line 1371 "ModeButton.c"
}

static GraniteWidgetsModeButtonItem*
granite_widgets_mode_button_item_new (gint index)
{
#line 35 "../lib/Widgets/ModeButton.vala"
	return granite_widgets_mode_button_item_construct (GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, index);
#line 1379 "ModeButton.c"
}

static void
granite_widgets_mode_button_item_class_init (GraniteWidgetsModeButtonItemClass * klass,
                                             gpointer klass_data)
{
#line 33 "../lib/Widgets/ModeButton.vala"
	granite_widgets_mode_button_item_parent_class = g_type_class_peek_parent (klass);
#line 33 "../lib/Widgets/ModeButton.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsModeButtonItem_private_offset);
#line 33 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_mode_button_item_get_property;
#line 33 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_mode_button_item_set_property;
#line 33 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_mode_button_item_finalize;
#line 33 "../lib/Widgets/ModeButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_MODE_BUTTON_ITEM_INDEX_PROPERTY, granite_widgets_mode_button_item_properties[GRANITE_WIDGETS_MODE_BUTTON_ITEM_INDEX_PROPERTY] = g_param_spec_int ("index", "index", "index", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1398 "ModeButton.c"
}

static void
granite_widgets_mode_button_item_instance_init (GraniteWidgetsModeButtonItem * self,
                                                gpointer klass)
{
#line 33 "../lib/Widgets/ModeButton.vala"
	self->priv = granite_widgets_mode_button_item_get_instance_private (self);
#line 1407 "ModeButton.c"
}

static void
granite_widgets_mode_button_item_finalize (GObject * obj)
{
	GraniteWidgetsModeButtonItem * self;
#line 33 "../lib/Widgets/ModeButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, GraniteWidgetsModeButtonItem);
#line 33 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (granite_widgets_mode_button_item_parent_class)->finalize (obj);
#line 1418 "ModeButton.c"
}

static GType
granite_widgets_mode_button_item_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsModeButtonItemClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_mode_button_item_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsModeButtonItem), 0, (GInstanceInitFunc) granite_widgets_mode_button_item_instance_init, NULL };
	GType granite_widgets_mode_button_item_type_id;
	granite_widgets_mode_button_item_type_id = g_type_register_static (gtk_toggle_button_get_type (), "GraniteWidgetsModeButtonItem", &g_define_type_info, 0);
	GraniteWidgetsModeButtonItem_private_offset = g_type_add_instance_private (granite_widgets_mode_button_item_type_id, sizeof (GraniteWidgetsModeButtonItemPrivate));
	return granite_widgets_mode_button_item_type_id;
}

static GType
granite_widgets_mode_button_item_get_type (void)
{
	static volatile gsize granite_widgets_mode_button_item_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_mode_button_item_type_id__volatile)) {
		GType granite_widgets_mode_button_item_type_id;
		granite_widgets_mode_button_item_type_id = granite_widgets_mode_button_item_get_type_once ();
		g_once_init_leave (&granite_widgets_mode_button_item_type_id__volatile, granite_widgets_mode_button_item_type_id);
	}
	return granite_widgets_mode_button_item_type_id__volatile;
}

static void
_vala_granite_widgets_mode_button_item_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec)
{
	GraniteWidgetsModeButtonItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, GraniteWidgetsModeButtonItem);
#line 33 "../lib/Widgets/ModeButton.vala"
	switch (property_id) {
#line 33 "../lib/Widgets/ModeButton.vala"
		case GRANITE_WIDGETS_MODE_BUTTON_ITEM_INDEX_PROPERTY:
#line 33 "../lib/Widgets/ModeButton.vala"
		g_value_set_int (value, granite_widgets_mode_button_item_get_index (self));
#line 33 "../lib/Widgets/ModeButton.vala"
		break;
#line 1459 "ModeButton.c"
		default:
#line 33 "../lib/Widgets/ModeButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "../lib/Widgets/ModeButton.vala"
		break;
#line 1465 "ModeButton.c"
	}
}

static void
_vala_granite_widgets_mode_button_item_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec)
{
	GraniteWidgetsModeButtonItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, GraniteWidgetsModeButtonItem);
#line 33 "../lib/Widgets/ModeButton.vala"
	switch (property_id) {
#line 33 "../lib/Widgets/ModeButton.vala"
		case GRANITE_WIDGETS_MODE_BUTTON_ITEM_INDEX_PROPERTY:
#line 33 "../lib/Widgets/ModeButton.vala"
		granite_widgets_mode_button_item_set_index (self, g_value_get_int (value));
#line 33 "../lib/Widgets/ModeButton.vala"
		break;
#line 1485 "ModeButton.c"
		default:
#line 33 "../lib/Widgets/ModeButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "../lib/Widgets/ModeButton.vala"
		break;
#line 1491 "ModeButton.c"
	}
}

static GObject *
granite_widgets_mode_button_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsModeButton * self;
	GeeHashMap* _tmp0_;
	GtkStyleContext* style = NULL;
	GtkStyleContext* _tmp1_;
	GtkStyleContext* _tmp2_;
	GtkStyleContext* _tmp3_;
	GtkStyleContext* _tmp4_;
#line 71 "../lib/Widgets/ModeButton.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_mode_button_parent_class);
#line 71 "../lib/Widgets/ModeButton.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 71 "../lib/Widgets/ModeButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButton);
#line 72 "../lib/Widgets/ModeButton.vala"
	gtk_box_set_homogeneous ((GtkBox*) self, TRUE);
#line 73 "../lib/Widgets/ModeButton.vala"
	gtk_box_set_spacing ((GtkBox*) self, 0);
#line 74 "../lib/Widgets/ModeButton.vala"
	gtk_widget_set_can_focus ((GtkWidget*) self, FALSE);
#line 76 "../lib/Widgets/ModeButton.vala"
	_tmp0_ = gee_hash_map_new (G_TYPE_INT, NULL, NULL, GRANITE_WIDGETS_MODE_BUTTON_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 76 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (self->priv->item_map);
#line 76 "../lib/Widgets/ModeButton.vala"
	self->priv->item_map = _tmp0_;
#line 78 "../lib/Widgets/ModeButton.vala"
	_tmp1_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 78 "../lib/Widgets/ModeButton.vala"
	_tmp2_ = _g_object_ref0 (_tmp1_);
#line 78 "../lib/Widgets/ModeButton.vala"
	style = _tmp2_;
#line 79 "../lib/Widgets/ModeButton.vala"
	_tmp3_ = style;
#line 79 "../lib/Widgets/ModeButton.vala"
	gtk_style_context_add_class (_tmp3_, GTK_STYLE_CLASS_LINKED);
#line 80 "../lib/Widgets/ModeButton.vala"
	_tmp4_ = style;
#line 80 "../lib/Widgets/ModeButton.vala"
	gtk_style_context_add_class (_tmp4_, "raised");
#line 71 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (style);
#line 71 "../lib/Widgets/ModeButton.vala"
	return obj;
#line 1545 "ModeButton.c"
}

static void
granite_widgets_mode_button_class_init (GraniteWidgetsModeButtonClass * klass,
                                        gpointer klass_data)
{
#line 31 "../lib/Widgets/ModeButton.vala"
	granite_widgets_mode_button_parent_class = g_type_class_peek_parent (klass);
#line 31 "../lib/Widgets/ModeButton.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsModeButton_private_offset);
#line 31 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_mode_button_get_property;
#line 31 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_mode_button_set_property;
#line 31 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_mode_button_constructor;
#line 31 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_mode_button_finalize;
#line 1564 "ModeButton.c"
	/**
	         * Index of currently selected item.
	         */
#line 31 "../lib/Widgets/ModeButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_MODE_BUTTON_SELECTED_PROPERTY, granite_widgets_mode_button_properties[GRANITE_WIDGETS_MODE_BUTTON_SELECTED_PROPERTY] = g_param_spec_int ("selected", "selected", "selected", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1570 "ModeButton.c"
	/**
	         * Read-only length of current ModeButton
	         */
#line 31 "../lib/Widgets/ModeButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_MODE_BUTTON_N_ITEMS_PROPERTY, granite_widgets_mode_button_properties[GRANITE_WIDGETS_MODE_BUTTON_N_ITEMS_PROPERTY] = g_param_spec_uint ("n-items", "n-items", "n-items", 0, G_MAXUINT, 0U, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 31 "../lib/Widgets/ModeButton.vala"
	granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_MODE_ADDED_SIGNAL] = g_signal_new ("mode-added", GRANITE_WIDGETS_TYPE_MODE_BUTTON, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__INT_OBJECT, G_TYPE_NONE, 2, G_TYPE_INT, gtk_widget_get_type ());
#line 31 "../lib/Widgets/ModeButton.vala"
	granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_MODE_REMOVED_SIGNAL] = g_signal_new ("mode-removed", GRANITE_WIDGETS_TYPE_MODE_BUTTON, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__INT_OBJECT, G_TYPE_NONE, 2, G_TYPE_INT, gtk_widget_get_type ());
#line 31 "../lib/Widgets/ModeButton.vala"
	granite_widgets_mode_button_signals[GRANITE_WIDGETS_MODE_BUTTON_MODE_CHANGED_SIGNAL] = g_signal_new ("mode-changed", GRANITE_WIDGETS_TYPE_MODE_BUTTON, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, gtk_widget_get_type ());
#line 1582 "ModeButton.c"
}

static void
granite_widgets_mode_button_instance_init (GraniteWidgetsModeButton * self,
                                           gpointer klass)
{
#line 31 "../lib/Widgets/ModeButton.vala"
	self->priv = granite_widgets_mode_button_get_instance_private (self);
#line 61 "../lib/Widgets/ModeButton.vala"
	self->priv->_selected = -1;
#line 1593 "ModeButton.c"
}

static void
granite_widgets_mode_button_finalize (GObject * obj)
{
	GraniteWidgetsModeButton * self;
#line 31 "../lib/Widgets/ModeButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButton);
#line 62 "../lib/Widgets/ModeButton.vala"
	_g_object_unref0 (self->priv->item_map);
#line 31 "../lib/Widgets/ModeButton.vala"
	G_OBJECT_CLASS (granite_widgets_mode_button_parent_class)->finalize (obj);
#line 1606 "ModeButton.c"
}

/**
     * This widget is a multiple option modal switch
     *
     * {{../doc/images/ModeButton.png}}
     */
static GType
granite_widgets_mode_button_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsModeButtonClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_mode_button_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsModeButton), 0, (GInstanceInitFunc) granite_widgets_mode_button_instance_init, NULL };
	GType granite_widgets_mode_button_type_id;
	granite_widgets_mode_button_type_id = g_type_register_static (gtk_box_get_type (), "GraniteWidgetsModeButton", &g_define_type_info, 0);
	GraniteWidgetsModeButton_private_offset = g_type_add_instance_private (granite_widgets_mode_button_type_id, sizeof (GraniteWidgetsModeButtonPrivate));
	return granite_widgets_mode_button_type_id;
}

GType
granite_widgets_mode_button_get_type (void)
{
	static volatile gsize granite_widgets_mode_button_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_mode_button_type_id__volatile)) {
		GType granite_widgets_mode_button_type_id;
		granite_widgets_mode_button_type_id = granite_widgets_mode_button_get_type_once ();
		g_once_init_leave (&granite_widgets_mode_button_type_id__volatile, granite_widgets_mode_button_type_id);
	}
	return granite_widgets_mode_button_type_id__volatile;
}

static void
_vala_granite_widgets_mode_button_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec)
{
	GraniteWidgetsModeButton * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButton);
#line 31 "../lib/Widgets/ModeButton.vala"
	switch (property_id) {
#line 31 "../lib/Widgets/ModeButton.vala"
		case GRANITE_WIDGETS_MODE_BUTTON_SELECTED_PROPERTY:
#line 31 "../lib/Widgets/ModeButton.vala"
		g_value_set_int (value, granite_widgets_mode_button_get_selected (self));
#line 31 "../lib/Widgets/ModeButton.vala"
		break;
#line 31 "../lib/Widgets/ModeButton.vala"
		case GRANITE_WIDGETS_MODE_BUTTON_N_ITEMS_PROPERTY:
#line 31 "../lib/Widgets/ModeButton.vala"
		g_value_set_uint (value, granite_widgets_mode_button_get_n_items (self));
#line 31 "../lib/Widgets/ModeButton.vala"
		break;
#line 1658 "ModeButton.c"
		default:
#line 31 "../lib/Widgets/ModeButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 31 "../lib/Widgets/ModeButton.vala"
		break;
#line 1664 "ModeButton.c"
	}
}

static void
_vala_granite_widgets_mode_button_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec)
{
	GraniteWidgetsModeButton * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_MODE_BUTTON, GraniteWidgetsModeButton);
#line 31 "../lib/Widgets/ModeButton.vala"
	switch (property_id) {
#line 31 "../lib/Widgets/ModeButton.vala"
		case GRANITE_WIDGETS_MODE_BUTTON_SELECTED_PROPERTY:
#line 31 "../lib/Widgets/ModeButton.vala"
		granite_widgets_mode_button_set_selected (self, g_value_get_int (value));
#line 31 "../lib/Widgets/ModeButton.vala"
		break;
#line 1684 "ModeButton.c"
		default:
#line 31 "../lib/Widgets/ModeButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 31 "../lib/Widgets/ModeButton.vala"
		break;
#line 1690 "ModeButton.c"
	}
}

