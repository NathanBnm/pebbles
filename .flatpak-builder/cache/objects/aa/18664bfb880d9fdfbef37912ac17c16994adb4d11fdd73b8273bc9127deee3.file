/* Toast.c generated by valac 0.48.14, the Vala compiler
 * generated from Toast.vala, do not modify */

/*-
 * Copyright (c) 2016-2017 elementary LLC. (https://elementary.io)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the Lesser GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Artem Anufrij <artem.anufrij@live.de>
 *              Daniel For√© <daniel@elementary.io>
 *
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gdk/gdk.h>

#define GRANITE_WIDGETS_TYPE_TOAST (granite_widgets_toast_get_type ())
#define GRANITE_WIDGETS_TOAST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToast))
#define GRANITE_WIDGETS_TOAST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToastClass))
#define GRANITE_WIDGETS_IS_TOAST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_TOAST))
#define GRANITE_WIDGETS_IS_TOAST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_TYPE_TOAST))
#define GRANITE_WIDGETS_TOAST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToastClass))

typedef struct _GraniteWidgetsToast GraniteWidgetsToast;
typedef struct _GraniteWidgetsToastClass GraniteWidgetsToastClass;
typedef struct _GraniteWidgetsToastPrivate GraniteWidgetsToastPrivate;
enum  {
	GRANITE_WIDGETS_TOAST_0_PROPERTY,
	GRANITE_WIDGETS_TOAST_TITLE_PROPERTY,
	GRANITE_WIDGETS_TOAST_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_toast_properties[GRANITE_WIDGETS_TOAST_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
enum  {
	GRANITE_WIDGETS_TOAST_CLOSED_SIGNAL,
	GRANITE_WIDGETS_TOAST_DEFAULT_ACTION_SIGNAL,
	GRANITE_WIDGETS_TOAST_NUM_SIGNALS
};
static guint granite_widgets_toast_signals[GRANITE_WIDGETS_TOAST_NUM_SIGNALS] = {0};

struct _GraniteWidgetsToast {
	GtkRevealer parent_instance;
	GraniteWidgetsToastPrivate * priv;
};

struct _GraniteWidgetsToastClass {
	GtkRevealerClass parent_class;
};

struct _GraniteWidgetsToastPrivate {
	GtkLabel* notification_label;
	GtkButton* default_action_button;
	gchar* _title;
	guint timeout_id;
};

static gint GraniteWidgetsToast_private_offset;
static gpointer granite_widgets_toast_parent_class = NULL;

GType granite_widgets_toast_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsToast, g_object_unref)
const gchar* granite_widgets_toast_get_title (GraniteWidgetsToast* self);
void granite_widgets_toast_set_title (GraniteWidgetsToast* self,
                                      const gchar* value);
GraniteWidgetsToast* granite_widgets_toast_new (const gchar* title);
GraniteWidgetsToast* granite_widgets_toast_construct (GType object_type,
                                                      const gchar* title);
static void granite_widgets_toast_start_timeout (GraniteWidgetsToast* self);
static gboolean __lambda90_ (GraniteWidgetsToast* self);
static gboolean ___lambda90__gsource_func (gpointer self);
static void granite_widgets_toast_stop_timeout (GraniteWidgetsToast* self);
void granite_widgets_toast_set_default_action (GraniteWidgetsToast* self,
                                               const gchar* label);
void granite_widgets_toast_send_notification (GraniteWidgetsToast* self);
static GObject * granite_widgets_toast_constructor (GType type,
                                             guint n_construct_properties,
                                             GObjectConstructParam * construct_properties);
static void _granite_widgets_toast___lambda91_ (GraniteWidgetsToast* self);
static void __granite_widgets_toast___lambda91__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self);
static void _granite_widgets_toast___lambda92_ (GraniteWidgetsToast* self);
static void __granite_widgets_toast___lambda92__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self);
static gboolean _granite_widgets_toast___lambda93_ (GraniteWidgetsToast* self);
static gboolean __granite_widgets_toast___lambda93__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                            GdkEventCrossing* event,
                                                                            gpointer self);
static gboolean _granite_widgets_toast___lambda94_ (GraniteWidgetsToast* self);
static gboolean __granite_widgets_toast___lambda94__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                                            GdkEventCrossing* event,
                                                                            gpointer self);
static void granite_widgets_toast_finalize (GObject * obj);
static GType granite_widgets_toast_get_type_once (void);
static void _vala_granite_widgets_toast_get_property (GObject * object,
                                               guint property_id,
                                               GValue * value,
                                               GParamSpec * pspec);
static void _vala_granite_widgets_toast_set_property (GObject * object,
                                               guint property_id,
                                               const GValue * value,
                                               GParamSpec * pspec);

static inline gpointer
granite_widgets_toast_get_instance_private (GraniteWidgetsToast* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsToast_private_offset);
}

const gchar*
granite_widgets_toast_get_title (GraniteWidgetsToast* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 53 "../lib/Widgets/Toast.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 54 "../lib/Widgets/Toast.vala"
	_tmp0_ = self->priv->_title;
#line 54 "../lib/Widgets/Toast.vala"
	result = _tmp0_;
#line 54 "../lib/Widgets/Toast.vala"
	return result;
#line 139 "Toast.c"
}

void
granite_widgets_toast_set_title (GraniteWidgetsToast* self,
                                 const gchar* value)
{
	GtkLabel* _tmp0_;
	gchar* _tmp2_;
#line 56 "../lib/Widgets/Toast.vala"
	g_return_if_fail (self != NULL);
#line 57 "../lib/Widgets/Toast.vala"
	_tmp0_ = self->priv->notification_label;
#line 57 "../lib/Widgets/Toast.vala"
	if (_tmp0_ != NULL) {
#line 154 "Toast.c"
		GtkLabel* _tmp1_;
#line 58 "../lib/Widgets/Toast.vala"
		_tmp1_ = self->priv->notification_label;
#line 58 "../lib/Widgets/Toast.vala"
		gtk_label_set_label (_tmp1_, value);
#line 160 "Toast.c"
	}
#line 60 "../lib/Widgets/Toast.vala"
	_tmp2_ = g_strdup (value);
#line 60 "../lib/Widgets/Toast.vala"
	_g_free0 (self->priv->_title);
#line 60 "../lib/Widgets/Toast.vala"
	self->priv->_title = _tmp2_;
#line 56 "../lib/Widgets/Toast.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_toast_properties[GRANITE_WIDGETS_TOAST_TITLE_PROPERTY]);
#line 170 "Toast.c"
}

/**
         * Creates a new Toast with #title as its title
         */
GraniteWidgetsToast*
granite_widgets_toast_construct (GType object_type,
                                 const gchar* title)
{
	GraniteWidgetsToast * self = NULL;
#line 67 "../lib/Widgets/Toast.vala"
	g_return_val_if_fail (title != NULL, NULL);
#line 68 "../lib/Widgets/Toast.vala"
	self = (GraniteWidgetsToast*) g_object_new (object_type, "title", title, NULL);
#line 67 "../lib/Widgets/Toast.vala"
	return self;
#line 187 "Toast.c"
}

GraniteWidgetsToast*
granite_widgets_toast_new (const gchar* title)
{
#line 67 "../lib/Widgets/Toast.vala"
	return granite_widgets_toast_construct (GRANITE_WIDGETS_TYPE_TOAST, title);
#line 195 "Toast.c"
}

static gboolean
__lambda90_ (GraniteWidgetsToast* self)
{
	gboolean result = FALSE;
#line 131 "../lib/Widgets/Toast.vala"
	gtk_revealer_set_reveal_child ((GtkRevealer*) self, FALSE);
#line 132 "../lib/Widgets/Toast.vala"
	self->priv->timeout_id = (guint) 0;
#line 133 "../lib/Widgets/Toast.vala"
	result = G_SOURCE_REMOVE;
#line 133 "../lib/Widgets/Toast.vala"
	return result;
#line 210 "Toast.c"
}

static gboolean
___lambda90__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda90_ ((GraniteWidgetsToast*) self);
#line 130 "../lib/Widgets/Toast.vala"
	return result;
#line 220 "Toast.c"
}

static void
granite_widgets_toast_start_timeout (GraniteWidgetsToast* self)
{
	guint duration = 0U;
	GtkButton* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 121 "../lib/Widgets/Toast.vala"
	g_return_if_fail (self != NULL);
#line 124 "../lib/Widgets/Toast.vala"
	_tmp0_ = self->priv->default_action_button;
#line 124 "../lib/Widgets/Toast.vala"
	_tmp1_ = gtk_widget_get_visible ((GtkWidget*) _tmp0_);
#line 124 "../lib/Widgets/Toast.vala"
	_tmp2_ = _tmp1_;
#line 124 "../lib/Widgets/Toast.vala"
	if (_tmp2_) {
#line 125 "../lib/Widgets/Toast.vala"
		duration = (guint) 3500;
#line 242 "Toast.c"
	} else {
#line 127 "../lib/Widgets/Toast.vala"
		duration = (guint) 2000;
#line 246 "Toast.c"
	}
#line 130 "../lib/Widgets/Toast.vala"
	self->priv->timeout_id = g_timeout_add_full (G_PRIORITY_DEFAULT, duration, ___lambda90__gsource_func, g_object_ref (self), g_object_unref);
#line 250 "Toast.c"
}

static void
granite_widgets_toast_stop_timeout (GraniteWidgetsToast* self)
{
#line 137 "../lib/Widgets/Toast.vala"
	g_return_if_fail (self != NULL);
#line 138 "../lib/Widgets/Toast.vala"
	if (self->priv->timeout_id != ((guint) 0)) {
#line 139 "../lib/Widgets/Toast.vala"
		g_source_remove (self->priv->timeout_id);
#line 140 "../lib/Widgets/Toast.vala"
		self->priv->timeout_id = (guint) 0;
#line 264 "Toast.c"
	}
}

/**
         * Sets the default action button label of #this to #label and hides the
         * button if #label is #null.
         */
void
granite_widgets_toast_set_default_action (GraniteWidgetsToast* self,
                                          const gchar* label)
{
	gboolean _tmp0_ = FALSE;
	GtkButton* _tmp5_;
#line 148 "../lib/Widgets/Toast.vala"
	g_return_if_fail (self != NULL);
#line 149 "../lib/Widgets/Toast.vala"
	if (g_strcmp0 (label, "") == 0) {
#line 149 "../lib/Widgets/Toast.vala"
		_tmp0_ = TRUE;
#line 284 "Toast.c"
	} else {
#line 149 "../lib/Widgets/Toast.vala"
		_tmp0_ = label == NULL;
#line 288 "Toast.c"
	}
#line 149 "../lib/Widgets/Toast.vala"
	if (_tmp0_) {
#line 292 "Toast.c"
		GtkButton* _tmp1_;
		GtkButton* _tmp2_;
#line 150 "../lib/Widgets/Toast.vala"
		_tmp1_ = self->priv->default_action_button;
#line 150 "../lib/Widgets/Toast.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp1_, TRUE);
#line 151 "../lib/Widgets/Toast.vala"
		_tmp2_ = self->priv->default_action_button;
#line 151 "../lib/Widgets/Toast.vala"
		gtk_widget_set_visible ((GtkWidget*) _tmp2_, FALSE);
#line 303 "Toast.c"
	} else {
		GtkButton* _tmp3_;
		GtkButton* _tmp4_;
#line 153 "../lib/Widgets/Toast.vala"
		_tmp3_ = self->priv->default_action_button;
#line 153 "../lib/Widgets/Toast.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp3_, FALSE);
#line 154 "../lib/Widgets/Toast.vala"
		_tmp4_ = self->priv->default_action_button;
#line 154 "../lib/Widgets/Toast.vala"
		gtk_widget_set_visible ((GtkWidget*) _tmp4_, TRUE);
#line 315 "Toast.c"
	}
#line 156 "../lib/Widgets/Toast.vala"
	_tmp5_ = self->priv->default_action_button;
#line 156 "../lib/Widgets/Toast.vala"
	gtk_button_set_label (_tmp5_, label);
#line 321 "Toast.c"
}

/**
         * Sends the Toast on behalf of #this
         */
void
granite_widgets_toast_send_notification (GraniteWidgetsToast* self)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 162 "../lib/Widgets/Toast.vala"
	g_return_if_fail (self != NULL);
#line 163 "../lib/Widgets/Toast.vala"
	_tmp0_ = gtk_revealer_get_child_revealed ((GtkRevealer*) self);
#line 163 "../lib/Widgets/Toast.vala"
	_tmp1_ = _tmp0_;
#line 163 "../lib/Widgets/Toast.vala"
	if (!_tmp1_) {
#line 164 "../lib/Widgets/Toast.vala"
		gtk_revealer_set_reveal_child ((GtkRevealer*) self, TRUE);
#line 342 "Toast.c"
	}
#line 169 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_stop_timeout (self);
#line 170 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_start_timeout (self);
#line 348 "Toast.c"
}

static void
_granite_widgets_toast___lambda91_ (GraniteWidgetsToast* self)
{
#line 80 "../lib/Widgets/Toast.vala"
	gtk_revealer_set_reveal_child ((GtkRevealer*) self, FALSE);
#line 81 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_stop_timeout (self);
#line 82 "../lib/Widgets/Toast.vala"
	g_signal_emit (self, granite_widgets_toast_signals[GRANITE_WIDGETS_TOAST_DEFAULT_ACTION_SIGNAL], 0);
#line 360 "Toast.c"
}

static void
__granite_widgets_toast___lambda91__gtk_button_clicked (GtkButton* _sender,
                                                        gpointer self)
{
#line 79 "../lib/Widgets/Toast.vala"
	_granite_widgets_toast___lambda91_ ((GraniteWidgetsToast*) self);
#line 369 "Toast.c"
}

static void
_granite_widgets_toast___lambda92_ (GraniteWidgetsToast* self)
{
#line 88 "../lib/Widgets/Toast.vala"
	gtk_revealer_set_reveal_child ((GtkRevealer*) self, FALSE);
#line 89 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_stop_timeout (self);
#line 90 "../lib/Widgets/Toast.vala"
	g_signal_emit (self, granite_widgets_toast_signals[GRANITE_WIDGETS_TOAST_CLOSED_SIGNAL], 0);
#line 381 "Toast.c"
}

static void
__granite_widgets_toast___lambda92__gtk_button_clicked (GtkButton* _sender,
                                                        gpointer self)
{
#line 87 "../lib/Widgets/Toast.vala"
	_granite_widgets_toast___lambda92_ ((GraniteWidgetsToast*) self);
#line 390 "Toast.c"
}

static gboolean
_granite_widgets_toast___lambda93_ (GraniteWidgetsToast* self)
{
#line 107 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_stop_timeout (self);
#line 398 "Toast.c"
}

static gboolean
__granite_widgets_toast___lambda93__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                   GdkEventCrossing* event,
                                                                   gpointer self)
{
	gboolean result;
	result = _granite_widgets_toast___lambda93_ ((GraniteWidgetsToast*) self);
#line 106 "../lib/Widgets/Toast.vala"
	return result;
#line 410 "Toast.c"
}

static gboolean
_granite_widgets_toast___lambda94_ (GraniteWidgetsToast* self)
{
#line 111 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_start_timeout (self);
#line 418 "Toast.c"
}

static gboolean
__granite_widgets_toast___lambda94__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                                   GdkEventCrossing* event,
                                                                   gpointer self)
{
	gboolean result;
	result = _granite_widgets_toast___lambda94_ ((GraniteWidgetsToast*) self);
#line 110 "../lib/Widgets/Toast.vala"
	return result;
#line 430 "Toast.c"
}

static GObject *
granite_widgets_toast_constructor (GType type,
                                   guint n_construct_properties,
                                   GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsToast * self;
	GtkButton* _tmp0_;
	GtkButton* _tmp1_;
	GtkButton* _tmp2_;
	GtkButton* _tmp3_;
	GtkButton* close_button = NULL;
	GtkButton* _tmp4_;
	GtkButton* _tmp5_;
	GtkStyleContext* _tmp6_;
	GtkButton* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	GtkLabel* _tmp10_;
	GtkGrid* notification_box = NULL;
	GtkGrid* _tmp11_;
	GtkGrid* _tmp12_;
	GtkGrid* _tmp13_;
	GtkButton* _tmp14_;
	GtkGrid* _tmp15_;
	GtkLabel* _tmp16_;
	GtkGrid* _tmp17_;
	GtkButton* _tmp18_;
	GtkEventBox* event_box = NULL;
	GtkEventBox* _tmp19_;
	GtkEventBox* _tmp20_;
	GtkEventBox* _tmp21_;
	GdkEventMask _tmp22_;
	GdkEventMask _tmp23_;
	GtkEventBox* _tmp24_;
	GtkEventBox* _tmp25_;
	GdkEventMask _tmp26_;
	GdkEventMask _tmp27_;
	GtkEventBox* _tmp28_;
	GtkGrid* _tmp29_;
	GtkEventBox* _tmp30_;
	GtkEventBox* _tmp31_;
	GtkFrame* notification_frame = NULL;
	GtkFrame* _tmp32_;
	GtkFrame* _tmp33_;
	GtkStyleContext* _tmp34_;
	GtkFrame* _tmp35_;
	GtkEventBox* _tmp36_;
	GtkFrame* _tmp37_;
#line 71 "../lib/Widgets/Toast.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_toast_parent_class);
#line 71 "../lib/Widgets/Toast.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 71 "../lib/Widgets/Toast.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToast);
#line 72 "../lib/Widgets/Toast.vala"
	g_object_set ((GtkWidget*) self, "margin", 3, NULL);
#line 73 "../lib/Widgets/Toast.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 74 "../lib/Widgets/Toast.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_START);
#line 76 "../lib/Widgets/Toast.vala"
	_tmp0_ = (GtkButton*) gtk_button_new ();
#line 76 "../lib/Widgets/Toast.vala"
	g_object_ref_sink (_tmp0_);
#line 76 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (self->priv->default_action_button);
#line 76 "../lib/Widgets/Toast.vala"
	self->priv->default_action_button = _tmp0_;
#line 77 "../lib/Widgets/Toast.vala"
	_tmp1_ = self->priv->default_action_button;
#line 77 "../lib/Widgets/Toast.vala"
	gtk_widget_set_visible ((GtkWidget*) _tmp1_, FALSE);
#line 78 "../lib/Widgets/Toast.vala"
	_tmp2_ = self->priv->default_action_button;
#line 78 "../lib/Widgets/Toast.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _tmp2_, TRUE);
#line 79 "../lib/Widgets/Toast.vala"
	_tmp3_ = self->priv->default_action_button;
#line 79 "../lib/Widgets/Toast.vala"
	g_signal_connect_object (_tmp3_, "clicked", (GCallback) __granite_widgets_toast___lambda91__gtk_button_clicked, self, 0);
#line 85 "../lib/Widgets/Toast.vala"
	_tmp4_ = (GtkButton*) gtk_button_new_from_icon_name ("window-close-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 85 "../lib/Widgets/Toast.vala"
	g_object_ref_sink (_tmp4_);
#line 85 "../lib/Widgets/Toast.vala"
	close_button = _tmp4_;
#line 86 "../lib/Widgets/Toast.vala"
	_tmp5_ = close_button;
#line 86 "../lib/Widgets/Toast.vala"
	_tmp6_ = gtk_widget_get_style_context ((GtkWidget*) _tmp5_);
#line 86 "../lib/Widgets/Toast.vala"
	gtk_style_context_add_class (_tmp6_, "close-button");
#line 87 "../lib/Widgets/Toast.vala"
	_tmp7_ = close_button;
#line 87 "../lib/Widgets/Toast.vala"
	g_signal_connect_object (_tmp7_, "clicked", (GCallback) __granite_widgets_toast___lambda92__gtk_button_clicked, self, 0);
#line 93 "../lib/Widgets/Toast.vala"
	_tmp8_ = granite_widgets_toast_get_title (self);
#line 93 "../lib/Widgets/Toast.vala"
	_tmp9_ = _tmp8_;
#line 93 "../lib/Widgets/Toast.vala"
	_tmp10_ = (GtkLabel*) gtk_label_new (_tmp9_);
#line 93 "../lib/Widgets/Toast.vala"
	g_object_ref_sink (_tmp10_);
#line 93 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (self->priv->notification_label);
#line 93 "../lib/Widgets/Toast.vala"
	self->priv->notification_label = _tmp10_;
#line 95 "../lib/Widgets/Toast.vala"
	_tmp11_ = (GtkGrid*) gtk_grid_new ();
#line 95 "../lib/Widgets/Toast.vala"
	g_object_ref_sink (_tmp11_);
#line 95 "../lib/Widgets/Toast.vala"
	notification_box = _tmp11_;
#line 96 "../lib/Widgets/Toast.vala"
	_tmp12_ = notification_box;
#line 96 "../lib/Widgets/Toast.vala"
	gtk_grid_set_column_spacing (_tmp12_, 12);
#line 97 "../lib/Widgets/Toast.vala"
	_tmp13_ = notification_box;
#line 97 "../lib/Widgets/Toast.vala"
	_tmp14_ = close_button;
#line 97 "../lib/Widgets/Toast.vala"
	gtk_container_add ((GtkContainer*) _tmp13_, (GtkWidget*) _tmp14_);
#line 98 "../lib/Widgets/Toast.vala"
	_tmp15_ = notification_box;
#line 98 "../lib/Widgets/Toast.vala"
	_tmp16_ = self->priv->notification_label;
#line 98 "../lib/Widgets/Toast.vala"
	gtk_container_add ((GtkContainer*) _tmp15_, (GtkWidget*) _tmp16_);
#line 99 "../lib/Widgets/Toast.vala"
	_tmp17_ = notification_box;
#line 99 "../lib/Widgets/Toast.vala"
	_tmp18_ = self->priv->default_action_button;
#line 99 "../lib/Widgets/Toast.vala"
	gtk_container_add ((GtkContainer*) _tmp17_, (GtkWidget*) _tmp18_);
#line 101 "../lib/Widgets/Toast.vala"
	_tmp19_ = (GtkEventBox*) gtk_event_box_new ();
#line 101 "../lib/Widgets/Toast.vala"
	g_object_ref_sink (_tmp19_);
#line 101 "../lib/Widgets/Toast.vala"
	event_box = _tmp19_;
#line 102 "../lib/Widgets/Toast.vala"
	_tmp20_ = event_box;
#line 102 "../lib/Widgets/Toast.vala"
	_tmp21_ = event_box;
#line 102 "../lib/Widgets/Toast.vala"
	_tmp22_ = gtk_widget_get_events ((GtkWidget*) _tmp21_);
#line 102 "../lib/Widgets/Toast.vala"
	_tmp23_ = _tmp22_;
#line 102 "../lib/Widgets/Toast.vala"
	gtk_widget_set_events ((GtkWidget*) _tmp21_, _tmp23_ | GDK_ENTER_NOTIFY_MASK);
#line 103 "../lib/Widgets/Toast.vala"
	_tmp24_ = event_box;
#line 103 "../lib/Widgets/Toast.vala"
	_tmp25_ = event_box;
#line 103 "../lib/Widgets/Toast.vala"
	_tmp26_ = gtk_widget_get_events ((GtkWidget*) _tmp25_);
#line 103 "../lib/Widgets/Toast.vala"
	_tmp27_ = _tmp26_;
#line 103 "../lib/Widgets/Toast.vala"
	gtk_widget_set_events ((GtkWidget*) _tmp25_, _tmp27_ | GDK_LEAVE_NOTIFY_MASK);
#line 104 "../lib/Widgets/Toast.vala"
	_tmp28_ = event_box;
#line 104 "../lib/Widgets/Toast.vala"
	_tmp29_ = notification_box;
#line 104 "../lib/Widgets/Toast.vala"
	gtk_container_add ((GtkContainer*) _tmp28_, (GtkWidget*) _tmp29_);
#line 106 "../lib/Widgets/Toast.vala"
	_tmp30_ = event_box;
#line 106 "../lib/Widgets/Toast.vala"
	g_signal_connect_object ((GtkWidget*) _tmp30_, "enter-notify-event", (GCallback) __granite_widgets_toast___lambda93__gtk_widget_enter_notify_event, self, 0);
#line 110 "../lib/Widgets/Toast.vala"
	_tmp31_ = event_box;
#line 110 "../lib/Widgets/Toast.vala"
	g_signal_connect_object ((GtkWidget*) _tmp31_, "leave-notify-event", (GCallback) __granite_widgets_toast___lambda94__gtk_widget_leave_notify_event, self, 0);
#line 114 "../lib/Widgets/Toast.vala"
	_tmp32_ = (GtkFrame*) gtk_frame_new (NULL);
#line 114 "../lib/Widgets/Toast.vala"
	g_object_ref_sink (_tmp32_);
#line 114 "../lib/Widgets/Toast.vala"
	notification_frame = _tmp32_;
#line 115 "../lib/Widgets/Toast.vala"
	_tmp33_ = notification_frame;
#line 115 "../lib/Widgets/Toast.vala"
	_tmp34_ = gtk_widget_get_style_context ((GtkWidget*) _tmp33_);
#line 115 "../lib/Widgets/Toast.vala"
	gtk_style_context_add_class (_tmp34_, "app-notification");
#line 116 "../lib/Widgets/Toast.vala"
	_tmp35_ = notification_frame;
#line 116 "../lib/Widgets/Toast.vala"
	_tmp36_ = event_box;
#line 116 "../lib/Widgets/Toast.vala"
	gtk_container_add ((GtkContainer*) _tmp35_, (GtkWidget*) _tmp36_);
#line 118 "../lib/Widgets/Toast.vala"
	_tmp37_ = notification_frame;
#line 118 "../lib/Widgets/Toast.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp37_);
#line 71 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (notification_frame);
#line 71 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (event_box);
#line 71 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (notification_box);
#line 71 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (close_button);
#line 71 "../lib/Widgets/Toast.vala"
	return obj;
#line 643 "Toast.c"
}

static void
granite_widgets_toast_class_init (GraniteWidgetsToastClass * klass,
                                  gpointer klass_data)
{
#line 32 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_parent_class = g_type_class_peek_parent (klass);
#line 32 "../lib/Widgets/Toast.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsToast_private_offset);
#line 32 "../lib/Widgets/Toast.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_toast_get_property;
#line 32 "../lib/Widgets/Toast.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_toast_set_property;
#line 32 "../lib/Widgets/Toast.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_toast_constructor;
#line 32 "../lib/Widgets/Toast.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_toast_finalize;
#line 662 "Toast.c"
	/**
	         * The notification text label to be displayed inside of #this
	         */
#line 32 "../lib/Widgets/Toast.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_TOAST_TITLE_PROPERTY, granite_widgets_toast_properties[GRANITE_WIDGETS_TOAST_TITLE_PROPERTY] = g_param_spec_string ("title", "title", "title", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 668 "Toast.c"
	/**
	         * Emitted when the Toast is closed by activating the close button
	         */
#line 32 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_signals[GRANITE_WIDGETS_TOAST_CLOSED_SIGNAL] = g_signal_new ("closed", GRANITE_WIDGETS_TYPE_TOAST, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 674 "Toast.c"
	/**
	         * Emitted when the default action button is activated
	         */
#line 32 "../lib/Widgets/Toast.vala"
	granite_widgets_toast_signals[GRANITE_WIDGETS_TOAST_DEFAULT_ACTION_SIGNAL] = g_signal_new ("default-action", GRANITE_WIDGETS_TYPE_TOAST, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 680 "Toast.c"
}

static void
granite_widgets_toast_instance_init (GraniteWidgetsToast * self,
                                     gpointer klass)
{
#line 32 "../lib/Widgets/Toast.vala"
	self->priv = granite_widgets_toast_get_instance_private (self);
#line 689 "Toast.c"
}

static void
granite_widgets_toast_finalize (GObject * obj)
{
	GraniteWidgetsToast * self;
#line 32 "../lib/Widgets/Toast.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToast);
#line 44 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (self->priv->notification_label);
#line 45 "../lib/Widgets/Toast.vala"
	_g_object_unref0 (self->priv->default_action_button);
#line 46 "../lib/Widgets/Toast.vala"
	_g_free0 (self->priv->_title);
#line 32 "../lib/Widgets/Toast.vala"
	G_OBJECT_CLASS (granite_widgets_toast_parent_class)->finalize (obj);
#line 706 "Toast.c"
}

/**
     * Toasts are small in-app notifications that provide feedback about an operation
     * in a small popup. They only fill the space required to show the message and do
     * not block the UI.
     *
     * Granite.Widgets.Toast will get the style class .app-notification
     *
     * {{../doc/images/Toast.png}}
     */
static GType
granite_widgets_toast_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsToastClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_toast_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsToast), 0, (GInstanceInitFunc) granite_widgets_toast_instance_init, NULL };
	GType granite_widgets_toast_type_id;
	granite_widgets_toast_type_id = g_type_register_static (gtk_revealer_get_type (), "GraniteWidgetsToast", &g_define_type_info, 0);
	GraniteWidgetsToast_private_offset = g_type_add_instance_private (granite_widgets_toast_type_id, sizeof (GraniteWidgetsToastPrivate));
	return granite_widgets_toast_type_id;
}

GType
granite_widgets_toast_get_type (void)
{
	static volatile gsize granite_widgets_toast_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_toast_type_id__volatile)) {
		GType granite_widgets_toast_type_id;
		granite_widgets_toast_type_id = granite_widgets_toast_get_type_once ();
		g_once_init_leave (&granite_widgets_toast_type_id__volatile, granite_widgets_toast_type_id);
	}
	return granite_widgets_toast_type_id__volatile;
}

static void
_vala_granite_widgets_toast_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec)
{
	GraniteWidgetsToast * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToast);
#line 32 "../lib/Widgets/Toast.vala"
	switch (property_id) {
#line 32 "../lib/Widgets/Toast.vala"
		case GRANITE_WIDGETS_TOAST_TITLE_PROPERTY:
#line 32 "../lib/Widgets/Toast.vala"
		g_value_set_string (value, granite_widgets_toast_get_title (self));
#line 32 "../lib/Widgets/Toast.vala"
		break;
#line 756 "Toast.c"
		default:
#line 32 "../lib/Widgets/Toast.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 32 "../lib/Widgets/Toast.vala"
		break;
#line 762 "Toast.c"
	}
}

static void
_vala_granite_widgets_toast_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec)
{
	GraniteWidgetsToast * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_TOAST, GraniteWidgetsToast);
#line 32 "../lib/Widgets/Toast.vala"
	switch (property_id) {
#line 32 "../lib/Widgets/Toast.vala"
		case GRANITE_WIDGETS_TOAST_TITLE_PROPERTY:
#line 32 "../lib/Widgets/Toast.vala"
		granite_widgets_toast_set_title (self, g_value_get_string (value));
#line 32 "../lib/Widgets/Toast.vala"
		break;
#line 782 "Toast.c"
		default:
#line 32 "../lib/Widgets/Toast.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 32 "../lib/Widgets/Toast.vala"
		break;
#line 788 "Toast.c"
	}
}

