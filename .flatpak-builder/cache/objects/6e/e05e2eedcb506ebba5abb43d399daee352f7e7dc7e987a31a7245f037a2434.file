/* Paths.c generated by valac 0.48.14, the Vala compiler
 * generated from Paths.vala, do not modify */

/*
 *  Copyright (C) 2019 elementary, Inc. (https://elementary.io)
 *                2011-2013 Robert Dyer,
 *                          Rico Tzschichholz <ricotz@ubuntu.com>
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <glib-object.h>
#include <gio/gio.h>
#include <glib.h>
#include <stdlib.h>
#include <string.h>

#define GRANITE_SERVICES_TYPE_PATHS (granite_services_paths_get_type ())
#define GRANITE_SERVICES_PATHS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_SERVICES_TYPE_PATHS, GraniteServicesPaths))
#define GRANITE_SERVICES_PATHS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_SERVICES_TYPE_PATHS, GraniteServicesPathsClass))
#define GRANITE_SERVICES_IS_PATHS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_SERVICES_TYPE_PATHS))
#define GRANITE_SERVICES_IS_PATHS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_SERVICES_TYPE_PATHS))
#define GRANITE_SERVICES_PATHS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_SERVICES_TYPE_PATHS, GraniteServicesPathsClass))

typedef struct _GraniteServicesPaths GraniteServicesPaths;
typedef struct _GraniteServicesPathsClass GraniteServicesPathsClass;
typedef struct _GraniteServicesPathsPrivate GraniteServicesPathsPrivate;
enum  {
	GRANITE_SERVICES_PATHS_0_PROPERTY,
	GRANITE_SERVICES_PATHS_NUM_PROPERTIES
};
static GParamSpec* granite_services_paths_properties[GRANITE_SERVICES_PATHS_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

struct _GraniteServicesPaths {
	GObject parent_instance;
	GraniteServicesPathsPrivate * priv;
};

struct _GraniteServicesPathsClass {
	GObjectClass parent_class;
};

static gpointer granite_services_paths_parent_class = NULL;
static GFile* granite_services_paths__home_folder;
static GFile* granite_services_paths__home_folder = NULL;
static GFile* granite_services_paths__data_folder;
static GFile* granite_services_paths__data_folder = NULL;
static GFile* granite_services_paths__xdg_config_home_folder;
static GFile* granite_services_paths__xdg_config_home_folder = NULL;
static GFile* granite_services_paths__xdg_data_home_folder;
static GFile* granite_services_paths__xdg_data_home_folder = NULL;
static GFile* granite_services_paths__xdg_cache_home_folder;
static GFile* granite_services_paths__xdg_cache_home_folder = NULL;
static GList* granite_services_paths__xdg_data_dir_folders;
static GList* granite_services_paths__xdg_data_dir_folders = NULL;
static GFile* granite_services_paths__user_config_folder;
static GFile* granite_services_paths__user_config_folder = NULL;
static GFile* granite_services_paths__user_data_folder;
static GFile* granite_services_paths__user_data_folder = NULL;
static GFile* granite_services_paths__user_cache_folder;
static GFile* granite_services_paths__user_cache_folder = NULL;

GType granite_services_paths_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteServicesPaths, g_object_unref)
GFile* granite_services_paths_get_home_folder (void);
void granite_services_paths_set_home_folder (GFile* value);
GFile* granite_services_paths_get_data_folder (void);
void granite_services_paths_set_data_folder (GFile* value);
GFile* granite_services_paths_get_xdg_config_home_folder (void);
void granite_services_paths_set_xdg_config_home_folder (GFile* value);
GFile* granite_services_paths_get_xdg_data_home_folder (void);
void granite_services_paths_set_xdg_data_home_folder (GFile* value);
GFile* granite_services_paths_get_xdg_cache_home_folder (void);
void granite_services_paths_set_xdg_cache_home_folder (GFile* value);
GList* granite_services_paths_get_xdg_data_dir_folders (void);
void granite_services_paths_set_xdg_data_dir_folders (GList* value);
static void _g_object_unref0_ (gpointer var);
static inline void _g_list_free__g_object_unref0_ (GList* self);
GFile* granite_services_paths_get_user_config_folder (void);
void granite_services_paths_set_user_config_folder (GFile* value);
GFile* granite_services_paths_get_user_data_folder (void);
void granite_services_paths_set_user_data_folder (GFile* value);
GFile* granite_services_paths_get_user_cache_folder (void);
void granite_services_paths_set_user_cache_folder (GFile* value);
void granite_services_paths_initialize (const gchar* app_name,
                                        const gchar* data_folder_path);
gboolean granite_services_paths_ensure_directory_exists (GFile* dir);
GraniteServicesPaths* granite_services_paths_new (void);
GraniteServicesPaths* granite_services_paths_construct (GType object_type);
static void granite_services_paths_finalize (GObject * obj);
static GType granite_services_paths_get_type_once (void);
static void _vala_granite_services_paths_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec);
static void _vala_granite_services_paths_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);

GFile*
granite_services_paths_get_home_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 34 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__home_folder;
#line 34 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 34 "../lib/Services/Paths.vala"
	return result;
#line 135 "Paths.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 34 "../lib/Services/Paths.vala"
	return self ? g_object_ref (self) : NULL;
#line 143 "Paths.c"
}

void
granite_services_paths_set_home_folder (GFile* value)
{
	GFile* _tmp0_;
#line 34 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 34 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__home_folder);
#line 34 "../lib/Services/Paths.vala"
	granite_services_paths__home_folder = _tmp0_;
#line 156 "Paths.c"
}

GFile*
granite_services_paths_get_data_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 39 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__data_folder;
#line 39 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 39 "../lib/Services/Paths.vala"
	return result;
#line 170 "Paths.c"
}

void
granite_services_paths_set_data_folder (GFile* value)
{
	GFile* _tmp0_;
#line 39 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 39 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__data_folder);
#line 39 "../lib/Services/Paths.vala"
	granite_services_paths__data_folder = _tmp0_;
#line 183 "Paths.c"
}

GFile*
granite_services_paths_get_xdg_config_home_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 45 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__xdg_config_home_folder;
#line 45 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 45 "../lib/Services/Paths.vala"
	return result;
#line 197 "Paths.c"
}

void
granite_services_paths_set_xdg_config_home_folder (GFile* value)
{
	GFile* _tmp0_;
#line 45 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 45 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__xdg_config_home_folder);
#line 45 "../lib/Services/Paths.vala"
	granite_services_paths__xdg_config_home_folder = _tmp0_;
#line 210 "Paths.c"
}

GFile*
granite_services_paths_get_xdg_data_home_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 50 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__xdg_data_home_folder;
#line 50 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 50 "../lib/Services/Paths.vala"
	return result;
#line 224 "Paths.c"
}

void
granite_services_paths_set_xdg_data_home_folder (GFile* value)
{
	GFile* _tmp0_;
#line 50 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 50 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__xdg_data_home_folder);
#line 50 "../lib/Services/Paths.vala"
	granite_services_paths__xdg_data_home_folder = _tmp0_;
#line 237 "Paths.c"
}

GFile*
granite_services_paths_get_xdg_cache_home_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 55 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__xdg_cache_home_folder;
#line 55 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 55 "../lib/Services/Paths.vala"
	return result;
#line 251 "Paths.c"
}

void
granite_services_paths_set_xdg_cache_home_folder (GFile* value)
{
	GFile* _tmp0_;
#line 55 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 55 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__xdg_cache_home_folder);
#line 55 "../lib/Services/Paths.vala"
	granite_services_paths__xdg_cache_home_folder = _tmp0_;
#line 264 "Paths.c"
}

GList*
granite_services_paths_get_xdg_data_dir_folders (void)
{
	GList* result;
	GList* _tmp0_;
#line 60 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__xdg_data_dir_folders;
#line 60 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 60 "../lib/Services/Paths.vala"
	return result;
#line 278 "Paths.c"
}

static void
_g_object_unref0_ (gpointer var)
{
#line 60 "../lib/Services/Paths.vala"
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
#line 286 "Paths.c"
}

static inline void
_g_list_free__g_object_unref0_ (GList* self)
{
#line 60 "../lib/Services/Paths.vala"
	g_list_free_full (self, (GDestroyNotify) _g_object_unref0_);
#line 294 "Paths.c"
}

void
granite_services_paths_set_xdg_data_dir_folders (GList* value)
{
	GList* _tmp0_;
#line 60 "../lib/Services/Paths.vala"
	_tmp0_ = value;
#line 60 "../lib/Services/Paths.vala"
	value = NULL;
#line 60 "../lib/Services/Paths.vala"
	(granite_services_paths__xdg_data_dir_folders == NULL) ? NULL : (granite_services_paths__xdg_data_dir_folders = (_g_list_free__g_object_unref0_ (granite_services_paths__xdg_data_dir_folders), NULL));
#line 60 "../lib/Services/Paths.vala"
	granite_services_paths__xdg_data_dir_folders = _tmp0_;
#line 60 "../lib/Services/Paths.vala"
	(value == NULL) ? NULL : (value = (_g_list_free__g_object_unref0_ (value), NULL));
#line 311 "Paths.c"
}

GFile*
granite_services_paths_get_user_config_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 66 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__user_config_folder;
#line 66 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 66 "../lib/Services/Paths.vala"
	return result;
#line 325 "Paths.c"
}

void
granite_services_paths_set_user_config_folder (GFile* value)
{
	GFile* _tmp0_;
#line 66 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 66 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__user_config_folder);
#line 66 "../lib/Services/Paths.vala"
	granite_services_paths__user_config_folder = _tmp0_;
#line 338 "Paths.c"
}

GFile*
granite_services_paths_get_user_data_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 71 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__user_data_folder;
#line 71 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 71 "../lib/Services/Paths.vala"
	return result;
#line 352 "Paths.c"
}

void
granite_services_paths_set_user_data_folder (GFile* value)
{
	GFile* _tmp0_;
#line 71 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 71 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__user_data_folder);
#line 71 "../lib/Services/Paths.vala"
	granite_services_paths__user_data_folder = _tmp0_;
#line 365 "Paths.c"
}

GFile*
granite_services_paths_get_user_cache_folder (void)
{
	GFile* result;
	GFile* _tmp0_;
#line 76 "../lib/Services/Paths.vala"
	_tmp0_ = granite_services_paths__user_cache_folder;
#line 76 "../lib/Services/Paths.vala"
	result = _tmp0_;
#line 76 "../lib/Services/Paths.vala"
	return result;
#line 379 "Paths.c"
}

void
granite_services_paths_set_user_cache_folder (GFile* value)
{
	GFile* _tmp0_;
#line 76 "../lib/Services/Paths.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 76 "../lib/Services/Paths.vala"
	_g_object_unref0 (granite_services_paths__user_cache_folder);
#line 76 "../lib/Services/Paths.vala"
	granite_services_paths__user_cache_folder = _tmp0_;
#line 392 "Paths.c"
}

/**
         * Initialize all the paths using the supplied app name and path to the app's data folder.
         *
         * @param app_name the name of the application
         * @param data_folder_path the path to the application's data folder
         */
void
granite_services_paths_initialize (const gchar* app_name,
                                   const gchar* data_folder_path)
{
	const gchar* _tmp0_;
	GFile* _tmp1_;
	GFile* _tmp2_;
	GFile* _tmp3_;
	GFile* _tmp4_;
	gchar* xdg_config_home = NULL;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* xdg_data_home = NULL;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* xdg_cache_home = NULL;
	const gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* xdg_data_dirs = NULL;
	const gchar* _tmp11_;
	gchar* _tmp12_;
	gboolean _tmp13_ = FALSE;
	const gchar* _tmp14_;
	gboolean _tmp25_ = FALSE;
	const gchar* _tmp26_;
	gboolean _tmp39_ = FALSE;
	const gchar* _tmp40_;
	GList* dirs = NULL;
	gboolean _tmp51_ = FALSE;
	const gchar* _tmp52_;
	GList* _tmp64_;
	GFile* _tmp65_;
	GFile* _tmp66_;
	GFile* _tmp67_;
	GFile* _tmp68_;
	GFile* _tmp69_;
	GFile* _tmp70_;
	GFile* _tmp71_;
	GFile* _tmp72_;
	GFile* _tmp73_;
	GFile* _tmp74_;
	GFile* _tmp75_;
	GFile* _tmp76_;
	GFile* _tmp77_;
	GFile* _tmp78_;
	GFile* _tmp79_;
	GFile* _tmp80_;
	GFile* _tmp81_;
	GFile* _tmp82_;
#line 84 "../lib/Services/Paths.vala"
	g_return_if_fail (app_name != NULL);
#line 84 "../lib/Services/Paths.vala"
	g_return_if_fail (data_folder_path != NULL);
#line 87 "../lib/Services/Paths.vala"
	_tmp0_ = g_get_home_dir ();
#line 87 "../lib/Services/Paths.vala"
	_tmp1_ = g_file_new_for_path (_tmp0_);
#line 87 "../lib/Services/Paths.vala"
	_tmp2_ = _tmp1_;
#line 87 "../lib/Services/Paths.vala"
	granite_services_paths_set_home_folder (_tmp2_);
#line 87 "../lib/Services/Paths.vala"
	_g_object_unref0 (_tmp2_);
#line 88 "../lib/Services/Paths.vala"
	_tmp3_ = g_file_new_for_path (data_folder_path);
#line 88 "../lib/Services/Paths.vala"
	_tmp4_ = _tmp3_;
#line 88 "../lib/Services/Paths.vala"
	granite_services_paths_set_data_folder (_tmp4_);
#line 88 "../lib/Services/Paths.vala"
	_g_object_unref0 (_tmp4_);
#line 91 "../lib/Services/Paths.vala"
	_tmp5_ = g_getenv ("XDG_CONFIG_HOME");
#line 91 "../lib/Services/Paths.vala"
	_tmp6_ = g_strdup (_tmp5_);
#line 91 "../lib/Services/Paths.vala"
	xdg_config_home = _tmp6_;
#line 92 "../lib/Services/Paths.vala"
	_tmp7_ = g_getenv ("XDG_DATA_HOME");
#line 92 "../lib/Services/Paths.vala"
	_tmp8_ = g_strdup (_tmp7_);
#line 92 "../lib/Services/Paths.vala"
	xdg_data_home = _tmp8_;
#line 93 "../lib/Services/Paths.vala"
	_tmp9_ = g_getenv ("XDG_CACHE_HOME");
#line 93 "../lib/Services/Paths.vala"
	_tmp10_ = g_strdup (_tmp9_);
#line 93 "../lib/Services/Paths.vala"
	xdg_cache_home = _tmp10_;
#line 94 "../lib/Services/Paths.vala"
	_tmp11_ = g_getenv ("XDG_DATA_DIRS");
#line 94 "../lib/Services/Paths.vala"
	_tmp12_ = g_strdup (_tmp11_);
#line 94 "../lib/Services/Paths.vala"
	xdg_data_dirs = _tmp12_;
#line 97 "../lib/Services/Paths.vala"
	_tmp14_ = xdg_config_home;
#line 97 "../lib/Services/Paths.vala"
	if (_tmp14_ == NULL) {
#line 97 "../lib/Services/Paths.vala"
		_tmp13_ = TRUE;
#line 502 "Paths.c"
	} else {
		const gchar* _tmp15_;
		gint _tmp16_;
		gint _tmp17_;
#line 97 "../lib/Services/Paths.vala"
		_tmp15_ = xdg_config_home;
#line 97 "../lib/Services/Paths.vala"
		_tmp16_ = strlen (_tmp15_);
#line 97 "../lib/Services/Paths.vala"
		_tmp17_ = _tmp16_;
#line 97 "../lib/Services/Paths.vala"
		_tmp13_ = _tmp17_ == 0;
#line 515 "Paths.c"
	}
#line 97 "../lib/Services/Paths.vala"
	if (_tmp13_) {
#line 519 "Paths.c"
		GFile* _tmp18_;
		GFile* _tmp19_;
		GFile* _tmp20_;
		GFile* _tmp21_;
#line 98 "../lib/Services/Paths.vala"
		_tmp18_ = granite_services_paths_get_home_folder ();
#line 98 "../lib/Services/Paths.vala"
		_tmp19_ = _tmp18_;
#line 98 "../lib/Services/Paths.vala"
		_tmp20_ = g_file_get_child (_tmp19_, ".config");
#line 98 "../lib/Services/Paths.vala"
		_tmp21_ = _tmp20_;
#line 98 "../lib/Services/Paths.vala"
		granite_services_paths_set_xdg_config_home_folder (_tmp21_);
#line 98 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp21_);
#line 536 "Paths.c"
	} else {
		const gchar* _tmp22_;
		GFile* _tmp23_;
		GFile* _tmp24_;
#line 100 "../lib/Services/Paths.vala"
		_tmp22_ = xdg_config_home;
#line 100 "../lib/Services/Paths.vala"
		_tmp23_ = g_file_new_for_path (_tmp22_);
#line 100 "../lib/Services/Paths.vala"
		_tmp24_ = _tmp23_;
#line 100 "../lib/Services/Paths.vala"
		granite_services_paths_set_xdg_config_home_folder (_tmp24_);
#line 100 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp24_);
#line 551 "Paths.c"
	}
#line 102 "../lib/Services/Paths.vala"
	_tmp26_ = xdg_data_home;
#line 102 "../lib/Services/Paths.vala"
	if (_tmp26_ == NULL) {
#line 102 "../lib/Services/Paths.vala"
		_tmp25_ = TRUE;
#line 559 "Paths.c"
	} else {
		const gchar* _tmp27_;
		gint _tmp28_;
		gint _tmp29_;
#line 102 "../lib/Services/Paths.vala"
		_tmp27_ = xdg_data_home;
#line 102 "../lib/Services/Paths.vala"
		_tmp28_ = strlen (_tmp27_);
#line 102 "../lib/Services/Paths.vala"
		_tmp29_ = _tmp28_;
#line 102 "../lib/Services/Paths.vala"
		_tmp25_ = _tmp29_ == 0;
#line 572 "Paths.c"
	}
#line 102 "../lib/Services/Paths.vala"
	if (_tmp25_) {
#line 576 "Paths.c"
		GFile* _tmp30_;
		GFile* _tmp31_;
		GFile* _tmp32_;
		GFile* _tmp33_;
		GFile* _tmp34_;
		GFile* _tmp35_;
#line 103 "../lib/Services/Paths.vala"
		_tmp30_ = granite_services_paths_get_home_folder ();
#line 103 "../lib/Services/Paths.vala"
		_tmp31_ = _tmp30_;
#line 103 "../lib/Services/Paths.vala"
		_tmp32_ = g_file_get_child (_tmp31_, ".local");
#line 103 "../lib/Services/Paths.vala"
		_tmp33_ = _tmp32_;
#line 103 "../lib/Services/Paths.vala"
		_tmp34_ = g_file_get_child (_tmp33_, "share");
#line 103 "../lib/Services/Paths.vala"
		_tmp35_ = _tmp34_;
#line 103 "../lib/Services/Paths.vala"
		granite_services_paths_set_xdg_data_home_folder (_tmp35_);
#line 103 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp35_);
#line 103 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp33_);
#line 601 "Paths.c"
	} else {
		const gchar* _tmp36_;
		GFile* _tmp37_;
		GFile* _tmp38_;
#line 105 "../lib/Services/Paths.vala"
		_tmp36_ = xdg_data_home;
#line 105 "../lib/Services/Paths.vala"
		_tmp37_ = g_file_new_for_path (_tmp36_);
#line 105 "../lib/Services/Paths.vala"
		_tmp38_ = _tmp37_;
#line 105 "../lib/Services/Paths.vala"
		granite_services_paths_set_xdg_data_home_folder (_tmp38_);
#line 105 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp38_);
#line 616 "Paths.c"
	}
#line 107 "../lib/Services/Paths.vala"
	_tmp40_ = xdg_cache_home;
#line 107 "../lib/Services/Paths.vala"
	if (_tmp40_ == NULL) {
#line 107 "../lib/Services/Paths.vala"
		_tmp39_ = TRUE;
#line 624 "Paths.c"
	} else {
		const gchar* _tmp41_;
		gint _tmp42_;
		gint _tmp43_;
#line 107 "../lib/Services/Paths.vala"
		_tmp41_ = xdg_cache_home;
#line 107 "../lib/Services/Paths.vala"
		_tmp42_ = strlen (_tmp41_);
#line 107 "../lib/Services/Paths.vala"
		_tmp43_ = _tmp42_;
#line 107 "../lib/Services/Paths.vala"
		_tmp39_ = _tmp43_ == 0;
#line 637 "Paths.c"
	}
#line 107 "../lib/Services/Paths.vala"
	if (_tmp39_) {
#line 641 "Paths.c"
		GFile* _tmp44_;
		GFile* _tmp45_;
		GFile* _tmp46_;
		GFile* _tmp47_;
#line 108 "../lib/Services/Paths.vala"
		_tmp44_ = granite_services_paths_get_home_folder ();
#line 108 "../lib/Services/Paths.vala"
		_tmp45_ = _tmp44_;
#line 108 "../lib/Services/Paths.vala"
		_tmp46_ = g_file_get_child (_tmp45_, ".cache");
#line 108 "../lib/Services/Paths.vala"
		_tmp47_ = _tmp46_;
#line 108 "../lib/Services/Paths.vala"
		granite_services_paths_set_xdg_cache_home_folder (_tmp47_);
#line 108 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp47_);
#line 658 "Paths.c"
	} else {
		const gchar* _tmp48_;
		GFile* _tmp49_;
		GFile* _tmp50_;
#line 110 "../lib/Services/Paths.vala"
		_tmp48_ = xdg_cache_home;
#line 110 "../lib/Services/Paths.vala"
		_tmp49_ = g_file_new_for_path (_tmp48_);
#line 110 "../lib/Services/Paths.vala"
		_tmp50_ = _tmp49_;
#line 110 "../lib/Services/Paths.vala"
		granite_services_paths_set_xdg_cache_home_folder (_tmp50_);
#line 110 "../lib/Services/Paths.vala"
		_g_object_unref0 (_tmp50_);
#line 673 "Paths.c"
	}
#line 112 "../lib/Services/Paths.vala"
	dirs = NULL;
#line 113 "../lib/Services/Paths.vala"
	_tmp52_ = xdg_data_dirs;
#line 113 "../lib/Services/Paths.vala"
	if (_tmp52_ == NULL) {
#line 113 "../lib/Services/Paths.vala"
		_tmp51_ = TRUE;
#line 683 "Paths.c"
	} else {
		const gchar* _tmp53_;
		gint _tmp54_;
		gint _tmp55_;
#line 113 "../lib/Services/Paths.vala"
		_tmp53_ = xdg_data_dirs;
#line 113 "../lib/Services/Paths.vala"
		_tmp54_ = strlen (_tmp53_);
#line 113 "../lib/Services/Paths.vala"
		_tmp55_ = _tmp54_;
#line 113 "../lib/Services/Paths.vala"
		_tmp51_ = _tmp55_ == 0;
#line 696 "Paths.c"
	}
#line 113 "../lib/Services/Paths.vala"
	if (_tmp51_) {
#line 700 "Paths.c"
		GFile* _tmp56_;
		GFile* _tmp57_;
#line 114 "../lib/Services/Paths.vala"
		_tmp56_ = g_file_new_for_path ("/usr/local/share");
#line 114 "../lib/Services/Paths.vala"
		dirs = g_list_append (dirs, _tmp56_);
#line 115 "../lib/Services/Paths.vala"
		_tmp57_ = g_file_new_for_path ("/usr/share");
#line 115 "../lib/Services/Paths.vala"
		dirs = g_list_append (dirs, _tmp57_);
#line 711 "Paths.c"
	} else {
		const gchar* _tmp58_;
		gchar** _tmp59_;
		gchar** _tmp60_;
#line 117 "../lib/Services/Paths.vala"
		_tmp58_ = xdg_data_dirs;
#line 117 "../lib/Services/Paths.vala"
		_tmp60_ = _tmp59_ = g_strsplit (_tmp58_, ":", 0);
#line 720 "Paths.c"
		{
			gchar** path_collection = NULL;
			gint path_collection_length1 = 0;
			gint _path_collection_size_ = 0;
			gint path_it = 0;
#line 117 "../lib/Services/Paths.vala"
			path_collection = _tmp60_;
#line 117 "../lib/Services/Paths.vala"
			path_collection_length1 = _vala_array_length (_tmp59_);
#line 117 "../lib/Services/Paths.vala"
			for (path_it = 0; path_it < path_collection_length1; path_it = path_it + 1) {
#line 732 "Paths.c"
				gchar* _tmp61_;
				gchar* path = NULL;
#line 117 "../lib/Services/Paths.vala"
				_tmp61_ = g_strdup (path_collection[path_it]);
#line 117 "../lib/Services/Paths.vala"
				path = _tmp61_;
#line 739 "Paths.c"
				{
					const gchar* _tmp62_;
					GFile* _tmp63_;
#line 118 "../lib/Services/Paths.vala"
					_tmp62_ = path;
#line 118 "../lib/Services/Paths.vala"
					_tmp63_ = g_file_new_for_path (_tmp62_);
#line 118 "../lib/Services/Paths.vala"
					dirs = g_list_append (dirs, _tmp63_);
#line 117 "../lib/Services/Paths.vala"
					_g_free0 (path);
#line 751 "Paths.c"
				}
			}
#line 117 "../lib/Services/Paths.vala"
			path_collection = (_vala_array_free (path_collection, path_collection_length1, (GDestroyNotify) g_free), NULL);
#line 756 "Paths.c"
		}
	}
#line 120 "../lib/Services/Paths.vala"
	_tmp64_ = dirs;
#line 120 "../lib/Services/Paths.vala"
	dirs = NULL;
#line 120 "../lib/Services/Paths.vala"
	granite_services_paths_set_xdg_data_dir_folders (_tmp64_);
#line 123 "../lib/Services/Paths.vala"
	_tmp65_ = granite_services_paths_get_xdg_config_home_folder ();
#line 123 "../lib/Services/Paths.vala"
	_tmp66_ = _tmp65_;
#line 123 "../lib/Services/Paths.vala"
	_tmp67_ = g_file_get_child (_tmp66_, app_name);
#line 123 "../lib/Services/Paths.vala"
	_tmp68_ = _tmp67_;
#line 123 "../lib/Services/Paths.vala"
	granite_services_paths_set_user_config_folder (_tmp68_);
#line 123 "../lib/Services/Paths.vala"
	_g_object_unref0 (_tmp68_);
#line 124 "../lib/Services/Paths.vala"
	_tmp69_ = granite_services_paths_get_xdg_data_home_folder ();
#line 124 "../lib/Services/Paths.vala"
	_tmp70_ = _tmp69_;
#line 124 "../lib/Services/Paths.vala"
	_tmp71_ = g_file_get_child (_tmp70_, app_name);
#line 124 "../lib/Services/Paths.vala"
	_tmp72_ = _tmp71_;
#line 124 "../lib/Services/Paths.vala"
	granite_services_paths_set_user_data_folder (_tmp72_);
#line 124 "../lib/Services/Paths.vala"
	_g_object_unref0 (_tmp72_);
#line 125 "../lib/Services/Paths.vala"
	_tmp73_ = granite_services_paths_get_xdg_cache_home_folder ();
#line 125 "../lib/Services/Paths.vala"
	_tmp74_ = _tmp73_;
#line 125 "../lib/Services/Paths.vala"
	_tmp75_ = g_file_get_child (_tmp74_, app_name);
#line 125 "../lib/Services/Paths.vala"
	_tmp76_ = _tmp75_;
#line 125 "../lib/Services/Paths.vala"
	granite_services_paths_set_user_cache_folder (_tmp76_);
#line 125 "../lib/Services/Paths.vala"
	_g_object_unref0 (_tmp76_);
#line 128 "../lib/Services/Paths.vala"
	_tmp77_ = granite_services_paths_get_user_config_folder ();
#line 128 "../lib/Services/Paths.vala"
	_tmp78_ = _tmp77_;
#line 128 "../lib/Services/Paths.vala"
	granite_services_paths_ensure_directory_exists (_tmp78_);
#line 129 "../lib/Services/Paths.vala"
	_tmp79_ = granite_services_paths_get_user_data_folder ();
#line 129 "../lib/Services/Paths.vala"
	_tmp80_ = _tmp79_;
#line 129 "../lib/Services/Paths.vala"
	granite_services_paths_ensure_directory_exists (_tmp80_);
#line 130 "../lib/Services/Paths.vala"
	_tmp81_ = granite_services_paths_get_user_cache_folder ();
#line 130 "../lib/Services/Paths.vala"
	_tmp82_ = _tmp81_;
#line 130 "../lib/Services/Paths.vala"
	granite_services_paths_ensure_directory_exists (_tmp82_);
#line 84 "../lib/Services/Paths.vala"
	(dirs == NULL) ? NULL : (dirs = (_g_list_free__g_object_unref0_ (dirs), NULL));
#line 84 "../lib/Services/Paths.vala"
	_g_free0 (xdg_data_dirs);
#line 84 "../lib/Services/Paths.vala"
	_g_free0 (xdg_cache_home);
#line 84 "../lib/Services/Paths.vala"
	_g_free0 (xdg_data_home);
#line 84 "../lib/Services/Paths.vala"
	_g_free0 (xdg_config_home);
#line 829 "Paths.c"
}

/**
         * Ensure the directory exists, by creating it if it does not.
         *
         * @param dir the directory in question
         *
         * @return `true` is the directory exists, `false` if it does not
         */
gboolean
granite_services_paths_ensure_directory_exists (GFile* dir)
{
	GError* _inner_error0_ = NULL;
	gboolean result = FALSE;
#line 140 "../lib/Services/Paths.vala"
	g_return_val_if_fail (dir != NULL, FALSE);
#line 142 "../lib/Services/Paths.vala"
	if (!g_file_query_exists (dir, NULL)) {
#line 848 "Paths.c"
		gboolean _tmp2_ = FALSE;
		{
#line 144 "../lib/Services/Paths.vala"
			g_file_make_directory_with_parents (dir, NULL, &_inner_error0_);
#line 144 "../lib/Services/Paths.vala"
			if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 855 "Paths.c"
				goto __catch0_g_error;
			}
#line 145 "../lib/Services/Paths.vala"
			result = TRUE;
#line 145 "../lib/Services/Paths.vala"
			return result;
#line 862 "Paths.c"
		}
		goto __finally0;
		__catch0_g_error:
		{
			gchar* _tmp0_;
			gchar* _tmp1_;
#line 143 "../lib/Services/Paths.vala"
			g_clear_error (&_inner_error0_);
#line 147 "../lib/Services/Paths.vala"
			_tmp0_ = g_file_get_path (dir);
#line 147 "../lib/Services/Paths.vala"
			_tmp1_ = _tmp0_;
#line 147 "../lib/Services/Paths.vala"
			g_error ("Paths.vala:147: Could not access or create the directory '%s'.", _tmp1_);
#line 147 "../lib/Services/Paths.vala"
			_g_free0 (_tmp1_);
#line 879 "Paths.c"
		}
		__finally0:
#line 143 "../lib/Services/Paths.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 143 "../lib/Services/Paths.vala"
		g_clear_error (&_inner_error0_);
#line 143 "../lib/Services/Paths.vala"
		return _tmp2_;
#line 888 "Paths.c"
	}
#line 150 "../lib/Services/Paths.vala"
	result = FALSE;
#line 150 "../lib/Services/Paths.vala"
	return result;
#line 894 "Paths.c"
}

GraniteServicesPaths*
granite_services_paths_construct (GType object_type)
{
	GraniteServicesPaths * self = NULL;
#line 29 "../lib/Services/Paths.vala"
	self = (GraniteServicesPaths*) g_object_new (object_type, NULL);
#line 29 "../lib/Services/Paths.vala"
	return self;
#line 905 "Paths.c"
}

GraniteServicesPaths*
granite_services_paths_new (void)
{
#line 29 "../lib/Services/Paths.vala"
	return granite_services_paths_construct (GRANITE_SERVICES_TYPE_PATHS);
#line 913 "Paths.c"
}

static void
granite_services_paths_class_init (GraniteServicesPathsClass * klass,
                                   gpointer klass_data)
{
#line 29 "../lib/Services/Paths.vala"
	granite_services_paths_parent_class = g_type_class_peek_parent (klass);
#line 29 "../lib/Services/Paths.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_services_paths_get_property;
#line 29 "../lib/Services/Paths.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_services_paths_set_property;
#line 29 "../lib/Services/Paths.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_services_paths_finalize;
#line 928 "Paths.c"
}

static void
granite_services_paths_instance_init (GraniteServicesPaths * self,
                                      gpointer klass)
{
}

static void
granite_services_paths_finalize (GObject * obj)
{
	GraniteServicesPaths * self;
#line 29 "../lib/Services/Paths.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_SERVICES_TYPE_PATHS, GraniteServicesPaths);
#line 29 "../lib/Services/Paths.vala"
	G_OBJECT_CLASS (granite_services_paths_parent_class)->finalize (obj);
#line 945 "Paths.c"
}

/**
     * A class for interacting with frequently-used directories, following the
     * XDG Base Directory specification: [[http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html]]
     */
static GType
granite_services_paths_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteServicesPathsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_services_paths_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteServicesPaths), 0, (GInstanceInitFunc) granite_services_paths_instance_init, NULL };
	GType granite_services_paths_type_id;
	granite_services_paths_type_id = g_type_register_static (G_TYPE_OBJECT, "GraniteServicesPaths", &g_define_type_info, 0);
	return granite_services_paths_type_id;
}

GType
granite_services_paths_get_type (void)
{
	static volatile gsize granite_services_paths_type_id__volatile = 0;
	if (g_once_init_enter (&granite_services_paths_type_id__volatile)) {
		GType granite_services_paths_type_id;
		granite_services_paths_type_id = granite_services_paths_get_type_once ();
		g_once_init_leave (&granite_services_paths_type_id__volatile, granite_services_paths_type_id);
	}
	return granite_services_paths_type_id__volatile;
}

static void
_vala_granite_services_paths_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec)
{
	GraniteServicesPaths * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_SERVICES_TYPE_PATHS, GraniteServicesPaths);
#line 29 "../lib/Services/Paths.vala"
	switch (property_id) {
#line 983 "Paths.c"
		default:
#line 29 "../lib/Services/Paths.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 29 "../lib/Services/Paths.vala"
		break;
#line 989 "Paths.c"
	}
}

static void
_vala_granite_services_paths_set_property (GObject * object,
                                           guint property_id,
                                           const GValue * value,
                                           GParamSpec * pspec)
{
	GraniteServicesPaths * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_SERVICES_TYPE_PATHS, GraniteServicesPaths);
#line 29 "../lib/Services/Paths.vala"
	switch (property_id) {
#line 1003 "Paths.c"
		default:
#line 29 "../lib/Services/Paths.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 29 "../lib/Services/Paths.vala"
		break;
#line 1009 "Paths.c"
	}
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

static gint
_vala_array_length (gpointer array)
{
	gint length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}

