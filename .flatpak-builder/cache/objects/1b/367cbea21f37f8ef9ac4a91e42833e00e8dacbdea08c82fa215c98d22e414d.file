/* ConvVolumeView.c generated by valac 0.48.14, the Vala compiler
 * generated from ConvVolumeView.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <granite.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <glib/gi18n-lib.h>
#include <gdk/gdk.h>

#define PEBBLES_TYPE_CONV_VOLUME_VIEW (pebbles_conv_volume_view_get_type ())
#define PEBBLES_CONV_VOLUME_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_CONV_VOLUME_VIEW, PebblesConvVolumeView))
#define PEBBLES_CONV_VOLUME_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_CONV_VOLUME_VIEW, PebblesConvVolumeViewClass))
#define PEBBLES_IS_CONV_VOLUME_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_CONV_VOLUME_VIEW))
#define PEBBLES_IS_CONV_VOLUME_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_CONV_VOLUME_VIEW))
#define PEBBLES_CONV_VOLUME_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_CONV_VOLUME_VIEW, PebblesConvVolumeViewClass))

typedef struct _PebblesConvVolumeView PebblesConvVolumeView;
typedef struct _PebblesConvVolumeViewClass PebblesConvVolumeViewClass;
typedef struct _PebblesConvVolumeViewPrivate PebblesConvVolumeViewPrivate;

#define PEBBLES_TYPE_COMMON_KEY_PAD_CONVERTER (pebbles_common_key_pad_converter_get_type ())
#define PEBBLES_COMMON_KEY_PAD_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_COMMON_KEY_PAD_CONVERTER, PebblesCommonKeyPadConverter))
#define PEBBLES_COMMON_KEY_PAD_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_COMMON_KEY_PAD_CONVERTER, PebblesCommonKeyPadConverterClass))
#define PEBBLES_IS_COMMON_KEY_PAD_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_COMMON_KEY_PAD_CONVERTER))
#define PEBBLES_IS_COMMON_KEY_PAD_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_COMMON_KEY_PAD_CONVERTER))
#define PEBBLES_COMMON_KEY_PAD_CONVERTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_COMMON_KEY_PAD_CONVERTER, PebblesCommonKeyPadConverterClass))

typedef struct _PebblesCommonKeyPadConverter PebblesCommonKeyPadConverter;
typedef struct _PebblesCommonKeyPadConverterClass PebblesCommonKeyPadConverterClass;

#define PEBBLES_TYPE_CONVERTER (pebbles_converter_get_type ())
#define PEBBLES_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_CONVERTER, PebblesConverter))
#define PEBBLES_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_CONVERTER, PebblesConverterClass))
#define PEBBLES_IS_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_CONVERTER))
#define PEBBLES_IS_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_CONVERTER))
#define PEBBLES_CONVERTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_CONVERTER, PebblesConverterClass))

typedef struct _PebblesConverter PebblesConverter;
typedef struct _PebblesConverterClass PebblesConverterClass;

#define PEBBLES_TYPE_SETTINGS (pebbles_settings_get_type ())
#define PEBBLES_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettings))
#define PEBBLES_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))
#define PEBBLES_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))

typedef struct _PebblesSettings PebblesSettings;
typedef struct _PebblesSettingsClass PebblesSettingsClass;
enum  {
	PEBBLES_CONV_VOLUME_VIEW_0_PROPERTY,
	PEBBLES_CONV_VOLUME_VIEW_NUM_PROPERTIES
};
static GParamSpec* pebbles_conv_volume_view_properties[PEBBLES_CONV_VOLUME_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _pebbles_converter_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_converter_unref (var), NULL)))
typedef enum  {
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_0 = 65456,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_1 = 65457,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_2 = 65458,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_3 = 65459,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_4 = 65460,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_5 = 65461,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_6 = 65462,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_7 = 65463,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_8 = 65464,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_9 = 65465,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_RADIX = 65454,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_0 = 48,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_1 = 49,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_2 = 50,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_3 = 51,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_4 = 52,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_5 = 53,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_6 = 54,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_7 = 55,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_8 = 56,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_9 = 57,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_RADIX = 46,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_COMMA = 44,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F1 = 65470,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F2 = 65471,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F3 = 65472,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F4 = 65473,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F5 = 65474,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F6 = 65475,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F7 = 65476,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F8 = 65477,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F9 = 65478,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F10 = 65479,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F11 = 65480,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F12 = 65481,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_BACKSPACE = 65288,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_DELETE = 65535,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_TAB = 65289,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SHIFT_TAB = 65056,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PAGE_UP = 65365,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PAGE_DOWN = 65366,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_HOME = 65360,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_END = 65367,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_A_LOWER = 97,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_B_LOWER = 98,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_LOWER = 99,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_D_LOWER = 100,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_E_LOWER = 101,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F_LOWER = 102,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_G_LOWER = 103,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_H_LOWER = 104,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_I_LOWER = 105,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_J_LOWER = 106,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_K_LOWER = 107,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_L_LOWER = 108,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_M_LOWER = 109,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_N_LOWER = 110,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_O_LOWER = 111,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_P_LOWER = 112,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Q_LOWER = 113,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_R_LOWER = 114,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_S_LOWER = 115,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_T_LOWER = 116,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_U_LOWER = 117,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_V_LOWER = 118,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_W_LOWER = 119,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_X_LOWER = 120,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Y_LOWER = 121,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Z_LOWER = 122,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_A_UPPER = 65,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_B_UPPER = 66,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_UPPER = 67,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_D_UPPER = 68,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_E_UPPER = 69,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F_UPPER = 70,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_G_UPPER = 71,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_H_UPPER = 72,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_I_UPPER = 73,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_J_UPPER = 74,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_K_UPPER = 75,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_L_UPPER = 76,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_M_UPPER = 77,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_N_UPPER = 78,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_O_UPPER = 79,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_P_UPPER = 80,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Q_UPPER = 81,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_R_UPPER = 82,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_S_UPPER = 83,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_T_UPPER = 84,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_U_UPPER = 85,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_V_UPPER = 86,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_W_UPPER = 87,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_X_UPPER = 88,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Y_UPPER = 89,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Z_UPPER = 90,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PLUS_NUMPAD = 65451,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_MINUS_NUMPAD = 65453,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SLASH_NUMPAD = 65455,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_STAR_NUMPAD = 65450,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PLUS_KEYPAD = 43,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_MINUS_KEYPAD = 45,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SLASH_KEYPAD = 47,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_STAR_KEYPAD = 42,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PARENTHESIS_L = 40,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PARENTHESIS_R = 41,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SQ_BRACKETS_L = 91,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SQ_BRACKETS_R = 93,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_FL_BRACKETS_L = 123,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_FL_BRACKETS_R = 125,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EQUAL_TO = 61,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PERCENTAGE = 37,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EXP_CAP = 94,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EXCLAMATION = 33,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_LT = 60,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_GT = 62,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_LEFT = 65361,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_RIGHT = 65363,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_UP = 65362,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_DOWN = 65364,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN = 65293,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN_NUMPAD = 65421,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_ESCAPE = 65307,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SPACE_BAR = 32,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_CTRL = 65507
} PebblesKeyboardHandlerKeyMap;

#define PEBBLES_KEYBOARD_HANDLER_TYPE_KEY_MAP (pebbles_keyboard_handler_key_map_get_type ())
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_regex_unref0(var) ((var == NULL) ? NULL : (var = (g_regex_unref (var), NULL)))

struct _PebblesConvVolumeView {
	GtkGrid parent_instance;
	PebblesConvVolumeViewPrivate * priv;
	GtkEntry* from_entry;
	GtkEntry* to_entry;
};

struct _PebblesConvVolumeViewClass {
	GtkGridClass parent_class;
};

struct _PebblesConvVolumeViewPrivate {
	PebblesCommonKeyPadConverter* keypad;
	gint from_to;
	gboolean allow_change;
	PebblesConverter* conv;
	GtkComboBoxText* from_unit;
	GtkComboBoxText* to_unit;
	GtkButton* interchange_button;
	PebblesSettings* settings;
	gboolean ctrl_held;
	gchar** units;
	gint units_length1;
	gint _units_size_;
};

static gint PebblesConvVolumeView_private_offset;
static gpointer pebbles_conv_volume_view_parent_class = NULL;

GType pebbles_conv_volume_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesConvVolumeView, g_object_unref)
GType pebbles_common_key_pad_converter_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesCommonKeyPadConverter, g_object_unref)
gpointer pebbles_converter_ref (gpointer instance);
void pebbles_converter_unref (gpointer instance);
GParamSpec* pebbles_param_spec_converter (const gchar* name,
                                          const gchar* nick,
                                          const gchar* blurb,
                                          GType object_type,
                                          GParamFlags flags);
void pebbles_value_set_converter (GValue* value,
                                  gpointer v_object);
void pebbles_value_take_converter (GValue* value,
                                   gpointer v_object);
gpointer pebbles_value_get_converter (const GValue* value);
GType pebbles_converter_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesConverter, pebbles_converter_unref)
GType pebbles_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesSettings, g_object_unref)
static void pebbles_conv_volume_view_handle_events (PebblesConvVolumeView* self);
static gboolean __lambda319_ (PebblesConvVolumeView* self);
static gboolean ___lambda319__gtk_widget_button_press_event (GtkWidget* _sender,
                                                      GdkEventButton* event,
                                                      gpointer self);
static gboolean __lambda320_ (PebblesConvVolumeView* self);
static gboolean ___lambda320__gtk_widget_button_press_event (GtkWidget* _sender,
                                                      GdkEventButton* event,
                                                      gpointer self);
static gboolean __lambda321_ (PebblesConvVolumeView* self,
                       GdkEventKey* event);
void pebbles_common_key_pad_converter_key_pressed (PebblesCommonKeyPadConverter* self,
                                                   GdkEventKey* event);
void pebbles_conv_volume_view_grab_focus_on_view_switch (PebblesConvVolumeView* self);
GType pebbles_keyboard_handler_key_map_get_type (void) G_GNUC_CONST;
void pebbles_conv_volume_view_write_answer_to_clipboard (PebblesConvVolumeView* self);
static void pebbles_conv_volume_view_interchange_entries (PebblesConvVolumeView* self);
static gboolean ___lambda321__gtk_widget_key_press_event (GtkWidget* _sender,
                                                   GdkEventKey* event,
                                                   gpointer self);
static gboolean __lambda322_ (PebblesConvVolumeView* self,
                       GdkEventKey* event);
void pebbles_common_key_pad_converter_key_released (PebblesCommonKeyPadConverter* self);
static gboolean ___lambda322__gtk_widget_key_release_event (GtkWidget* _sender,
                                                     GdkEventKey* event,
                                                     gpointer self);
static void __lambda323_ (PebblesConvVolumeView* self);
gchar* pebbles_converter_convert (PebblesConverter* self,
                                  const gchar* input_string,
                                  gint unit_a,
                                  gint unit_b);
static void pebbles_conv_volume_view_save_state (PebblesConvVolumeView* self);
static void ___lambda323__gtk_editable_changed (GtkEditable* _sender,
                                         gpointer self);
static void __lambda324_ (PebblesConvVolumeView* self);
static void ___lambda324__gtk_editable_changed (GtkEditable* _sender,
                                         gpointer self);
static void __lambda325_ (PebblesConvVolumeView* self);
static void ___lambda325__gtk_combo_box_changed (GtkComboBox* _sender,
                                          gpointer self);
static void __lambda326_ (PebblesConvVolumeView* self);
static void ___lambda326__gtk_combo_box_changed (GtkComboBox* _sender,
                                          gpointer self);
static void __lambda327_ (PebblesConvVolumeView* self);
static void ___lambda327__gtk_button_clicked (GtkButton* _sender,
                                       gpointer self);
static void __lambda328_ (PebblesConvVolumeView* self,
                   const gchar* val);
static void ___lambda328__pebbles_common_key_pad_converter_button_clicked (PebblesCommonKeyPadConverter* _sender,
                                                                    const gchar* input_text,
                                                                    gpointer self);
void pebbles_settings_set_conv_volume_from_entry (PebblesSettings* self,
                                                  const gchar* value);
void pebbles_settings_set_conv_volume_to_entry (PebblesSettings* self,
                                                const gchar* value);
gchar* pebbles_utils_get_local_separator_symbol (void);
PebblesConvVolumeView* pebbles_conv_volume_view_new (void);
PebblesConvVolumeView* pebbles_conv_volume_view_construct (GType object_type);
static GObject * pebbles_conv_volume_view_constructor (GType type,
                                                guint n_construct_properties,
                                                GObjectConstructParam * construct_properties);
PebblesSettings* pebbles_settings_get_default (void);
PebblesConverter* pebbles_converter_new (gdouble* multipliers,
                                         gint multipliers_length1,
                                         gboolean* _precision_override,
                                         gint* _precision_structure,
                                         gint _precision_structure_length1);
PebblesConverter* pebbles_converter_construct (GType object_type,
                                               gdouble* multipliers,
                                               gint multipliers_length1,
                                               gboolean* _precision_override,
                                               gint* _precision_structure,
                                               gint _precision_structure_length1);
PebblesCommonKeyPadConverter* pebbles_common_key_pad_converter_new (void);
PebblesCommonKeyPadConverter* pebbles_common_key_pad_converter_construct (GType object_type);
const gchar* pebbles_settings_get_conv_volume_from_entry (PebblesSettings* self);
const gchar* pebbles_settings_get_conv_volume_to_entry (PebblesSettings* self);
static void pebbles_conv_volume_view_finalize (GObject * obj);
static GType pebbles_conv_volume_view_get_type_once (void);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);

static const gdouble PEBBLES_CONV_VOLUME_VIEW_multipliers[21] = {(gdouble) 1000000, (gdouble) 1000000, (gdouble) 1000, (gdouble) 1, (gdouble) 202884, (gdouble) 67628, (gdouble) 33814, 4166.667, 2113.376, 1056.688, 264.172, 168936.313, 56312.104, 35195.08, 3519.508, 1759.754, 879.877, 219.969, 61023.744, 35.3147, 1.30795};

static inline gpointer
pebbles_conv_volume_view_get_instance_private (PebblesConvVolumeView* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesConvVolumeView_private_offset);
}

static gboolean
__lambda319_ (PebblesConvVolumeView* self)
{
	gboolean result = FALSE;
#line 167 "../src/Views/ConvVolumeView.vala"
	self->priv->from_to = 0;
#line 168 "../src/Views/ConvVolumeView.vala"
	result = FALSE;
#line 168 "../src/Views/ConvVolumeView.vala"
	return result;
#line 367 "ConvVolumeView.c"
}

static gboolean
___lambda319__gtk_widget_button_press_event (GtkWidget* _sender,
                                             GdkEventButton* event,
                                             gpointer self)
{
	gboolean result;
	result = __lambda319_ ((PebblesConvVolumeView*) self);
#line 166 "../src/Views/ConvVolumeView.vala"
	return result;
#line 379 "ConvVolumeView.c"
}

static gboolean
__lambda320_ (PebblesConvVolumeView* self)
{
	gboolean result = FALSE;
#line 172 "../src/Views/ConvVolumeView.vala"
	self->priv->from_to = 1;
#line 173 "../src/Views/ConvVolumeView.vala"
	result = FALSE;
#line 173 "../src/Views/ConvVolumeView.vala"
	return result;
#line 392 "ConvVolumeView.c"
}

static gboolean
___lambda320__gtk_widget_button_press_event (GtkWidget* _sender,
                                             GdkEventButton* event,
                                             gpointer self)
{
	gboolean result;
	result = __lambda320_ ((PebblesConvVolumeView*) self);
#line 171 "../src/Views/ConvVolumeView.vala"
	return result;
#line 404 "ConvVolumeView.c"
}

static gboolean
__lambda321_ (PebblesConvVolumeView* self,
              GdkEventKey* event)
{
	PebblesCommonKeyPadConverter* _tmp0_;
	gboolean result = FALSE;
#line 176 "../src/Views/ConvVolumeView.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 177 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = self->priv->keypad;
#line 177 "../src/Views/ConvVolumeView.vala"
	pebbles_common_key_pad_converter_key_pressed (_tmp0_, event);
#line 178 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_grab_focus_on_view_switch (self);
#line 179 "../src/Views/ConvVolumeView.vala"
	if (event->keyval == ((guint) PEBBLES_KEYBOARD_HANDLER_KEY_MAP_CTRL)) {
#line 180 "../src/Views/ConvVolumeView.vala"
		self->priv->ctrl_held = TRUE;
#line 425 "ConvVolumeView.c"
	}
#line 182 "../src/Views/ConvVolumeView.vala"
	switch (event->keyval) {
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_UPPER:
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_LOWER:
#line 433 "ConvVolumeView.c"
		{
#line 185 "../src/Views/ConvVolumeView.vala"
			if (self->priv->ctrl_held) {
#line 186 "../src/Views/ConvVolumeView.vala"
				pebbles_conv_volume_view_write_answer_to_clipboard (self);
#line 439 "ConvVolumeView.c"
			}
#line 188 "../src/Views/ConvVolumeView.vala"
			break;
#line 443 "ConvVolumeView.c"
		}
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_TAB:
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SHIFT_TAB:
#line 449 "ConvVolumeView.c"
		{
			GtkEntry* _tmp1_;
			gboolean _tmp2_;
			gboolean _tmp3_;
#line 191 "../src/Views/ConvVolumeView.vala"
			_tmp1_ = self->from_entry;
#line 191 "../src/Views/ConvVolumeView.vala"
			g_object_get ((GtkWidget*) _tmp1_, "has-focus", &_tmp2_, NULL);
#line 191 "../src/Views/ConvVolumeView.vala"
			_tmp3_ = _tmp2_;
#line 191 "../src/Views/ConvVolumeView.vala"
			if (_tmp3_) {
#line 462 "ConvVolumeView.c"
				GtkEntry* _tmp4_;
				GtkEntry* _tmp5_;
#line 192 "../src/Views/ConvVolumeView.vala"
				_tmp4_ = self->to_entry;
#line 192 "../src/Views/ConvVolumeView.vala"
				gtk_entry_grab_focus_without_selecting (_tmp4_);
#line 193 "../src/Views/ConvVolumeView.vala"
				_tmp5_ = self->to_entry;
#line 193 "../src/Views/ConvVolumeView.vala"
				g_signal_emit_by_name (_tmp5_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 194 "../src/Views/ConvVolumeView.vala"
				self->priv->from_to = 1;
#line 475 "ConvVolumeView.c"
			} else {
				GtkEntry* _tmp6_;
				GtkEntry* _tmp7_;
#line 196 "../src/Views/ConvVolumeView.vala"
				_tmp6_ = self->from_entry;
#line 196 "../src/Views/ConvVolumeView.vala"
				gtk_entry_grab_focus_without_selecting (_tmp6_);
#line 197 "../src/Views/ConvVolumeView.vala"
				self->priv->from_to = 0;
#line 198 "../src/Views/ConvVolumeView.vala"
				_tmp7_ = self->from_entry;
#line 198 "../src/Views/ConvVolumeView.vala"
				g_signal_emit_by_name (_tmp7_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 489 "ConvVolumeView.c"
			}
#line 200 "../src/Views/ConvVolumeView.vala"
			break;
#line 493 "ConvVolumeView.c"
		}
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_UP:
#line 497 "ConvVolumeView.c"
		{
			GtkEntry* _tmp8_;
			GtkEntry* _tmp9_;
#line 202 "../src/Views/ConvVolumeView.vala"
			_tmp8_ = self->from_entry;
#line 202 "../src/Views/ConvVolumeView.vala"
			gtk_entry_grab_focus_without_selecting (_tmp8_);
#line 203 "../src/Views/ConvVolumeView.vala"
			self->priv->from_to = 0;
#line 204 "../src/Views/ConvVolumeView.vala"
			_tmp9_ = self->from_entry;
#line 204 "../src/Views/ConvVolumeView.vala"
			g_signal_emit_by_name (_tmp9_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 205 "../src/Views/ConvVolumeView.vala"
			break;
#line 513 "ConvVolumeView.c"
		}
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_DOWN:
#line 517 "ConvVolumeView.c"
		{
			GtkEntry* _tmp10_;
			GtkEntry* _tmp11_;
#line 207 "../src/Views/ConvVolumeView.vala"
			_tmp10_ = self->to_entry;
#line 207 "../src/Views/ConvVolumeView.vala"
			gtk_entry_grab_focus_without_selecting (_tmp10_);
#line 208 "../src/Views/ConvVolumeView.vala"
			_tmp11_ = self->to_entry;
#line 208 "../src/Views/ConvVolumeView.vala"
			g_signal_emit_by_name (_tmp11_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 209 "../src/Views/ConvVolumeView.vala"
			self->priv->from_to = 1;
#line 210 "../src/Views/ConvVolumeView.vala"
			break;
#line 533 "ConvVolumeView.c"
		}
#line 182 "../src/Views/ConvVolumeView.vala"
		case PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN:
#line 537 "ConvVolumeView.c"
		{
			GtkButton* _tmp12_;
			GtkStyleContext* _tmp13_;
#line 212 "../src/Views/ConvVolumeView.vala"
			pebbles_conv_volume_view_interchange_entries (self);
#line 213 "../src/Views/ConvVolumeView.vala"
			_tmp12_ = self->priv->interchange_button;
#line 213 "../src/Views/ConvVolumeView.vala"
			_tmp13_ = gtk_widget_get_style_context ((GtkWidget*) _tmp12_);
#line 213 "../src/Views/ConvVolumeView.vala"
			gtk_style_context_add_class (_tmp13_, "Pebbles_Buttons_Pressed");
#line 214 "../src/Views/ConvVolumeView.vala"
			break;
#line 551 "ConvVolumeView.c"
		}
		default:
#line 182 "../src/Views/ConvVolumeView.vala"
		break;
#line 556 "ConvVolumeView.c"
	}
#line 216 "../src/Views/ConvVolumeView.vala"
	result = FALSE;
#line 216 "../src/Views/ConvVolumeView.vala"
	return result;
#line 562 "ConvVolumeView.c"
}

static gboolean
___lambda321__gtk_widget_key_press_event (GtkWidget* _sender,
                                          GdkEventKey* event,
                                          gpointer self)
{
	gboolean result;
	result = __lambda321_ ((PebblesConvVolumeView*) self, event);
#line 176 "../src/Views/ConvVolumeView.vala"
	return result;
#line 574 "ConvVolumeView.c"
}

static gboolean
__lambda322_ (PebblesConvVolumeView* self,
              GdkEventKey* event)
{
	PebblesCommonKeyPadConverter* _tmp0_;
	GtkButton* _tmp1_;
	GtkStyleContext* _tmp2_;
	gboolean result = FALSE;
#line 219 "../src/Views/ConvVolumeView.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 220 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = self->priv->keypad;
#line 220 "../src/Views/ConvVolumeView.vala"
	pebbles_common_key_pad_converter_key_released (_tmp0_);
#line 221 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = self->priv->interchange_button;
#line 221 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = gtk_widget_get_style_context ((GtkWidget*) _tmp1_);
#line 221 "../src/Views/ConvVolumeView.vala"
	gtk_style_context_remove_class (_tmp2_, "Pebbles_Buttons_Pressed");
#line 222 "../src/Views/ConvVolumeView.vala"
	if (event->keyval == ((guint) PEBBLES_KEYBOARD_HANDLER_KEY_MAP_CTRL)) {
#line 223 "../src/Views/ConvVolumeView.vala"
		self->priv->ctrl_held = FALSE;
#line 601 "ConvVolumeView.c"
	}
#line 225 "../src/Views/ConvVolumeView.vala"
	result = FALSE;
#line 225 "../src/Views/ConvVolumeView.vala"
	return result;
#line 607 "ConvVolumeView.c"
}

static gboolean
___lambda322__gtk_widget_key_release_event (GtkWidget* _sender,
                                            GdkEventKey* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda322_ ((PebblesConvVolumeView*) self, event);
#line 219 "../src/Views/ConvVolumeView.vala"
	return result;
#line 619 "ConvVolumeView.c"
}

static void
__lambda323_ (PebblesConvVolumeView* self)
{
	gboolean _tmp0_ = FALSE;
#line 229 "../src/Views/ConvVolumeView.vala"
	if (self->priv->from_to == 0) {
#line 229 "../src/Views/ConvVolumeView.vala"
		_tmp0_ = self->priv->allow_change;
#line 630 "ConvVolumeView.c"
	} else {
#line 229 "../src/Views/ConvVolumeView.vala"
		_tmp0_ = FALSE;
#line 634 "ConvVolumeView.c"
	}
#line 229 "../src/Views/ConvVolumeView.vala"
	if (_tmp0_) {
#line 638 "ConvVolumeView.c"
		gchar* _result_ = NULL;
		PebblesConverter* _tmp1_;
		GtkEntry* _tmp2_;
		const gchar* _tmp3_;
		GtkComboBoxText* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		GtkComboBoxText* _tmp7_;
		gint _tmp8_;
		gint _tmp9_;
		gchar* _tmp10_;
		GtkEntry* _tmp11_;
		const gchar* _tmp12_;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp1_ = self->priv->conv;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp2_ = self->from_entry;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp3_ = gtk_entry_get_text (_tmp2_);
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp4_ = self->priv->from_unit;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp5_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp4_);
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp6_ = _tmp5_;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp7_ = self->priv->to_unit;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp8_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp7_);
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp9_ = _tmp8_;
#line 230 "../src/Views/ConvVolumeView.vala"
		_tmp10_ = pebbles_converter_convert (_tmp1_, _tmp3_, _tmp6_, _tmp9_);
#line 230 "../src/Views/ConvVolumeView.vala"
		_result_ = _tmp10_;
#line 231 "../src/Views/ConvVolumeView.vala"
		_tmp11_ = self->to_entry;
#line 231 "../src/Views/ConvVolumeView.vala"
		_tmp12_ = _result_;
#line 231 "../src/Views/ConvVolumeView.vala"
		gtk_entry_set_text (_tmp11_, _tmp12_);
#line 229 "../src/Views/ConvVolumeView.vala"
		_g_free0 (_result_);
#line 682 "ConvVolumeView.c"
	}
#line 233 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_save_state (self);
#line 686 "ConvVolumeView.c"
}

static void
___lambda323__gtk_editable_changed (GtkEditable* _sender,
                                    gpointer self)
{
#line 228 "../src/Views/ConvVolumeView.vala"
	__lambda323_ ((PebblesConvVolumeView*) self);
#line 695 "ConvVolumeView.c"
}

static void
__lambda324_ (PebblesConvVolumeView* self)
{
	gboolean _tmp0_ = FALSE;
#line 237 "../src/Views/ConvVolumeView.vala"
	if (self->priv->from_to == 1) {
#line 237 "../src/Views/ConvVolumeView.vala"
		_tmp0_ = self->priv->allow_change;
#line 706 "ConvVolumeView.c"
	} else {
#line 237 "../src/Views/ConvVolumeView.vala"
		_tmp0_ = FALSE;
#line 710 "ConvVolumeView.c"
	}
#line 237 "../src/Views/ConvVolumeView.vala"
	if (_tmp0_) {
#line 714 "ConvVolumeView.c"
		gchar* _result_ = NULL;
		PebblesConverter* _tmp1_;
		GtkEntry* _tmp2_;
		const gchar* _tmp3_;
		GtkComboBoxText* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		GtkComboBoxText* _tmp7_;
		gint _tmp8_;
		gint _tmp9_;
		gchar* _tmp10_;
		GtkEntry* _tmp11_;
		const gchar* _tmp12_;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp1_ = self->priv->conv;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp2_ = self->to_entry;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp3_ = gtk_entry_get_text (_tmp2_);
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp4_ = self->priv->to_unit;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp5_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp4_);
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp6_ = _tmp5_;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp7_ = self->priv->from_unit;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp8_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp7_);
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp9_ = _tmp8_;
#line 238 "../src/Views/ConvVolumeView.vala"
		_tmp10_ = pebbles_converter_convert (_tmp1_, _tmp3_, _tmp6_, _tmp9_);
#line 238 "../src/Views/ConvVolumeView.vala"
		_result_ = _tmp10_;
#line 239 "../src/Views/ConvVolumeView.vala"
		_tmp11_ = self->from_entry;
#line 239 "../src/Views/ConvVolumeView.vala"
		_tmp12_ = _result_;
#line 239 "../src/Views/ConvVolumeView.vala"
		gtk_entry_set_text (_tmp11_, _tmp12_);
#line 237 "../src/Views/ConvVolumeView.vala"
		_g_free0 (_result_);
#line 758 "ConvVolumeView.c"
	}
#line 241 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_save_state (self);
#line 762 "ConvVolumeView.c"
}

static void
___lambda324__gtk_editable_changed (GtkEditable* _sender,
                                    gpointer self)
{
#line 236 "../src/Views/ConvVolumeView.vala"
	__lambda324_ ((PebblesConvVolumeView*) self);
#line 771 "ConvVolumeView.c"
}

static void
__lambda325_ (PebblesConvVolumeView* self)
{
#line 245 "../src/Views/ConvVolumeView.vala"
	if (self->priv->allow_change) {
#line 779 "ConvVolumeView.c"
		gchar* _result_ = NULL;
		PebblesConverter* _tmp0_;
		GtkEntry* _tmp1_;
		const gchar* _tmp2_;
		GtkComboBoxText* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		GtkComboBoxText* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
		gchar* _tmp9_;
		GtkEntry* _tmp10_;
		const gchar* _tmp11_;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp0_ = self->priv->conv;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp1_ = self->to_entry;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp3_ = self->priv->to_unit;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp4_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp3_);
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp5_ = _tmp4_;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp6_ = self->priv->from_unit;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp7_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp6_);
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp8_ = _tmp7_;
#line 246 "../src/Views/ConvVolumeView.vala"
		_tmp9_ = pebbles_converter_convert (_tmp0_, _tmp2_, _tmp5_, _tmp8_);
#line 246 "../src/Views/ConvVolumeView.vala"
		_result_ = _tmp9_;
#line 247 "../src/Views/ConvVolumeView.vala"
		_tmp10_ = self->from_entry;
#line 247 "../src/Views/ConvVolumeView.vala"
		_tmp11_ = _result_;
#line 247 "../src/Views/ConvVolumeView.vala"
		gtk_entry_set_text (_tmp10_, _tmp11_);
#line 245 "../src/Views/ConvVolumeView.vala"
		_g_free0 (_result_);
#line 823 "ConvVolumeView.c"
	}
#line 249 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_save_state (self);
#line 827 "ConvVolumeView.c"
}

static void
___lambda325__gtk_combo_box_changed (GtkComboBox* _sender,
                                     gpointer self)
{
#line 244 "../src/Views/ConvVolumeView.vala"
	__lambda325_ ((PebblesConvVolumeView*) self);
#line 836 "ConvVolumeView.c"
}

static void
__lambda326_ (PebblesConvVolumeView* self)
{
#line 253 "../src/Views/ConvVolumeView.vala"
	if (self->priv->allow_change) {
#line 844 "ConvVolumeView.c"
		gchar* _result_ = NULL;
		PebblesConverter* _tmp0_;
		GtkEntry* _tmp1_;
		const gchar* _tmp2_;
		GtkComboBoxText* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		GtkComboBoxText* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
		gchar* _tmp9_;
		GtkEntry* _tmp10_;
		const gchar* _tmp11_;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp0_ = self->priv->conv;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp1_ = self->from_entry;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp3_ = self->priv->from_unit;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp4_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp3_);
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp5_ = _tmp4_;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp6_ = self->priv->to_unit;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp7_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp6_);
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp8_ = _tmp7_;
#line 254 "../src/Views/ConvVolumeView.vala"
		_tmp9_ = pebbles_converter_convert (_tmp0_, _tmp2_, _tmp5_, _tmp8_);
#line 254 "../src/Views/ConvVolumeView.vala"
		_result_ = _tmp9_;
#line 255 "../src/Views/ConvVolumeView.vala"
		_tmp10_ = self->to_entry;
#line 255 "../src/Views/ConvVolumeView.vala"
		_tmp11_ = _result_;
#line 255 "../src/Views/ConvVolumeView.vala"
		gtk_entry_set_text (_tmp10_, _tmp11_);
#line 253 "../src/Views/ConvVolumeView.vala"
		_g_free0 (_result_);
#line 888 "ConvVolumeView.c"
	}
#line 257 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_save_state (self);
#line 892 "ConvVolumeView.c"
}

static void
___lambda326__gtk_combo_box_changed (GtkComboBox* _sender,
                                     gpointer self)
{
#line 252 "../src/Views/ConvVolumeView.vala"
	__lambda326_ ((PebblesConvVolumeView*) self);
#line 901 "ConvVolumeView.c"
}

static void
__lambda327_ (PebblesConvVolumeView* self)
{
	gint temp = 0;
	GtkComboBoxText* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
	GtkComboBoxText* _tmp3_;
	GtkComboBoxText* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	GtkComboBoxText* _tmp7_;
	gchar* _result_ = NULL;
	PebblesConverter* _tmp8_;
	GtkEntry* _tmp9_;
	const gchar* _tmp10_;
	GtkComboBoxText* _tmp11_;
	gint _tmp12_;
	gint _tmp13_;
	GtkComboBoxText* _tmp14_;
	gint _tmp15_;
	gint _tmp16_;
	gchar* _tmp17_;
	GtkEntry* _tmp18_;
#line 261 "../src/Views/ConvVolumeView.vala"
	self->priv->allow_change = FALSE;
#line 262 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = self->priv->to_unit;
#line 262 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp0_);
#line 262 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = _tmp1_;
#line 262 "../src/Views/ConvVolumeView.vala"
	temp = _tmp2_;
#line 263 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = self->priv->to_unit;
#line 263 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = self->priv->from_unit;
#line 263 "../src/Views/ConvVolumeView.vala"
	_tmp5_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp4_);
#line 263 "../src/Views/ConvVolumeView.vala"
	_tmp6_ = _tmp5_;
#line 263 "../src/Views/ConvVolumeView.vala"
	gtk_combo_box_set_active ((GtkComboBox*) _tmp3_, _tmp6_);
#line 264 "../src/Views/ConvVolumeView.vala"
	_tmp7_ = self->priv->from_unit;
#line 264 "../src/Views/ConvVolumeView.vala"
	gtk_combo_box_set_active ((GtkComboBox*) _tmp7_, temp);
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp8_ = self->priv->conv;
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp9_ = self->from_entry;
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp10_ = gtk_entry_get_text (_tmp9_);
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp11_ = self->priv->from_unit;
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp12_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp11_);
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp13_ = _tmp12_;
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp14_ = self->priv->to_unit;
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp15_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp14_);
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp16_ = _tmp15_;
#line 265 "../src/Views/ConvVolumeView.vala"
	_tmp17_ = pebbles_converter_convert (_tmp8_, _tmp10_, _tmp13_, _tmp16_);
#line 265 "../src/Views/ConvVolumeView.vala"
	_result_ = _tmp17_;
#line 266 "../src/Views/ConvVolumeView.vala"
	_tmp18_ = self->to_entry;
#line 266 "../src/Views/ConvVolumeView.vala"
	gtk_entry_set_text (_tmp18_, _result_);
#line 267 "../src/Views/ConvVolumeView.vala"
	self->priv->allow_change = TRUE;
#line 260 "../src/Views/ConvVolumeView.vala"
	_g_free0 (_result_);
#line 982 "ConvVolumeView.c"
}

static void
___lambda327__gtk_button_clicked (GtkButton* _sender,
                                  gpointer self)
{
#line 260 "../src/Views/ConvVolumeView.vala"
	__lambda327_ ((PebblesConvVolumeView*) self);
#line 991 "ConvVolumeView.c"
}

static void
__lambda328_ (PebblesConvVolumeView* self,
              const gchar* val)
{
#line 270 "../src/Views/ConvVolumeView.vala"
	g_return_if_fail (val != NULL);
#line 271 "../src/Views/ConvVolumeView.vala"
	if (self->priv->from_to == 0) {
#line 272 "../src/Views/ConvVolumeView.vala"
		if (g_strcmp0 (val, "C") == 0) {
#line 1004 "ConvVolumeView.c"
			GtkEntry* _tmp0_;
			GtkEntry* _tmp1_;
#line 273 "../src/Views/ConvVolumeView.vala"
			_tmp0_ = self->from_entry;
#line 273 "../src/Views/ConvVolumeView.vala"
			gtk_entry_grab_focus_without_selecting (_tmp0_);
#line 274 "../src/Views/ConvVolumeView.vala"
			_tmp1_ = self->from_entry;
#line 274 "../src/Views/ConvVolumeView.vala"
			gtk_entry_set_text (_tmp1_, "0");
#line 1015 "ConvVolumeView.c"
		} else {
#line 276 "../src/Views/ConvVolumeView.vala"
			if (g_strcmp0 (val, "del") == 0) {
#line 1019 "ConvVolumeView.c"
				GtkEntry* _tmp2_;
				GtkEntry* _tmp3_;
#line 277 "../src/Views/ConvVolumeView.vala"
				_tmp2_ = self->from_entry;
#line 277 "../src/Views/ConvVolumeView.vala"
				gtk_entry_grab_focus_without_selecting (_tmp2_);
#line 278 "../src/Views/ConvVolumeView.vala"
				_tmp3_ = self->from_entry;
#line 278 "../src/Views/ConvVolumeView.vala"
				g_signal_emit_by_name (_tmp3_, "backspace");
#line 1030 "ConvVolumeView.c"
			} else {
				GtkEntry* _tmp4_;
				const gchar* _tmp5_;
				GtkEntry* _tmp7_;
				GtkEntry* _tmp8_;
#line 281 "../src/Views/ConvVolumeView.vala"
				_tmp4_ = self->from_entry;
#line 281 "../src/Views/ConvVolumeView.vala"
				_tmp5_ = gtk_entry_get_text (_tmp4_);
#line 281 "../src/Views/ConvVolumeView.vala"
				if (g_strcmp0 (_tmp5_, "0") == 0) {
#line 1042 "ConvVolumeView.c"
					GtkEntry* _tmp6_;
#line 282 "../src/Views/ConvVolumeView.vala"
					_tmp6_ = self->from_entry;
#line 282 "../src/Views/ConvVolumeView.vala"
					gtk_entry_set_text (_tmp6_, "");
#line 1048 "ConvVolumeView.c"
				}
#line 284 "../src/Views/ConvVolumeView.vala"
				_tmp7_ = self->from_entry;
#line 284 "../src/Views/ConvVolumeView.vala"
				gtk_entry_grab_focus_without_selecting (_tmp7_);
#line 285 "../src/Views/ConvVolumeView.vala"
				_tmp8_ = self->from_entry;
#line 285 "../src/Views/ConvVolumeView.vala"
				g_signal_emit_by_name (_tmp8_, "insert-at-cursor", val);
#line 1058 "ConvVolumeView.c"
			}
		}
	} else {
#line 289 "../src/Views/ConvVolumeView.vala"
		if (g_strcmp0 (val, "C") == 0) {
#line 1064 "ConvVolumeView.c"
			GtkEntry* _tmp9_;
			GtkEntry* _tmp10_;
#line 290 "../src/Views/ConvVolumeView.vala"
			_tmp9_ = self->to_entry;
#line 290 "../src/Views/ConvVolumeView.vala"
			gtk_entry_grab_focus_without_selecting (_tmp9_);
#line 291 "../src/Views/ConvVolumeView.vala"
			_tmp10_ = self->to_entry;
#line 291 "../src/Views/ConvVolumeView.vala"
			gtk_entry_set_text (_tmp10_, "0");
#line 1075 "ConvVolumeView.c"
		} else {
#line 293 "../src/Views/ConvVolumeView.vala"
			if (g_strcmp0 (val, "del") == 0) {
#line 1079 "ConvVolumeView.c"
				GtkEntry* _tmp11_;
				GtkEntry* _tmp12_;
#line 294 "../src/Views/ConvVolumeView.vala"
				_tmp11_ = self->to_entry;
#line 294 "../src/Views/ConvVolumeView.vala"
				gtk_entry_grab_focus_without_selecting (_tmp11_);
#line 295 "../src/Views/ConvVolumeView.vala"
				_tmp12_ = self->to_entry;
#line 295 "../src/Views/ConvVolumeView.vala"
				g_signal_emit_by_name (_tmp12_, "backspace");
#line 1090 "ConvVolumeView.c"
			} else {
				GtkEntry* _tmp13_;
				const gchar* _tmp14_;
				GtkEntry* _tmp16_;
				GtkEntry* _tmp17_;
#line 298 "../src/Views/ConvVolumeView.vala"
				_tmp13_ = self->to_entry;
#line 298 "../src/Views/ConvVolumeView.vala"
				_tmp14_ = gtk_entry_get_text (_tmp13_);
#line 298 "../src/Views/ConvVolumeView.vala"
				if (g_strcmp0 (_tmp14_, "0") == 0) {
#line 1102 "ConvVolumeView.c"
					GtkEntry* _tmp15_;
#line 299 "../src/Views/ConvVolumeView.vala"
					_tmp15_ = self->to_entry;
#line 299 "../src/Views/ConvVolumeView.vala"
					gtk_entry_set_text (_tmp15_, "");
#line 1108 "ConvVolumeView.c"
				}
#line 301 "../src/Views/ConvVolumeView.vala"
				_tmp16_ = self->to_entry;
#line 301 "../src/Views/ConvVolumeView.vala"
				gtk_entry_grab_focus_without_selecting (_tmp16_);
#line 302 "../src/Views/ConvVolumeView.vala"
				_tmp17_ = self->to_entry;
#line 302 "../src/Views/ConvVolumeView.vala"
				g_signal_emit_by_name (_tmp17_, "insert-at-cursor", val);
#line 1118 "ConvVolumeView.c"
			}
		}
	}
}

static void
___lambda328__pebbles_common_key_pad_converter_button_clicked (PebblesCommonKeyPadConverter* _sender,
                                                               const gchar* input_text,
                                                               gpointer self)
{
#line 270 "../src/Views/ConvVolumeView.vala"
	__lambda328_ ((PebblesConvVolumeView*) self, input_text);
#line 1131 "ConvVolumeView.c"
}

static void
pebbles_conv_volume_view_handle_events (PebblesConvVolumeView* self)
{
	GtkEntry* _tmp0_;
	GtkEntry* _tmp1_;
	GtkEntry* _tmp2_;
	GtkEntry* _tmp3_;
	GtkComboBoxText* _tmp4_;
	GtkComboBoxText* _tmp5_;
	GtkButton* _tmp6_;
	PebblesCommonKeyPadConverter* _tmp7_;
#line 165 "../src/Views/ConvVolumeView.vala"
	g_return_if_fail (self != NULL);
#line 166 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = self->from_entry;
#line 166 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkWidget*) _tmp0_, "button-press-event", (GCallback) ___lambda319__gtk_widget_button_press_event, self, 0);
#line 171 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = self->to_entry;
#line 171 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkWidget*) _tmp1_, "button-press-event", (GCallback) ___lambda320__gtk_widget_button_press_event, self, 0);
#line 176 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-press-event", (GCallback) ___lambda321__gtk_widget_key_press_event, self, 0);
#line 219 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-release-event", (GCallback) ___lambda322__gtk_widget_key_release_event, self, 0);
#line 228 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = self->from_entry;
#line 228 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkEditable*) _tmp2_, "changed", (GCallback) ___lambda323__gtk_editable_changed, self, 0);
#line 236 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = self->to_entry;
#line 236 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkEditable*) _tmp3_, "changed", (GCallback) ___lambda324__gtk_editable_changed, self, 0);
#line 244 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = self->priv->from_unit;
#line 244 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkComboBox*) _tmp4_, "changed", (GCallback) ___lambda325__gtk_combo_box_changed, self, 0);
#line 252 "../src/Views/ConvVolumeView.vala"
	_tmp5_ = self->priv->to_unit;
#line 252 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object ((GtkComboBox*) _tmp5_, "changed", (GCallback) ___lambda326__gtk_combo_box_changed, self, 0);
#line 260 "../src/Views/ConvVolumeView.vala"
	_tmp6_ = self->priv->interchange_button;
#line 260 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object (_tmp6_, "clicked", (GCallback) ___lambda327__gtk_button_clicked, self, 0);
#line 270 "../src/Views/ConvVolumeView.vala"
	_tmp7_ = self->priv->keypad;
#line 270 "../src/Views/ConvVolumeView.vala"
	g_signal_connect_object (_tmp7_, "button-clicked", (GCallback) ___lambda328__pebbles_common_key_pad_converter_button_clicked, self, 0);
#line 1183 "ConvVolumeView.c"
}

static void
pebbles_conv_volume_view_interchange_entries (PebblesConvVolumeView* self)
{
	gint temp = 0;
	GtkComboBoxText* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
	GtkComboBoxText* _tmp3_;
	GtkComboBoxText* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	GtkComboBoxText* _tmp7_;
	gchar* _result_ = NULL;
	PebblesConverter* _tmp8_;
	GtkEntry* _tmp9_;
	const gchar* _tmp10_;
	GtkComboBoxText* _tmp11_;
	gint _tmp12_;
	gint _tmp13_;
	GtkComboBoxText* _tmp14_;
	gint _tmp15_;
	gint _tmp16_;
	gchar* _tmp17_;
	GtkEntry* _tmp18_;
#line 308 "../src/Views/ConvVolumeView.vala"
	g_return_if_fail (self != NULL);
#line 309 "../src/Views/ConvVolumeView.vala"
	self->priv->allow_change = FALSE;
#line 310 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = self->priv->to_unit;
#line 310 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp0_);
#line 310 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = _tmp1_;
#line 310 "../src/Views/ConvVolumeView.vala"
	temp = _tmp2_;
#line 311 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = self->priv->to_unit;
#line 311 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = self->priv->from_unit;
#line 311 "../src/Views/ConvVolumeView.vala"
	_tmp5_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp4_);
#line 311 "../src/Views/ConvVolumeView.vala"
	_tmp6_ = _tmp5_;
#line 311 "../src/Views/ConvVolumeView.vala"
	gtk_combo_box_set_active ((GtkComboBox*) _tmp3_, _tmp6_);
#line 312 "../src/Views/ConvVolumeView.vala"
	_tmp7_ = self->priv->from_unit;
#line 312 "../src/Views/ConvVolumeView.vala"
	gtk_combo_box_set_active ((GtkComboBox*) _tmp7_, temp);
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp8_ = self->priv->conv;
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp9_ = self->from_entry;
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp10_ = gtk_entry_get_text (_tmp9_);
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp11_ = self->priv->from_unit;
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp12_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp11_);
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp13_ = _tmp12_;
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp14_ = self->priv->to_unit;
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp15_ = gtk_combo_box_get_active ((GtkComboBox*) _tmp14_);
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp16_ = _tmp15_;
#line 313 "../src/Views/ConvVolumeView.vala"
	_tmp17_ = pebbles_converter_convert (_tmp8_, _tmp10_, _tmp13_, _tmp16_);
#line 313 "../src/Views/ConvVolumeView.vala"
	_result_ = _tmp17_;
#line 314 "../src/Views/ConvVolumeView.vala"
	_tmp18_ = self->to_entry;
#line 314 "../src/Views/ConvVolumeView.vala"
	gtk_entry_set_text (_tmp18_, _result_);
#line 315 "../src/Views/ConvVolumeView.vala"
	self->priv->allow_change = TRUE;
#line 308 "../src/Views/ConvVolumeView.vala"
	_g_free0 (_result_);
#line 1266 "ConvVolumeView.c"
}

void
pebbles_conv_volume_view_grab_focus_on_view_switch (PebblesConvVolumeView* self)
{
#line 318 "../src/Views/ConvVolumeView.vala"
	g_return_if_fail (self != NULL);
#line 319 "../src/Views/ConvVolumeView.vala"
	switch (self->priv->from_to) {
#line 319 "../src/Views/ConvVolumeView.vala"
		case 0:
#line 1278 "ConvVolumeView.c"
		{
			GtkEntry* _tmp0_;
#line 321 "../src/Views/ConvVolumeView.vala"
			_tmp0_ = self->from_entry;
#line 321 "../src/Views/ConvVolumeView.vala"
			gtk_entry_grab_focus_without_selecting (_tmp0_);
#line 322 "../src/Views/ConvVolumeView.vala"
			break;
#line 1287 "ConvVolumeView.c"
		}
#line 319 "../src/Views/ConvVolumeView.vala"
		case 1:
#line 1291 "ConvVolumeView.c"
		{
			GtkEntry* _tmp1_;
#line 324 "../src/Views/ConvVolumeView.vala"
			_tmp1_ = self->to_entry;
#line 324 "../src/Views/ConvVolumeView.vala"
			gtk_entry_grab_focus_without_selecting (_tmp1_);
#line 325 "../src/Views/ConvVolumeView.vala"
			break;
#line 1300 "ConvVolumeView.c"
		}
		default:
#line 319 "../src/Views/ConvVolumeView.vala"
		break;
#line 1305 "ConvVolumeView.c"
	}
}

static void
pebbles_conv_volume_view_save_state (PebblesConvVolumeView* self)
{
	PebblesSettings* _tmp0_;
	GtkEntry* _tmp1_;
	const gchar* _tmp2_;
	PebblesSettings* _tmp3_;
	GtkEntry* _tmp4_;
	const gchar* _tmp5_;
#line 329 "../src/Views/ConvVolumeView.vala"
	g_return_if_fail (self != NULL);
#line 330 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = self->priv->settings;
#line 330 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = self->from_entry;
#line 330 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 330 "../src/Views/ConvVolumeView.vala"
	pebbles_settings_set_conv_volume_from_entry (_tmp0_, _tmp2_);
#line 331 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = self->priv->settings;
#line 331 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = self->to_entry;
#line 331 "../src/Views/ConvVolumeView.vala"
	_tmp5_ = gtk_entry_get_text (_tmp4_);
#line 331 "../src/Views/ConvVolumeView.vala"
	pebbles_settings_set_conv_volume_to_entry (_tmp3_, _tmp5_);
#line 1336 "ConvVolumeView.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 335 "../src/Views/ConvVolumeView.vala"
	return self ? g_object_ref (self) : NULL;
#line 1344 "ConvVolumeView.c"
}

static gchar*
string_replace (const gchar* self,
                const gchar* old,
                const gchar* replacement)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (old != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (replacement != NULL, NULL);
#line 1535 "glib-2.0.vapi"
	if ((*((gchar*) self)) == '\0') {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = TRUE;
#line 1366 "ConvVolumeView.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = (*((gchar*) old)) == '\0';
#line 1370 "ConvVolumeView.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp1_) {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = TRUE;
#line 1376 "ConvVolumeView.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = g_strcmp0 (old, replacement) == 0;
#line 1380 "ConvVolumeView.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp0_) {
#line 1384 "ConvVolumeView.c"
		gchar* _tmp2_;
#line 1536 "glib-2.0.vapi"
		_tmp2_ = g_strdup (self);
#line 1536 "glib-2.0.vapi"
		result = _tmp2_;
#line 1536 "glib-2.0.vapi"
		return result;
#line 1392 "ConvVolumeView.c"
	}
	{
		GRegex* regex = NULL;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GRegex* _tmp5_;
		GRegex* _tmp6_;
		gchar* _tmp7_ = NULL;
		GRegex* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 1539 "glib-2.0.vapi"
		_tmp3_ = g_regex_escape_string (old, -1);
#line 1539 "glib-2.0.vapi"
		_tmp4_ = _tmp3_;
#line 1539 "glib-2.0.vapi"
		_tmp5_ = g_regex_new (_tmp4_, 0, 0, &_inner_error0_);
#line 1539 "glib-2.0.vapi"
		_tmp6_ = _tmp5_;
#line 1539 "glib-2.0.vapi"
		_g_free0 (_tmp4_);
#line 1539 "glib-2.0.vapi"
		regex = _tmp6_;
#line 1539 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1539 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1539 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1539 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 1424 "ConvVolumeView.c"
				goto __catch0_g_regex_error;
			}
#line 1539 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1539 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1539 "glib-2.0.vapi"
			return NULL;
#line 1433 "ConvVolumeView.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp8_ = regex;
#line 1540 "glib-2.0.vapi"
		_tmp9_ = g_regex_replace_literal (_tmp8_, self, (gssize) -1, 0, replacement, 0, &_inner_error0_);
#line 1540 "glib-2.0.vapi"
		_tmp7_ = _tmp9_;
#line 1540 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1540 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 1449 "ConvVolumeView.c"
				goto __catch0_g_regex_error;
			}
#line 1540 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1540 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1540 "glib-2.0.vapi"
			return NULL;
#line 1458 "ConvVolumeView.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp10_ = _tmp7_;
#line 1540 "glib-2.0.vapi"
		_tmp7_ = NULL;
#line 1540 "glib-2.0.vapi"
		result = _tmp10_;
#line 1540 "glib-2.0.vapi"
		_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
		_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
		return result;
#line 1472 "ConvVolumeView.c"
	}
	goto __finally0;
	__catch0_g_regex_error:
	{
#line 1538 "glib-2.0.vapi"
		g_clear_error (&_inner_error0_);
#line 1542 "glib-2.0.vapi"
		g_assert_not_reached ();
#line 1481 "ConvVolumeView.c"
	}
	__finally0:
#line 1538 "glib-2.0.vapi"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1538 "glib-2.0.vapi"
	g_clear_error (&_inner_error0_);
#line 1538 "glib-2.0.vapi"
	return NULL;
#line 1490 "ConvVolumeView.c"
}

void
pebbles_conv_volume_view_write_answer_to_clipboard (PebblesConvVolumeView* self)
{
	GdkDisplay* display = NULL;
	GdkDisplay* _tmp0_;
	GdkDisplay* _tmp1_;
	GtkClipboard* clipboard = NULL;
	GdkDisplay* _tmp2_;
	GtkClipboard* _tmp3_;
	GtkClipboard* _tmp4_;
#line 334 "../src/Views/ConvVolumeView.vala"
	g_return_if_fail (self != NULL);
#line 335 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = gtk_widget_get_display ((GtkWidget*) self);
#line 335 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = _g_object_ref0 (_tmp0_);
#line 335 "../src/Views/ConvVolumeView.vala"
	display = _tmp1_;
#line 336 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = display;
#line 336 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = gtk_clipboard_get_for_display (_tmp2_, GDK_SELECTION_CLIPBOARD);
#line 336 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = _g_object_ref0 (_tmp3_);
#line 336 "../src/Views/ConvVolumeView.vala"
	clipboard = _tmp4_;
#line 337 "../src/Views/ConvVolumeView.vala"
	if (self->priv->from_to == 0) {
#line 1521 "ConvVolumeView.c"
		gchar* last_answer = NULL;
		GtkEntry* _tmp5_;
		const gchar* _tmp6_;
		gchar* _tmp7_;
		gchar* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
		GtkClipboard* _tmp11_;
		const gchar* _tmp12_;
#line 338 "../src/Views/ConvVolumeView.vala"
		_tmp5_ = self->to_entry;
#line 338 "../src/Views/ConvVolumeView.vala"
		_tmp6_ = gtk_entry_get_text (_tmp5_);
#line 338 "../src/Views/ConvVolumeView.vala"
		_tmp7_ = pebbles_utils_get_local_separator_symbol ();
#line 338 "../src/Views/ConvVolumeView.vala"
		_tmp8_ = _tmp7_;
#line 338 "../src/Views/ConvVolumeView.vala"
		_tmp9_ = string_replace (_tmp6_, _tmp8_, "");
#line 338 "../src/Views/ConvVolumeView.vala"
		_tmp10_ = _tmp9_;
#line 338 "../src/Views/ConvVolumeView.vala"
		_g_free0 (_tmp8_);
#line 338 "../src/Views/ConvVolumeView.vala"
		last_answer = _tmp10_;
#line 339 "../src/Views/ConvVolumeView.vala"
		_tmp11_ = clipboard;
#line 339 "../src/Views/ConvVolumeView.vala"
		_tmp12_ = last_answer;
#line 339 "../src/Views/ConvVolumeView.vala"
		gtk_clipboard_set_text (_tmp11_, _tmp12_, -1);
#line 337 "../src/Views/ConvVolumeView.vala"
		_g_free0 (last_answer);
#line 1555 "ConvVolumeView.c"
	} else {
		gchar* last_answer = NULL;
		GtkEntry* _tmp13_;
		const gchar* _tmp14_;
		gchar* _tmp15_;
		gchar* _tmp16_;
		gchar* _tmp17_;
		gchar* _tmp18_;
		GtkClipboard* _tmp19_;
		const gchar* _tmp20_;
#line 341 "../src/Views/ConvVolumeView.vala"
		_tmp13_ = self->from_entry;
#line 341 "../src/Views/ConvVolumeView.vala"
		_tmp14_ = gtk_entry_get_text (_tmp13_);
#line 341 "../src/Views/ConvVolumeView.vala"
		_tmp15_ = pebbles_utils_get_local_separator_symbol ();
#line 341 "../src/Views/ConvVolumeView.vala"
		_tmp16_ = _tmp15_;
#line 341 "../src/Views/ConvVolumeView.vala"
		_tmp17_ = string_replace (_tmp14_, _tmp16_, "");
#line 341 "../src/Views/ConvVolumeView.vala"
		_tmp18_ = _tmp17_;
#line 341 "../src/Views/ConvVolumeView.vala"
		_g_free0 (_tmp16_);
#line 341 "../src/Views/ConvVolumeView.vala"
		last_answer = _tmp18_;
#line 342 "../src/Views/ConvVolumeView.vala"
		_tmp19_ = clipboard;
#line 342 "../src/Views/ConvVolumeView.vala"
		_tmp20_ = last_answer;
#line 342 "../src/Views/ConvVolumeView.vala"
		gtk_clipboard_set_text (_tmp19_, _tmp20_, -1);
#line 337 "../src/Views/ConvVolumeView.vala"
		_g_free0 (last_answer);
#line 1590 "ConvVolumeView.c"
	}
#line 334 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (clipboard);
#line 334 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (display);
#line 1596 "ConvVolumeView.c"
}

PebblesConvVolumeView*
pebbles_conv_volume_view_construct (GType object_type)
{
	PebblesConvVolumeView * self = NULL;
#line 22 "../src/Views/ConvVolumeView.vala"
	self = (PebblesConvVolumeView*) g_object_new (object_type, NULL);
#line 22 "../src/Views/ConvVolumeView.vala"
	return self;
#line 1607 "ConvVolumeView.c"
}

PebblesConvVolumeView*
pebbles_conv_volume_view_new (void)
{
#line 22 "../src/Views/ConvVolumeView.vala"
	return pebbles_conv_volume_view_construct (PEBBLES_TYPE_CONV_VOLUME_VIEW);
#line 1615 "ConvVolumeView.c"
}

static GObject *
pebbles_conv_volume_view_constructor (GType type,
                                      guint n_construct_properties,
                                      GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	PebblesConvVolumeView * self;
	PebblesSettings* _tmp0_;
	gboolean _tmp1_;
	PebblesConverter* _tmp2_;
	PebblesCommonKeyPadConverter* _tmp3_;
	GtkLabel* header_title = NULL;
	GtkLabel* _tmp4_;
	GtkLabel* _tmp5_;
	GtkStyleContext* _tmp6_;
	GtkLabel* _tmp7_;
	GtkLabel* _tmp8_;
	GtkLabel* _tmp9_;
	GtkEntry* _tmp10_;
	GtkEntry* _tmp11_;
	PebblesSettings* _tmp12_;
	const gchar* _tmp13_;
	const gchar* _tmp14_;
	GtkEntry* _tmp15_;
	GtkStyleContext* _tmp16_;
	GtkEntry* _tmp17_;
	GtkComboBoxText* _tmp18_;
	GtkComboBoxText* _tmp25_;
	GtkEntry* _tmp26_;
	GtkEntry* _tmp27_;
	PebblesSettings* _tmp28_;
	const gchar* _tmp29_;
	const gchar* _tmp30_;
	GtkEntry* _tmp31_;
	GtkStyleContext* _tmp32_;
	GtkEntry* _tmp33_;
	GtkComboBoxText* _tmp34_;
	GtkComboBoxText* _tmp41_;
	GtkButton* _tmp42_;
	GtkImage* up_button = NULL;
	GtkImage* _tmp43_;
	GtkImage* down_button = NULL;
	GtkImage* _tmp44_;
	GtkGrid* up_down_grid = NULL;
	GtkGrid* _tmp45_;
	GtkGrid* _tmp46_;
	GtkGrid* _tmp47_;
	GtkGrid* _tmp48_;
	GtkImage* _tmp49_;
	GtkGrid* _tmp50_;
	GtkImage* _tmp51_;
	GtkButton* _tmp52_;
	GtkGrid* _tmp53_;
	GtkButton* _tmp54_;
	GtkButton* _tmp55_;
	GtkButton* _tmp56_;
	GtkButton* _tmp57_;
	GtkGrid* conversion_grid = NULL;
	GtkGrid* _tmp58_;
	GtkGrid* _tmp59_;
	GtkComboBoxText* _tmp60_;
	GtkGrid* _tmp61_;
	GtkEntry* _tmp62_;
	GtkGrid* _tmp63_;
	GtkButton* _tmp64_;
	GtkGrid* _tmp65_;
	GtkComboBoxText* _tmp66_;
	GtkGrid* _tmp67_;
	GtkEntry* _tmp68_;
	GtkGrid* _tmp69_;
	GtkGrid* _tmp70_;
	GtkGrid* _tmp71_;
	GtkGrid* _tmp72_;
	GtkGrid* _tmp73_;
	GtkGrid* _tmp74_;
	GtkGrid* _tmp75_;
	GtkGrid* _tmp76_;
	GtkSeparator* separator = NULL;
	GtkSeparator* _tmp77_;
	GtkSeparator* _tmp78_;
	GtkSeparator* _tmp79_;
	GtkLabel* _tmp80_;
	PebblesCommonKeyPadConverter* _tmp81_;
	GtkSeparator* _tmp82_;
	GtkGrid* _tmp83_;
#line 85 "../src/Views/ConvVolumeView.vala"
	parent_class = G_OBJECT_CLASS (pebbles_conv_volume_view_parent_class);
#line 85 "../src/Views/ConvVolumeView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 85 "../src/Views/ConvVolumeView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_CONV_VOLUME_VIEW, PebblesConvVolumeView);
#line 86 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = pebbles_settings_get_default ();
#line 86 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->settings);
#line 86 "../src/Views/ConvVolumeView.vala"
	self->priv->settings = _tmp0_;
#line 88 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = FALSE;
#line 88 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = pebbles_converter_new (PEBBLES_CONV_VOLUME_VIEW_multipliers, G_N_ELEMENTS (PEBBLES_CONV_VOLUME_VIEW_multipliers), &_tmp1_, NULL, 0);
#line 88 "../src/Views/ConvVolumeView.vala"
	_pebbles_converter_unref0 (self->priv->conv);
#line 88 "../src/Views/ConvVolumeView.vala"
	self->priv->conv = _tmp2_;
#line 89 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = pebbles_common_key_pad_converter_new ();
#line 89 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp3_);
#line 89 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->keypad);
#line 89 "../src/Views/ConvVolumeView.vala"
	self->priv->keypad = _tmp3_;
#line 92 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = (GtkLabel*) gtk_label_new (_ ("Volume"));
#line 92 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp4_);
#line 92 "../src/Views/ConvVolumeView.vala"
	header_title = _tmp4_;
#line 93 "../src/Views/ConvVolumeView.vala"
	_tmp5_ = header_title;
#line 93 "../src/Views/ConvVolumeView.vala"
	_tmp6_ = gtk_widget_get_style_context ((GtkWidget*) _tmp5_);
#line 93 "../src/Views/ConvVolumeView.vala"
	gtk_style_context_add_class (_tmp6_, "h1");
#line 94 "../src/Views/ConvVolumeView.vala"
	_tmp7_ = header_title;
#line 94 "../src/Views/ConvVolumeView.vala"
	gtk_label_set_justify (_tmp7_, GTK_JUSTIFY_LEFT);
#line 95 "../src/Views/ConvVolumeView.vala"
	_tmp8_ = header_title;
#line 95 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp8_, GTK_ALIGN_START);
#line 96 "../src/Views/ConvVolumeView.vala"
	_tmp9_ = header_title;
#line 96 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp9_, 6);
#line 99 "../src/Views/ConvVolumeView.vala"
	_tmp10_ = (GtkEntry*) gtk_entry_new ();
#line 99 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp10_);
#line 99 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->from_entry);
#line 99 "../src/Views/ConvVolumeView.vala"
	self->from_entry = _tmp10_;
#line 100 "../src/Views/ConvVolumeView.vala"
	_tmp11_ = self->from_entry;
#line 100 "../src/Views/ConvVolumeView.vala"
	_tmp12_ = self->priv->settings;
#line 100 "../src/Views/ConvVolumeView.vala"
	_tmp13_ = pebbles_settings_get_conv_volume_from_entry (_tmp12_);
#line 100 "../src/Views/ConvVolumeView.vala"
	_tmp14_ = _tmp13_;
#line 100 "../src/Views/ConvVolumeView.vala"
	gtk_entry_set_text (_tmp11_, _tmp14_);
#line 101 "../src/Views/ConvVolumeView.vala"
	_tmp15_ = self->from_entry;
#line 101 "../src/Views/ConvVolumeView.vala"
	_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) _tmp15_);
#line 101 "../src/Views/ConvVolumeView.vala"
	gtk_style_context_add_class (_tmp16_, "Pebbles_Conversion_Text_Box");
#line 102 "../src/Views/ConvVolumeView.vala"
	_tmp17_ = self->from_entry;
#line 102 "../src/Views/ConvVolumeView.vala"
	gtk_entry_set_max_width_chars (_tmp17_, 35);
#line 103 "../src/Views/ConvVolumeView.vala"
	_tmp18_ = (GtkComboBoxText*) gtk_combo_box_text_new ();
#line 103 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp18_);
#line 103 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->from_unit);
#line 103 "../src/Views/ConvVolumeView.vala"
	self->priv->from_unit = _tmp18_;
#line 1792 "ConvVolumeView.c"
	{
		gint i = 0;
#line 104 "../src/Views/ConvVolumeView.vala"
		i = 0;
#line 1797 "ConvVolumeView.c"
		{
			gboolean _tmp19_ = FALSE;
#line 104 "../src/Views/ConvVolumeView.vala"
			_tmp19_ = TRUE;
#line 104 "../src/Views/ConvVolumeView.vala"
			while (TRUE) {
#line 1804 "ConvVolumeView.c"
				gchar** _tmp21_;
				gint _tmp21__length1;
				GtkComboBoxText* _tmp22_;
				gchar** _tmp23_;
				gint _tmp23__length1;
				const gchar* _tmp24_;
#line 104 "../src/Views/ConvVolumeView.vala"
				if (!_tmp19_) {
#line 1813 "ConvVolumeView.c"
					gint _tmp20_;
#line 104 "../src/Views/ConvVolumeView.vala"
					_tmp20_ = i;
#line 104 "../src/Views/ConvVolumeView.vala"
					i = _tmp20_ + 1;
#line 1819 "ConvVolumeView.c"
				}
#line 104 "../src/Views/ConvVolumeView.vala"
				_tmp19_ = FALSE;
#line 104 "../src/Views/ConvVolumeView.vala"
				_tmp21_ = self->priv->units;
#line 104 "../src/Views/ConvVolumeView.vala"
				_tmp21__length1 = self->priv->units_length1;
#line 104 "../src/Views/ConvVolumeView.vala"
				if (!(i < _tmp21__length1)) {
#line 104 "../src/Views/ConvVolumeView.vala"
					break;
#line 1831 "ConvVolumeView.c"
				}
#line 105 "../src/Views/ConvVolumeView.vala"
				_tmp22_ = self->priv->from_unit;
#line 105 "../src/Views/ConvVolumeView.vala"
				_tmp23_ = self->priv->units;
#line 105 "../src/Views/ConvVolumeView.vala"
				_tmp23__length1 = self->priv->units_length1;
#line 105 "../src/Views/ConvVolumeView.vala"
				_tmp24_ = _tmp23_[i];
#line 105 "../src/Views/ConvVolumeView.vala"
				gtk_combo_box_text_append_text (_tmp22_, _tmp24_);
#line 1843 "ConvVolumeView.c"
			}
		}
	}
#line 107 "../src/Views/ConvVolumeView.vala"
	_tmp25_ = self->priv->from_unit;
#line 107 "../src/Views/ConvVolumeView.vala"
	gtk_combo_box_set_active ((GtkComboBox*) _tmp25_, 3);
#line 110 "../src/Views/ConvVolumeView.vala"
	_tmp26_ = (GtkEntry*) gtk_entry_new ();
#line 110 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp26_);
#line 110 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->to_entry);
#line 110 "../src/Views/ConvVolumeView.vala"
	self->to_entry = _tmp26_;
#line 111 "../src/Views/ConvVolumeView.vala"
	_tmp27_ = self->to_entry;
#line 111 "../src/Views/ConvVolumeView.vala"
	_tmp28_ = self->priv->settings;
#line 111 "../src/Views/ConvVolumeView.vala"
	_tmp29_ = pebbles_settings_get_conv_volume_to_entry (_tmp28_);
#line 111 "../src/Views/ConvVolumeView.vala"
	_tmp30_ = _tmp29_;
#line 111 "../src/Views/ConvVolumeView.vala"
	gtk_entry_set_text (_tmp27_, _tmp30_);
#line 112 "../src/Views/ConvVolumeView.vala"
	_tmp31_ = self->to_entry;
#line 112 "../src/Views/ConvVolumeView.vala"
	_tmp32_ = gtk_widget_get_style_context ((GtkWidget*) _tmp31_);
#line 112 "../src/Views/ConvVolumeView.vala"
	gtk_style_context_add_class (_tmp32_, "Pebbles_Conversion_Text_Box");
#line 113 "../src/Views/ConvVolumeView.vala"
	_tmp33_ = self->to_entry;
#line 113 "../src/Views/ConvVolumeView.vala"
	gtk_entry_set_max_width_chars (_tmp33_, 35);
#line 114 "../src/Views/ConvVolumeView.vala"
	_tmp34_ = (GtkComboBoxText*) gtk_combo_box_text_new ();
#line 114 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp34_);
#line 114 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->to_unit);
#line 114 "../src/Views/ConvVolumeView.vala"
	self->priv->to_unit = _tmp34_;
#line 1887 "ConvVolumeView.c"
	{
		gint i = 0;
#line 115 "../src/Views/ConvVolumeView.vala"
		i = 0;
#line 1892 "ConvVolumeView.c"
		{
			gboolean _tmp35_ = FALSE;
#line 115 "../src/Views/ConvVolumeView.vala"
			_tmp35_ = TRUE;
#line 115 "../src/Views/ConvVolumeView.vala"
			while (TRUE) {
#line 1899 "ConvVolumeView.c"
				gchar** _tmp37_;
				gint _tmp37__length1;
				GtkComboBoxText* _tmp38_;
				gchar** _tmp39_;
				gint _tmp39__length1;
				const gchar* _tmp40_;
#line 115 "../src/Views/ConvVolumeView.vala"
				if (!_tmp35_) {
#line 1908 "ConvVolumeView.c"
					gint _tmp36_;
#line 115 "../src/Views/ConvVolumeView.vala"
					_tmp36_ = i;
#line 115 "../src/Views/ConvVolumeView.vala"
					i = _tmp36_ + 1;
#line 1914 "ConvVolumeView.c"
				}
#line 115 "../src/Views/ConvVolumeView.vala"
				_tmp35_ = FALSE;
#line 115 "../src/Views/ConvVolumeView.vala"
				_tmp37_ = self->priv->units;
#line 115 "../src/Views/ConvVolumeView.vala"
				_tmp37__length1 = self->priv->units_length1;
#line 115 "../src/Views/ConvVolumeView.vala"
				if (!(i < _tmp37__length1)) {
#line 115 "../src/Views/ConvVolumeView.vala"
					break;
#line 1926 "ConvVolumeView.c"
				}
#line 116 "../src/Views/ConvVolumeView.vala"
				_tmp38_ = self->priv->to_unit;
#line 116 "../src/Views/ConvVolumeView.vala"
				_tmp39_ = self->priv->units;
#line 116 "../src/Views/ConvVolumeView.vala"
				_tmp39__length1 = self->priv->units_length1;
#line 116 "../src/Views/ConvVolumeView.vala"
				_tmp40_ = _tmp39_[i];
#line 116 "../src/Views/ConvVolumeView.vala"
				gtk_combo_box_text_append_text (_tmp38_, _tmp40_);
#line 1938 "ConvVolumeView.c"
			}
		}
	}
#line 118 "../src/Views/ConvVolumeView.vala"
	_tmp41_ = self->priv->to_unit;
#line 118 "../src/Views/ConvVolumeView.vala"
	gtk_combo_box_set_active ((GtkComboBox*) _tmp41_, 2);
#line 121 "../src/Views/ConvVolumeView.vala"
	_tmp42_ = (GtkButton*) gtk_button_new ();
#line 121 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp42_);
#line 121 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->interchange_button);
#line 121 "../src/Views/ConvVolumeView.vala"
	self->priv->interchange_button = _tmp42_;
#line 122 "../src/Views/ConvVolumeView.vala"
	_tmp43_ = (GtkImage*) gtk_image_new_from_icon_name ("go-up-symbolic", (GtkIconSize) GTK_ICON_SIZE_BUTTON);
#line 122 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp43_);
#line 122 "../src/Views/ConvVolumeView.vala"
	up_button = _tmp43_;
#line 123 "../src/Views/ConvVolumeView.vala"
	_tmp44_ = (GtkImage*) gtk_image_new_from_icon_name ("go-down-symbolic", (GtkIconSize) GTK_ICON_SIZE_BUTTON);
#line 123 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp44_);
#line 123 "../src/Views/ConvVolumeView.vala"
	down_button = _tmp44_;
#line 124 "../src/Views/ConvVolumeView.vala"
	_tmp45_ = (GtkGrid*) gtk_grid_new ();
#line 124 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp45_);
#line 124 "../src/Views/ConvVolumeView.vala"
	up_down_grid = _tmp45_;
#line 125 "../src/Views/ConvVolumeView.vala"
	_tmp46_ = up_down_grid;
#line 125 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp46_, GTK_ALIGN_CENTER);
#line 126 "../src/Views/ConvVolumeView.vala"
	_tmp47_ = up_down_grid;
#line 126 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp47_, GTK_ALIGN_CENTER);
#line 127 "../src/Views/ConvVolumeView.vala"
	_tmp48_ = up_down_grid;
#line 127 "../src/Views/ConvVolumeView.vala"
	_tmp49_ = up_button;
#line 127 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp48_, (GtkWidget*) _tmp49_, 0, 0, 1, 1);
#line 128 "../src/Views/ConvVolumeView.vala"
	_tmp50_ = up_down_grid;
#line 128 "../src/Views/ConvVolumeView.vala"
	_tmp51_ = down_button;
#line 128 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp50_, (GtkWidget*) _tmp51_, 1, 0, 1, 1);
#line 129 "../src/Views/ConvVolumeView.vala"
	_tmp52_ = self->priv->interchange_button;
#line 129 "../src/Views/ConvVolumeView.vala"
	_tmp53_ = up_down_grid;
#line 129 "../src/Views/ConvVolumeView.vala"
	gtk_container_add ((GtkContainer*) _tmp52_, (GtkWidget*) _tmp53_);
#line 130 "../src/Views/ConvVolumeView.vala"
	_tmp54_ = self->priv->interchange_button;
#line 130 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp54_, 8);
#line 131 "../src/Views/ConvVolumeView.vala"
	_tmp55_ = self->priv->interchange_button;
#line 131 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp55_, 8);
#line 132 "../src/Views/ConvVolumeView.vala"
	_tmp56_ = self->priv->interchange_button;
#line 132 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp56_, 100);
#line 133 "../src/Views/ConvVolumeView.vala"
	_tmp57_ = self->priv->interchange_button;
#line 133 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp57_, 100);
#line 135 "../src/Views/ConvVolumeView.vala"
	_tmp58_ = (GtkGrid*) gtk_grid_new ();
#line 135 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp58_);
#line 135 "../src/Views/ConvVolumeView.vala"
	conversion_grid = _tmp58_;
#line 136 "../src/Views/ConvVolumeView.vala"
	_tmp59_ = conversion_grid;
#line 136 "../src/Views/ConvVolumeView.vala"
	_tmp60_ = self->priv->from_unit;
#line 136 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp59_, (GtkWidget*) _tmp60_, 0, 0, 1, 1);
#line 137 "../src/Views/ConvVolumeView.vala"
	_tmp61_ = conversion_grid;
#line 137 "../src/Views/ConvVolumeView.vala"
	_tmp62_ = self->from_entry;
#line 137 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp61_, (GtkWidget*) _tmp62_, 0, 1, 1, 1);
#line 138 "../src/Views/ConvVolumeView.vala"
	_tmp63_ = conversion_grid;
#line 138 "../src/Views/ConvVolumeView.vala"
	_tmp64_ = self->priv->interchange_button;
#line 138 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp63_, (GtkWidget*) _tmp64_, 0, 2, 1, 1);
#line 139 "../src/Views/ConvVolumeView.vala"
	_tmp65_ = conversion_grid;
#line 139 "../src/Views/ConvVolumeView.vala"
	_tmp66_ = self->priv->to_unit;
#line 139 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp65_, (GtkWidget*) _tmp66_, 0, 3, 1, 1);
#line 140 "../src/Views/ConvVolumeView.vala"
	_tmp67_ = conversion_grid;
#line 140 "../src/Views/ConvVolumeView.vala"
	_tmp68_ = self->to_entry;
#line 140 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach (_tmp67_, (GtkWidget*) _tmp68_, 0, 4, 1, 1);
#line 141 "../src/Views/ConvVolumeView.vala"
	_tmp69_ = conversion_grid;
#line 141 "../src/Views/ConvVolumeView.vala"
	g_object_set ((GtkWidget*) _tmp69_, "width-request", 240, NULL);
#line 142 "../src/Views/ConvVolumeView.vala"
	_tmp70_ = conversion_grid;
#line 142 "../src/Views/ConvVolumeView.vala"
	g_object_set ((GtkWidget*) _tmp70_, "height-request", 210, NULL);
#line 143 "../src/Views/ConvVolumeView.vala"
	_tmp71_ = conversion_grid;
#line 143 "../src/Views/ConvVolumeView.vala"
	gtk_grid_set_row_homogeneous (_tmp71_, TRUE);
#line 144 "../src/Views/ConvVolumeView.vala"
	_tmp72_ = conversion_grid;
#line 144 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp72_, 8);
#line 145 "../src/Views/ConvVolumeView.vala"
	_tmp73_ = conversion_grid;
#line 145 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp73_, 8);
#line 146 "../src/Views/ConvVolumeView.vala"
	_tmp74_ = conversion_grid;
#line 146 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp74_, GTK_ALIGN_CENTER);
#line 147 "../src/Views/ConvVolumeView.vala"
	_tmp75_ = conversion_grid;
#line 147 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp75_, GTK_ALIGN_CENTER);
#line 148 "../src/Views/ConvVolumeView.vala"
	_tmp76_ = conversion_grid;
#line 148 "../src/Views/ConvVolumeView.vala"
	gtk_grid_set_row_spacing (_tmp76_, 8);
#line 150 "../src/Views/ConvVolumeView.vala"
	_tmp77_ = (GtkSeparator*) gtk_separator_new (GTK_ORIENTATION_VERTICAL);
#line 150 "../src/Views/ConvVolumeView.vala"
	g_object_ref_sink (_tmp77_);
#line 150 "../src/Views/ConvVolumeView.vala"
	separator = _tmp77_;
#line 151 "../src/Views/ConvVolumeView.vala"
	_tmp78_ = separator;
#line 151 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp78_, 25);
#line 152 "../src/Views/ConvVolumeView.vala"
	_tmp79_ = separator;
#line 152 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp79_, 25);
#line 154 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 155 "../src/Views/ConvVolumeView.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 156 "../src/Views/ConvVolumeView.vala"
	_tmp80_ = header_title;
#line 156 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp80_, 0, 0, 3, 1);
#line 157 "../src/Views/ConvVolumeView.vala"
	_tmp81_ = self->priv->keypad;
#line 157 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp81_, 0, 1, 1, 1);
#line 158 "../src/Views/ConvVolumeView.vala"
	_tmp82_ = separator;
#line 158 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp82_, 1, 1, 1, 1);
#line 159 "../src/Views/ConvVolumeView.vala"
	_tmp83_ = conversion_grid;
#line 159 "../src/Views/ConvVolumeView.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp83_, 2, 1, 1, 1);
#line 160 "../src/Views/ConvVolumeView.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 8);
#line 162 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_handle_events (self);
#line 85 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (separator);
#line 85 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (conversion_grid);
#line 85 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (up_down_grid);
#line 85 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (down_button);
#line 85 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (up_button);
#line 85 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (header_title);
#line 85 "../src/Views/ConvVolumeView.vala"
	return obj;
#line 2134 "ConvVolumeView.c"
}

static void
pebbles_conv_volume_view_class_init (PebblesConvVolumeViewClass * klass,
                                     gpointer klass_data)
{
#line 22 "../src/Views/ConvVolumeView.vala"
	pebbles_conv_volume_view_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Views/ConvVolumeView.vala"
	g_type_class_adjust_private_offset (klass, &PebblesConvVolumeView_private_offset);
#line 22 "../src/Views/ConvVolumeView.vala"
	G_OBJECT_CLASS (klass)->constructor = pebbles_conv_volume_view_constructor;
#line 22 "../src/Views/ConvVolumeView.vala"
	G_OBJECT_CLASS (klass)->finalize = pebbles_conv_volume_view_finalize;
#line 2149 "ConvVolumeView.c"
}

static void
pebbles_conv_volume_view_instance_init (PebblesConvVolumeView * self,
                                        gpointer klass)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	gchar* _tmp16_;
	gchar* _tmp17_;
	gchar* _tmp18_;
	gchar* _tmp19_;
	gchar* _tmp20_;
	gchar** _tmp21_;
#line 22 "../src/Views/ConvVolumeView.vala"
	self->priv = pebbles_conv_volume_view_get_instance_private (self);
#line 27 "../src/Views/ConvVolumeView.vala"
	self->priv->from_to = 0;
#line 28 "../src/Views/ConvVolumeView.vala"
	self->priv->allow_change = TRUE;
#line 35 "../src/Views/ConvVolumeView.vala"
	self->priv->ctrl_held = FALSE;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp0_ = g_strdup (_ ("Millilitre"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp1_ = g_strdup (_ ("Cubic centimetre"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp2_ = g_strdup (_ ("Litre"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp3_ = g_strdup (_ ("Cubic metre"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp4_ = g_strdup (_ ("US teaspoon"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp5_ = g_strdup (_ ("US tablespoon"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp6_ = g_strdup (_ ("US fluid ounce"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp7_ = g_strdup (_ ("US legal cup"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp8_ = g_strdup (_ ("US pint"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp9_ = g_strdup (_ ("US quart"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp10_ = g_strdup (_ ("US gallon"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp11_ = g_strdup (_ ("Imperial teaspoon"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp12_ = g_strdup (_ ("Imperial tablespoon"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp13_ = g_strdup (_ ("Imperial fluid ounce"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp14_ = g_strdup (_ ("Imperial cup"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp15_ = g_strdup (_ ("Imperial pint"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp16_ = g_strdup (_ ("Imperial quart"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp17_ = g_strdup (_ ("Imperial gallon"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp18_ = g_strdup (_ ("Cubic inch"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp19_ = g_strdup (_ ("Cubic foot"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp20_ = g_strdup (_ ("Cubic yard"));
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_ = g_new0 (gchar*, 21 + 1);
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[0] = _tmp0_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[1] = _tmp1_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[2] = _tmp2_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[3] = _tmp3_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[4] = _tmp4_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[5] = _tmp5_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[6] = _tmp6_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[7] = _tmp7_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[8] = _tmp8_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[9] = _tmp9_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[10] = _tmp10_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[11] = _tmp11_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[12] = _tmp12_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[13] = _tmp13_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[14] = _tmp14_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[15] = _tmp15_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[16] = _tmp16_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[17] = _tmp17_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[18] = _tmp18_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[19] = _tmp19_;
#line 37 "../src/Views/ConvVolumeView.vala"
	_tmp21_[20] = _tmp20_;
#line 37 "../src/Views/ConvVolumeView.vala"
	self->priv->units = _tmp21_;
#line 37 "../src/Views/ConvVolumeView.vala"
	self->priv->units_length1 = 21;
#line 37 "../src/Views/ConvVolumeView.vala"
	self->priv->_units_size_ = self->priv->units_length1;
#line 2278 "ConvVolumeView.c"
}

static void
pebbles_conv_volume_view_finalize (GObject * obj)
{
	PebblesConvVolumeView * self;
#line 22 "../src/Views/ConvVolumeView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_CONV_VOLUME_VIEW, PebblesConvVolumeView);
#line 23 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->keypad);
#line 25 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->from_entry);
#line 26 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->to_entry);
#line 29 "../src/Views/ConvVolumeView.vala"
	_pebbles_converter_unref0 (self->priv->conv);
#line 30 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->from_unit);
#line 31 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->to_unit);
#line 32 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->interchange_button);
#line 33 "../src/Views/ConvVolumeView.vala"
	_g_object_unref0 (self->priv->settings);
#line 37 "../src/Views/ConvVolumeView.vala"
	self->priv->units = (_vala_array_free (self->priv->units, self->priv->units_length1, (GDestroyNotify) g_free), NULL);
#line 22 "../src/Views/ConvVolumeView.vala"
	G_OBJECT_CLASS (pebbles_conv_volume_view_parent_class)->finalize (obj);
#line 2307 "ConvVolumeView.c"
}

static GType
pebbles_conv_volume_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesConvVolumeViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_conv_volume_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesConvVolumeView), 0, (GInstanceInitFunc) pebbles_conv_volume_view_instance_init, NULL };
	GType pebbles_conv_volume_view_type_id;
	pebbles_conv_volume_view_type_id = g_type_register_static (gtk_grid_get_type (), "PebblesConvVolumeView", &g_define_type_info, 0);
	PebblesConvVolumeView_private_offset = g_type_add_instance_private (pebbles_conv_volume_view_type_id, sizeof (PebblesConvVolumeViewPrivate));
	return pebbles_conv_volume_view_type_id;
}

GType
pebbles_conv_volume_view_get_type (void)
{
	static volatile gsize pebbles_conv_volume_view_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_conv_volume_view_type_id__volatile)) {
		GType pebbles_conv_volume_view_type_id;
		pebbles_conv_volume_view_type_id = pebbles_conv_volume_view_get_type_once ();
		g_once_init_leave (&pebbles_conv_volume_view_type_id__volatile, pebbles_conv_volume_view_type_id);
	}
	return pebbles_conv_volume_view_type_id__volatile;
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

