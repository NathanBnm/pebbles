/* SourceList.c generated by valac 0.48.14, the Vala compiler
 * generated from SourceList.vala, do not modify */

/*
 *  Copyright (C) 2019 elementary, Inc. (https://elementary.io)
 *                2012-2014 Victor Martinez <victoreduardm@gmail.com>
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */
/**
     * = WORKING INTERNALS =
     *
     * In order to offer a transparent Item-based API, and avoid the need of providing methods
     * to deal with items directly on the SourceList widget, it was decided to follow a monitor-like
     * implementation, where the source list permanently monitors its root item and any other
     * child item added to it. The task of monitoring the properties of the items has been
     * divided among different objects, as shown below:
     *
     * Monitored by: Object::method that receives the signals indicating the property change.
     * Applied by: Object::method that actually updates the tree to reflect the property changes
     *             (directly or indirectly, as in the case of the tree data model).
     *
     * ---------------------------------------------------------------------------------------------
     *   PROPERTY        |  MONITORED BY                     |  APPLIED BY
     * ---------------------------------------------------------------------------------------------
     * + Item            |                                   |
     *   - parent        | Not monitored                     | N/A
     *   - name          | DataModel::on_item_prop_changed   | Tree::name_cell_data_func
     *   - editable      | DataModel::on_item_prop_changed   | Queried when needed (See Tree::start_editing_item)
     *   - visible       | DataModel::on_item_prop_changed   | DataModel::filter_visible_func
     *   - icon          | DataModel::on_item_prop_changed   | Tree::icon_cell_data_func
     *   - activatable   | Same as @icon                     | Same as @icon
     * + ExpandableItem  |                                   |
     *   - collapsible   | DataModel::on_item_prop_changed   | Tree::update_expansion
     *                   |                                   | Tree::expander_cell_data_func
     *   - expanded      | Same as @collapsible              | Same as @collapsible
     * ---------------------------------------------------------------------------------------------
     * * Only automatic properties are monitored. ExpandableItem's additions/removals are handled by
     *   DataModel::add_item() and DataModel::remove_item()
     *
     * Other features:
     * - Sorting: this happens on the tree-model level (DataModel).
     */

#include <glib-object.h>
#include <glib.h>
#include <gtk/gtk.h>
#include <gdk/gdk.h>
#include <pango/pango.h>
#include <float.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <gio/gio.h>
#include <gee.h>
#include <gobject/gvaluecollector.h>
#include <cairo-gobject.h>

#define GRANITE_WIDGETS_TYPE_SOURCE_LIST_SORTABLE (granite_widgets_source_list_sortable_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_SORTABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_SORTABLE, GraniteWidgetsSourceListSortable))
#define GRANITE_WIDGETS_IS_SOURCE_LIST_SORTABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_SORTABLE))
#define GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_SORTABLE, GraniteWidgetsSourceListSortableIface))

typedef struct _GraniteWidgetsSourceListSortable GraniteWidgetsSourceListSortable;
typedef struct _GraniteWidgetsSourceListSortableIface GraniteWidgetsSourceListSortableIface;

#define GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM (granite_widgets_source_list_item_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, GraniteWidgetsSourceListItem))
#define GRANITE_WIDGETS_SOURCE_LIST_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, GraniteWidgetsSourceListItemClass))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM))
#define GRANITE_WIDGETS_SOURCE_LIST_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, GraniteWidgetsSourceListItemClass))

typedef struct _GraniteWidgetsSourceListItem GraniteWidgetsSourceListItem;
typedef struct _GraniteWidgetsSourceListItemClass GraniteWidgetsSourceListItemClass;

#define GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM (granite_widgets_source_list_expandable_item_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItem))
#define GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItemClass))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM))
#define GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItemClass))

typedef struct _GraniteWidgetsSourceListExpandableItem GraniteWidgetsSourceListExpandableItem;
typedef struct _GraniteWidgetsSourceListExpandableItemClass GraniteWidgetsSourceListExpandableItemClass;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_USER_MOVED_ITEM_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_NUM_SIGNALS
};
static guint granite_widgets_source_list_sortable_signals[GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_NUM_SIGNALS] = {0};

#define GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_SOURCE (granite_widgets_source_list_drag_source_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_DRAG_SOURCE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_SOURCE, GraniteWidgetsSourceListDragSource))
#define GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_SOURCE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_SOURCE))
#define GRANITE_WIDGETS_SOURCE_LIST_DRAG_SOURCE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_SOURCE, GraniteWidgetsSourceListDragSourceIface))

typedef struct _GraniteWidgetsSourceListDragSource GraniteWidgetsSourceListDragSource;
typedef struct _GraniteWidgetsSourceListDragSourceIface GraniteWidgetsSourceListDragSourceIface;

#define GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_DEST (granite_widgets_source_list_drag_dest_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_DRAG_DEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_DEST, GraniteWidgetsSourceListDragDest))
#define GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_DEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_DEST))
#define GRANITE_WIDGETS_SOURCE_LIST_DRAG_DEST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST_DRAG_DEST, GraniteWidgetsSourceListDragDestIface))

typedef struct _GraniteWidgetsSourceListDragDest GraniteWidgetsSourceListDragDest;
typedef struct _GraniteWidgetsSourceListDragDestIface GraniteWidgetsSourceListDragDestIface;

#define GRANITE_WIDGETS_TYPE_SOURCE_LIST (granite_widgets_source_list_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceList))
#define GRANITE_WIDGETS_SOURCE_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceListClass))
#define GRANITE_WIDGETS_IS_SOURCE_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST))
#define GRANITE_WIDGETS_IS_SOURCE_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_TYPE_SOURCE_LIST))
#define GRANITE_WIDGETS_SOURCE_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceListClass))

typedef struct _GraniteWidgetsSourceList GraniteWidgetsSourceList;
typedef struct _GraniteWidgetsSourceListClass GraniteWidgetsSourceListClass;
typedef struct _GraniteWidgetsSourceListPrivate GraniteWidgetsSourceListPrivate;

#define GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE (granite_widgets_source_list_tree_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_TREE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTree))
#define GRANITE_WIDGETS_SOURCE_LIST_TREE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTreeClass))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_TREE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_TREE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE))
#define GRANITE_WIDGETS_SOURCE_LIST_TREE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTreeClass))

typedef struct _GraniteWidgetsSourceListTree GraniteWidgetsSourceListTree;
typedef struct _GraniteWidgetsSourceListTreeClass GraniteWidgetsSourceListTreeClass;

#define GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL (granite_widgets_source_list_data_model_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModel))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModelClass))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_DATA_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_DATA_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModelClass))

typedef struct _GraniteWidgetsSourceListDataModel GraniteWidgetsSourceListDataModel;
typedef struct _GraniteWidgetsSourceListDataModelClass GraniteWidgetsSourceListDataModelClass;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ROOT_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_SELECTED_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ELLIPSIZE_MODE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_EDITING_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef gboolean (*GraniteWidgetsSourceListVisibleFunc) (GraniteWidgetsSourceListItem* item, gpointer user_data);
#define __vala_GtkTreePath_free0(var) ((var == NULL) ? NULL : (var = (_vala_GtkTreePath_free (var), NULL)))
#define __vala_GtkTreeIter_free0(var) ((var == NULL) ? NULL : (var = (_vala_GtkTreeIter_free (var), NULL)))
typedef struct _GraniteWidgetsSourceListItemPrivate GraniteWidgetsSourceListItemPrivate;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_PARENT_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_NAME_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_TOOLTIP_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_MARKUP_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_BADGE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITABLE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_VISIBLE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTABLE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_ICON_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_TOOLTIP_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTION_ACTIVATED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_NUM_SIGNALS
};
static guint granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_NUM_SIGNALS] = {0};
typedef struct _GraniteWidgetsSourceListExpandableItemPrivate GraniteWidgetsSourceListExpandableItemPrivate;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_COLLAPSIBLE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_EXPANDED_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_N_CHILDREN_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILDREN_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_NUM_PROPERTIES];
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILD_ADDED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILD_REMOVED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_TOGGLED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_NUM_SIGNALS
};
static guint granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_NUM_SIGNALS] = {0};
typedef struct _GraniteWidgetsSourceListDataModelPrivate GraniteWidgetsSourceListDataModelPrivate;

#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER (granite_widgets_source_list_data_model_node_wrapper_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NODE_WRAPPER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER, GraniteWidgetsSourceListDataModelNodeWrapper))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NODE_WRAPPER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER, GraniteWidgetsSourceListDataModelNodeWrapperClass))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_IS_NODE_WRAPPER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_IS_NODE_WRAPPER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NODE_WRAPPER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER, GraniteWidgetsSourceListDataModelNodeWrapperClass))

typedef struct _GraniteWidgetsSourceListDataModelNodeWrapper GraniteWidgetsSourceListDataModelNodeWrapper;
typedef struct _GraniteWidgetsSourceListDataModelNodeWrapperClass GraniteWidgetsSourceListDataModelNodeWrapperClass;

#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR (granite_widgets_source_list_data_model_item_monitor_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, GraniteWidgetsSourceListDataModelItemMonitor))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, GraniteWidgetsSourceListDataModelItemMonitorClass))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_IS_ITEM_MONITOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_IS_ITEM_MONITOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR))
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, GraniteWidgetsSourceListDataModelItemMonitorClass))

typedef struct _GraniteWidgetsSourceListDataModelItemMonitor GraniteWidgetsSourceListDataModelItemMonitor;
typedef struct _GraniteWidgetsSourceListDataModelItemMonitorClass GraniteWidgetsSourceListDataModelItemMonitorClass;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ROOT_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_data_model_properties[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NUM_PROPERTIES];
typedef enum  {
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM,
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_N_COLUMNS
} GraniteWidgetsSourceListDataModelColumn;

#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_COLUMN (granite_widgets_source_list_data_model_column_get_type ())
#define _granite_widgets_source_list_data_model_node_wrapper_unref0(var) ((var == NULL) ? NULL : (var = (granite_widgets_source_list_data_model_node_wrapper_unref (var), NULL)))
#define _granite_widgets_source_list_data_model_item_monitor_unref0(var) ((var == NULL) ? NULL : (var = (granite_widgets_source_list_data_model_item_monitor_unref (var), NULL)))
typedef struct _Block12Data Block12Data;
typedef struct _GraniteWidgetsSourceListDataModelNodeWrapperPrivate GraniteWidgetsSourceListDataModelNodeWrapperPrivate;
#define __vala_GtkTreeRowReference_free0(var) ((var == NULL) ? NULL : (var = (_vala_GtkTreeRowReference_free (var), NULL)))
typedef struct _GraniteWidgetsSourceListDataModelParamSpecNodeWrapper GraniteWidgetsSourceListDataModelParamSpecNodeWrapper;
typedef struct _GraniteWidgetsSourceListDataModelItemMonitorPrivate GraniteWidgetsSourceListDataModelItemMonitorPrivate;
typedef struct _GraniteWidgetsSourceListDataModelParamSpecItemMonitor GraniteWidgetsSourceListDataModelParamSpecItemMonitor;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_CHANGED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_NUM_SIGNALS
};
static guint granite_widgets_source_list_data_model_item_monitor_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_NUM_SIGNALS] = {0};
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_UPDATED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NUM_SIGNALS
};
static guint granite_widgets_source_list_data_model_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NUM_SIGNALS] = {0};

#define GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON (granite_widgets_source_list_cell_renderer_icon_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON, GraniteWidgetsSourceListCellRendererIcon))
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON, GraniteWidgetsSourceListCellRendererIconClass))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_CELL_RENDERER_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_CELL_RENDERER_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON))
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON, GraniteWidgetsSourceListCellRendererIconClass))

typedef struct _GraniteWidgetsSourceListCellRendererIcon GraniteWidgetsSourceListCellRendererIcon;
typedef struct _GraniteWidgetsSourceListCellRendererIconClass GraniteWidgetsSourceListCellRendererIconClass;
typedef struct _GraniteWidgetsSourceListCellRendererIconPrivate GraniteWidgetsSourceListCellRendererIconPrivate;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_cell_renderer_icon_properties[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_NUM_PROPERTIES];
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_ACTIVATED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_NUM_SIGNALS
};
static guint granite_widgets_source_list_cell_renderer_icon_signals[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_NUM_SIGNALS] = {0};

#define GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER (granite_widgets_source_list_cell_renderer_spacer_get_type ())
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, GraniteWidgetsSourceListCellRendererSpacer))
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, GraniteWidgetsSourceListCellRendererSpacerClass))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_CELL_RENDERER_SPACER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER))
#define GRANITE_WIDGETS_SOURCE_LIST_IS_CELL_RENDERER_SPACER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER))
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, GraniteWidgetsSourceListCellRendererSpacerClass))

typedef struct _GraniteWidgetsSourceListCellRendererSpacer GraniteWidgetsSourceListCellRendererSpacer;
typedef struct _GraniteWidgetsSourceListCellRendererSpacerClass GraniteWidgetsSourceListCellRendererSpacerClass;
typedef struct _GraniteWidgetsSourceListCellRendererSpacerPrivate GraniteWidgetsSourceListCellRendererSpacerPrivate;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_LEVEL_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_cell_renderer_spacer_properties[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_NUM_PROPERTIES];
typedef struct _GraniteWidgetsSourceListTreePrivate GraniteWidgetsSourceListTreePrivate;

#define GRANITE_WIDGETS_TYPE_CELL_RENDERER_BADGE (granite_widgets_cell_renderer_badge_get_type ())
#define GRANITE_WIDGETS_CELL_RENDERER_BADGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_CELL_RENDERER_BADGE, GraniteWidgetsCellRendererBadge))
#define GRANITE_WIDGETS_CELL_RENDERER_BADGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_TYPE_CELL_RENDERER_BADGE, GraniteWidgetsCellRendererBadgeClass))
#define GRANITE_WIDGETS_IS_CELL_RENDERER_BADGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_CELL_RENDERER_BADGE))
#define GRANITE_WIDGETS_IS_CELL_RENDERER_BADGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_TYPE_CELL_RENDERER_BADGE))
#define GRANITE_WIDGETS_CELL_RENDERER_BADGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_TYPE_CELL_RENDERER_BADGE, GraniteWidgetsCellRendererBadgeClass))

typedef struct _GraniteWidgetsCellRendererBadge GraniteWidgetsCellRendererBadge;
typedef struct _GraniteWidgetsCellRendererBadgeClass GraniteWidgetsCellRendererBadgeClass;

#define GRANITE_WIDGETS_TYPE_CELL_RENDERER_EXPANDER (granite_widgets_cell_renderer_expander_get_type ())
#define GRANITE_WIDGETS_CELL_RENDERER_EXPANDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_WIDGETS_TYPE_CELL_RENDERER_EXPANDER, GraniteWidgetsCellRendererExpander))
#define GRANITE_WIDGETS_CELL_RENDERER_EXPANDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_WIDGETS_TYPE_CELL_RENDERER_EXPANDER, GraniteWidgetsCellRendererExpanderClass))
#define GRANITE_WIDGETS_IS_CELL_RENDERER_EXPANDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_WIDGETS_TYPE_CELL_RENDERER_EXPANDER))
#define GRANITE_WIDGETS_IS_CELL_RENDERER_EXPANDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_WIDGETS_TYPE_CELL_RENDERER_EXPANDER))
#define GRANITE_WIDGETS_CELL_RENDERER_EXPANDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_WIDGETS_TYPE_CELL_RENDERER_EXPANDER, GraniteWidgetsCellRendererExpanderClass))

typedef struct _GraniteWidgetsCellRendererExpander GraniteWidgetsCellRendererExpander;
typedef struct _GraniteWidgetsCellRendererExpanderClass GraniteWidgetsCellRendererExpanderClass;
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_TREE_0_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_DATA_MODEL_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_SELECTED_ITEM_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_EDITING_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_ELLIPSIZE_MODE_PROPERTY,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_NUM_PROPERTIES
};
static GParamSpec* granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_NUM_PROPERTIES];
typedef enum  {
	GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_N_COLS
} GraniteWidgetsSourceListTreeColumn;

#define GRANITE_WIDGETS_SOURCE_LIST_TREE_TYPE_COLUMN (granite_widgets_source_list_tree_column_get_type ())
#define _gtk_target_list_unref0(var) ((var == NULL) ? NULL : (var = (gtk_target_list_unref (var), NULL)))
#define _g_string_free0(var) ((var == NULL) ? NULL : (var = (g_string_free (var, TRUE), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_param_spec_unref0(var) ((var == NULL) ? NULL : (var = (g_param_spec_unref (var), NULL)))
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_TREE_ITEM_SELECTED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_TREE_NUM_SIGNALS
};
static guint granite_widgets_source_list_tree_signals[GRANITE_WIDGETS_SOURCE_LIST_TREE_NUM_SIGNALS] = {0};
enum  {
	GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTED_SIGNAL,
	GRANITE_WIDGETS_SOURCE_LIST_NUM_SIGNALS
};
static guint granite_widgets_source_list_signals[GRANITE_WIDGETS_SOURCE_LIST_NUM_SIGNALS] = {0};
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _GraniteWidgetsSourceListSortableIface {
	GTypeInterface parent_iface;
	gboolean (*allow_dnd_sorting) (GraniteWidgetsSourceListSortable* self);
	gint (*compare) (GraniteWidgetsSourceListSortable* self, GraniteWidgetsSourceListItem* a, GraniteWidgetsSourceListItem* b);
};

struct _GraniteWidgetsSourceListDragSourceIface {
	GTypeInterface parent_iface;
	gboolean (*draggable) (GraniteWidgetsSourceListDragSource* self);
	void (*prepare_selection_data) (GraniteWidgetsSourceListDragSource* self, GtkSelectionData* selection_data);
};

struct _GraniteWidgetsSourceListDragDestIface {
	GTypeInterface parent_iface;
	gboolean (*data_drop_possible) (GraniteWidgetsSourceListDragDest* self, GdkDragContext* context, GtkSelectionData* data);
	GdkDragAction (*data_received) (GraniteWidgetsSourceListDragDest* self, GdkDragContext* context, GtkSelectionData* data);
};

struct _GraniteWidgetsSourceList {
	GtkScrolledWindow parent_instance;
	GraniteWidgetsSourceListPrivate * priv;
};

struct _GraniteWidgetsSourceListClass {
	GtkScrolledWindowClass parent_class;
	void (*item_selected) (GraniteWidgetsSourceList* self, GraniteWidgetsSourceListItem* item);
};

struct _GraniteWidgetsSourceListPrivate {
	GraniteWidgetsSourceListTree* tree;
	GraniteWidgetsSourceListDataModel* data_model;
};

struct _GraniteWidgetsSourceListItem {
	GObject parent_instance;
	GraniteWidgetsSourceListItemPrivate * priv;
};

struct _GraniteWidgetsSourceListItemClass {
	GObjectClass parent_class;
	void (*edited) (GraniteWidgetsSourceListItem* self, const gchar* new_name);
	void (*action_activated) (GraniteWidgetsSourceListItem* self);
	void (*activated) (GraniteWidgetsSourceListItem* self);
	GtkMenu* (*get_context_menu) (GraniteWidgetsSourceListItem* self);
};

struct _GraniteWidgetsSourceListItemPrivate {
	GraniteWidgetsSourceListExpandableItem* _parent;
	gchar* _name;
	gchar* _tooltip;
	gchar* _markup;
	gchar* _badge;
	gboolean _editable;
	gboolean _visible;
	gboolean _selectable;
	GIcon* _icon;
	GIcon* _activatable;
	gchar* _activatable_tooltip;
};

struct _GraniteWidgetsSourceListExpandableItem {
	GraniteWidgetsSourceListItem parent_instance;
	GraniteWidgetsSourceListExpandableItemPrivate * priv;
};

struct _GraniteWidgetsSourceListExpandableItemClass {
	GraniteWidgetsSourceListItemClass parent_class;
	void (*toggled) (GraniteWidgetsSourceListExpandableItem* self);
};

struct _GraniteWidgetsSourceListExpandableItemPrivate {
	gboolean _collapsible;
	gboolean _expanded;
	GeeCollection* children_list;
};

struct _GraniteWidgetsSourceListDataModel {
	GtkTreeModelFilter parent_instance;
	GraniteWidgetsSourceListDataModelPrivate * priv;
};

struct _GraniteWidgetsSourceListDataModelClass {
	GtkTreeModelFilterClass parent_class;
};

struct _GraniteWidgetsSourceListDataModelPrivate {
	GraniteWidgetsSourceListExpandableItem* _root;
	GeeHashMap* items;
	GeeHashMap* monitors;
	GtkTreeStore* child_tree;
	GraniteWidgetsSourceListVisibleFunc filter_func;
	gpointer filter_func_target;
};

struct _Block12Data {
	int _ref_count_;
	GraniteWidgetsSourceListDataModel* self;
	GraniteWidgetsSourceListExpandableItem* parent;
};

struct _GraniteWidgetsSourceListDataModelNodeWrapper {
	GTypeInstance parent_instance;
	volatile int ref_count;
	GraniteWidgetsSourceListDataModelNodeWrapperPrivate * priv;
};

struct _GraniteWidgetsSourceListDataModelNodeWrapperClass {
	GTypeClass parent_class;
	void (*finalize) (GraniteWidgetsSourceListDataModelNodeWrapper *self);
};

struct _GraniteWidgetsSourceListDataModelNodeWrapperPrivate {
	GtkTreeRowReference* row_reference;
};

struct _GraniteWidgetsSourceListDataModelParamSpecNodeWrapper {
	GParamSpec parent_instance;
};

struct _GraniteWidgetsSourceListDataModelItemMonitor {
	GTypeInstance parent_instance;
	volatile int ref_count;
	GraniteWidgetsSourceListDataModelItemMonitorPrivate * priv;
};

struct _GraniteWidgetsSourceListDataModelItemMonitorClass {
	GTypeClass parent_class;
	void (*finalize) (GraniteWidgetsSourceListDataModelItemMonitor *self);
};

struct _GraniteWidgetsSourceListDataModelItemMonitorPrivate {
	GraniteWidgetsSourceListItem* item;
};

struct _GraniteWidgetsSourceListDataModelParamSpecItemMonitor {
	GParamSpec parent_instance;
};

struct _GraniteWidgetsSourceListCellRendererIcon {
	GtkCellRendererPixbuf parent_instance;
	GraniteWidgetsSourceListCellRendererIconPrivate * priv;
};

struct _GraniteWidgetsSourceListCellRendererIconClass {
	GtkCellRendererPixbufClass parent_class;
};

struct _GraniteWidgetsSourceListCellRendererSpacer {
	GtkCellRenderer parent_instance;
	GraniteWidgetsSourceListCellRendererSpacerPrivate * priv;
};

struct _GraniteWidgetsSourceListCellRendererSpacerClass {
	GtkCellRendererClass parent_class;
};

struct _GraniteWidgetsSourceListCellRendererSpacerPrivate {
	gint _level;
};

struct _GraniteWidgetsSourceListTree {
	GtkTreeView parent_instance;
	GraniteWidgetsSourceListTreePrivate * priv;
};

struct _GraniteWidgetsSourceListTreeClass {
	GtkTreeViewClass parent_class;
};

struct _GraniteWidgetsSourceListTreePrivate {
	GraniteWidgetsSourceListDataModel* _data_model;
	GraniteWidgetsSourceListItem* selected;
	GraniteWidgetsSourceListItem* edited;
	GtkEntry* editable_entry;
	GtkCellRendererText* text_cell;
	GraniteWidgetsSourceListCellRendererIcon* icon_cell;
	GraniteWidgetsSourceListCellRendererIcon* activatable_cell;
	GraniteWidgetsCellRendererBadge* badge_cell;
	GraniteWidgetsCellRendererExpander* primary_expander_cell;
	GraniteWidgetsCellRendererExpander* secondary_expander_cell;
	GeeHashMap* spacer_cells;
	gboolean unselectable_item_clicked;
};

static gint GraniteWidgetsSourceList_private_offset;
static gpointer granite_widgets_source_list_parent_class = NULL;
static gint GraniteWidgetsSourceListItem_private_offset;
static gpointer granite_widgets_source_list_item_parent_class = NULL;
static gint GraniteWidgetsSourceListExpandableItem_private_offset;
static gpointer granite_widgets_source_list_expandable_item_parent_class = NULL;
static gint GraniteWidgetsSourceListDataModel_private_offset;
static gpointer granite_widgets_source_list_data_model_parent_class = NULL;
static gint GraniteWidgetsSourceListDataModelNodeWrapper_private_offset;
static gpointer granite_widgets_source_list_data_model_node_wrapper_parent_class = NULL;
static gint GraniteWidgetsSourceListDataModelItemMonitor_private_offset;
static gpointer granite_widgets_source_list_data_model_item_monitor_parent_class = NULL;
static GtkTreeDragSourceIface * granite_widgets_source_list_data_model_gtk_tree_drag_source_parent_iface = NULL;
static GtkTreeDragDestIface * granite_widgets_source_list_data_model_gtk_tree_drag_dest_parent_iface = NULL;
static gpointer granite_widgets_source_list_cell_renderer_icon_parent_class = NULL;
static gint GraniteWidgetsSourceListCellRendererSpacer_private_offset;
static gpointer granite_widgets_source_list_cell_renderer_spacer_parent_class = NULL;
static gint GraniteWidgetsSourceListTree_private_offset;
static gpointer granite_widgets_source_list_tree_parent_class = NULL;

GType granite_widgets_source_list_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListItem, g_object_unref)
GType granite_widgets_source_list_expandable_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListExpandableItem, g_object_unref)
GType granite_widgets_source_list_sortable_get_type (void) G_GNUC_CONST;
gboolean granite_widgets_source_list_sortable_allow_dnd_sorting (GraniteWidgetsSourceListSortable* self);
gint granite_widgets_source_list_sortable_compare (GraniteWidgetsSourceListSortable* self,
                                                   GraniteWidgetsSourceListItem* a,
                                                   GraniteWidgetsSourceListItem* b);
static GType granite_widgets_source_list_sortable_get_type_once (void);
GType granite_widgets_source_list_drag_source_get_type (void) G_GNUC_CONST;
gboolean granite_widgets_source_list_drag_source_draggable (GraniteWidgetsSourceListDragSource* self);
void granite_widgets_source_list_drag_source_prepare_selection_data (GraniteWidgetsSourceListDragSource* self,
                                                                     GtkSelectionData* selection_data);
static GType granite_widgets_source_list_drag_source_get_type_once (void);
GType granite_widgets_source_list_drag_dest_get_type (void) G_GNUC_CONST;
gboolean granite_widgets_source_list_drag_dest_data_drop_possible (GraniteWidgetsSourceListDragDest* self,
                                                                   GdkDragContext* context,
                                                                   GtkSelectionData* data);
GdkDragAction granite_widgets_source_list_drag_dest_data_received (GraniteWidgetsSourceListDragDest* self,
                                                                   GdkDragContext* context,
                                                                   GtkSelectionData* data);
static GType granite_widgets_source_list_drag_dest_get_type_once (void);
GType granite_widgets_source_list_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceList, g_object_unref)
static GType granite_widgets_source_list_tree_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListTree, g_object_unref)
static GType granite_widgets_source_list_data_model_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListDataModel, g_object_unref)
static void granite_widgets_source_list_real_item_selected (GraniteWidgetsSourceList* self,
                                                     GraniteWidgetsSourceListItem* item);
GraniteWidgetsSourceListExpandableItem* granite_widgets_source_list_get_root (GraniteWidgetsSourceList* self);
static GraniteWidgetsSourceListExpandableItem* granite_widgets_source_list_data_model_get_root (GraniteWidgetsSourceListDataModel* self);
void granite_widgets_source_list_set_root (GraniteWidgetsSourceList* self,
                                           GraniteWidgetsSourceListExpandableItem* value);
static void granite_widgets_source_list_data_model_set_root (GraniteWidgetsSourceListDataModel* self,
                                                      GraniteWidgetsSourceListExpandableItem* value);
GraniteWidgetsSourceListItem* granite_widgets_source_list_get_selected (GraniteWidgetsSourceList* self);
static GraniteWidgetsSourceListItem* granite_widgets_source_list_tree_get_selected_item (GraniteWidgetsSourceListTree* self);
void granite_widgets_source_list_set_selected (GraniteWidgetsSourceList* self,
                                               GraniteWidgetsSourceListItem* value);
GraniteWidgetsSourceListExpandableItem* granite_widgets_source_list_item_get_parent (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_expandable_item_expand_with_parents (GraniteWidgetsSourceListExpandableItem* self);
static void granite_widgets_source_list_tree_set_selected_item (GraniteWidgetsSourceListTree* self,
                                                         GraniteWidgetsSourceListItem* value);
PangoEllipsizeMode granite_widgets_source_list_get_ellipsize_mode (GraniteWidgetsSourceList* self);
static PangoEllipsizeMode granite_widgets_source_list_tree_get_ellipsize_mode (GraniteWidgetsSourceListTree* self);
void granite_widgets_source_list_set_ellipsize_mode (GraniteWidgetsSourceList* self,
                                                     PangoEllipsizeMode value);
static void granite_widgets_source_list_tree_set_ellipsize_mode (GraniteWidgetsSourceListTree* self,
                                                          PangoEllipsizeMode value);
gboolean granite_widgets_source_list_get_editing (GraniteWidgetsSourceList* self);
static gboolean granite_widgets_source_list_tree_get_editing (GraniteWidgetsSourceListTree* self);
static GraniteWidgetsSourceListDataModel* granite_widgets_source_list_data_model_new (void);
static GraniteWidgetsSourceListDataModel* granite_widgets_source_list_data_model_construct (GType object_type);
GraniteWidgetsSourceList* granite_widgets_source_list_new (GraniteWidgetsSourceListExpandableItem* root);
GraniteWidgetsSourceList* granite_widgets_source_list_construct (GType object_type,
                                                                 GraniteWidgetsSourceListExpandableItem* root);
gboolean granite_widgets_source_list_has_item (GraniteWidgetsSourceList* self,
                                               GraniteWidgetsSourceListItem* item);
static gboolean granite_widgets_source_list_data_model_has_item (GraniteWidgetsSourceListDataModel* self,
                                                          GraniteWidgetsSourceListItem* item);
void granite_widgets_source_list_set_filter_func (GraniteWidgetsSourceList* self,
                                                  GraniteWidgetsSourceListVisibleFunc visible_func,
                                                  gpointer visible_func_target,
                                                  gboolean refilter);
static void granite_widgets_source_list_data_model_set_filter_func (GraniteWidgetsSourceListDataModel* self,
                                                             GraniteWidgetsSourceListVisibleFunc visible_func,
                                                             gpointer visible_func_target);
void granite_widgets_source_list_refilter (GraniteWidgetsSourceList* self);
gboolean granite_widgets_source_list_is_item_expanded (GraniteWidgetsSourceList* self,
                                                       GraniteWidgetsSourceListItem* item);
static GtkTreePath* granite_widgets_source_list_data_model_get_item_path (GraniteWidgetsSourceListDataModel* self,
                                                                   GraniteWidgetsSourceListItem* item);
static void _vala_GtkTreePath_free (GtkTreePath* self);
gboolean granite_widgets_source_list_start_editing_item (GraniteWidgetsSourceList* self,
                                                         GraniteWidgetsSourceListItem* item);
static gboolean granite_widgets_source_list_tree_start_editing_item (GraniteWidgetsSourceListTree* self,
                                                              GraniteWidgetsSourceListItem* item);
void granite_widgets_source_list_stop_editing (GraniteWidgetsSourceList* self);
static void granite_widgets_source_list_tree_stop_editing (GraniteWidgetsSourceListTree* self);
void granite_widgets_source_list_enable_drag_source (GraniteWidgetsSourceList* self,
                                                     GtkTargetEntry* src_entries,
                                                     gint src_entries_length1);
static void granite_widgets_source_list_tree_configure_drag_source (GraniteWidgetsSourceListTree* self,
                                                             GtkTargetEntry* src_entries,
                                                             gint src_entries_length1);
void granite_widgets_source_list_disable_drag_source (GraniteWidgetsSourceList* self);
void granite_widgets_source_list_enable_drag_dest (GraniteWidgetsSourceList* self,
                                                   GtkTargetEntry* dest_entries,
                                                   gint dest_entries_length1,
                                                   GdkDragAction actions);
static void granite_widgets_source_list_tree_configure_drag_dest (GraniteWidgetsSourceListTree* self,
                                                           GtkTargetEntry* dest_entries,
                                                           gint dest_entries_length1,
                                                           GdkDragAction actions);
void granite_widgets_source_list_disable_drag_dest (GraniteWidgetsSourceList* self);
gboolean granite_widgets_source_list_scroll_to_item (GraniteWidgetsSourceList* self,
                                                     GraniteWidgetsSourceListItem* item,
                                                     gboolean expand_parents,
                                                     gboolean use_align,
                                                     gfloat row_align);
static gboolean granite_widgets_source_list_tree_scroll_to_item (GraniteWidgetsSourceListTree* self,
                                                          GraniteWidgetsSourceListItem* item,
                                                          gboolean use_align,
                                                          gfloat row_align);
GraniteWidgetsSourceListItem* granite_widgets_source_list_get_previous_item (GraniteWidgetsSourceList* self,
                                                                             GraniteWidgetsSourceListItem* reference);
static GtkTreeIter* granite_widgets_source_list_data_model_get_item_iter (GraniteWidgetsSourceListDataModel* self,
                                                                   GraniteWidgetsSourceListItem* item);
static GraniteWidgetsSourceListItem* granite_widgets_source_list_data_model_get_item (GraniteWidgetsSourceListDataModel* self,
                                                                               GtkTreeIter* iter);
static void _vala_GtkTreeIter_free (GtkTreeIter* self);
GraniteWidgetsSourceListItem* granite_widgets_source_list_get_next_item (GraniteWidgetsSourceList* self,
                                                                         GraniteWidgetsSourceListItem* reference);
GraniteWidgetsSourceListItem* granite_widgets_source_list_get_first_child (GraniteWidgetsSourceList* self,
                                                                           GraniteWidgetsSourceListExpandableItem* parent);
static GraniteWidgetsSourceListItem* granite_widgets_source_list_get_nth_child (GraniteWidgetsSourceList* self,
                                                                         GraniteWidgetsSourceListExpandableItem* parent,
                                                                         gint index);
GraniteWidgetsSourceListItem* granite_widgets_source_list_get_last_child (GraniteWidgetsSourceList* self,
                                                                          GraniteWidgetsSourceListExpandableItem* parent);
guint granite_widgets_source_list_get_n_visible_children (GraniteWidgetsSourceList* self,
                                                          GraniteWidgetsSourceListExpandableItem* parent);
GtkMenu* granite_widgets_source_list_item_get_context_menu (GraniteWidgetsSourceListItem* self);
static void granite_widgets_source_list_item_real_edited (GraniteWidgetsSourceListItem* self,
                                                   const gchar* new_name);
gboolean granite_widgets_source_list_item_get_editable (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_name (GraniteWidgetsSourceListItem* self,
                                                const gchar* value);
static void granite_widgets_source_list_item_real_action_activated (GraniteWidgetsSourceListItem* self);
static void granite_widgets_source_list_item_real_activated (GraniteWidgetsSourceListItem* self);
G_GNUC_INTERNAL void granite_widgets_source_list_item_set_parent (GraniteWidgetsSourceListItem* self,
                                                  GraniteWidgetsSourceListExpandableItem* value);
const gchar* granite_widgets_source_list_item_get_name (GraniteWidgetsSourceListItem* self);
const gchar* granite_widgets_source_list_item_get_tooltip (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_tooltip (GraniteWidgetsSourceListItem* self,
                                                   const gchar* value);
const gchar* granite_widgets_source_list_item_get_markup (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_markup (GraniteWidgetsSourceListItem* self,
                                                  const gchar* value);
const gchar* granite_widgets_source_list_item_get_badge (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_badge (GraniteWidgetsSourceListItem* self,
                                                 const gchar* value);
void granite_widgets_source_list_item_set_editable (GraniteWidgetsSourceListItem* self,
                                                    gboolean value);
gboolean granite_widgets_source_list_item_get_visible (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_visible (GraniteWidgetsSourceListItem* self,
                                                   gboolean value);
gboolean granite_widgets_source_list_item_get_selectable (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_selectable (GraniteWidgetsSourceListItem* self,
                                                      gboolean value);
GIcon* granite_widgets_source_list_item_get_icon (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_icon (GraniteWidgetsSourceListItem* self,
                                                GIcon* value);
GIcon* granite_widgets_source_list_item_get_activatable (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_activatable (GraniteWidgetsSourceListItem* self,
                                                       GIcon* value);
const gchar* granite_widgets_source_list_item_get_activatable_tooltip (GraniteWidgetsSourceListItem* self);
void granite_widgets_source_list_item_set_activatable_tooltip (GraniteWidgetsSourceListItem* self,
                                                               const gchar* value);
GraniteWidgetsSourceListItem* granite_widgets_source_list_item_new (const gchar* name);
GraniteWidgetsSourceListItem* granite_widgets_source_list_item_construct (GType object_type,
                                                                          const gchar* name);
static GtkMenu* granite_widgets_source_list_item_real_get_context_menu (GraniteWidgetsSourceListItem* self);
static void granite_widgets_source_list_item_finalize (GObject * obj);
static GType granite_widgets_source_list_item_get_type_once (void);
static void _vala_granite_widgets_source_list_item_get_property (GObject * object,
                                                          guint property_id,
                                                          GValue * value,
                                                          GParamSpec * pspec);
static void _vala_granite_widgets_source_list_item_set_property (GObject * object,
                                                          guint property_id,
                                                          const GValue * value,
                                                          GParamSpec * pspec);
static void granite_widgets_source_list_expandable_item_real_toggled (GraniteWidgetsSourceListExpandableItem* self);
gboolean granite_widgets_source_list_expandable_item_get_collapsible (GraniteWidgetsSourceListExpandableItem* self);
void granite_widgets_source_list_expandable_item_set_collapsible (GraniteWidgetsSourceListExpandableItem* self,
                                                                  gboolean value);
gboolean granite_widgets_source_list_expandable_item_get_expanded (GraniteWidgetsSourceListExpandableItem* self);
void granite_widgets_source_list_expandable_item_set_expanded (GraniteWidgetsSourceListExpandableItem* self,
                                                               gboolean value);
guint granite_widgets_source_list_expandable_item_get_n_children (GraniteWidgetsSourceListExpandableItem* self);
GeeCollection* granite_widgets_source_list_expandable_item_get_children (GraniteWidgetsSourceListExpandableItem* self);
GraniteWidgetsSourceListExpandableItem* granite_widgets_source_list_expandable_item_new (const gchar* name);
GraniteWidgetsSourceListExpandableItem* granite_widgets_source_list_expandable_item_construct (GType object_type,
                                                                                               const gchar* name);
gboolean granite_widgets_source_list_expandable_item_contains (GraniteWidgetsSourceListExpandableItem* self,
                                                               GraniteWidgetsSourceListItem* item);
void granite_widgets_source_list_expandable_item_add (GraniteWidgetsSourceListExpandableItem* self,
                                                      GraniteWidgetsSourceListItem* item);
void granite_widgets_source_list_expandable_item_remove (GraniteWidgetsSourceListExpandableItem* self,
                                                         GraniteWidgetsSourceListItem* item);
void granite_widgets_source_list_expandable_item_clear (GraniteWidgetsSourceListExpandableItem* self);
void granite_widgets_source_list_expandable_item_expand_all (GraniteWidgetsSourceListExpandableItem* self,
                                                             gboolean inclusive,
                                                             gboolean recursive);
static void granite_widgets_source_list_expandable_item_set_expansion (GraniteWidgetsSourceListExpandableItem* item,
                                                                gboolean inclusive,
                                                                gboolean recursive,
                                                                gboolean expanded);
void granite_widgets_source_list_expandable_item_collapse_all (GraniteWidgetsSourceListExpandableItem* self,
                                                               gboolean inclusive,
                                                               gboolean recursive);
void granite_widgets_source_list_expandable_item_collapse_with_parents (GraniteWidgetsSourceListExpandableItem* self);
static GObject * granite_widgets_source_list_expandable_item_constructor (GType type,
                                                                   guint n_construct_properties,
                                                                   GObjectConstructParam * construct_properties);
static void granite_widgets_source_list_expandable_item_finalize (GObject * obj);
static GType granite_widgets_source_list_expandable_item_get_type_once (void);
static void _vala_granite_widgets_source_list_expandable_item_get_property (GObject * object,
                                                                     guint property_id,
                                                                     GValue * value,
                                                                     GParamSpec * pspec);
static void _vala_granite_widgets_source_list_expandable_item_set_property (GObject * object,
                                                                     guint property_id,
                                                                     const GValue * value,
                                                                     GParamSpec * pspec);
static gpointer granite_widgets_source_list_data_model_node_wrapper_ref (gpointer instance);
static void granite_widgets_source_list_data_model_node_wrapper_unref (gpointer instance);
static GParamSpec* granite_widgets_source_list_data_model_param_spec_node_wrapper (const gchar* name,
                                                                            const gchar* nick,
                                                                            const gchar* blurb,
                                                                            GType object_type,
                                                                            GParamFlags flags) G_GNUC_UNUSED;
static void granite_widgets_source_list_data_model_value_set_node_wrapper (GValue* value,
                                                                    gpointer v_object) G_GNUC_UNUSED;
static void granite_widgets_source_list_data_model_value_take_node_wrapper (GValue* value,
                                                                     gpointer v_object) G_GNUC_UNUSED;
static gpointer granite_widgets_source_list_data_model_value_get_node_wrapper (const GValue* value) G_GNUC_UNUSED;
static GType granite_widgets_source_list_data_model_node_wrapper_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListDataModelNodeWrapper, granite_widgets_source_list_data_model_node_wrapper_unref)
static gpointer granite_widgets_source_list_data_model_item_monitor_ref (gpointer instance);
static void granite_widgets_source_list_data_model_item_monitor_unref (gpointer instance);
static GParamSpec* granite_widgets_source_list_data_model_param_spec_item_monitor (const gchar* name,
                                                                            const gchar* nick,
                                                                            const gchar* blurb,
                                                                            GType object_type,
                                                                            GParamFlags flags) G_GNUC_UNUSED;
static void granite_widgets_source_list_data_model_value_set_item_monitor (GValue* value,
                                                                    gpointer v_object) G_GNUC_UNUSED;
static void granite_widgets_source_list_data_model_value_take_item_monitor (GValue* value,
                                                                     gpointer v_object) G_GNUC_UNUSED;
static gpointer granite_widgets_source_list_data_model_value_get_item_monitor (const GValue* value) G_GNUC_UNUSED;
static GType granite_widgets_source_list_data_model_item_monitor_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListDataModelItemMonitor, granite_widgets_source_list_data_model_item_monitor_unref)
static GType granite_widgets_source_list_data_model_column_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
static GType granite_widgets_source_list_data_model_column_type (GraniteWidgetsSourceListDataModelColumn self);
#define GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_PARENT_NEEDS_UPDATE "item-parent-needs-update"
static void granite_widgets_source_list_data_model_remove_children_monitor (GraniteWidgetsSourceListDataModel* self,
                                                                     GraniteWidgetsSourceListExpandableItem* item);
static void granite_widgets_source_list_data_model_remove_item (GraniteWidgetsSourceListDataModel* self,
                                                         GraniteWidgetsSourceListItem* item);
static void granite_widgets_source_list_data_model_add_children_monitor (GraniteWidgetsSourceListDataModel* self,
                                                                  GraniteWidgetsSourceListExpandableItem* item);
static void granite_widgets_source_list_data_model_add_item (GraniteWidgetsSourceListDataModel* self,
                                                      GraniteWidgetsSourceListItem* item);
static void granite_widgets_source_list_data_model_update_item (GraniteWidgetsSourceListDataModel* self,
                                                         GraniteWidgetsSourceListItem* item);
static GtkTreePath* granite_widgets_source_list_data_model_node_wrapper_get_path (GraniteWidgetsSourceListDataModelNodeWrapper* self);
static GtkTreeIter* granite_widgets_source_list_data_model_node_wrapper_get_iter (GraniteWidgetsSourceListDataModelNodeWrapper* self);
static GtkTreeIter* granite_widgets_source_list_data_model_get_item_child_iter (GraniteWidgetsSourceListDataModel* self,
                                                                         GraniteWidgetsSourceListItem* item);
static GtkTreeIter* _vala_GtkTreeIter_copy (GtkTreeIter* self);
static GraniteWidgetsSourceListDataModelNodeWrapper* granite_widgets_source_list_data_model_node_wrapper_new (GtkTreeModel* model,
                                                                                                       GtkTreeIter* iter);
static GraniteWidgetsSourceListDataModelNodeWrapper* granite_widgets_source_list_data_model_node_wrapper_construct (GType object_type,
                                                                                                             GtkTreeModel* model,
                                                                                                             GtkTreeIter* iter);
static void granite_widgets_source_list_data_model_add_property_monitor (GraniteWidgetsSourceListDataModel* self,
                                                                  GraniteWidgetsSourceListItem* item);
static void granite_widgets_source_list_data_model_push_parent_update (GraniteWidgetsSourceListDataModel* self,
                                                                GraniteWidgetsSourceListExpandableItem* parent);
static void granite_widgets_source_list_data_model_remove_property_monitor (GraniteWidgetsSourceListDataModel* self,
                                                                     GraniteWidgetsSourceListItem* item);
static GraniteWidgetsSourceListDataModelItemMonitor* granite_widgets_source_list_data_model_item_monitor_new (GraniteWidgetsSourceListItem* item);
static GraniteWidgetsSourceListDataModelItemMonitor* granite_widgets_source_list_data_model_item_monitor_construct (GType object_type,
                                                                                                             GraniteWidgetsSourceListItem* item);
static void granite_widgets_source_list_data_model_on_item_prop_changed (GraniteWidgetsSourceListDataModel* self,
                                                                  GraniteWidgetsSourceListItem* item,
                                                                  const gchar* prop_name);
static void _granite_widgets_source_list_data_model_on_item_prop_changed_granite_widgets_source_list_data_model_item_monitor_changed (GraniteWidgetsSourceListDataModelItemMonitor* _sender,
                                                                                                                               GraniteWidgetsSourceListItem* _self_,
                                                                                                                               const gchar* prop_name,
                                                                                                                               gpointer self);
static void granite_widgets_source_list_data_model_on_item_child_added (GraniteWidgetsSourceListDataModel* self,
                                                                 GraniteWidgetsSourceListItem* item);
static void _granite_widgets_source_list_data_model_on_item_child_added_granite_widgets_source_list_expandable_item_child_added (GraniteWidgetsSourceListExpandableItem* _sender,
                                                                                                                          GraniteWidgetsSourceListItem* item,
                                                                                                                          gpointer self);
static void granite_widgets_source_list_data_model_on_item_child_removed (GraniteWidgetsSourceListDataModel* self,
                                                                   GraniteWidgetsSourceListItem* item);
static void _granite_widgets_source_list_data_model_on_item_child_removed_granite_widgets_source_list_expandable_item_child_removed (GraniteWidgetsSourceListExpandableItem* _sender,
                                                                                                                              GraniteWidgetsSourceListItem* item,
                                                                                                                              gpointer self);
static Block12Data* block12_data_ref (Block12Data* _data12_);
static void block12_data_unref (void * _userdata_);
static gboolean ___lambda77_ (Block12Data* _data12_);
static gboolean ____lambda77__gsource_func (gpointer self);
static GraniteWidgetsSourceListItem* granite_widgets_source_list_data_model_get_item_from_path (GraniteWidgetsSourceListDataModel* self,
                                                                                         GtkTreePath* path);
static GtkTreePath* granite_widgets_source_list_data_model_get_item_child_path (GraniteWidgetsSourceListDataModel* self,
                                                                         GraniteWidgetsSourceListItem* item);
static gboolean granite_widgets_source_list_data_model_is_category (GraniteWidgetsSourceListDataModel* self,
                                                             GraniteWidgetsSourceListItem* item,
                                                             GtkTreeIter* iter,
                                                             GtkTreePath* path);
static gboolean granite_widgets_source_list_data_model_is_iter_at_root_level (GraniteWidgetsSourceListDataModel* self,
                                                                       GtkTreeIter* iter);
static gboolean granite_widgets_source_list_data_model_is_path_at_root_level (GraniteWidgetsSourceListDataModel* self,
                                                                       GtkTreePath* path);
static void granite_widgets_source_list_data_model_resort (GraniteWidgetsSourceListDataModel* self);
static gint granite_widgets_source_list_data_model_child_model_sort_func (GraniteWidgetsSourceListDataModel* self,
                                                                   GtkTreeModel* model,
                                                                   GtkTreeIter* a,
                                                                   GtkTreeIter* b);
static gboolean granite_widgets_source_list_data_model_filter_visible_func (GraniteWidgetsSourceListDataModel* self,
                                                                     GtkTreeModel* child_model,
                                                                     GtkTreeIter* iter);
static gboolean granite_widgets_source_list_data_model_real_drag_data_received (GtkTreeDragDest* base,
                                                                         GtkTreePath* dest,
                                                                         GtkSelectionData* selection_data);
static gboolean granite_widgets_source_list_data_model_child_tree_drag_data_received (GraniteWidgetsSourceListDataModel* self,
                                                                               GtkTreePath* dest,
                                                                               GtkTreePath* src_path);
static GtkTreePath* _vala_GtkTreePath_copy (GtkTreePath* self);
static void granite_widgets_source_list_data_model_recursive_node_copy (GraniteWidgetsSourceListDataModel* self,
                                                                 GtkTreeIter* src_iter,
                                                                 GtkTreeIter* dest_iter);
static void granite_widgets_source_list_data_model_move_item (GraniteWidgetsSourceListDataModel* self,
                                                       GtkTreeIter* src_iter,
                                                       GtkTreeIter* dest_iter);
static gboolean granite_widgets_source_list_data_model_real_row_drop_possible (GtkTreeDragDest* base,
                                                                        GtkTreePath* dest,
                                                                        GtkSelectionData* selection_data);
static gint* _vala_array_dup1 (gint* self,
                        gint length);
static gint* _vala_array_dup2 (gint* self,
                        gint length);
static gboolean granite_widgets_source_list_data_model_real_drag_data_get (GtkTreeDragSource* base,
                                                                    GtkTreePath* path,
                                                                    GtkSelectionData* selection_data);
static gboolean granite_widgets_source_list_data_model_real_row_draggable (GtkTreeDragSource* base,
                                                                    GtkTreePath* path);
static void _vala_GtkTreeRowReference_free (GtkTreeRowReference* self);
static gboolean granite_widgets_source_list_data_model_node_wrapper_get_valid (GraniteWidgetsSourceListDataModelNodeWrapper* self);
static void granite_widgets_source_list_data_model_node_wrapper_finalize (GraniteWidgetsSourceListDataModelNodeWrapper * obj);
static GType granite_widgets_source_list_data_model_node_wrapper_get_type_once (void);
static void granite_widgets_source_list_data_model_item_monitor_on_notify (GraniteWidgetsSourceListDataModelItemMonitor* self,
                                                                    GParamSpec* prop);
static void _granite_widgets_source_list_data_model_item_monitor_on_notify_g_object_notify (GObject* _sender,
                                                                                     GParamSpec* pspec,
                                                                                     gpointer self);
static void g_cclosure_user_marshal_VOID__OBJECT_STRING (GClosure * closure,
                                                  GValue * return_value,
                                                  guint n_param_values,
                                                  const GValue * param_values,
                                                  gpointer invocation_hint,
                                                  gpointer marshal_data);
static void granite_widgets_source_list_data_model_item_monitor_finalize (GraniteWidgetsSourceListDataModelItemMonitor * obj);
static GType granite_widgets_source_list_data_model_item_monitor_get_type_once (void);
static GObject * granite_widgets_source_list_data_model_constructor (GType type,
                                                              guint n_construct_properties,
                                                              GObjectConstructParam * construct_properties);
static gint _granite_widgets_source_list_data_model_child_model_sort_func_gtk_tree_iter_compare_func (GtkTreeModel* model,
                                                                                               GtkTreeIter* a,
                                                                                               GtkTreeIter* b,
                                                                                               gpointer self);
static gboolean _granite_widgets_source_list_data_model_filter_visible_func_gtk_tree_model_filter_visible_func (GtkTreeModel* model,
                                                                                                         GtkTreeIter* iter,
                                                                                                         gpointer self);
static void granite_widgets_source_list_data_model_finalize (GObject * obj);
static GType granite_widgets_source_list_data_model_get_type_once (void);
static void _vala_granite_widgets_source_list_data_model_get_property (GObject * object,
                                                                guint property_id,
                                                                GValue * value,
                                                                GParamSpec * pspec);
static void _vala_granite_widgets_source_list_data_model_set_property (GObject * object,
                                                                guint property_id,
                                                                const GValue * value,
                                                                GParamSpec * pspec);
static GType granite_widgets_source_list_cell_renderer_icon_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListCellRendererIcon, g_object_unref)
#define GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_ICON_SIZE GTK_ICON_SIZE_MENU
static GraniteWidgetsSourceListCellRendererIcon* granite_widgets_source_list_cell_renderer_icon_new (void);
static GraniteWidgetsSourceListCellRendererIcon* granite_widgets_source_list_cell_renderer_icon_construct (GType object_type);
static gboolean granite_widgets_source_list_cell_renderer_icon_real_activate (GtkCellRenderer* base,
                                                                       GdkEvent* event,
                                                                       GtkWidget* widget,
                                                                       const gchar* path,
                                                                       GdkRectangle* background_area,
                                                                       GdkRectangle* cell_area,
                                                                       GtkCellRendererState flags);
static GObject * granite_widgets_source_list_cell_renderer_icon_constructor (GType type,
                                                                      guint n_construct_properties,
                                                                      GObjectConstructParam * construct_properties);
static GType granite_widgets_source_list_cell_renderer_icon_get_type_once (void);
static GType granite_widgets_source_list_cell_renderer_spacer_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsSourceListCellRendererSpacer, g_object_unref)
static gint granite_widgets_source_list_cell_renderer_spacer_get_level (GraniteWidgetsSourceListCellRendererSpacer* self);
static void granite_widgets_source_list_cell_renderer_spacer_set_level (GraniteWidgetsSourceListCellRendererSpacer* self,
                                                                 gint value);
static GtkSizeRequestMode granite_widgets_source_list_cell_renderer_spacer_real_get_request_mode (GtkCellRenderer* base);
static void granite_widgets_source_list_cell_renderer_spacer_real_get_preferred_width (GtkCellRenderer* base,
                                                                                GtkWidget* widget,
                                                                                gint* min_size,
                                                                                gint* natural_size);
static void granite_widgets_source_list_cell_renderer_spacer_real_get_preferred_height_for_width (GtkCellRenderer* base,
                                                                                           GtkWidget* widget,
                                                                                           gint width,
                                                                                           gint* min_height,
                                                                                           gint* natural_height);
static void granite_widgets_source_list_cell_renderer_spacer_real_render (GtkCellRenderer* base,
                                                                   cairo_t* context,
                                                                   GtkWidget* widget,
                                                                   GdkRectangle* bg_area,
                                                                   GdkRectangle* cell_area,
                                                                   GtkCellRendererState flags);
static GraniteWidgetsSourceListCellRendererSpacer* granite_widgets_source_list_cell_renderer_spacer_new (void);
static GraniteWidgetsSourceListCellRendererSpacer* granite_widgets_source_list_cell_renderer_spacer_construct (GType object_type);
static void granite_widgets_source_list_cell_renderer_spacer_finalize (GObject * obj);
static GType granite_widgets_source_list_cell_renderer_spacer_get_type_once (void);
static void _vala_granite_widgets_source_list_cell_renderer_spacer_get_property (GObject * object,
                                                                          guint property_id,
                                                                          GValue * value,
                                                                          GParamSpec * pspec);
static void _vala_granite_widgets_source_list_cell_renderer_spacer_set_property (GObject * object,
                                                                          guint property_id,
                                                                          const GValue * value,
                                                                          GParamSpec * pspec);
GType granite_widgets_cell_renderer_badge_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsCellRendererBadge, g_object_unref)
GType granite_widgets_cell_renderer_expander_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteWidgetsCellRendererExpander, g_object_unref)
static void granite_widgets_source_list_tree_disable_item_property_monitor (GraniteWidgetsSourceListTree* self);
static GType granite_widgets_source_list_tree_column_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
#define GRANITE_WIDGETS_SOURCE_LIST_TREE_DEFAULT_STYLESHEET "\n" \
"            .sidebar.badge {\n" \
"                border-radius: 10px;\n" \
"                border-width: 0;\n" \
"                padding: 1px 2px 1px 2px;\n" \
"                font-weight: bold;\n" \
"            }\n" \
"        "
#define GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_LEVEL_INDENTATION "level-indentation"
#define GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_LEFT_PADDING "left-padding"
#define GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_EXPANDER_SPACING "expander-spacing"
static GraniteWidgetsSourceListDataModel* granite_widgets_source_list_tree_get_data_model (GraniteWidgetsSourceListTree* self);
static void granite_widgets_source_list_tree_set_data_model (GraniteWidgetsSourceListTree* self,
                                                      GraniteWidgetsSourceListDataModel* value);
static void granite_widgets_source_list_tree_set_selected (GraniteWidgetsSourceListTree* self,
                                                    GraniteWidgetsSourceListItem* item,
                                                    gboolean scroll_to_item);
static GraniteWidgetsSourceListTree* granite_widgets_source_list_tree_new (GraniteWidgetsSourceListDataModel* data_model);
static GraniteWidgetsSourceListTree* granite_widgets_source_list_tree_construct (GType object_type,
                                                                          GraniteWidgetsSourceListDataModel* data_model);
static gboolean granite_widgets_source_list_tree_real_drag_motion (GtkWidget* base,
                                                            GdkDragContext* context,
                                                            gint x,
                                                            gint y,
                                                            guint time);
static void granite_widgets_source_list_tree_real_drag_data_received (GtkWidget* base,
                                                               GdkDragContext* context,
                                                               gint x,
                                                               gint y,
                                                               GtkSelectionData* selection_data,
                                                               guint info,
                                                               guint time);
static GtkTargetEntry* granite_widgets_source_list_tree_append_row_target_entry (GtkTargetEntry* orig,
                                                                          gint orig_length1,
                                                                          gint* result_length1);
static gboolean granite_widgets_source_list_tree_on_query_tooltip (GraniteWidgetsSourceListTree* self,
                                                            gint x,
                                                            gint y,
                                                            gboolean keyboard_tooltip,
                                                            GtkTooltip* tooltip);
static gboolean granite_widgets_source_list_tree_over_cell (GraniteWidgetsSourceListTree* self,
                                                     GtkTreeViewColumn* col,
                                                     GtkTreePath* path,
                                                     GtkCellRenderer* cell,
                                                     gint x);
static void _vala_array_add2 (GtkTargetEntry* * array,
                       gint* length,
                       gint* size,
                       const GtkTargetEntry* value);
static void _vala_array_add3 (GtkTargetEntry* * array,
                       gint* length,
                       gint* size,
                       const GtkTargetEntry* value);
static void granite_widgets_source_list_tree_enable_item_property_monitor (GraniteWidgetsSourceListTree* self);
static void granite_widgets_source_list_tree_on_model_item_updated (GraniteWidgetsSourceListTree* self,
                                                             GraniteWidgetsSourceListItem* item);
static void _granite_widgets_source_list_tree_on_model_item_updated_granite_widgets_source_list_data_model_item_updated (GraniteWidgetsSourceListDataModel* _sender,
                                                                                                                  GraniteWidgetsSourceListItem* item,
                                                                                                                  gpointer self);
static void granite_widgets_source_list_tree_update_expansion (GraniteWidgetsSourceListTree* self,
                                                        GraniteWidgetsSourceListExpandableItem* expandable_item);
static void granite_widgets_source_list_tree_add_spacer_cell_for_level (GraniteWidgetsSourceListTree* self,
                                                                 gint level,
                                                                 gboolean check_previous);
static void granite_widgets_source_list_tree_spacer_cell_data_func (GtkCellLayout* layout,
                                                             GtkCellRenderer* renderer,
                                                             GtkTreeModel* model,
                                                             GtkTreeIter* iter);
static void _granite_widgets_source_list_tree_spacer_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                        GtkCellRenderer* cell,
                                                                                        GtkTreeModel* tree_model,
                                                                                        GtkTreeIter* iter,
                                                                                        gpointer self);
static gboolean granite_widgets_source_list_tree_select_func (GraniteWidgetsSourceListTree* self,
                                                       GtkTreeSelection* selection,
                                                       GtkTreeModel* model,
                                                       GtkTreePath* path,
                                                       gboolean path_currently_selected);
static GtkTreePath* granite_widgets_source_list_tree_get_selected_path (GraniteWidgetsSourceListTree* self);
static void __vala_GtkTreePath_free0_ (gpointer var);
static inline void _g_list_free___vala_GtkTreePath_free0_ (GList* self);
static void granite_widgets_source_list_tree_real_cursor_changed (GtkTreeView* base);
static void granite_widgets_source_list_tree_on_editing_started (GraniteWidgetsSourceListTree* self,
                                                          GtkCellEditable* editable,
                                                          const gchar* path);
static void granite_widgets_source_list_tree_on_editing_done (GraniteWidgetsSourceListTree* self);
static void _granite_widgets_source_list_tree_on_editing_done_gtk_cell_editable_editing_done (GtkCellEditable* _sender,
                                                                                       gpointer self);
static void granite_widgets_source_list_tree_on_editing_canceled (GraniteWidgetsSourceListTree* self);
static void granite_widgets_source_list_tree_on_activatable_activated (GraniteWidgetsSourceListTree* self,
                                                                const gchar* item_path_str);
static GraniteWidgetsSourceListItem* granite_widgets_source_list_tree_get_item_from_path_string (GraniteWidgetsSourceListTree* self,
                                                                                          const gchar* item_path_str);
static gboolean granite_widgets_source_list_tree_toggle_expansion (GraniteWidgetsSourceListTree* self,
                                                            GraniteWidgetsSourceListExpandableItem* item);
static void granite_widgets_source_list_tree_real_row_expanded (GtkTreeView* base,
                                                         GtkTreeIter* iter,
                                                         GtkTreePath* path);
static void granite_widgets_source_list_tree_real_row_collapsed (GtkTreeView* base,
                                                          GtkTreeIter* iter,
                                                          GtkTreePath* path);
static void granite_widgets_source_list_tree_real_row_activated (GtkTreeView* base,
                                                          GtkTreePath* path,
                                                          GtkTreeViewColumn* column);
static gboolean granite_widgets_source_list_tree_real_key_release_event (GtkWidget* base,
                                                                  GdkEventKey* event);
static gboolean granite_widgets_source_list_tree_real_button_release_event (GtkWidget* base,
                                                                     GdkEventButton* event);
static gboolean granite_widgets_source_list_tree_real_button_press_event (GtkWidget* base,
                                                                   GdkEventButton* event);
static gboolean granite_widgets_source_list_tree_popup_context_menu (GraniteWidgetsSourceListTree* self,
                                                              GraniteWidgetsSourceListItem* item,
                                                              GdkEventButton* event);
static gboolean granite_widgets_source_list_tree_over_primary_expander (GraniteWidgetsSourceListTree* self,
                                                                 GtkTreeViewColumn* col,
                                                                 GtkTreePath* path,
                                                                 gint x);
static void granite_widgets_source_list_tree_expander_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                               GtkCellLayout* layout,
                                                               GtkCellRenderer* renderer,
                                                               GtkTreeModel* model,
                                                               GtkTreeIter* iter);
static gint granite_widgets_source_list_tree_get_cell_width (GraniteWidgetsSourceListTree* self,
                                                      GtkCellRenderer* cell_renderer);
static gboolean granite_widgets_source_list_tree_real_popup_menu (GtkWidget* base);
static GraniteWidgetsSourceListItem* granite_widgets_source_list_tree_get_item_from_model (GtkTreeModel* model,
                                                                                    GtkTreeIter* iter);
static void granite_widgets_source_list_tree_name_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                           GtkCellLayout* layout,
                                                           GtkCellRenderer* renderer,
                                                           GtkTreeModel* model,
                                                           GtkTreeIter* iter);
static void granite_widgets_source_list_tree_badge_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                            GtkCellLayout* layout,
                                                            GtkCellRenderer* renderer,
                                                            GtkTreeModel* model,
                                                            GtkTreeIter* iter);
void granite_widgets_cell_renderer_badge_set_text (GraniteWidgetsCellRendererBadge* self,
                                                   const gchar* value);
static void granite_widgets_source_list_tree_icon_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                           GtkCellLayout* layout,
                                                           GtkCellRenderer* renderer,
                                                           GtkTreeModel* model,
                                                           GtkTreeIter* iter);
static GObject * granite_widgets_source_list_tree_constructor (GType type,
                                                        guint n_construct_properties,
                                                        GObjectConstructParam * construct_properties);
#define GRANITE_STYLE_CLASS_SOURCE_LIST "source-list"
GraniteWidgetsCellRendererExpander* granite_widgets_cell_renderer_expander_new (void);
GraniteWidgetsCellRendererExpander* granite_widgets_cell_renderer_expander_construct (GType object_type);
void granite_widgets_cell_renderer_expander_set_is_category_expander (GraniteWidgetsCellRendererExpander* self,
                                                                      gboolean value);
static void _granite_widgets_source_list_tree_expander_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                          GtkCellRenderer* cell,
                                                                                          GtkTreeModel* tree_model,
                                                                                          GtkTreeIter* iter,
                                                                                          gpointer self);
static void _granite_widgets_source_list_tree_on_activatable_activated_granite_widgets_source_list_cell_renderer_icon_activated (GraniteWidgetsSourceListCellRendererIcon* _sender,
                                                                                                                          const gchar* path,
                                                                                                                          gpointer self);
static void _granite_widgets_source_list_tree_icon_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                      GtkCellRenderer* cell,
                                                                                      GtkTreeModel* tree_model,
                                                                                      GtkTreeIter* iter,
                                                                                      gpointer self);
GraniteWidgetsCellRendererBadge* granite_widgets_cell_renderer_badge_new (void);
GraniteWidgetsCellRendererBadge* granite_widgets_cell_renderer_badge_construct (GType object_type);
static void _granite_widgets_source_list_tree_badge_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                       GtkCellRenderer* cell,
                                                                                       GtkTreeModel* tree_model,
                                                                                       GtkTreeIter* iter,
                                                                                       gpointer self);
static void _granite_widgets_source_list_tree_on_editing_started_gtk_cell_renderer_editing_started (GtkCellRenderer* _sender,
                                                                                             GtkCellEditable* editable,
                                                                                             const gchar* path,
                                                                                             gpointer self);
static void _granite_widgets_source_list_tree_on_editing_canceled_gtk_cell_renderer_editing_canceled (GtkCellRenderer* _sender,
                                                                                               gpointer self);
static void _granite_widgets_source_list_tree_name_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                      GtkCellRenderer* cell,
                                                                                      GtkTreeModel* tree_model,
                                                                                      GtkTreeIter* iter,
                                                                                      gpointer self);
static gboolean _granite_widgets_source_list_tree_select_func_gtk_tree_selection_func (GtkTreeSelection* selection,
                                                                                GtkTreeModel* model,
                                                                                GtkTreePath* path,
                                                                                gboolean path_currently_selected,
                                                                                gpointer self);
static gboolean _granite_widgets_source_list_tree_on_query_tooltip_gtk_widget_query_tooltip (GtkWidget* _sender,
                                                                                      gint x,
                                                                                      gint y,
                                                                                      gboolean keyboard_tooltip,
                                                                                      GtkTooltip* tooltip,
                                                                                      gpointer self);
static void granite_widgets_source_list_tree_finalize (GObject * obj);
static GType granite_widgets_source_list_tree_get_type_once (void);
static void _vala_granite_widgets_source_list_tree_get_property (GObject * object,
                                                          guint property_id,
                                                          GValue * value,
                                                          GParamSpec * pspec);
static void _vala_granite_widgets_source_list_tree_set_property (GObject * object,
                                                          guint property_id,
                                                          const GValue * value,
                                                          GParamSpec * pspec);
static GObject * granite_widgets_source_list_constructor (GType type,
                                                   guint n_construct_properties,
                                                   GObjectConstructParam * construct_properties);
static void _granite_widgets_source_list___lambda78_ (GraniteWidgetsSourceList* self,
                                               GraniteWidgetsSourceListItem* item);
static void __granite_widgets_source_list___lambda78__granite_widgets_source_list_tree_item_selected (GraniteWidgetsSourceListTree* _sender,
                                                                                               GraniteWidgetsSourceListItem* item,
                                                                                               gpointer self);
static void granite_widgets_source_list_finalize (GObject * obj);
static GType granite_widgets_source_list_get_type_once (void);
static void _vala_granite_widgets_source_list_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec);
static void _vala_granite_widgets_source_list_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec);

/**
     * Whether this item will allow users to re-arrange its children via DnD.
     *
     * This feature can co-exist with a sort algorithm (implemented
     * by {@link Granite.Widgets.SourceListSortable.compare}), but
     * the actual order of the items in the list will always
     * honor that method. The sort function has to be compatible with
     * the kind of DnD reordering the item wants to allow, since the user can
     * only reorder those items for which //compare// returns 0.
     *
     * @return Whether the item's children can be re-arranged by users.
     * @since 0.3
     */
gboolean
granite_widgets_source_list_sortable_allow_dnd_sorting (GraniteWidgetsSourceListSortable* self)
{
#line 50 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 50 "../lib/Widgets/SourceList.vala"
	return GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_GET_INTERFACE (self)->allow_dnd_sorting (self);
#line 1227 "SourceList.c"
}

/**
     * Should return a negative integer, zero, or a positive integer if ''a''
     * sorts //before// ''b'', ''a'' sorts //with// ''b'', or ''a'' sorts
     * //after// ''b'' respectively. If two items compare as equal, their
     * order in the sorted source list is undefined.
     *
     * In order to ensure that the source list behaves as expected, this
     * method must define a partial order on the source list tree; i.e. it
     * must be reflexive, antisymmetric and transitive. Not complying with
     * those requirements could make the program fall into an infinite loop
     * and freeze the user interface.
     *
     * Should return //0// to allow any pair of items to be sortable via DnD.
     *
     * @param a First item.
     * @param b Second item.
     * @return A //negative// integer if //a// sorts before //b//,
     *         //zero// if //a// equals //b//, or a //positive//
     *         integer if //a// sorts after //b//.
     * @since 0.3
     */
gint
granite_widgets_source_list_sortable_compare (GraniteWidgetsSourceListSortable* self,
                                              GraniteWidgetsSourceListItem* a,
                                              GraniteWidgetsSourceListItem* b)
{
#line 73 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 73 "../lib/Widgets/SourceList.vala"
	return GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_GET_INTERFACE (self)->compare (self, a, b);
#line 1260 "SourceList.c"
}

static void
granite_widgets_source_list_sortable_default_init (GraniteWidgetsSourceListSortableIface * iface,
                                                   gpointer iface_data)
{
	/**
	     * Emitted after a user has re-ordered an item via DnD.
	     *
	     * @param moved The item that was moved to a different position by the user.
	     * @since 0.3
	     */
#line 28 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_sortable_signals[GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_USER_MOVED_ITEM_SIGNAL] = g_signal_new ("user-moved-item", GRANITE_WIDGETS_TYPE_SOURCE_LIST_SORTABLE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
#line 1275 "SourceList.c"
}

/**
 * An interface for sorting items.
 *
 * @since 0.3
 */
static GType
granite_widgets_source_list_sortable_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListSortableIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_sortable_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
	GType granite_widgets_source_list_sortable_type_id;
	granite_widgets_source_list_sortable_type_id = g_type_register_static (G_TYPE_INTERFACE, "GraniteWidgetsSourceListSortable", &g_define_type_info, 0);
	g_type_interface_add_prerequisite (granite_widgets_source_list_sortable_type_id, GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM);
	return granite_widgets_source_list_sortable_type_id;
}

GType
granite_widgets_source_list_sortable_get_type (void)
{
	static volatile gsize granite_widgets_source_list_sortable_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_sortable_type_id__volatile)) {
		GType granite_widgets_source_list_sortable_type_id;
		granite_widgets_source_list_sortable_type_id = granite_widgets_source_list_sortable_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_sortable_type_id__volatile, granite_widgets_source_list_sortable_type_id);
	}
	return granite_widgets_source_list_sortable_type_id__volatile;
}

/**
     * Determines whether this item can be dragged outside the source list widget.
     *
     * Even if this method returns //false//, the item could still be dragged around
     * within the source list if its parent allows DnD reordering. This only happens
     * when the parent implements {@link Granite.Widgets.SourceListSortable}.
     *
     * @return //true// if the item can be dragged; //false// otherwise.
     * @since 0.3
     * @see Granite.Widgets.SourceListSortable
     */
gboolean
granite_widgets_source_list_drag_source_draggable (GraniteWidgetsSourceListDragSource* self)
{
#line 93 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 93 "../lib/Widgets/SourceList.vala"
	return GRANITE_WIDGETS_SOURCE_LIST_DRAG_SOURCE_GET_INTERFACE (self)->draggable (self);
#line 1323 "SourceList.c"
}

/**
     * This method is called when the drop site requests the data which is dragged.
     *
     * It is the responsibility of this method to fill //selection_data// with the
     * data in the format which is indicated by {@link Gtk.SelectionData.get_target}.
     *
     * @param selection_data {@link Gtk.SelectionData} containing source data.
     * @since 0.3
     * @see Gtk.SelectionData.set
     * @see Gtk.SelectionData.set_uris
     * @see Gtk.SelectionData.set_text
     */
void
granite_widgets_source_list_drag_source_prepare_selection_data (GraniteWidgetsSourceListDragSource* self,
                                                                GtkSelectionData* selection_data)
{
#line 107 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 107 "../lib/Widgets/SourceList.vala"
	GRANITE_WIDGETS_SOURCE_LIST_DRAG_SOURCE_GET_INTERFACE (self)->prepare_selection_data (self, selection_data);
#line 1346 "SourceList.c"
}

static void
granite_widgets_source_list_drag_source_default_init (GraniteWidgetsSourceListDragSourceIface * iface,
                                                      gpointer iface_data)
{
}

/**
 * An interface for dragging items out of the source list widget.
 *
 * @since 0.3
 */
static GType
granite_widgets_source_list_drag_source_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListDragSourceIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_drag_source_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
	GType granite_widgets_source_list_drag_source_type_id;
	granite_widgets_source_list_drag_source_type_id = g_type_register_static (G_TYPE_INTERFACE, "GraniteWidgetsSourceListDragSource", &g_define_type_info, 0);
	g_type_interface_add_prerequisite (granite_widgets_source_list_drag_source_type_id, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
	return granite_widgets_source_list_drag_source_type_id;
}

GType
granite_widgets_source_list_drag_source_get_type (void)
{
	static volatile gsize granite_widgets_source_list_drag_source_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_drag_source_type_id__volatile)) {
		GType granite_widgets_source_list_drag_source_type_id;
		granite_widgets_source_list_drag_source_type_id = granite_widgets_source_list_drag_source_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_drag_source_type_id__volatile, granite_widgets_source_list_drag_source_type_id);
	}
	return granite_widgets_source_list_drag_source_type_id__volatile;
}

/**
     * Determines whether //data// can be dropped into this item.
     *
     * @param context The drag context.
     * @param data {@link Gtk.SelectionData} containing source data.
     * @return //true// if the drop is possible; //false// otherwise.
     * @since 0.3
     */
gboolean
granite_widgets_source_list_drag_dest_data_drop_possible (GraniteWidgetsSourceListDragDest* self,
                                                          GdkDragContext* context,
                                                          GtkSelectionData* data)
{
#line 124 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 124 "../lib/Widgets/SourceList.vala"
	return GRANITE_WIDGETS_SOURCE_LIST_DRAG_DEST_GET_INTERFACE (self)->data_drop_possible (self, context, data);
#line 1399 "SourceList.c"
}

/**
     * If a data drop is deemed possible, then this method is called
     * when the data is actually dropped into this item. Any actions
     * consequence of the data received should be handled here.
     *
     * @param context The drag context.
     * @param data {@link Gtk.SelectionData} containing source data.
     * @return The action taken, or //0// to indicate that the dropped data was not accepted.
     * @since 0.3
     */
GdkDragAction
granite_widgets_source_list_drag_dest_data_received (GraniteWidgetsSourceListDragDest* self,
                                                     GdkDragContext* context,
                                                     GtkSelectionData* data)
{
#line 136 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0U);
#line 136 "../lib/Widgets/SourceList.vala"
	return GRANITE_WIDGETS_SOURCE_LIST_DRAG_DEST_GET_INTERFACE (self)->data_received (self, context, data);
#line 1421 "SourceList.c"
}

static void
granite_widgets_source_list_drag_dest_default_init (GraniteWidgetsSourceListDragDestIface * iface,
                                                    gpointer iface_data)
{
}

/**
 * An interface for receiving data from other widgets via drag-and-drop.
 *
 * @since 0.3
 */
static GType
granite_widgets_source_list_drag_dest_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListDragDestIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_drag_dest_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
	GType granite_widgets_source_list_drag_dest_type_id;
	granite_widgets_source_list_drag_dest_type_id = g_type_register_static (G_TYPE_INTERFACE, "GraniteWidgetsSourceListDragDest", &g_define_type_info, 0);
	g_type_interface_add_prerequisite (granite_widgets_source_list_drag_dest_type_id, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
	return granite_widgets_source_list_drag_dest_type_id;
}

GType
granite_widgets_source_list_drag_dest_get_type (void)
{
	static volatile gsize granite_widgets_source_list_drag_dest_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_drag_dest_type_id__volatile)) {
		GType granite_widgets_source_list_drag_dest_type_id;
		granite_widgets_source_list_drag_dest_type_id = granite_widgets_source_list_drag_dest_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_drag_dest_type_id__volatile, granite_widgets_source_list_drag_dest_type_id);
	}
	return granite_widgets_source_list_drag_dest_type_id__volatile;
}

static inline gpointer
granite_widgets_source_list_get_instance_private (GraniteWidgetsSourceList* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceList_private_offset);
}

static void
granite_widgets_source_list_real_item_selected (GraniteWidgetsSourceList* self,
                                                GraniteWidgetsSourceListItem* item)
{
}

GraniteWidgetsSourceListExpandableItem*
granite_widgets_source_list_get_root (GraniteWidgetsSourceList* self)
{
	GraniteWidgetsSourceListExpandableItem* result;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
	GraniteWidgetsSourceListExpandableItem* _tmp2_;
#line 2621 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2621 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2621 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_root (_tmp0_);
#line 2621 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 2621 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2621 "../lib/Widgets/SourceList.vala"
	return result;
#line 1488 "SourceList.c"
}

void
granite_widgets_source_list_set_root (GraniteWidgetsSourceList* self,
                                      GraniteWidgetsSourceListExpandableItem* value)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
#line 2622 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2622 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2622 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_set_root (_tmp0_, value);
#line 2622 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_ROOT_PROPERTY]);
#line 1504 "SourceList.c"
}

GraniteWidgetsSourceListItem*
granite_widgets_source_list_get_selected (GraniteWidgetsSourceList* self)
{
	GraniteWidgetsSourceListItem* result;
	GraniteWidgetsSourceListTree* _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
#line 2635 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2635 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2635 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_get_selected_item (_tmp0_);
#line 2635 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 2635 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2635 "../lib/Widgets/SourceList.vala"
	return result;
#line 1526 "SourceList.c"
}

void
granite_widgets_source_list_set_selected (GraniteWidgetsSourceList* self,
                                          GraniteWidgetsSourceListItem* value)
{
	gboolean _tmp0_ = FALSE;
	GraniteWidgetsSourceListTree* _tmp5_;
#line 2636 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2637 "../lib/Widgets/SourceList.vala"
	if (value != NULL) {
#line 1539 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp1_;
		GraniteWidgetsSourceListExpandableItem* _tmp2_;
#line 2637 "../lib/Widgets/SourceList.vala"
		_tmp1_ = granite_widgets_source_list_item_get_parent (value);
#line 2637 "../lib/Widgets/SourceList.vala"
		_tmp2_ = _tmp1_;
#line 2637 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp2_ != NULL;
#line 1548 "SourceList.c"
	} else {
#line 2637 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 1552 "SourceList.c"
	}
#line 2637 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 1556 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp3_;
		GraniteWidgetsSourceListExpandableItem* _tmp4_;
#line 2638 "../lib/Widgets/SourceList.vala"
		_tmp3_ = granite_widgets_source_list_item_get_parent (value);
#line 2638 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _tmp3_;
#line 2638 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_expand_with_parents (_tmp4_);
#line 1565 "SourceList.c"
	}
#line 2639 "../lib/Widgets/SourceList.vala"
	_tmp5_ = self->priv->tree;
#line 2639 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_set_selected_item (_tmp5_, value);
#line 2636 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_SELECTED_PROPERTY]);
#line 1573 "SourceList.c"
}

PangoEllipsizeMode
granite_widgets_source_list_get_ellipsize_mode (GraniteWidgetsSourceList* self)
{
	PangoEllipsizeMode result;
	GraniteWidgetsSourceListTree* _tmp0_;
	PangoEllipsizeMode _tmp1_;
	PangoEllipsizeMode _tmp2_;
#line 2649 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 2649 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2649 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_get_ellipsize_mode (_tmp0_);
#line 2649 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 2649 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2649 "../lib/Widgets/SourceList.vala"
	return result;
#line 1595 "SourceList.c"
}

void
granite_widgets_source_list_set_ellipsize_mode (GraniteWidgetsSourceList* self,
                                                PangoEllipsizeMode value)
{
	GraniteWidgetsSourceListTree* _tmp0_;
#line 2650 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2650 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2650 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_set_ellipsize_mode (_tmp0_, value);
#line 2650 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_ELLIPSIZE_MODE_PROPERTY]);
#line 1611 "SourceList.c"
}

gboolean
granite_widgets_source_list_get_editing (GraniteWidgetsSourceList* self)
{
	gboolean result;
	GraniteWidgetsSourceListTree* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 2660 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2660 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2660 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_get_editing (_tmp0_);
#line 2660 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 2660 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2660 "../lib/Widgets/SourceList.vala"
	return result;
#line 1633 "SourceList.c"
}

/**
     * Creates a new {@link Granite.Widgets.SourceList}.
     *
     * @return A new {@link Granite.Widgets.SourceList}.
     * @since 0.2
     */
GraniteWidgetsSourceList*
granite_widgets_source_list_construct (GType object_type,
                                       GraniteWidgetsSourceListExpandableItem* root)
{
	GraniteWidgetsSourceList * self = NULL;
#line 2672 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (root != NULL, NULL);
#line 2672 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceList*) g_object_new (object_type, NULL);
#line 2673 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_set_root (self, root);
#line 2672 "../lib/Widgets/SourceList.vala"
	return self;
#line 1655 "SourceList.c"
}

GraniteWidgetsSourceList*
granite_widgets_source_list_new (GraniteWidgetsSourceListExpandableItem* root)
{
#line 2672 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_construct (GRANITE_WIDGETS_TYPE_SOURCE_LIST, root);
#line 1663 "SourceList.c"
}

/**
     * Checks whether //item// is part of the source list.
     *
     * @param item The item to query.
     * @return //true// if the item belongs to the source list; //false// otherwise.
     * @since 0.2
     */
gboolean
granite_widgets_source_list_has_item (GraniteWidgetsSourceList* self,
                                      GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
	gboolean result = FALSE;
#line 2693 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2693 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2694 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2694 "../lib/Widgets/SourceList.vala"
	result = granite_widgets_source_list_data_model_has_item (_tmp0_, item);
#line 2694 "../lib/Widgets/SourceList.vala"
	return result;
#line 1689 "SourceList.c"
}

/**
     * Sets the method used for filtering out items.
     *
     * @param visible_func The method to use for filtering items.
     * @param refilter Whether to call {@link Granite.Widgets.SourceList.refilter} using the new function.
     * @see Granite.Widgets.SourceList.VisibleFunc
     * @see Granite.Widgets.SourceList.refilter
     * @since 0.2
     */
void
granite_widgets_source_list_set_filter_func (GraniteWidgetsSourceList* self,
                                             GraniteWidgetsSourceListVisibleFunc visible_func,
                                             gpointer visible_func_target,
                                             gboolean refilter)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
#line 2706 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2707 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2707 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_set_filter_func (_tmp0_, visible_func, visible_func_target);
#line 2708 "../lib/Widgets/SourceList.vala"
	if (refilter) {
#line 2709 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_refilter (self);
#line 1718 "SourceList.c"
	}
}

/**
     * Applies the filter method set by {@link Granite.Widgets.SourceList.set_filter_func}
     * to all the items that are part of the current tree.
     *
     * @see Granite.Widgets.SourceList.VisibleFunc
     * @see Granite.Widgets.SourceList.set_filter_func
     * @since 0.2
     */
void
granite_widgets_source_list_refilter (GraniteWidgetsSourceList* self)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
#line 2720 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2721 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2721 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_filter_refilter ((GtkTreeModelFilter*) _tmp0_);
#line 1740 "SourceList.c"
}

/**
     * Queries the actual expansion state of //item//.
     *
     * @see Granite.Widgets.SourceList.ExpandableItem.expanded
     * @return Whether //item// is expanded or not.
     * @since 0.2
     */
static void
_vala_GtkTreePath_free (GtkTreePath* self)
{
#line 2733 "../lib/Widgets/SourceList.vala"
	g_boxed_free (gtk_tree_path_get_type (), self);
#line 1755 "SourceList.c"
}

gboolean
granite_widgets_source_list_is_item_expanded (GraniteWidgetsSourceList* self,
                                              GraniteWidgetsSourceListItem* item)
{
	GtkTreePath* path = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreePath* _tmp1_;
	gboolean _tmp2_ = FALSE;
	GtkTreePath* _tmp3_;
	gboolean result = FALSE;
#line 2731 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2731 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2731 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (granite_widgets_source_list_has_item (self, item), "has_item (item)", FALSE);
#line 2732 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2732 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_path (_tmp0_, item);
#line 2732 "../lib/Widgets/SourceList.vala"
	path = _tmp1_;
#line 2733 "../lib/Widgets/SourceList.vala"
	_tmp3_ = path;
#line 2733 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ != NULL) {
#line 1784 "SourceList.c"
		GraniteWidgetsSourceListTree* _tmp4_;
		GtkTreePath* _tmp5_;
#line 2733 "../lib/Widgets/SourceList.vala"
		_tmp4_ = self->priv->tree;
#line 2733 "../lib/Widgets/SourceList.vala"
		_tmp5_ = path;
#line 2733 "../lib/Widgets/SourceList.vala"
		_tmp2_ = gtk_tree_view_row_expanded ((GtkTreeView*) _tmp4_, _tmp5_);
#line 1793 "SourceList.c"
	} else {
#line 2733 "../lib/Widgets/SourceList.vala"
		_tmp2_ = FALSE;
#line 1797 "SourceList.c"
	}
#line 2733 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2733 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 2733 "../lib/Widgets/SourceList.vala"
	return result;
#line 1805 "SourceList.c"
}

/**
     * If //item// is editable, this activates the editor; otherwise, it does nothing.
     * If an item was already being edited, this will fail.
     *
     * @param item Item to edit.
     * @see Granite.Widgets.SourceList.Item.editable
     * @see Granite.Widgets.SourceList.editing
     * @see Granite.Widgets.SourceList.stop_editing
     * @return true if the editing started successfully; false otherwise.
     * @since 0.2
     */
gboolean
granite_widgets_source_list_start_editing_item (GraniteWidgetsSourceList* self,
                                                GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListTree* _tmp0_;
	gboolean result = FALSE;
#line 2747 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2747 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2747 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (granite_widgets_source_list_has_item (self, item), "has_item (item)", FALSE);
#line 2748 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2748 "../lib/Widgets/SourceList.vala"
	result = granite_widgets_source_list_tree_start_editing_item (_tmp0_, item);
#line 2748 "../lib/Widgets/SourceList.vala"
	return result;
#line 1837 "SourceList.c"
}

/**
     * Cancels any editing operation going on.
     *
     * @see Granite.Widgets.SourceList.editing
     * @see Granite.Widgets.SourceList.start_editing_item
     * @since 0.2
     */
void
granite_widgets_source_list_stop_editing (GraniteWidgetsSourceList* self)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 2758 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2759 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_get_editing (self);
#line 2759 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 2759 "../lib/Widgets/SourceList.vala"
	if (_tmp1_) {
#line 1860 "SourceList.c"
		GraniteWidgetsSourceListTree* _tmp2_;
#line 2760 "../lib/Widgets/SourceList.vala"
		_tmp2_ = self->priv->tree;
#line 2760 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_tree_stop_editing (_tmp2_);
#line 1866 "SourceList.c"
	}
}

/**
     * Turns Source List into a //drag source//.
     *
     * This enables items that implement {@link Granite.Widgets.SourceListDragSource}
     * to be dragged outside the Source List and drop data into external widgets.
     *
     * @param src_entries an array of {@link Gtk.TargetEntry}s indicating the targets
     * that the drag will support.
     * @see Granite.Widgets.SourceListDragSource
     * @see Granite.Widgets.SourceList.disable_drag_source
     * @since 0.3
     */
void
granite_widgets_source_list_enable_drag_source (GraniteWidgetsSourceList* self,
                                                GtkTargetEntry* src_entries,
                                                gint src_entries_length1)
{
	GraniteWidgetsSourceListTree* _tmp0_;
#line 2775 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2776 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2776 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_configure_drag_source (_tmp0_, src_entries, (gint) src_entries_length1);
#line 1894 "SourceList.c"
}

/**
     * Undoes the effect of {@link Granite.Widgets.SourceList.enable_drag_source}
     *
     * @see Granite.Widgets.SourceList.enable_drag_source
     * @since 0.3
     */
void
granite_widgets_source_list_disable_drag_source (GraniteWidgetsSourceList* self)
{
	GraniteWidgetsSourceListTree* _tmp0_;
#line 2785 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2786 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2786 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_configure_drag_source (_tmp0_, NULL, (gint) 0);
#line 1913 "SourceList.c"
}

/**
     * Turns Source List into a //drop destination//.
     *
     * This enables items that implement {@link Granite.Widgets.SourceListDragDest}
     * to receive data from external widgets via drag-and-drop.
     *
     * @param dest_entries an array of {@link Gtk.TargetEntry}s indicating the drop
     * types that Source List items will accept.
     * @param actions a bitmask of possible actions for a drop onto Source List items.
     * @see Granite.Widgets.SourceListDragDest
     * @see Granite.Widgets.SourceList.disable_drag_dest
     * @since 0.3
     */
void
granite_widgets_source_list_enable_drag_dest (GraniteWidgetsSourceList* self,
                                              GtkTargetEntry* dest_entries,
                                              gint dest_entries_length1,
                                              GdkDragAction actions)
{
	GraniteWidgetsSourceListTree* _tmp0_;
#line 2802 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2803 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2803 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_configure_drag_dest (_tmp0_, dest_entries, (gint) dest_entries_length1, actions);
#line 1942 "SourceList.c"
}

/**
     * Undoes the effect of {@link Granite.Widgets.SourceList.enable_drag_dest}
     *
     * @see Granite.Widgets.SourceList.enable_drag_dest
     * @since 0.3
     */
void
granite_widgets_source_list_disable_drag_dest (GraniteWidgetsSourceList* self)
{
	GraniteWidgetsSourceListTree* _tmp0_;
#line 2812 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2813 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->tree;
#line 2813 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_configure_drag_dest (_tmp0_, NULL, (gint) 0, 0);
#line 1961 "SourceList.c"
}

/**
     * Scrolls the source list tree to make //item// visible.
     *
     * {@link Granite.Widgets.SourceList.ExpandableItem.expand_with_parents} is called
     * for the item's parent if //expand_parents// is //true//, to make sure it's not
     * hidden behind a collapsed row.
     *
     * If use_align is //false//, then the row_align argument is ignored, and the tree
     * does the minimum amount of work to scroll the item onto the screen. This means that
     * the item will be scrolled to the edge closest to its current position. If the item
     * is currently visible on the screen, nothing is done.
     *
     * @param item Item to scroll to.
     * @param expand_parents Whether to recursively expand item's parent in case they are collapsed.
     * @param use_align Whether to use the //row_align// argument.
     * @param row_align The vertical alignment of //item//. 0.0 means top, 0.5 center, and 1.0 bottom.
     * @return //true// if successful; //false// otherwise.
     * @since 0.2
     */
gboolean
granite_widgets_source_list_scroll_to_item (GraniteWidgetsSourceList* self,
                                            GraniteWidgetsSourceListItem* item,
                                            gboolean expand_parents,
                                            gboolean use_align,
                                            gfloat row_align)
{
	gboolean _tmp0_ = FALSE;
	GraniteWidgetsSourceListTree* _tmp5_;
	gboolean result = FALSE;
#line 2835 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2835 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2835 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (granite_widgets_source_list_has_item (self, item), "has_item (item)", FALSE);
#line 2841 "../lib/Widgets/SourceList.vala"
	if (expand_parents) {
#line 2001 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp1_;
		GraniteWidgetsSourceListExpandableItem* _tmp2_;
#line 2841 "../lib/Widgets/SourceList.vala"
		_tmp1_ = granite_widgets_source_list_item_get_parent (item);
#line 2841 "../lib/Widgets/SourceList.vala"
		_tmp2_ = _tmp1_;
#line 2841 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp2_ != NULL;
#line 2010 "SourceList.c"
	} else {
#line 2841 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 2014 "SourceList.c"
	}
#line 2841 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 2018 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp3_;
		GraniteWidgetsSourceListExpandableItem* _tmp4_;
#line 2842 "../lib/Widgets/SourceList.vala"
		_tmp3_ = granite_widgets_source_list_item_get_parent (item);
#line 2842 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _tmp3_;
#line 2842 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_expand_with_parents (_tmp4_);
#line 2027 "SourceList.c"
	}
#line 2844 "../lib/Widgets/SourceList.vala"
	_tmp5_ = self->priv->tree;
#line 2844 "../lib/Widgets/SourceList.vala"
	result = granite_widgets_source_list_tree_scroll_to_item (_tmp5_, item, use_align, row_align);
#line 2844 "../lib/Widgets/SourceList.vala"
	return result;
#line 2035 "SourceList.c"
}

/**
     * Gets the previous item with respect to //reference//.
     *
     * @param reference Item to use as reference.
     * @return The item that appears before //reference//, or //null// if there's none.
     * @since 0.2
     */
static void
_vala_GtkTreeIter_free (GtkTreeIter* self)
{
#line 2860 "../lib/Widgets/SourceList.vala"
	g_boxed_free (gtk_tree_iter_get_type (), self);
#line 2050 "SourceList.c"
}

GraniteWidgetsSourceListItem*
granite_widgets_source_list_get_previous_item (GraniteWidgetsSourceList* self,
                                               GraniteWidgetsSourceListItem* reference)
{
	GtkTreeIter* iter = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter* _tmp1_;
	GtkTreeIter* _tmp2_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2854 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2854 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (reference != NULL, NULL);
#line 2854 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (granite_widgets_source_list_has_item (self, reference), "has_item (reference)", NULL);
#line 2856 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2856 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_iter (_tmp0_, reference);
#line 2856 "../lib/Widgets/SourceList.vala"
	iter = _tmp1_;
#line 2857 "../lib/Widgets/SourceList.vala"
	_tmp2_ = iter;
#line 2857 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 2078 "SourceList.c"
		GtkTreeIter new_iter = {0};
		GtkTreeIter* _tmp3_;
		GraniteWidgetsSourceListDataModel* _tmp4_;
		gboolean _tmp5_;
#line 2858 "../lib/Widgets/SourceList.vala"
		_tmp3_ = iter;
#line 2858 "../lib/Widgets/SourceList.vala"
		new_iter = *_tmp3_;
#line 2859 "../lib/Widgets/SourceList.vala"
		_tmp4_ = self->priv->data_model;
#line 2859 "../lib/Widgets/SourceList.vala"
		_tmp5_ = gtk_tree_model_iter_previous ((GtkTreeModel*) _tmp4_, &new_iter);
#line 2859 "../lib/Widgets/SourceList.vala"
		if (_tmp5_) {
#line 2093 "SourceList.c"
			GraniteWidgetsSourceListDataModel* _tmp6_;
			GtkTreeIter _tmp7_;
			GraniteWidgetsSourceListItem* _tmp8_;
#line 2860 "../lib/Widgets/SourceList.vala"
			_tmp6_ = self->priv->data_model;
#line 2860 "../lib/Widgets/SourceList.vala"
			_tmp7_ = new_iter;
#line 2860 "../lib/Widgets/SourceList.vala"
			_tmp8_ = granite_widgets_source_list_data_model_get_item (_tmp6_, &_tmp7_);
#line 2860 "../lib/Widgets/SourceList.vala"
			result = _tmp8_;
#line 2860 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreeIter_free0 (iter);
#line 2860 "../lib/Widgets/SourceList.vala"
			return result;
#line 2109 "SourceList.c"
		}
	}
#line 2863 "../lib/Widgets/SourceList.vala"
	result = NULL;
#line 2863 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (iter);
#line 2863 "../lib/Widgets/SourceList.vala"
	return result;
#line 2118 "SourceList.c"
}

/**
     * Gets the next item with respect to //reference//.
     *
     * @param reference Item to use as reference.
     * @return The item that appears after //reference//, or //null// if there's none.
     * @since 0.2
     */
GraniteWidgetsSourceListItem*
granite_widgets_source_list_get_next_item (GraniteWidgetsSourceList* self,
                                           GraniteWidgetsSourceListItem* reference)
{
	GtkTreeIter* iter = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter* _tmp1_;
	GtkTreeIter* _tmp2_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2873 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2873 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (reference != NULL, NULL);
#line 2873 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (granite_widgets_source_list_has_item (self, reference), "has_item (reference)", NULL);
#line 2875 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2875 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_iter (_tmp0_, reference);
#line 2875 "../lib/Widgets/SourceList.vala"
	iter = _tmp1_;
#line 2876 "../lib/Widgets/SourceList.vala"
	_tmp2_ = iter;
#line 2876 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 2153 "SourceList.c"
		GtkTreeIter new_iter = {0};
		GtkTreeIter* _tmp3_;
		GraniteWidgetsSourceListDataModel* _tmp4_;
		gboolean _tmp5_;
#line 2877 "../lib/Widgets/SourceList.vala"
		_tmp3_ = iter;
#line 2877 "../lib/Widgets/SourceList.vala"
		new_iter = *_tmp3_;
#line 2878 "../lib/Widgets/SourceList.vala"
		_tmp4_ = self->priv->data_model;
#line 2878 "../lib/Widgets/SourceList.vala"
		_tmp5_ = gtk_tree_model_iter_next ((GtkTreeModel*) _tmp4_, &new_iter);
#line 2878 "../lib/Widgets/SourceList.vala"
		if (_tmp5_) {
#line 2168 "SourceList.c"
			GraniteWidgetsSourceListDataModel* _tmp6_;
			GtkTreeIter _tmp7_;
			GraniteWidgetsSourceListItem* _tmp8_;
#line 2879 "../lib/Widgets/SourceList.vala"
			_tmp6_ = self->priv->data_model;
#line 2879 "../lib/Widgets/SourceList.vala"
			_tmp7_ = new_iter;
#line 2879 "../lib/Widgets/SourceList.vala"
			_tmp8_ = granite_widgets_source_list_data_model_get_item (_tmp6_, &_tmp7_);
#line 2879 "../lib/Widgets/SourceList.vala"
			result = _tmp8_;
#line 2879 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreeIter_free0 (iter);
#line 2879 "../lib/Widgets/SourceList.vala"
			return result;
#line 2184 "SourceList.c"
		}
	}
#line 2882 "../lib/Widgets/SourceList.vala"
	result = NULL;
#line 2882 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (iter);
#line 2882 "../lib/Widgets/SourceList.vala"
	return result;
#line 2193 "SourceList.c"
}

/**
     * Gets the first visible child of an expandable item.
     *
     * @param parent Parent of the child to look up.
     * @return The first visible child of //parent//, or null if it was not found.
     * @since 0.2
     */
GraniteWidgetsSourceListItem*
granite_widgets_source_list_get_first_child (GraniteWidgetsSourceList* self,
                                             GraniteWidgetsSourceListExpandableItem* parent)
{
	GraniteWidgetsSourceListItem* _tmp0_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2892 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2892 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (parent != NULL, NULL);
#line 2893 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_get_nth_child (self, parent, 0);
#line 2893 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 2893 "../lib/Widgets/SourceList.vala"
	return result;
#line 2219 "SourceList.c"
}

/**
     * Gets the last visible child of an expandable item.
     *
     * @param parent Parent of the child to look up.
     * @return The last visible child of //parent//, or null if it was not found.
     * @since 0.2
     */
GraniteWidgetsSourceListItem*
granite_widgets_source_list_get_last_child (GraniteWidgetsSourceList* self,
                                            GraniteWidgetsSourceListExpandableItem* parent)
{
	GraniteWidgetsSourceListItem* _tmp0_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2903 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2903 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (parent != NULL, NULL);
#line 2904 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_get_nth_child (self, parent, ((gint) granite_widgets_source_list_get_n_visible_children (self, parent)) - 1);
#line 2904 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 2904 "../lib/Widgets/SourceList.vala"
	return result;
#line 2245 "SourceList.c"
}

/**
     * Gets the number of visible children of an expandable item.
     *
     * @param parent Item to query.
     * @return Number of visible children of //parent//.
     * @since 0.2
     */
guint
granite_widgets_source_list_get_n_visible_children (GraniteWidgetsSourceList* self,
                                                    GraniteWidgetsSourceListExpandableItem* parent)
{
	GtkTreeIter* parent_iter = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter* _tmp1_;
	GraniteWidgetsSourceListDataModel* _tmp2_;
	guint result = 0U;
#line 2914 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0U);
#line 2914 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (parent != NULL, 0U);
#line 2916 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2916 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_iter (_tmp0_, (GraniteWidgetsSourceListItem*) parent);
#line 2916 "../lib/Widgets/SourceList.vala"
	parent_iter = _tmp1_;
#line 2917 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->data_model;
#line 2917 "../lib/Widgets/SourceList.vala"
	result = (guint) gtk_tree_model_iter_n_children ((GtkTreeModel*) _tmp2_, parent_iter);
#line 2917 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (parent_iter);
#line 2917 "../lib/Widgets/SourceList.vala"
	return result;
#line 2282 "SourceList.c"
}

static GraniteWidgetsSourceListItem*
granite_widgets_source_list_get_nth_child (GraniteWidgetsSourceList* self,
                                           GraniteWidgetsSourceListExpandableItem* parent,
                                           gint index)
{
	GtkTreeIter* parent_iter = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter* _tmp1_;
	GtkTreeIter child_iter = {0};
	GraniteWidgetsSourceListDataModel* _tmp2_;
	GtkTreeIter* _tmp3_;
	GtkTreeIter _tmp4_ = {0};
	gboolean _tmp5_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2920 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2920 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (parent != NULL, NULL);
#line 2921 "../lib/Widgets/SourceList.vala"
	if (index < 0) {
#line 2922 "../lib/Widgets/SourceList.vala"
		result = NULL;
#line 2922 "../lib/Widgets/SourceList.vala"
		return result;
#line 2309 "SourceList.c"
	}
#line 2925 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2925 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_iter (_tmp0_, (GraniteWidgetsSourceListItem*) parent);
#line 2925 "../lib/Widgets/SourceList.vala"
	parent_iter = _tmp1_;
#line 2928 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->data_model;
#line 2928 "../lib/Widgets/SourceList.vala"
	_tmp3_ = parent_iter;
#line 2928 "../lib/Widgets/SourceList.vala"
	_tmp5_ = gtk_tree_model_iter_nth_child ((GtkTreeModel*) _tmp2_, &_tmp4_, _tmp3_, index);
#line 2928 "../lib/Widgets/SourceList.vala"
	child_iter = _tmp4_;
#line 2928 "../lib/Widgets/SourceList.vala"
	if (_tmp5_) {
#line 2327 "SourceList.c"
		GraniteWidgetsSourceListDataModel* _tmp6_;
		GtkTreeIter _tmp7_;
		GraniteWidgetsSourceListItem* _tmp8_;
#line 2929 "../lib/Widgets/SourceList.vala"
		_tmp6_ = self->priv->data_model;
#line 2929 "../lib/Widgets/SourceList.vala"
		_tmp7_ = child_iter;
#line 2929 "../lib/Widgets/SourceList.vala"
		_tmp8_ = granite_widgets_source_list_data_model_get_item (_tmp6_, &_tmp7_);
#line 2929 "../lib/Widgets/SourceList.vala"
		result = _tmp8_;
#line 2929 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreeIter_free0 (parent_iter);
#line 2929 "../lib/Widgets/SourceList.vala"
		return result;
#line 2343 "SourceList.c"
	}
#line 2931 "../lib/Widgets/SourceList.vala"
	result = NULL;
#line 2931 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (parent_iter);
#line 2931 "../lib/Widgets/SourceList.vala"
	return result;
#line 2351 "SourceList.c"
}

static inline gpointer
granite_widgets_source_list_item_get_instance_private (GraniteWidgetsSourceListItem* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListItem_private_offset);
}

static gchar*
string_strip (const gchar* self)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1359 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1360 "glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1360 "glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1361 "glib-2.0.vapi"
	g_strstrip (_result_);
#line 1362 "glib-2.0.vapi"
	result = _result_;
#line 1362 "glib-2.0.vapi"
	return result;
#line 2378 "SourceList.c"
}

static void
granite_widgets_source_list_item_real_edited (GraniteWidgetsSourceListItem* self,
                                              const gchar* new_name)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_;
#line 292 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (new_name != NULL);
#line 293 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->_editable;
#line 293 "../lib/Widgets/SourceList.vala"
	if (_tmp1_) {
#line 2393 "SourceList.c"
		gchar* _tmp2_;
		gchar* _tmp3_;
#line 293 "../lib/Widgets/SourceList.vala"
		_tmp2_ = string_strip (new_name);
#line 293 "../lib/Widgets/SourceList.vala"
		_tmp3_ = _tmp2_;
#line 293 "../lib/Widgets/SourceList.vala"
		_tmp0_ = g_strcmp0 (_tmp3_, "") != 0;
#line 293 "../lib/Widgets/SourceList.vala"
		_g_free0 (_tmp3_);
#line 2404 "SourceList.c"
	} else {
#line 293 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 2408 "SourceList.c"
	}
#line 293 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 294 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_name (self, new_name);
#line 2414 "SourceList.c"
	}
}

static void
granite_widgets_source_list_item_real_action_activated (GraniteWidgetsSourceListItem* self)
{
}

static void
granite_widgets_source_list_item_real_activated (GraniteWidgetsSourceListItem* self)
{
}

GraniteWidgetsSourceListExpandableItem*
granite_widgets_source_list_item_get_parent (GraniteWidgetsSourceListItem* self)
{
	GraniteWidgetsSourceListExpandableItem* result;
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
#line 320 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 320 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_parent;
#line 320 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 320 "../lib/Widgets/SourceList.vala"
	return result;
#line 2441 "SourceList.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 320 "../lib/Widgets/SourceList.vala"
	return self ? g_object_ref (self) : NULL;
#line 2449 "SourceList.c"
}

G_GNUC_INTERNAL void
granite_widgets_source_list_item_set_parent (GraniteWidgetsSourceListItem* self,
                                             GraniteWidgetsSourceListExpandableItem* value)
{
	GraniteWidgetsSourceListExpandableItem* old_value;
#line 320 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 320 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_parent (self);
#line 320 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 2463 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp0_;
#line 320 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 320 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->_parent);
#line 320 "../lib/Widgets/SourceList.vala"
		self->priv->_parent = _tmp0_;
#line 320 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_PARENT_PROPERTY]);
#line 2473 "SourceList.c"
	}
}

const gchar*
granite_widgets_source_list_item_get_name (GraniteWidgetsSourceListItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 327 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 327 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_name;
#line 327 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 327 "../lib/Widgets/SourceList.vala"
	return result;
#line 2490 "SourceList.c"
}

void
granite_widgets_source_list_item_set_name (GraniteWidgetsSourceListItem* self,
                                           const gchar* value)
{
	gchar* old_value;
#line 327 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 327 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_name (self);
#line 327 "../lib/Widgets/SourceList.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2504 "SourceList.c"
		gchar* _tmp0_;
#line 327 "../lib/Widgets/SourceList.vala"
		_tmp0_ = g_strdup (value);
#line 327 "../lib/Widgets/SourceList.vala"
		_g_free0 (self->priv->_name);
#line 327 "../lib/Widgets/SourceList.vala"
		self->priv->_name = _tmp0_;
#line 327 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_NAME_PROPERTY]);
#line 2514 "SourceList.c"
	}
}

const gchar*
granite_widgets_source_list_item_get_tooltip (GraniteWidgetsSourceListItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 335 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 335 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_tooltip;
#line 335 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 335 "../lib/Widgets/SourceList.vala"
	return result;
#line 2531 "SourceList.c"
}

void
granite_widgets_source_list_item_set_tooltip (GraniteWidgetsSourceListItem* self,
                                              const gchar* value)
{
	gchar* old_value;
#line 335 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 335 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_tooltip (self);
#line 335 "../lib/Widgets/SourceList.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2545 "SourceList.c"
		gchar* _tmp0_;
#line 335 "../lib/Widgets/SourceList.vala"
		_tmp0_ = g_strdup (value);
#line 335 "../lib/Widgets/SourceList.vala"
		_g_free0 (self->priv->_tooltip);
#line 335 "../lib/Widgets/SourceList.vala"
		self->priv->_tooltip = _tmp0_;
#line 335 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_TOOLTIP_PROPERTY]);
#line 2555 "SourceList.c"
	}
}

const gchar*
granite_widgets_source_list_item_get_markup (GraniteWidgetsSourceListItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 348 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 348 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_markup;
#line 348 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 348 "../lib/Widgets/SourceList.vala"
	return result;
#line 2572 "SourceList.c"
}

void
granite_widgets_source_list_item_set_markup (GraniteWidgetsSourceListItem* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 348 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 348 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_markup (self);
#line 348 "../lib/Widgets/SourceList.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2586 "SourceList.c"
		gchar* _tmp0_;
#line 348 "../lib/Widgets/SourceList.vala"
		_tmp0_ = g_strdup (value);
#line 348 "../lib/Widgets/SourceList.vala"
		_g_free0 (self->priv->_markup);
#line 348 "../lib/Widgets/SourceList.vala"
		self->priv->_markup = _tmp0_;
#line 348 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_MARKUP_PROPERTY]);
#line 2596 "SourceList.c"
	}
}

const gchar*
granite_widgets_source_list_item_get_badge (GraniteWidgetsSourceListItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 358 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 358 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_badge;
#line 358 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 358 "../lib/Widgets/SourceList.vala"
	return result;
#line 2613 "SourceList.c"
}

void
granite_widgets_source_list_item_set_badge (GraniteWidgetsSourceListItem* self,
                                            const gchar* value)
{
	gchar* old_value;
#line 358 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 358 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_badge (self);
#line 358 "../lib/Widgets/SourceList.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2627 "SourceList.c"
		gchar* _tmp0_;
#line 358 "../lib/Widgets/SourceList.vala"
		_tmp0_ = g_strdup (value);
#line 358 "../lib/Widgets/SourceList.vala"
		_g_free0 (self->priv->_badge);
#line 358 "../lib/Widgets/SourceList.vala"
		self->priv->_badge = _tmp0_;
#line 358 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_BADGE_PROPERTY]);
#line 2637 "SourceList.c"
	}
}

gboolean
granite_widgets_source_list_item_get_editable (GraniteWidgetsSourceListItem* self)
{
	gboolean result;
#line 372 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 372 "../lib/Widgets/SourceList.vala"
	result = self->priv->_editable;
#line 372 "../lib/Widgets/SourceList.vala"
	return result;
#line 2651 "SourceList.c"
}

void
granite_widgets_source_list_item_set_editable (GraniteWidgetsSourceListItem* self,
                                               gboolean value)
{
	gboolean old_value;
#line 372 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 372 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_editable (self);
#line 372 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 372 "../lib/Widgets/SourceList.vala"
		self->priv->_editable = value;
#line 372 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITABLE_PROPERTY]);
#line 2669 "SourceList.c"
	}
}

gboolean
granite_widgets_source_list_item_get_visible (GraniteWidgetsSourceListItem* self)
{
	gboolean result;
#line 379 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 379 "../lib/Widgets/SourceList.vala"
	result = self->priv->_visible;
#line 379 "../lib/Widgets/SourceList.vala"
	return result;
#line 2683 "SourceList.c"
}

void
granite_widgets_source_list_item_set_visible (GraniteWidgetsSourceListItem* self,
                                              gboolean value)
{
	gboolean old_value;
#line 379 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 379 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_visible (self);
#line 379 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 379 "../lib/Widgets/SourceList.vala"
		self->priv->_visible = value;
#line 379 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_VISIBLE_PROPERTY]);
#line 2701 "SourceList.c"
	}
}

gboolean
granite_widgets_source_list_item_get_selectable (GraniteWidgetsSourceListItem* self)
{
	gboolean result;
#line 392 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 392 "../lib/Widgets/SourceList.vala"
	result = self->priv->_selectable;
#line 392 "../lib/Widgets/SourceList.vala"
	return result;
#line 2715 "SourceList.c"
}

void
granite_widgets_source_list_item_set_selectable (GraniteWidgetsSourceListItem* self,
                                                 gboolean value)
{
	gboolean old_value;
#line 392 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 392 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_selectable (self);
#line 392 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 392 "../lib/Widgets/SourceList.vala"
		self->priv->_selectable = value;
#line 392 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTABLE_PROPERTY]);
#line 2733 "SourceList.c"
	}
}

GIcon*
granite_widgets_source_list_item_get_icon (GraniteWidgetsSourceListItem* self)
{
	GIcon* result;
	GIcon* _tmp0_;
#line 402 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 402 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_icon;
#line 402 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 402 "../lib/Widgets/SourceList.vala"
	return result;
#line 2750 "SourceList.c"
}

void
granite_widgets_source_list_item_set_icon (GraniteWidgetsSourceListItem* self,
                                           GIcon* value)
{
	GIcon* old_value;
#line 402 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 402 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_icon (self);
#line 402 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 2764 "SourceList.c"
		GIcon* _tmp0_;
#line 402 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 402 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->_icon);
#line 402 "../lib/Widgets/SourceList.vala"
		self->priv->_icon = _tmp0_;
#line 402 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ICON_PROPERTY]);
#line 2774 "SourceList.c"
	}
}

GIcon*
granite_widgets_source_list_item_get_activatable (GraniteWidgetsSourceListItem* self)
{
	GIcon* result;
	GIcon* _tmp0_;
#line 412 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 412 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_activatable;
#line 412 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 412 "../lib/Widgets/SourceList.vala"
	return result;
#line 2791 "SourceList.c"
}

void
granite_widgets_source_list_item_set_activatable (GraniteWidgetsSourceListItem* self,
                                                  GIcon* value)
{
	GIcon* old_value;
#line 412 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 412 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_activatable (self);
#line 412 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 2805 "SourceList.c"
		GIcon* _tmp0_;
#line 412 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 412 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->_activatable);
#line 412 "../lib/Widgets/SourceList.vala"
		self->priv->_activatable = _tmp0_;
#line 412 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_PROPERTY]);
#line 2815 "SourceList.c"
	}
}

const gchar*
granite_widgets_source_list_item_get_activatable_tooltip (GraniteWidgetsSourceListItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 419 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 419 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_activatable_tooltip;
#line 419 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 419 "../lib/Widgets/SourceList.vala"
	return result;
#line 2832 "SourceList.c"
}

void
granite_widgets_source_list_item_set_activatable_tooltip (GraniteWidgetsSourceListItem* self,
                                                          const gchar* value)
{
	gchar* old_value;
#line 419 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 419 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_item_get_activatable_tooltip (self);
#line 419 "../lib/Widgets/SourceList.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2846 "SourceList.c"
		gchar* _tmp0_;
#line 419 "../lib/Widgets/SourceList.vala"
		_tmp0_ = g_strdup (value);
#line 419 "../lib/Widgets/SourceList.vala"
		_g_free0 (self->priv->_activatable_tooltip);
#line 419 "../lib/Widgets/SourceList.vala"
		self->priv->_activatable_tooltip = _tmp0_;
#line 419 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_TOOLTIP_PROPERTY]);
#line 2856 "SourceList.c"
	}
}

/**
         * Creates a new {@link Granite.Widgets.SourceList.Item}.
         *
         * @param name Name of the item.
         * @return (transfer full) A new {@link Granite.Widgets.SourceList.Item}.
         * @since 0.2
         */
GraniteWidgetsSourceListItem*
granite_widgets_source_list_item_construct (GType object_type,
                                            const gchar* name)
{
	GraniteWidgetsSourceListItem * self = NULL;
#line 428 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (name != NULL, NULL);
#line 428 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListItem*) g_object_new (object_type, NULL);
#line 429 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_set_name (self, name);
#line 428 "../lib/Widgets/SourceList.vala"
	return self;
#line 2880 "SourceList.c"
}

GraniteWidgetsSourceListItem*
granite_widgets_source_list_item_new (const gchar* name)
{
#line 428 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_item_construct (GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, name);
#line 2888 "SourceList.c"
}

/**
         * Invoked when the item is secondary-clicked or when the usual menu keys are pressed.
         *
         * Note that since Granite 5.0, right clicking on an item no longer selects/activates it, so
         * any context menu items should be actioned on the item instance rather than the selected item
         * in the SourceList
         *
         * @return A {@link Gtk.Menu} or //null// if nothing should be displayed.
         * @since 0.2
         */
static GtkMenu*
granite_widgets_source_list_item_real_get_context_menu (GraniteWidgetsSourceListItem* self)
{
	GtkMenu* result = NULL;
#line 443 "../lib/Widgets/SourceList.vala"
	result = NULL;
#line 443 "../lib/Widgets/SourceList.vala"
	return result;
#line 2909 "SourceList.c"
}

GtkMenu*
granite_widgets_source_list_item_get_context_menu (GraniteWidgetsSourceListItem* self)
{
#line 442 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 442 "../lib/Widgets/SourceList.vala"
	return GRANITE_WIDGETS_SOURCE_LIST_ITEM_GET_CLASS (self)->get_context_menu (self);
#line 2919 "SourceList.c"
}

static void
granite_widgets_source_list_item_class_init (GraniteWidgetsSourceListItemClass * klass,
                                             gpointer klass_data)
{
#line 281 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_parent_class = g_type_class_peek_parent (klass);
#line 281 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListItem_private_offset);
#line 281 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListItemClass *) klass)->get_context_menu = (GtkMenu* (*) (GraniteWidgetsSourceListItem*)) granite_widgets_source_list_item_real_get_context_menu;
#line 281 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListItemClass *) klass)->edited = granite_widgets_source_list_item_real_edited;
#line 281 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListItemClass *) klass)->action_activated = granite_widgets_source_list_item_real_action_activated;
#line 281 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListItemClass *) klass)->activated = granite_widgets_source_list_item_real_activated;
#line 281 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_source_list_item_get_property;
#line 281 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_source_list_item_set_property;
#line 281 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_source_list_item_finalize;
#line 2944 "SourceList.c"
	/**
	         * Parent {@link Granite.Widgets.SourceList.ExpandableItem} of the item.
	         * ''Must not'' be modified.
	         *
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_PARENT_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_PARENT_PROPERTY] = g_param_spec_object ("parent", "parent", "parent", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 2953 "SourceList.c"
	/**
	         * The item's name. Primary and most important information.
	         *
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_NAME_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_NAME_PROPERTY] = g_param_spec_string ("name", "name", "name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 2961 "SourceList.c"
	/**
	         * The item's tooltip. If set to null (default), the tooltip for the item will be the
	         * contents of the {@link Granite.Widgets.SourceList.Item.name} property.
	         *
	         * @since 5.3
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_TOOLTIP_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_TOOLTIP_PROPERTY] = g_param_spec_string ("tooltip", "tooltip", "tooltip", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 2970 "SourceList.c"
	/**
	         * Markup to be used instead of {@link Granite.Widgets.SourceList.ExpandableItem.name}
	         * This would mean that &, <, etc have to be escaped in the text, but basic formatting
	         * can be done on the item with HTML style tags.
	         *
	         * Note: Only the {@link Granite.Widgets.SourceList.ExpandableItem.name} property
	         * is modified for editable items. So this property will be need to updated and
	         * reformatted with editable items.
	         *
	         * @since 5.0
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_MARKUP_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_MARKUP_PROPERTY] = g_param_spec_string ("markup", "markup", "markup", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 2984 "SourceList.c"
	/**
	         * A badge shown next to the item's name.
	         *
	         * It can be used for displaying the number of unread messages in the "Inbox" item,
	         * for instance.
	         *
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_BADGE_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_BADGE_PROPERTY] = g_param_spec_string ("badge", "badge", "badge", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 2995 "SourceList.c"
	/**
	         * Whether the item's name can be edited from within the source list.
	         *
	         * When this property is set to //true//, users can edit the item by pressing
	         * the F2 key, or by double-clicking its name.
	         *
	         * ''This property only works for selectable items''.
	         *
	         * @see Granite.Widgets.SourceList.Item.selectable
	         * @see Granite.Widgets.SourceList.start_editing_item
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITABLE_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITABLE_PROPERTY] = g_param_spec_boolean ("editable", "editable", "editable", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3010 "SourceList.c"
	/**
	         * Whether the item should appear in the source list's tree or not.
	         *
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_VISIBLE_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_VISIBLE_PROPERTY] = g_param_spec_boolean ("visible", "visible", "visible", TRUE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3018 "SourceList.c"
	/**
	         * Whether the item can be selected or not.
	         *
	         * Setting this property to true doesn't guarantee that the item will actually be
	         * selectable, since there are other external factors to take into account, like the
	         * item's {@link Granite.Widgets.SourceList.Item.visible} property; whether the item is
	         * a category; the parent item is collapsed, etc.
	         *
	         * @see Granite.Widgets.SourceList.Item.visible
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTABLE_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTABLE_PROPERTY] = g_param_spec_boolean ("selectable", "selectable", "selectable", TRUE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3032 "SourceList.c"
	/**
	         * Primary icon.
	         *
	         * This property should be used to give the user an idea of what the item represents
	         * (i.e. content type.)
	         *
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_ICON_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ICON_PROPERTY] = g_param_spec_object ("icon", "icon", "icon", g_icon_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3043 "SourceList.c"
	/**
	         * An activatable icon that works like a button.
	         *
	         * It can be used for e.g. showing an //"eject"// icon on a device's item.
	         *
	         * @see Granite.Widgets.SourceList.Item.action_activated
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_PROPERTY] = g_param_spec_object ("activatable", "activatable", "activatable", g_icon_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3054 "SourceList.c"
	/**
	         * The tooltip for the activatable icon.
	         *
	         * @since 5.0
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_TOOLTIP_PROPERTY, granite_widgets_source_list_item_properties[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_TOOLTIP_PROPERTY] = g_param_spec_string ("activatable-tooltip", "activatable-tooltip", "activatable-tooltip", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3062 "SourceList.c"
	/**
	         * Emitted when the user has finished editing the item's name.
	         *
	         * By default, if the name doesn't consist of white space, it is automatically assigned
	         * to the {@link Granite.Widgets.SourceList.Item.name} property. The default behavior can
	         * be changed by overriding this signal.
	         * @param new_name The item's new name (result of editing.)
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITED_SIGNAL] = g_signal_new ("edited", GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, G_SIGNAL_RUN_LAST, G_STRUCT_OFFSET (GraniteWidgetsSourceListItemClass, edited), NULL, NULL, g_cclosure_marshal_VOID__STRING, G_TYPE_NONE, 1, G_TYPE_STRING);
#line 3074 "SourceList.c"
	/**
	         * The {@link Granite.Widgets.SourceList.Item.activatable} icon was activated.
	         *
	         * @see Granite.Widgets.SourceList.Item.activatable
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTION_ACTIVATED_SIGNAL] = g_signal_new ("action-activated", GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, G_SIGNAL_RUN_LAST, G_STRUCT_OFFSET (GraniteWidgetsSourceListItemClass, action_activated), NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 3083 "SourceList.c"
	/**
	         * Emitted when the item is double-clicked or when it is selected and one of the keys:
	         * Space, Shift+Space, Return or Enter is pressed. This signal is //also// for
	         * editable items.
	         *
	         * @since 0.2
	         */
#line 281 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATED_SIGNAL] = g_signal_new ("activated", GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, G_SIGNAL_RUN_LAST, G_STRUCT_OFFSET (GraniteWidgetsSourceListItemClass, activated), NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 3093 "SourceList.c"
}

static void
granite_widgets_source_list_item_instance_init (GraniteWidgetsSourceListItem * self,
                                                gpointer klass)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
#line 281 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_item_get_instance_private (self);
#line 327 "../lib/Widgets/SourceList.vala"
	_tmp0_ = g_strdup ("");
#line 327 "../lib/Widgets/SourceList.vala"
	self->priv->_name = _tmp0_;
#line 335 "../lib/Widgets/SourceList.vala"
	self->priv->_tooltip = NULL;
#line 348 "../lib/Widgets/SourceList.vala"
	self->priv->_markup = NULL;
#line 358 "../lib/Widgets/SourceList.vala"
	_tmp1_ = g_strdup ("");
#line 358 "../lib/Widgets/SourceList.vala"
	self->priv->_badge = _tmp1_;
#line 372 "../lib/Widgets/SourceList.vala"
	self->priv->_editable = FALSE;
#line 379 "../lib/Widgets/SourceList.vala"
	self->priv->_visible = TRUE;
#line 392 "../lib/Widgets/SourceList.vala"
	self->priv->_selectable = TRUE;
#line 419 "../lib/Widgets/SourceList.vala"
	_tmp2_ = g_strdup ("");
#line 419 "../lib/Widgets/SourceList.vala"
	self->priv->_activatable_tooltip = _tmp2_;
#line 3127 "SourceList.c"
}

static void
granite_widgets_source_list_item_finalize (GObject * obj)
{
	GraniteWidgetsSourceListItem * self;
#line 281 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, GraniteWidgetsSourceListItem);
#line 320 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->_parent);
#line 327 "../lib/Widgets/SourceList.vala"
	_g_free0 (self->priv->_name);
#line 335 "../lib/Widgets/SourceList.vala"
	_g_free0 (self->priv->_tooltip);
#line 348 "../lib/Widgets/SourceList.vala"
	_g_free0 (self->priv->_markup);
#line 358 "../lib/Widgets/SourceList.vala"
	_g_free0 (self->priv->_badge);
#line 402 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->_icon);
#line 412 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->_activatable);
#line 419 "../lib/Widgets/SourceList.vala"
	_g_free0 (self->priv->_activatable_tooltip);
#line 281 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (granite_widgets_source_list_item_parent_class)->finalize (obj);
#line 3154 "SourceList.c"
}

/**
     * A source list entry.
     *
     * Any change made to any of its properties will be ''automatically'' reflected
     * by the {@link Granite.Widgets.SourceList} widget.
     *
     * @since 0.2
     */
static GType
granite_widgets_source_list_item_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListItemClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_item_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListItem), 0, (GInstanceInitFunc) granite_widgets_source_list_item_instance_init, NULL };
	GType granite_widgets_source_list_item_type_id;
	granite_widgets_source_list_item_type_id = g_type_register_static (G_TYPE_OBJECT, "GraniteWidgetsSourceListItem", &g_define_type_info, 0);
	GraniteWidgetsSourceListItem_private_offset = g_type_add_instance_private (granite_widgets_source_list_item_type_id, sizeof (GraniteWidgetsSourceListItemPrivate));
	return granite_widgets_source_list_item_type_id;
}

GType
granite_widgets_source_list_item_get_type (void)
{
	static volatile gsize granite_widgets_source_list_item_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_item_type_id__volatile)) {
		GType granite_widgets_source_list_item_type_id;
		granite_widgets_source_list_item_type_id = granite_widgets_source_list_item_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_item_type_id__volatile, granite_widgets_source_list_item_type_id);
	}
	return granite_widgets_source_list_item_type_id__volatile;
}

static void
_vala_granite_widgets_source_list_item_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec)
{
	GraniteWidgetsSourceListItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, GraniteWidgetsSourceListItem);
#line 281 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_PARENT_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_item_get_parent (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_NAME_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_string (value, granite_widgets_source_list_item_get_name (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_TOOLTIP_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_string (value, granite_widgets_source_list_item_get_tooltip (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_MARKUP_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_string (value, granite_widgets_source_list_item_get_markup (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_BADGE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_string (value, granite_widgets_source_list_item_get_badge (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITABLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_item_get_editable (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_VISIBLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_item_get_visible (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTABLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_item_get_selectable (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_ICON_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_item_get_icon (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_item_get_activatable (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_TOOLTIP_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		g_value_set_string (value, granite_widgets_source_list_item_get_activatable_tooltip (self));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 3263 "SourceList.c"
		default:
#line 281 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 3269 "SourceList.c"
	}
}

static void
_vala_granite_widgets_source_list_item_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec)
{
	GraniteWidgetsSourceListItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, GraniteWidgetsSourceListItem);
#line 281 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_PARENT_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_parent (self, g_value_get_object (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_NAME_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_name (self, g_value_get_string (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_TOOLTIP_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_tooltip (self, g_value_get_string (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_MARKUP_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_markup (self, g_value_get_string (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_BADGE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_badge (self, g_value_get_string (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITABLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_editable (self, g_value_get_boolean (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_VISIBLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_visible (self, g_value_get_boolean (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTABLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_selectable (self, g_value_get_boolean (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_ICON_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_icon (self, g_value_get_object (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_activatable (self, g_value_get_object (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 281 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATABLE_TOOLTIP_PROPERTY:
#line 281 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_item_set_activatable_tooltip (self, g_value_get_string (value));
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 3349 "SourceList.c"
		default:
#line 281 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 281 "../lib/Widgets/SourceList.vala"
		break;
#line 3355 "SourceList.c"
	}
}

static inline gpointer
granite_widgets_source_list_expandable_item_get_instance_private (GraniteWidgetsSourceListExpandableItem* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListExpandableItem_private_offset);
}

static void
granite_widgets_source_list_expandable_item_real_toggled (GraniteWidgetsSourceListExpandableItem* self)
{
}

gboolean
granite_widgets_source_list_expandable_item_get_collapsible (GraniteWidgetsSourceListExpandableItem* self)
{
	gboolean result;
#line 504 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 504 "../lib/Widgets/SourceList.vala"
	result = self->priv->_collapsible;
#line 504 "../lib/Widgets/SourceList.vala"
	return result;
#line 3380 "SourceList.c"
}

void
granite_widgets_source_list_expandable_item_set_collapsible (GraniteWidgetsSourceListExpandableItem* self,
                                                             gboolean value)
{
	gboolean old_value;
#line 504 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 504 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_expandable_item_get_collapsible (self);
#line 504 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 504 "../lib/Widgets/SourceList.vala"
		self->priv->_collapsible = value;
#line 504 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_COLLAPSIBLE_PROPERTY]);
#line 3398 "SourceList.c"
	}
}

gboolean
granite_widgets_source_list_expandable_item_get_expanded (GraniteWidgetsSourceListExpandableItem* self)
{
	gboolean result;
	gboolean _tmp0_ = FALSE;
#line 528 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 528 "../lib/Widgets/SourceList.vala"
	if (self->priv->_expanded) {
#line 528 "../lib/Widgets/SourceList.vala"
		_tmp0_ = TRUE;
#line 3413 "SourceList.c"
	} else {
		gboolean _tmp1_;
#line 528 "../lib/Widgets/SourceList.vala"
		_tmp1_ = self->priv->_collapsible;
#line 528 "../lib/Widgets/SourceList.vala"
		_tmp0_ = !_tmp1_;
#line 3420 "SourceList.c"
	}
#line 528 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 528 "../lib/Widgets/SourceList.vala"
	return result;
#line 3426 "SourceList.c"
}

void
granite_widgets_source_list_expandable_item_set_expanded (GraniteWidgetsSourceListExpandableItem* self,
                                                          gboolean value)
{
#line 529 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 530 "../lib/Widgets/SourceList.vala"
	if (value != self->priv->_expanded) {
#line 531 "../lib/Widgets/SourceList.vala"
		self->priv->_expanded = value;
#line 532 "../lib/Widgets/SourceList.vala"
		g_signal_emit (self, granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_TOGGLED_SIGNAL], 0);
#line 3441 "SourceList.c"
	}
#line 529 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_EXPANDED_PROPERTY]);
#line 3445 "SourceList.c"
}

guint
granite_widgets_source_list_expandable_item_get_n_children (GraniteWidgetsSourceListExpandableItem* self)
{
	guint result;
	GeeCollection* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 543 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0U);
#line 543 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->children_list;
#line 543 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gee_collection_get_size (_tmp0_);
#line 543 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 543 "../lib/Widgets/SourceList.vala"
	result = (guint) _tmp2_;
#line 543 "../lib/Widgets/SourceList.vala"
	return result;
#line 3467 "SourceList.c"
}

GeeCollection*
granite_widgets_source_list_expandable_item_get_children (GraniteWidgetsSourceListExpandableItem* self)
{
	GeeCollection* result;
	GeeArrayList* children_list_copy = NULL;
	GeeArrayList* _tmp0_;
	GeeCollection* _tmp1_;
#line 556 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 559 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gee_array_list_new (GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 559 "../lib/Widgets/SourceList.vala"
	children_list_copy = _tmp0_;
#line 560 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->children_list;
#line 560 "../lib/Widgets/SourceList.vala"
	gee_array_list_add_all (children_list_copy, _tmp1_);
#line 561 "../lib/Widgets/SourceList.vala"
	result = (GeeCollection*) children_list_copy;
#line 561 "../lib/Widgets/SourceList.vala"
	return result;
#line 3491 "SourceList.c"
}

/**
         * Creates a new {@link Granite.Widgets.SourceList.ExpandableItem}
         *
         * @param name Title of the item.
         * @return (transfer full) A new {@link Granite.Widgets.SourceList.ExpandableItem}.
         * @since 0.2
         */
GraniteWidgetsSourceListExpandableItem*
granite_widgets_source_list_expandable_item_construct (GType object_type,
                                                       const gchar* name)
{
	GraniteWidgetsSourceListExpandableItem * self = NULL;
#line 574 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (name != NULL, NULL);
#line 575 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListExpandableItem*) granite_widgets_source_list_item_construct (object_type, name);
#line 574 "../lib/Widgets/SourceList.vala"
	return self;
#line 3512 "SourceList.c"
}

GraniteWidgetsSourceListExpandableItem*
granite_widgets_source_list_expandable_item_new (const gchar* name)
{
#line 574 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_expandable_item_construct (GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, name);
#line 3520 "SourceList.c"
}

/**
         * Checks whether the item contains the specified child.
         *
         * This method only considers the item's immediate children.
         *
         * @param item Item to search.
         * @return Whether the item was found or not.
         * @since 0.2
         */
gboolean
granite_widgets_source_list_expandable_item_contains (GraniteWidgetsSourceListExpandableItem* self,
                                                      GraniteWidgetsSourceListItem* item)
{
	GeeCollection* _tmp0_;
	gboolean result = FALSE;
#line 591 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 591 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 592 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->children_list;
#line 592 "../lib/Widgets/SourceList.vala"
	result = gee_collection_contains (_tmp0_, item);
#line 592 "../lib/Widgets/SourceList.vala"
	return result;
#line 3548 "SourceList.c"
}

/**
         * Adds an item.
         *
         * {@link Granite.Widgets.SourceList.ExpandableItem.child_added} is fired after the item is added.
         *
         * While adding a child item, //the item it's being added to will set itself as the parent//.
         * Please note that items are required to have their //parent// property set to //null// before
         * being added, so make sure the item is removed from its previous parent before attempting
         * to add it to another item. For instance:
         * {{{
         * if (item.parent != null)
         *     item.parent.remove (item); // this will set item's parent to null
         * new_parent.add (item);
         * }}}
         *
         * @param item The item to add. Its parent __must__ be //null//.
         * @see Granite.Widgets.SourceList.ExpandableItem.child_added
         * @see Granite.Widgets.SourceList.ExpandableItem.remove
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_add (GraniteWidgetsSourceListExpandableItem* self,
                                                 GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
	GeeCollection* _tmp2_;
#line 615 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 615 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 615 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_item_get_parent (item);
#line 615 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 615 "../lib/Widgets/SourceList.vala"
	_vala_return_if_fail (_tmp1_ == NULL, "item.parent == null");
#line 616 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_set_parent (item, self);
#line 617 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->children_list;
#line 617 "../lib/Widgets/SourceList.vala"
	gee_collection_add (_tmp2_, item);
#line 618 "../lib/Widgets/SourceList.vala"
	g_signal_emit (self, granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILD_ADDED_SIGNAL], 0, item);
#line 3596 "SourceList.c"
}

/**
         * Removes an item.
         *
         * The {@link Granite.Widgets.SourceList.ExpandableItem.child_removed} signal is fired
         * //after removing the item//. Finally (i.e. after all the handlers have been invoked),
         * the item's {@link Granite.Widgets.SourceList.Item.parent} property is set to //null//.
         * This has the advantage of letting signal handlers know the parent from which //item//
         * is being removed.
         *
         * @param item The item to remove. This will fail if item has a different parent.
         * @see Granite.Widgets.SourceList.ExpandableItem.child_removed
         * @see Granite.Widgets.SourceList.ExpandableItem.clear
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_remove (GraniteWidgetsSourceListExpandableItem* self,
                                                    GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
	GeeCollection* _tmp2_;
#line 635 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 635 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 635 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_item_get_parent (item);
#line 635 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 635 "../lib/Widgets/SourceList.vala"
	_vala_return_if_fail (_tmp1_ == self, "item.parent == this");
#line 636 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->children_list;
#line 636 "../lib/Widgets/SourceList.vala"
	gee_collection_remove (_tmp2_, item);
#line 637 "../lib/Widgets/SourceList.vala"
	g_signal_emit (self, granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILD_REMOVED_SIGNAL], 0, item);
#line 638 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_set_parent (item, NULL);
#line 3638 "SourceList.c"
}

/**
         * Removes all the items contained by the item. It works similarly to
         * {@link Granite.Widgets.SourceList.ExpandableItem.remove}.
         *
         * @see Granite.Widgets.SourceList.ExpandableItem.remove
         * @see Granite.Widgets.SourceList.ExpandableItem.child_removed
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_clear (GraniteWidgetsSourceListExpandableItem* self)
{
#line 649 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 3654 "SourceList.c"
	{
		GeeIterator* _item_it = NULL;
		GeeCollection* _tmp0_;
		GeeCollection* _tmp1_;
		GeeCollection* _tmp2_;
		GeeIterator* _tmp3_;
		GeeIterator* _tmp4_;
#line 650 "../lib/Widgets/SourceList.vala"
		_tmp0_ = granite_widgets_source_list_expandable_item_get_children (self);
#line 650 "../lib/Widgets/SourceList.vala"
		_tmp1_ = _tmp0_;
#line 650 "../lib/Widgets/SourceList.vala"
		_tmp2_ = _tmp1_;
#line 650 "../lib/Widgets/SourceList.vala"
		_tmp3_ = gee_iterable_iterator ((GeeIterable*) _tmp2_);
#line 650 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _tmp3_;
#line 650 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp2_);
#line 650 "../lib/Widgets/SourceList.vala"
		_item_it = _tmp4_;
#line 650 "../lib/Widgets/SourceList.vala"
		while (TRUE) {
#line 3678 "SourceList.c"
			GeeIterator* _tmp5_;
			GraniteWidgetsSourceListItem* item = NULL;
			GeeIterator* _tmp6_;
			gpointer _tmp7_;
			GraniteWidgetsSourceListItem* _tmp8_;
#line 650 "../lib/Widgets/SourceList.vala"
			_tmp5_ = _item_it;
#line 650 "../lib/Widgets/SourceList.vala"
			if (!gee_iterator_next (_tmp5_)) {
#line 650 "../lib/Widgets/SourceList.vala"
				break;
#line 3690 "SourceList.c"
			}
#line 650 "../lib/Widgets/SourceList.vala"
			_tmp6_ = _item_it;
#line 650 "../lib/Widgets/SourceList.vala"
			_tmp7_ = gee_iterator_get (_tmp6_);
#line 650 "../lib/Widgets/SourceList.vala"
			item = (GraniteWidgetsSourceListItem*) _tmp7_;
#line 651 "../lib/Widgets/SourceList.vala"
			_tmp8_ = item;
#line 651 "../lib/Widgets/SourceList.vala"
			granite_widgets_source_list_expandable_item_remove (self, _tmp8_);
#line 650 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 3704 "SourceList.c"
		}
#line 650 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_item_it);
#line 3708 "SourceList.c"
	}
}

/**
         * Expands the item and/or its children.
         *
         * @param inclusive Whether to also expand this item (true), or only its children (false).
         * @param recursive Whether to recursively expand all the children (true), or only
         * immediate children (false).
         * @see Granite.Widgets.SourceList.ExpandableItem.expanded
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_expand_all (GraniteWidgetsSourceListExpandableItem* self,
                                                        gboolean inclusive,
                                                        gboolean recursive)
{
#line 663 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 664 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_set_expansion (self, inclusive, recursive, TRUE);
#line 3730 "SourceList.c"
}

/**
         * Collapses the item and/or its children.
         *
         * @param inclusive Whether to also collapse this item (true), or only its children (false).
         * @param recursive Whether to recursively collapse all the children (true), or only
         * immediate children (false).
         * @see Granite.Widgets.SourceList.ExpandableItem.expanded
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_collapse_all (GraniteWidgetsSourceListExpandableItem* self,
                                                          gboolean inclusive,
                                                          gboolean recursive)
{
#line 676 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 677 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_set_expansion (self, inclusive, recursive, FALSE);
#line 3751 "SourceList.c"
}

static void
granite_widgets_source_list_expandable_item_set_expansion (GraniteWidgetsSourceListExpandableItem* item,
                                                           gboolean inclusive,
                                                           gboolean recursive,
                                                           gboolean expanded)
{
#line 680 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 681 "../lib/Widgets/SourceList.vala"
	if (inclusive) {
#line 682 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_set_expanded (item, expanded);
#line 3766 "SourceList.c"
	}
	{
		GeeIterator* _child_item_it = NULL;
		GeeCollection* _tmp0_;
		GeeCollection* _tmp1_;
		GeeCollection* _tmp2_;
		GeeIterator* _tmp3_;
		GeeIterator* _tmp4_;
#line 684 "../lib/Widgets/SourceList.vala"
		_tmp0_ = granite_widgets_source_list_expandable_item_get_children (item);
#line 684 "../lib/Widgets/SourceList.vala"
		_tmp1_ = _tmp0_;
#line 684 "../lib/Widgets/SourceList.vala"
		_tmp2_ = _tmp1_;
#line 684 "../lib/Widgets/SourceList.vala"
		_tmp3_ = gee_iterable_iterator ((GeeIterable*) _tmp2_);
#line 684 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _tmp3_;
#line 684 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp2_);
#line 684 "../lib/Widgets/SourceList.vala"
		_child_item_it = _tmp4_;
#line 684 "../lib/Widgets/SourceList.vala"
		while (TRUE) {
#line 3791 "SourceList.c"
			GeeIterator* _tmp5_;
			GraniteWidgetsSourceListItem* child_item = NULL;
			GeeIterator* _tmp6_;
			gpointer _tmp7_;
			GraniteWidgetsSourceListExpandableItem* child_expandable_item = NULL;
			GraniteWidgetsSourceListItem* _tmp8_;
			GraniteWidgetsSourceListExpandableItem* _tmp9_;
			GraniteWidgetsSourceListExpandableItem* _tmp10_;
#line 684 "../lib/Widgets/SourceList.vala"
			_tmp5_ = _child_item_it;
#line 684 "../lib/Widgets/SourceList.vala"
			if (!gee_iterator_next (_tmp5_)) {
#line 684 "../lib/Widgets/SourceList.vala"
				break;
#line 3806 "SourceList.c"
			}
#line 684 "../lib/Widgets/SourceList.vala"
			_tmp6_ = _child_item_it;
#line 684 "../lib/Widgets/SourceList.vala"
			_tmp7_ = gee_iterator_get (_tmp6_);
#line 684 "../lib/Widgets/SourceList.vala"
			child_item = (GraniteWidgetsSourceListItem*) _tmp7_;
#line 685 "../lib/Widgets/SourceList.vala"
			_tmp8_ = child_item;
#line 685 "../lib/Widgets/SourceList.vala"
			_tmp9_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp8_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp8_) : NULL);
#line 685 "../lib/Widgets/SourceList.vala"
			child_expandable_item = _tmp9_;
#line 686 "../lib/Widgets/SourceList.vala"
			_tmp10_ = child_expandable_item;
#line 686 "../lib/Widgets/SourceList.vala"
			if (_tmp10_ != NULL) {
#line 687 "../lib/Widgets/SourceList.vala"
				if (recursive) {
#line 3826 "SourceList.c"
					GraniteWidgetsSourceListExpandableItem* _tmp11_;
#line 688 "../lib/Widgets/SourceList.vala"
					_tmp11_ = child_expandable_item;
#line 688 "../lib/Widgets/SourceList.vala"
					granite_widgets_source_list_expandable_item_set_expansion (_tmp11_, TRUE, TRUE, expanded);
#line 3832 "SourceList.c"
				} else {
					GraniteWidgetsSourceListExpandableItem* _tmp12_;
#line 690 "../lib/Widgets/SourceList.vala"
					_tmp12_ = child_expandable_item;
#line 690 "../lib/Widgets/SourceList.vala"
					granite_widgets_source_list_expandable_item_set_expanded (_tmp12_, expanded);
#line 3839 "SourceList.c"
				}
			}
#line 684 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (child_expandable_item);
#line 684 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (child_item);
#line 3846 "SourceList.c"
		}
#line 684 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_child_item_it);
#line 3850 "SourceList.c"
	}
}

/**
         * Recursively expands the item along with its parent(s).
         *
         * @see Granite.Widgets.SourceList.ExpandableItem.expanded
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_expand_with_parents (GraniteWidgetsSourceListExpandableItem* self)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
#line 701 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 706 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_item_get_parent ((GraniteWidgetsSourceListItem*) self);
#line 706 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 706 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 3873 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp2_;
		GraniteWidgetsSourceListExpandableItem* _tmp3_;
#line 707 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_item_get_parent ((GraniteWidgetsSourceListItem*) self);
#line 707 "../lib/Widgets/SourceList.vala"
		_tmp3_ = _tmp2_;
#line 707 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_expand_with_parents (_tmp3_);
#line 3882 "SourceList.c"
	}
#line 708 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_set_expanded (self, TRUE);
#line 3886 "SourceList.c"
}

/**
         * Recursively collapses the item along with its parent(s).
         *
         * @see Granite.Widgets.SourceList.ExpandableItem.expanded
         * @since 0.2
         */
void
granite_widgets_source_list_expandable_item_collapse_with_parents (GraniteWidgetsSourceListExpandableItem* self)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
#line 717 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 718 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_item_get_parent ((GraniteWidgetsSourceListItem*) self);
#line 718 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 718 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 3908 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp2_;
		GraniteWidgetsSourceListExpandableItem* _tmp3_;
#line 719 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_item_get_parent ((GraniteWidgetsSourceListItem*) self);
#line 719 "../lib/Widgets/SourceList.vala"
		_tmp3_ = _tmp2_;
#line 719 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_collapse_with_parents (_tmp3_);
#line 3917 "SourceList.c"
	}
#line 720 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_set_expanded (self, FALSE);
#line 3921 "SourceList.c"
}

static GObject *
granite_widgets_source_list_expandable_item_constructor (GType type,
                                                         guint n_construct_properties,
                                                         GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsSourceListExpandableItem * self;
#line 578 "../lib/Widgets/SourceList.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_source_list_expandable_item_parent_class);
#line 578 "../lib/Widgets/SourceList.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 578 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItem);
#line 579 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_item_set_editable ((GraniteWidgetsSourceListItem*) self, FALSE);
#line 578 "../lib/Widgets/SourceList.vala"
	return obj;
#line 3942 "SourceList.c"
}

static void
granite_widgets_source_list_expandable_item_class_init (GraniteWidgetsSourceListExpandableItemClass * klass,
                                                        gpointer klass_data)
{
#line 467 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_parent_class = g_type_class_peek_parent (klass);
#line 467 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListExpandableItem_private_offset);
#line 467 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListExpandableItemClass *) klass)->toggled = granite_widgets_source_list_expandable_item_real_toggled;
#line 467 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_source_list_expandable_item_get_property;
#line 467 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_source_list_expandable_item_set_property;
#line 467 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_source_list_expandable_item_constructor;
#line 467 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_source_list_expandable_item_finalize;
#line 3963 "SourceList.c"
	/**
	         * Whether the item is collapsible or not.
	         *
	         * When set to //false//, the item is //always// expanded and the expander is
	         * not shown. Please note that this will also affect the value returned by the
	         * {@link Granite.Widgets.SourceList.ExpandableItem.expanded} property.
	         *
	         * @see Granite.Widgets.SourceList.ExpandableItem.expanded
	         * @since 0.2
	         */
#line 467 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_COLLAPSIBLE_PROPERTY, granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_COLLAPSIBLE_PROPERTY] = g_param_spec_boolean ("collapsible", "collapsible", "collapsible", TRUE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 467 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_EXPANDED_PROPERTY, granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_EXPANDED_PROPERTY] = g_param_spec_boolean ("expanded", "expanded", "expanded", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 3978 "SourceList.c"
	/**
	         * Number of children contained by the item.
	         *
	         * @since 0.2
	         */
#line 467 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_N_CHILDREN_PROPERTY, granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_N_CHILDREN_PROPERTY] = g_param_spec_uint ("n-children", "n-children", "n-children", 0, G_MAXUINT, 0U, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 3986 "SourceList.c"
	/**
	         * The item's children.
	         *
	         * This returns a newly-created list containing the children.
	         * It's safe to iterate it while removing items with
	         * {@link Granite.Widgets.SourceList.ExpandableItem.remove}
	         *
	         * @since 0.2
	         */
#line 467 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILDREN_PROPERTY, granite_widgets_source_list_expandable_item_properties[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILDREN_PROPERTY] = g_param_spec_object ("children", "children", "children", GEE_TYPE_COLLECTION, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 3998 "SourceList.c"
	/**
	         * Emitted when an item is added.
	         *
	         * @param item Item added.
	         * @see Granite.Widgets.SourceList.ExpandableItem.add
	         * @since 0.2
	         */
#line 467 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILD_ADDED_SIGNAL] = g_signal_new ("child-added", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
#line 4008 "SourceList.c"
	/**
	         * Emitted when an item is removed.
	         *
	         * @param item Item removed.
	         * @see Granite.Widgets.SourceList.ExpandableItem.remove
	         * @since 0.2
	         */
#line 467 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILD_REMOVED_SIGNAL] = g_signal_new ("child-removed", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
#line 4018 "SourceList.c"
	/**
	         * Emitted when the item is expanded or collapsed.
	         *
	         * @since 0.2
	         */
#line 467 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_signals[GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_TOGGLED_SIGNAL] = g_signal_new ("toggled", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, G_SIGNAL_RUN_LAST, G_STRUCT_OFFSET (GraniteWidgetsSourceListExpandableItemClass, toggled), NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 4026 "SourceList.c"
}

static void
granite_widgets_source_list_expandable_item_instance_init (GraniteWidgetsSourceListExpandableItem * self,
                                                           gpointer klass)
{
	GeeArrayList* _tmp0_;
#line 467 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_expandable_item_get_instance_private (self);
#line 504 "../lib/Widgets/SourceList.vala"
	self->priv->_collapsible = TRUE;
#line 526 "../lib/Widgets/SourceList.vala"
	self->priv->_expanded = FALSE;
#line 565 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gee_array_list_new (GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 565 "../lib/Widgets/SourceList.vala"
	self->priv->children_list = (GeeCollection*) _tmp0_;
#line 4044 "SourceList.c"
}

static void
granite_widgets_source_list_expandable_item_finalize (GObject * obj)
{
	GraniteWidgetsSourceListExpandableItem * self;
#line 467 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItem);
#line 565 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->children_list);
#line 467 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (granite_widgets_source_list_expandable_item_parent_class)->finalize (obj);
#line 4057 "SourceList.c"
}

/**
     * An item that can contain more items.
     *
     * It supports all the properties inherited from {@link Granite.Widgets.SourceList.Item},
     * and behaves like a normal item, except when it is located at the root level; in that case,
     * the following properties are ignored by the widget:
     *
     * * {@link Granite.Widgets.SourceList.Item.selectable}
     * * {@link Granite.Widgets.SourceList.Item.editable}
     * * {@link Granite.Widgets.SourceList.Item.icon}
     * * {@link Granite.Widgets.SourceList.Item.activatable}
     * * {@link Granite.Widgets.SourceList.Item.badge}
     *
     * Root-level expandable items (i.e. Main Categories) are ''not'' displayed when they contain
     * zero visible children.
     *
     * @since 0.2
     */
static GType
granite_widgets_source_list_expandable_item_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListExpandableItemClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_expandable_item_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListExpandableItem), 0, (GInstanceInitFunc) granite_widgets_source_list_expandable_item_instance_init, NULL };
	GType granite_widgets_source_list_expandable_item_type_id;
	granite_widgets_source_list_expandable_item_type_id = g_type_register_static (GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, "GraniteWidgetsSourceListExpandableItem", &g_define_type_info, 0);
	GraniteWidgetsSourceListExpandableItem_private_offset = g_type_add_instance_private (granite_widgets_source_list_expandable_item_type_id, sizeof (GraniteWidgetsSourceListExpandableItemPrivate));
	return granite_widgets_source_list_expandable_item_type_id;
}

GType
granite_widgets_source_list_expandable_item_get_type (void)
{
	static volatile gsize granite_widgets_source_list_expandable_item_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_expandable_item_type_id__volatile)) {
		GType granite_widgets_source_list_expandable_item_type_id;
		granite_widgets_source_list_expandable_item_type_id = granite_widgets_source_list_expandable_item_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_expandable_item_type_id__volatile, granite_widgets_source_list_expandable_item_type_id);
	}
	return granite_widgets_source_list_expandable_item_type_id__volatile;
}

static void
_vala_granite_widgets_source_list_expandable_item_get_property (GObject * object,
                                                                guint property_id,
                                                                GValue * value,
                                                                GParamSpec * pspec)
{
	GraniteWidgetsSourceListExpandableItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItem);
#line 467 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 467 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_COLLAPSIBLE_PROPERTY:
#line 467 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_expandable_item_get_collapsible (self));
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 467 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_EXPANDED_PROPERTY:
#line 467 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_expandable_item_get_expanded (self));
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 467 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_N_CHILDREN_PROPERTY:
#line 467 "../lib/Widgets/SourceList.vala"
		g_value_set_uint (value, granite_widgets_source_list_expandable_item_get_n_children (self));
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 467 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_CHILDREN_PROPERTY:
#line 467 "../lib/Widgets/SourceList.vala"
		g_value_take_object (value, granite_widgets_source_list_expandable_item_get_children (self));
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 4134 "SourceList.c"
		default:
#line 467 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 4140 "SourceList.c"
	}
}

static void
_vala_granite_widgets_source_list_expandable_item_set_property (GObject * object,
                                                                guint property_id,
                                                                const GValue * value,
                                                                GParamSpec * pspec)
{
	GraniteWidgetsSourceListExpandableItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, GraniteWidgetsSourceListExpandableItem);
#line 467 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 467 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_COLLAPSIBLE_PROPERTY:
#line 467 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_set_collapsible (self, g_value_get_boolean (value));
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 467 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EXPANDABLE_ITEM_EXPANDED_PROPERTY:
#line 467 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_set_expanded (self, g_value_get_boolean (value));
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 4166 "SourceList.c"
		default:
#line 467 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 467 "../lib/Widgets/SourceList.vala"
		break;
#line 4172 "SourceList.c"
	}
}

static inline gpointer
granite_widgets_source_list_data_model_get_instance_private (GraniteWidgetsSourceListDataModel* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListDataModel_private_offset);
}

static GType
granite_widgets_source_list_data_model_column_type (GraniteWidgetsSourceListDataModelColumn self)
{
	GType result = 0UL;
#line 816 "../lib/Widgets/SourceList.vala"
	switch (self) {
#line 816 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM:
#line 4190 "SourceList.c"
		{
#line 818 "../lib/Widgets/SourceList.vala"
			result = GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM;
#line 818 "../lib/Widgets/SourceList.vala"
			return result;
#line 4196 "SourceList.c"
		}
		default:
		{
#line 821 "../lib/Widgets/SourceList.vala"
			g_assert_not_reached ();
#line 4202 "SourceList.c"
		}
	}
}

static GType
granite_widgets_source_list_data_model_column_get_type_once (void)
{
	static const GEnumValue values[] = {{GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, "GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM", "item"}, {GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_N_COLUMNS, "GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_N_COLUMNS", "n-columns"}, {0, NULL, NULL}};
	GType granite_widgets_source_list_data_model_column_type_id;
	granite_widgets_source_list_data_model_column_type_id = g_enum_register_static ("GraniteWidgetsSourceListDataModelColumn", values);
	return granite_widgets_source_list_data_model_column_type_id;
}

static GType
granite_widgets_source_list_data_model_column_get_type (void)
{
	static volatile gsize granite_widgets_source_list_data_model_column_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_data_model_column_type_id__volatile)) {
		GType granite_widgets_source_list_data_model_column_type_id;
		granite_widgets_source_list_data_model_column_type_id = granite_widgets_source_list_data_model_column_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_data_model_column_type_id__volatile, granite_widgets_source_list_data_model_column_type_id);
	}
	return granite_widgets_source_list_data_model_column_type_id__volatile;
}

static GraniteWidgetsSourceListExpandableItem*
granite_widgets_source_list_data_model_get_root (GraniteWidgetsSourceListDataModel* self)
{
	GraniteWidgetsSourceListExpandableItem* result;
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
#line 842 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 842 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_root;
#line 842 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 842 "../lib/Widgets/SourceList.vala"
	return result;
#line 4241 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_set_root (GraniteWidgetsSourceListDataModel* self,
                                                 GraniteWidgetsSourceListExpandableItem* value)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp12_;
	GraniteWidgetsSourceListExpandableItem* _tmp13_;
#line 843 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 844 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_root;
#line 844 "../lib/Widgets/SourceList.vala"
	if (_tmp0_ != NULL) {
#line 4257 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp1_;
#line 845 "../lib/Widgets/SourceList.vala"
		_tmp1_ = self->priv->_root;
#line 845 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_remove_children_monitor (self, _tmp1_);
#line 4263 "SourceList.c"
		{
			GeeIterator* _item_it = NULL;
			GraniteWidgetsSourceListExpandableItem* _tmp2_;
			GeeCollection* _tmp3_;
			GeeCollection* _tmp4_;
			GeeCollection* _tmp5_;
			GeeIterator* _tmp6_;
			GeeIterator* _tmp7_;
#line 846 "../lib/Widgets/SourceList.vala"
			_tmp2_ = self->priv->_root;
#line 846 "../lib/Widgets/SourceList.vala"
			_tmp3_ = granite_widgets_source_list_expandable_item_get_children (_tmp2_);
#line 846 "../lib/Widgets/SourceList.vala"
			_tmp4_ = _tmp3_;
#line 846 "../lib/Widgets/SourceList.vala"
			_tmp5_ = _tmp4_;
#line 846 "../lib/Widgets/SourceList.vala"
			_tmp6_ = gee_iterable_iterator ((GeeIterable*) _tmp5_);
#line 846 "../lib/Widgets/SourceList.vala"
			_tmp7_ = _tmp6_;
#line 846 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (_tmp5_);
#line 846 "../lib/Widgets/SourceList.vala"
			_item_it = _tmp7_;
#line 846 "../lib/Widgets/SourceList.vala"
			while (TRUE) {
#line 4290 "SourceList.c"
				GeeIterator* _tmp8_;
				GraniteWidgetsSourceListItem* item = NULL;
				GeeIterator* _tmp9_;
				gpointer _tmp10_;
				GraniteWidgetsSourceListItem* _tmp11_;
#line 846 "../lib/Widgets/SourceList.vala"
				_tmp8_ = _item_it;
#line 846 "../lib/Widgets/SourceList.vala"
				if (!gee_iterator_next (_tmp8_)) {
#line 846 "../lib/Widgets/SourceList.vala"
					break;
#line 4302 "SourceList.c"
				}
#line 846 "../lib/Widgets/SourceList.vala"
				_tmp9_ = _item_it;
#line 846 "../lib/Widgets/SourceList.vala"
				_tmp10_ = gee_iterator_get (_tmp9_);
#line 846 "../lib/Widgets/SourceList.vala"
				item = (GraniteWidgetsSourceListItem*) _tmp10_;
#line 847 "../lib/Widgets/SourceList.vala"
				_tmp11_ = item;
#line 847 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_data_model_remove_item (self, _tmp11_);
#line 846 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (item);
#line 4316 "SourceList.c"
			}
#line 846 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (_item_it);
#line 4320 "SourceList.c"
		}
	}
#line 850 "../lib/Widgets/SourceList.vala"
	_tmp12_ = _g_object_ref0 (value);
#line 850 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->_root);
#line 850 "../lib/Widgets/SourceList.vala"
	self->priv->_root = _tmp12_;
#line 852 "../lib/Widgets/SourceList.vala"
	_tmp13_ = self->priv->_root;
#line 852 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_add_children_monitor (self, _tmp13_);
#line 4333 "SourceList.c"
	{
		GeeIterator* _item_it = NULL;
		GraniteWidgetsSourceListExpandableItem* _tmp14_;
		GeeCollection* _tmp15_;
		GeeCollection* _tmp16_;
		GeeCollection* _tmp17_;
		GeeIterator* _tmp18_;
		GeeIterator* _tmp19_;
#line 853 "../lib/Widgets/SourceList.vala"
		_tmp14_ = self->priv->_root;
#line 853 "../lib/Widgets/SourceList.vala"
		_tmp15_ = granite_widgets_source_list_expandable_item_get_children (_tmp14_);
#line 853 "../lib/Widgets/SourceList.vala"
		_tmp16_ = _tmp15_;
#line 853 "../lib/Widgets/SourceList.vala"
		_tmp17_ = _tmp16_;
#line 853 "../lib/Widgets/SourceList.vala"
		_tmp18_ = gee_iterable_iterator ((GeeIterable*) _tmp17_);
#line 853 "../lib/Widgets/SourceList.vala"
		_tmp19_ = _tmp18_;
#line 853 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp17_);
#line 853 "../lib/Widgets/SourceList.vala"
		_item_it = _tmp19_;
#line 853 "../lib/Widgets/SourceList.vala"
		while (TRUE) {
#line 4360 "SourceList.c"
			GeeIterator* _tmp20_;
			GraniteWidgetsSourceListItem* item = NULL;
			GeeIterator* _tmp21_;
			gpointer _tmp22_;
			GraniteWidgetsSourceListItem* _tmp23_;
#line 853 "../lib/Widgets/SourceList.vala"
			_tmp20_ = _item_it;
#line 853 "../lib/Widgets/SourceList.vala"
			if (!gee_iterator_next (_tmp20_)) {
#line 853 "../lib/Widgets/SourceList.vala"
				break;
#line 4372 "SourceList.c"
			}
#line 853 "../lib/Widgets/SourceList.vala"
			_tmp21_ = _item_it;
#line 853 "../lib/Widgets/SourceList.vala"
			_tmp22_ = gee_iterator_get (_tmp21_);
#line 853 "../lib/Widgets/SourceList.vala"
			item = (GraniteWidgetsSourceListItem*) _tmp22_;
#line 854 "../lib/Widgets/SourceList.vala"
			_tmp23_ = item;
#line 854 "../lib/Widgets/SourceList.vala"
			granite_widgets_source_list_data_model_add_item (self, _tmp23_);
#line 853 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 4386 "SourceList.c"
		}
#line 853 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_item_it);
#line 4390 "SourceList.c"
	}
#line 843 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_data_model_properties[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ROOT_PROPERTY]);
#line 4394 "SourceList.c"
}

static GraniteWidgetsSourceListDataModel*
granite_widgets_source_list_data_model_construct (GType object_type)
{
	GraniteWidgetsSourceListDataModel * self = NULL;
#line 868 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModel*) g_object_new (object_type, NULL);
#line 868 "../lib/Widgets/SourceList.vala"
	return self;
#line 4405 "SourceList.c"
}

static GraniteWidgetsSourceListDataModel*
granite_widgets_source_list_data_model_new (void)
{
#line 868 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_data_model_construct (GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL);
#line 4413 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_has_item (GraniteWidgetsSourceListDataModel* self,
                                                 GraniteWidgetsSourceListItem* item)
{
	GeeHashMap* _tmp0_;
	gboolean result = FALSE;
#line 883 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 883 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 884 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->items;
#line 884 "../lib/Widgets/SourceList.vala"
	result = gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, item);
#line 884 "../lib/Widgets/SourceList.vala"
	return result;
#line 4432 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_update_item (GraniteWidgetsSourceListDataModel* self,
                                                    GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
	GraniteWidgetsSourceListDataModelNodeWrapper* node_reference = NULL;
	GeeHashMap* _tmp2_;
	gpointer _tmp3_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp4_;
#line 887 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 887 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 887 "../lib/Widgets/SourceList.vala"
	_vala_return_if_fail (granite_widgets_source_list_data_model_has_item (self, item), "has_item (item)");
#line 888 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_root (self);
#line 888 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 888 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "root != null");
#line 893 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->items;
#line 893 "../lib/Widgets/SourceList.vala"
	_tmp3_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp2_, item);
#line 893 "../lib/Widgets/SourceList.vala"
	node_reference = (GraniteWidgetsSourceListDataModelNodeWrapper*) _tmp3_;
#line 894 "../lib/Widgets/SourceList.vala"
	_tmp4_ = node_reference;
#line 894 "../lib/Widgets/SourceList.vala"
	if (_tmp4_ != NULL) {
#line 4467 "SourceList.c"
		GtkTreePath* path = NULL;
		GraniteWidgetsSourceListDataModelNodeWrapper* _tmp5_;
		GtkTreePath* _tmp6_;
		GtkTreePath* _tmp7_;
		GtkTreeIter* iter = NULL;
		GraniteWidgetsSourceListDataModelNodeWrapper* _tmp8_;
		GtkTreeIter* _tmp9_;
		GtkTreeIter* _tmp10_;
		gboolean _tmp11_ = FALSE;
		GtkTreePath* _tmp12_;
#line 895 "../lib/Widgets/SourceList.vala"
		_tmp5_ = node_reference;
#line 895 "../lib/Widgets/SourceList.vala"
		_tmp6_ = granite_widgets_source_list_data_model_node_wrapper_get_path (_tmp5_);
#line 895 "../lib/Widgets/SourceList.vala"
		_tmp7_ = _tmp6_;
#line 895 "../lib/Widgets/SourceList.vala"
		path = _tmp7_;
#line 896 "../lib/Widgets/SourceList.vala"
		_tmp8_ = node_reference;
#line 896 "../lib/Widgets/SourceList.vala"
		_tmp9_ = granite_widgets_source_list_data_model_node_wrapper_get_iter (_tmp8_);
#line 896 "../lib/Widgets/SourceList.vala"
		_tmp10_ = _tmp9_;
#line 896 "../lib/Widgets/SourceList.vala"
		iter = _tmp10_;
#line 897 "../lib/Widgets/SourceList.vala"
		_tmp12_ = path;
#line 897 "../lib/Widgets/SourceList.vala"
		if (_tmp12_ != NULL) {
#line 4498 "SourceList.c"
			GtkTreeIter* _tmp13_;
#line 897 "../lib/Widgets/SourceList.vala"
			_tmp13_ = iter;
#line 897 "../lib/Widgets/SourceList.vala"
			_tmp11_ = _tmp13_ != NULL;
#line 4504 "SourceList.c"
		} else {
#line 897 "../lib/Widgets/SourceList.vala"
			_tmp11_ = FALSE;
#line 4508 "SourceList.c"
		}
#line 897 "../lib/Widgets/SourceList.vala"
		if (_tmp11_) {
#line 4512 "SourceList.c"
			GtkTreeStore* _tmp14_;
			GtkTreePath* _tmp15_;
			GtkTreeIter* _tmp16_;
			GtkTreeIter _tmp17_;
#line 898 "../lib/Widgets/SourceList.vala"
			_tmp14_ = self->priv->child_tree;
#line 898 "../lib/Widgets/SourceList.vala"
			_tmp15_ = path;
#line 898 "../lib/Widgets/SourceList.vala"
			_tmp16_ = iter;
#line 898 "../lib/Widgets/SourceList.vala"
			_tmp17_ = *_tmp16_;
#line 898 "../lib/Widgets/SourceList.vala"
			gtk_tree_model_row_changed ((GtkTreeModel*) _tmp14_, _tmp15_, &_tmp17_);
#line 899 "../lib/Widgets/SourceList.vala"
			g_signal_emit (self, granite_widgets_source_list_data_model_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_UPDATED_SIGNAL], 0, item);
#line 4529 "SourceList.c"
		}
#line 894 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreeIter_free0 (iter);
#line 894 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 4535 "SourceList.c"
	}
#line 887 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_node_wrapper_unref0 (node_reference);
#line 4539 "SourceList.c"
}

static GtkTreeIter*
_vala_GtkTreeIter_copy (GtkTreeIter* self)
{
#line 923 "../lib/Widgets/SourceList.vala"
	return g_boxed_copy (gtk_tree_iter_get_type (), self);
#line 4547 "SourceList.c"
}

static gpointer
__vala_GtkTreeIter_copy0 (gpointer self)
{
#line 923 "../lib/Widgets/SourceList.vala"
	return self ? _vala_GtkTreeIter_copy (self) : NULL;
#line 4555 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_add_item (GraniteWidgetsSourceListDataModel* self,
                                                 GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
	GtkTreeIter* parent_child_iter = NULL;
	GtkTreeIter* child_iter = NULL;
	GraniteWidgetsSourceListExpandableItem* parent = NULL;
	GraniteWidgetsSourceListExpandableItem* _tmp2_;
	GraniteWidgetsSourceListExpandableItem* _tmp3_;
	GraniteWidgetsSourceListExpandableItem* _tmp4_;
	gboolean _tmp5_ = FALSE;
	GraniteWidgetsSourceListExpandableItem* _tmp6_;
	GtkTreeStore* _tmp15_;
	GtkTreeIter* _tmp16_;
	GtkTreeIter _tmp17_ = {0};
	GtkTreeIter _tmp18_;
	GtkTreeIter* _tmp19_;
	GtkTreeStore* _tmp20_;
	GtkTreeIter* _tmp21_;
	GtkTreeIter _tmp22_;
	GeeHashMap* _tmp23_;
	GtkTreeStore* _tmp24_;
	GtkTreeIter* _tmp25_;
	GtkTreeIter _tmp26_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp27_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp28_;
	GraniteWidgetsSourceListExpandableItem* _tmp29_;
	GraniteWidgetsSourceListExpandableItem* expandable = NULL;
	GraniteWidgetsSourceListExpandableItem* _tmp30_;
	GraniteWidgetsSourceListExpandableItem* _tmp31_;
#line 904 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 904 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 904 "../lib/Widgets/SourceList.vala"
	_vala_return_if_fail (!granite_widgets_source_list_data_model_has_item (self, item), "!has_item (item)");
#line 905 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_root (self);
#line 905 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 905 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "root != null");
#line 908 "../lib/Widgets/SourceList.vala"
	parent_child_iter = NULL;
#line 909 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_item_get_parent (item);
#line 909 "../lib/Widgets/SourceList.vala"
	_tmp3_ = _tmp2_;
#line 909 "../lib/Widgets/SourceList.vala"
	_tmp4_ = _g_object_ref0 (_tmp3_);
#line 909 "../lib/Widgets/SourceList.vala"
	parent = _tmp4_;
#line 911 "../lib/Widgets/SourceList.vala"
	_tmp6_ = parent;
#line 911 "../lib/Widgets/SourceList.vala"
	if (_tmp6_ != NULL) {
#line 4616 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp7_;
		GraniteWidgetsSourceListExpandableItem* _tmp8_;
		GraniteWidgetsSourceListExpandableItem* _tmp9_;
#line 911 "../lib/Widgets/SourceList.vala"
		_tmp7_ = parent;
#line 911 "../lib/Widgets/SourceList.vala"
		_tmp8_ = granite_widgets_source_list_data_model_get_root (self);
#line 911 "../lib/Widgets/SourceList.vala"
		_tmp9_ = _tmp8_;
#line 911 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _tmp7_ != _tmp9_;
#line 4628 "SourceList.c"
	} else {
#line 911 "../lib/Widgets/SourceList.vala"
		_tmp5_ = FALSE;
#line 4632 "SourceList.c"
	}
#line 911 "../lib/Widgets/SourceList.vala"
	if (_tmp5_) {
#line 4636 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp10_;
		GraniteWidgetsSourceListExpandableItem* _tmp12_;
		GtkTreeIter* _tmp13_;
		GtkTreeIter* _tmp14_;
#line 913 "../lib/Widgets/SourceList.vala"
		_tmp10_ = parent;
#line 913 "../lib/Widgets/SourceList.vala"
		if (!granite_widgets_source_list_data_model_has_item (self, (GraniteWidgetsSourceListItem*) _tmp10_)) {
#line 4645 "SourceList.c"
			GraniteWidgetsSourceListExpandableItem* _tmp11_;
#line 914 "../lib/Widgets/SourceList.vala"
			_tmp11_ = parent;
#line 914 "../lib/Widgets/SourceList.vala"
			granite_widgets_source_list_data_model_add_item (self, (GraniteWidgetsSourceListItem*) _tmp11_);
#line 4651 "SourceList.c"
		}
#line 917 "../lib/Widgets/SourceList.vala"
		_tmp12_ = parent;
#line 917 "../lib/Widgets/SourceList.vala"
		_tmp13_ = granite_widgets_source_list_data_model_get_item_child_iter (self, (GraniteWidgetsSourceListItem*) _tmp12_);
#line 917 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreeIter_free0 (parent_child_iter);
#line 917 "../lib/Widgets/SourceList.vala"
		parent_child_iter = _tmp13_;
#line 920 "../lib/Widgets/SourceList.vala"
		_tmp14_ = parent_child_iter;
#line 920 "../lib/Widgets/SourceList.vala"
		_vala_assert (_tmp14_ != NULL, "parent_child_iter != null");
#line 4665 "SourceList.c"
	}
#line 923 "../lib/Widgets/SourceList.vala"
	_tmp15_ = self->priv->child_tree;
#line 923 "../lib/Widgets/SourceList.vala"
	_tmp16_ = parent_child_iter;
#line 923 "../lib/Widgets/SourceList.vala"
	gtk_tree_store_append (_tmp15_, &_tmp17_, _tmp16_);
#line 923 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (child_iter);
#line 923 "../lib/Widgets/SourceList.vala"
	_tmp18_ = _tmp17_;
#line 923 "../lib/Widgets/SourceList.vala"
	_tmp19_ = __vala_GtkTreeIter_copy0 (&_tmp18_);
#line 923 "../lib/Widgets/SourceList.vala"
	child_iter = _tmp19_;
#line 924 "../lib/Widgets/SourceList.vala"
	_tmp20_ = self->priv->child_tree;
#line 924 "../lib/Widgets/SourceList.vala"
	_tmp21_ = child_iter;
#line 924 "../lib/Widgets/SourceList.vala"
	_tmp22_ = *_tmp21_;
#line 924 "../lib/Widgets/SourceList.vala"
	gtk_tree_store_set (_tmp20_, &_tmp22_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, item, -1, -1);
#line 926 "../lib/Widgets/SourceList.vala"
	_tmp23_ = self->priv->items;
#line 926 "../lib/Widgets/SourceList.vala"
	_tmp24_ = self->priv->child_tree;
#line 926 "../lib/Widgets/SourceList.vala"
	_tmp25_ = child_iter;
#line 926 "../lib/Widgets/SourceList.vala"
	_tmp26_ = *_tmp25_;
#line 926 "../lib/Widgets/SourceList.vala"
	_tmp27_ = granite_widgets_source_list_data_model_node_wrapper_new ((GtkTreeModel*) _tmp24_, &_tmp26_);
#line 926 "../lib/Widgets/SourceList.vala"
	_tmp28_ = _tmp27_;
#line 926 "../lib/Widgets/SourceList.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp23_, item, _tmp28_);
#line 926 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_node_wrapper_unref0 (_tmp28_);
#line 930 "../lib/Widgets/SourceList.vala"
	g_signal_emit (self, granite_widgets_source_list_data_model_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_UPDATED_SIGNAL], 0, item);
#line 932 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_add_property_monitor (self, item);
#line 934 "../lib/Widgets/SourceList.vala"
	_tmp29_ = parent;
#line 934 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_push_parent_update (self, _tmp29_);
#line 937 "../lib/Widgets/SourceList.vala"
	_tmp30_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (item) ? ((GraniteWidgetsSourceListExpandableItem*) item) : NULL);
#line 937 "../lib/Widgets/SourceList.vala"
	expandable = _tmp30_;
#line 938 "../lib/Widgets/SourceList.vala"
	_tmp31_ = expandable;
#line 938 "../lib/Widgets/SourceList.vala"
	if (_tmp31_ != NULL) {
#line 4721 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp42_;
		{
			GeeIterator* _child_item_it = NULL;
			GraniteWidgetsSourceListExpandableItem* _tmp32_;
			GeeCollection* _tmp33_;
			GeeCollection* _tmp34_;
			GeeCollection* _tmp35_;
			GeeIterator* _tmp36_;
			GeeIterator* _tmp37_;
#line 939 "../lib/Widgets/SourceList.vala"
			_tmp32_ = expandable;
#line 939 "../lib/Widgets/SourceList.vala"
			_tmp33_ = granite_widgets_source_list_expandable_item_get_children (_tmp32_);
#line 939 "../lib/Widgets/SourceList.vala"
			_tmp34_ = _tmp33_;
#line 939 "../lib/Widgets/SourceList.vala"
			_tmp35_ = _tmp34_;
#line 939 "../lib/Widgets/SourceList.vala"
			_tmp36_ = gee_iterable_iterator ((GeeIterable*) _tmp35_);
#line 939 "../lib/Widgets/SourceList.vala"
			_tmp37_ = _tmp36_;
#line 939 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (_tmp35_);
#line 939 "../lib/Widgets/SourceList.vala"
			_child_item_it = _tmp37_;
#line 939 "../lib/Widgets/SourceList.vala"
			while (TRUE) {
#line 4749 "SourceList.c"
				GeeIterator* _tmp38_;
				GraniteWidgetsSourceListItem* child_item = NULL;
				GeeIterator* _tmp39_;
				gpointer _tmp40_;
				GraniteWidgetsSourceListItem* _tmp41_;
#line 939 "../lib/Widgets/SourceList.vala"
				_tmp38_ = _child_item_it;
#line 939 "../lib/Widgets/SourceList.vala"
				if (!gee_iterator_next (_tmp38_)) {
#line 939 "../lib/Widgets/SourceList.vala"
					break;
#line 4761 "SourceList.c"
				}
#line 939 "../lib/Widgets/SourceList.vala"
				_tmp39_ = _child_item_it;
#line 939 "../lib/Widgets/SourceList.vala"
				_tmp40_ = gee_iterator_get (_tmp39_);
#line 939 "../lib/Widgets/SourceList.vala"
				child_item = (GraniteWidgetsSourceListItem*) _tmp40_;
#line 940 "../lib/Widgets/SourceList.vala"
				_tmp41_ = child_item;
#line 940 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_data_model_add_item (self, _tmp41_);
#line 939 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (child_item);
#line 4775 "SourceList.c"
			}
#line 939 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (_child_item_it);
#line 4779 "SourceList.c"
		}
#line 943 "../lib/Widgets/SourceList.vala"
		_tmp42_ = expandable;
#line 943 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_add_children_monitor (self, _tmp42_);
#line 4785 "SourceList.c"
	}
#line 904 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (expandable);
#line 904 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (parent);
#line 904 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (child_iter);
#line 904 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (parent_child_iter);
#line 4795 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_remove_item (GraniteWidgetsSourceListDataModel* self,
                                                    GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
	GtkTreeIter* child_iter = NULL;
	GtkTreeIter* _tmp2_;
	GeeHashMap* _tmp3_;
	GtkTreeIter* _tmp4_;
	GraniteWidgetsSourceListExpandableItem* _tmp6_;
	GraniteWidgetsSourceListExpandableItem* _tmp7_;
	GraniteWidgetsSourceListExpandableItem* expandable = NULL;
	GraniteWidgetsSourceListExpandableItem* _tmp8_;
	GraniteWidgetsSourceListExpandableItem* _tmp9_;
#line 947 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 947 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 947 "../lib/Widgets/SourceList.vala"
	_vala_return_if_fail (granite_widgets_source_list_data_model_has_item (self, item), "has_item (item)");
#line 948 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_root (self);
#line 948 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 948 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "root != null");
#line 950 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_remove_property_monitor (self, item);
#line 955 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_data_model_get_item_child_iter (self, item);
#line 955 "../lib/Widgets/SourceList.vala"
	child_iter = _tmp2_;
#line 961 "../lib/Widgets/SourceList.vala"
	_tmp3_ = self->priv->items;
#line 961 "../lib/Widgets/SourceList.vala"
	gee_abstract_map_unset ((GeeAbstractMap*) _tmp3_, item, NULL);
#line 963 "../lib/Widgets/SourceList.vala"
	_tmp4_ = child_iter;
#line 963 "../lib/Widgets/SourceList.vala"
	if (_tmp4_ != NULL) {
#line 4839 "SourceList.c"
		GtkTreeStore* _tmp5_;
#line 964 "../lib/Widgets/SourceList.vala"
		_tmp5_ = self->priv->child_tree;
#line 964 "../lib/Widgets/SourceList.vala"
		gtk_tree_store_remove (_tmp5_, child_iter);
#line 4845 "SourceList.c"
	}
#line 966 "../lib/Widgets/SourceList.vala"
	_tmp6_ = granite_widgets_source_list_item_get_parent (item);
#line 966 "../lib/Widgets/SourceList.vala"
	_tmp7_ = _tmp6_;
#line 966 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_push_parent_update (self, _tmp7_);
#line 969 "../lib/Widgets/SourceList.vala"
	_tmp8_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (item) ? ((GraniteWidgetsSourceListExpandableItem*) item) : NULL);
#line 969 "../lib/Widgets/SourceList.vala"
	expandable = _tmp8_;
#line 970 "../lib/Widgets/SourceList.vala"
	_tmp9_ = expandable;
#line 970 "../lib/Widgets/SourceList.vala"
	if (_tmp9_ != NULL) {
#line 4861 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp10_;
#line 972 "../lib/Widgets/SourceList.vala"
		_tmp10_ = expandable;
#line 972 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_remove_children_monitor (self, _tmp10_);
#line 4867 "SourceList.c"
		{
			GeeIterator* _child_item_it = NULL;
			GraniteWidgetsSourceListExpandableItem* _tmp11_;
			GeeCollection* _tmp12_;
			GeeCollection* _tmp13_;
			GeeCollection* _tmp14_;
			GeeIterator* _tmp15_;
			GeeIterator* _tmp16_;
#line 974 "../lib/Widgets/SourceList.vala"
			_tmp11_ = expandable;
#line 974 "../lib/Widgets/SourceList.vala"
			_tmp12_ = granite_widgets_source_list_expandable_item_get_children (_tmp11_);
#line 974 "../lib/Widgets/SourceList.vala"
			_tmp13_ = _tmp12_;
#line 974 "../lib/Widgets/SourceList.vala"
			_tmp14_ = _tmp13_;
#line 974 "../lib/Widgets/SourceList.vala"
			_tmp15_ = gee_iterable_iterator ((GeeIterable*) _tmp14_);
#line 974 "../lib/Widgets/SourceList.vala"
			_tmp16_ = _tmp15_;
#line 974 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (_tmp14_);
#line 974 "../lib/Widgets/SourceList.vala"
			_child_item_it = _tmp16_;
#line 974 "../lib/Widgets/SourceList.vala"
			while (TRUE) {
#line 4894 "SourceList.c"
				GeeIterator* _tmp17_;
				GraniteWidgetsSourceListItem* child_item = NULL;
				GeeIterator* _tmp18_;
				gpointer _tmp19_;
				GraniteWidgetsSourceListItem* _tmp20_;
#line 974 "../lib/Widgets/SourceList.vala"
				_tmp17_ = _child_item_it;
#line 974 "../lib/Widgets/SourceList.vala"
				if (!gee_iterator_next (_tmp17_)) {
#line 974 "../lib/Widgets/SourceList.vala"
					break;
#line 4906 "SourceList.c"
				}
#line 974 "../lib/Widgets/SourceList.vala"
				_tmp18_ = _child_item_it;
#line 974 "../lib/Widgets/SourceList.vala"
				_tmp19_ = gee_iterator_get (_tmp18_);
#line 974 "../lib/Widgets/SourceList.vala"
				child_item = (GraniteWidgetsSourceListItem*) _tmp19_;
#line 975 "../lib/Widgets/SourceList.vala"
				_tmp20_ = child_item;
#line 975 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_data_model_remove_item (self, _tmp20_);
#line 974 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (child_item);
#line 4920 "SourceList.c"
			}
#line 974 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (_child_item_it);
#line 4924 "SourceList.c"
		}
	}
#line 947 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (expandable);
#line 947 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (child_iter);
#line 4931 "SourceList.c"
}

static void
_granite_widgets_source_list_data_model_on_item_prop_changed_granite_widgets_source_list_data_model_item_monitor_changed (GraniteWidgetsSourceListDataModelItemMonitor* _sender,
                                                                                                                          GraniteWidgetsSourceListItem* _self_,
                                                                                                                          const gchar* prop_name,
                                                                                                                          gpointer self)
{
#line 982 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_on_item_prop_changed ((GraniteWidgetsSourceListDataModel*) self, _self_, prop_name);
#line 4942 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_add_property_monitor (GraniteWidgetsSourceListDataModel* self,
                                                             GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListDataModelItemMonitor* wrapper = NULL;
	GraniteWidgetsSourceListDataModelItemMonitor* _tmp0_;
	GeeHashMap* _tmp1_;
#line 979 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 979 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 980 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_item_monitor_new (item);
#line 980 "../lib/Widgets/SourceList.vala"
	wrapper = _tmp0_;
#line 981 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->monitors;
#line 981 "../lib/Widgets/SourceList.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp1_, item, wrapper);
#line 982 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object (wrapper, "changed", (GCallback) _granite_widgets_source_list_data_model_on_item_prop_changed_granite_widgets_source_list_data_model_item_monitor_changed, self, 0);
#line 979 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_item_monitor_unref0 (wrapper);
#line 4968 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_remove_property_monitor (GraniteWidgetsSourceListDataModel* self,
                                                                GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListDataModelItemMonitor* wrapper = NULL;
	GeeHashMap* _tmp0_;
	gpointer _tmp1_;
	GraniteWidgetsSourceListDataModelItemMonitor* _tmp2_;
	GeeHashMap* _tmp5_;
#line 985 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 985 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 986 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->monitors;
#line 986 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp0_, item);
#line 986 "../lib/Widgets/SourceList.vala"
	wrapper = (GraniteWidgetsSourceListDataModelItemMonitor*) _tmp1_;
#line 987 "../lib/Widgets/SourceList.vala"
	_tmp2_ = wrapper;
#line 987 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 4994 "SourceList.c"
		GraniteWidgetsSourceListDataModelItemMonitor* _tmp3_;
		guint _tmp4_;
#line 988 "../lib/Widgets/SourceList.vala"
		_tmp3_ = wrapper;
#line 988 "../lib/Widgets/SourceList.vala"
		g_signal_parse_name ("changed", GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, &_tmp4_, NULL, FALSE);
#line 988 "../lib/Widgets/SourceList.vala"
		g_signal_handlers_disconnect_matched (_tmp3_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp4_, 0, NULL, (GCallback) _granite_widgets_source_list_data_model_on_item_prop_changed_granite_widgets_source_list_data_model_item_monitor_changed, self);
#line 5003 "SourceList.c"
	}
#line 989 "../lib/Widgets/SourceList.vala"
	_tmp5_ = self->priv->monitors;
#line 989 "../lib/Widgets/SourceList.vala"
	gee_abstract_map_unset ((GeeAbstractMap*) _tmp5_, item, NULL);
#line 985 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_item_monitor_unref0 (wrapper);
#line 5011 "SourceList.c"
}

static void
_granite_widgets_source_list_data_model_on_item_child_added_granite_widgets_source_list_expandable_item_child_added (GraniteWidgetsSourceListExpandableItem* _sender,
                                                                                                                     GraniteWidgetsSourceListItem* item,
                                                                                                                     gpointer self)
{
#line 993 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_on_item_child_added ((GraniteWidgetsSourceListDataModel*) self, item);
#line 5021 "SourceList.c"
}

static void
_granite_widgets_source_list_data_model_on_item_child_removed_granite_widgets_source_list_expandable_item_child_removed (GraniteWidgetsSourceListExpandableItem* _sender,
                                                                                                                         GraniteWidgetsSourceListItem* item,
                                                                                                                         gpointer self)
{
#line 994 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_on_item_child_removed ((GraniteWidgetsSourceListDataModel*) self, item);
#line 5031 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_add_children_monitor (GraniteWidgetsSourceListDataModel* self,
                                                             GraniteWidgetsSourceListExpandableItem* item)
{
#line 992 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 992 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 993 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object (item, "child-added", (GCallback) _granite_widgets_source_list_data_model_on_item_child_added_granite_widgets_source_list_expandable_item_child_added, self, G_CONNECT_AFTER);
#line 994 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object (item, "child-removed", (GCallback) _granite_widgets_source_list_data_model_on_item_child_removed_granite_widgets_source_list_expandable_item_child_removed, self, G_CONNECT_AFTER);
#line 5046 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_remove_children_monitor (GraniteWidgetsSourceListDataModel* self,
                                                                GraniteWidgetsSourceListExpandableItem* item)
{
	guint _tmp0_;
	guint _tmp1_;
#line 997 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 997 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 998 "../lib/Widgets/SourceList.vala"
	g_signal_parse_name ("child-added", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, &_tmp0_, NULL, FALSE);
#line 998 "../lib/Widgets/SourceList.vala"
	g_signal_handlers_disconnect_matched (item, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp0_, 0, NULL, (GCallback) _granite_widgets_source_list_data_model_on_item_child_added_granite_widgets_source_list_expandable_item_child_added, self);
#line 999 "../lib/Widgets/SourceList.vala"
	g_signal_parse_name ("child-removed", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, &_tmp1_, NULL, FALSE);
#line 999 "../lib/Widgets/SourceList.vala"
	g_signal_handlers_disconnect_matched (item, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp1_, 0, NULL, (GCallback) _granite_widgets_source_list_data_model_on_item_child_removed_granite_widgets_source_list_expandable_item_child_removed, self);
#line 5067 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_on_item_child_added (GraniteWidgetsSourceListDataModel* self,
                                                            GraniteWidgetsSourceListItem* item)
{
#line 1002 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1002 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 1003 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_add_item (self, item);
#line 5080 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_on_item_child_removed (GraniteWidgetsSourceListDataModel* self,
                                                              GraniteWidgetsSourceListItem* item)
{
#line 1006 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1006 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 1007 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_remove_item (self, item);
#line 5093 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_on_item_prop_changed (GraniteWidgetsSourceListDataModel* self,
                                                             GraniteWidgetsSourceListItem* item,
                                                             const gchar* prop_name)
{
#line 1010 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1010 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 1010 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (prop_name != NULL);
#line 1011 "../lib/Widgets/SourceList.vala"
	if (g_strcmp0 (prop_name, "parent") != 0) {
#line 1012 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_update_item (self, item);
#line 5111 "SourceList.c"
	}
}

/**
         * Pushes a call to update_item() if //parent// is not //null//.
         *
         * This is needed because the visibility of categories depends on their n_children property,
         * and also because item expansion should be updated after adding or removing items.
         * If many updates are pushed, and the item has still not been updated, only one is processed.
         * This guarantees efficiency as updating a category item could trigger expensive actions.
         */
static Block12Data*
block12_data_ref (Block12Data* _data12_)
{
#line 1023 "../lib/Widgets/SourceList.vala"
	g_atomic_int_inc (&_data12_->_ref_count_);
#line 1023 "../lib/Widgets/SourceList.vala"
	return _data12_;
#line 5130 "SourceList.c"
}

static void
block12_data_unref (void * _userdata_)
{
	Block12Data* _data12_;
	_data12_ = (Block12Data*) _userdata_;
#line 1023 "../lib/Widgets/SourceList.vala"
	if (g_atomic_int_dec_and_test (&_data12_->_ref_count_)) {
#line 5140 "SourceList.c"
		GraniteWidgetsSourceListDataModel* self;
#line 1023 "../lib/Widgets/SourceList.vala"
		self = _data12_->self;
#line 1023 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_data12_->parent);
#line 1023 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self);
#line 1023 "../lib/Widgets/SourceList.vala"
		g_slice_free (Block12Data, _data12_);
#line 5150 "SourceList.c"
	}
}

static gboolean
___lambda77_ (Block12Data* _data12_)
{
	GraniteWidgetsSourceListDataModel* self;
	gboolean result = FALSE;
#line 1040 "../lib/Widgets/SourceList.vala"
	self = _data12_->self;
#line 1041 "../lib/Widgets/SourceList.vala"
	if (_data12_->parent != NULL) {
#line 1042 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_update_item (self, (GraniteWidgetsSourceListItem*) _data12_->parent);
#line 1045 "../lib/Widgets/SourceList.vala"
		g_object_set_data_full ((GObject*) _data12_->parent, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_PARENT_NEEDS_UPDATE, (gpointer) ((gintptr) FALSE), NULL);
#line 5167 "SourceList.c"
	}
#line 1048 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 1048 "../lib/Widgets/SourceList.vala"
	return result;
#line 5173 "SourceList.c"
}

static gboolean
____lambda77__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda77_ (self);
#line 1040 "../lib/Widgets/SourceList.vala"
	return result;
#line 5183 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_push_parent_update (GraniteWidgetsSourceListDataModel* self,
                                                           GraniteWidgetsSourceListExpandableItem* parent)
{
	Block12Data* _data12_;
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	gboolean needs_update = FALSE;
	gconstpointer _tmp1_;
	GtkTreePath* path = NULL;
	GtkTreePath* _tmp2_;
	GtkTreePath* _tmp3_;
#line 1023 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1023 "../lib/Widgets/SourceList.vala"
	_data12_ = g_slice_new0 (Block12Data);
#line 1023 "../lib/Widgets/SourceList.vala"
	_data12_->_ref_count_ = 1;
#line 1023 "../lib/Widgets/SourceList.vala"
	_data12_->self = g_object_ref (self);
#line 1023 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (parent);
#line 1023 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (_data12_->parent);
#line 1023 "../lib/Widgets/SourceList.vala"
	_data12_->parent = _tmp0_;
#line 1024 "../lib/Widgets/SourceList.vala"
	if (_data12_->parent == NULL) {
#line 1025 "../lib/Widgets/SourceList.vala"
		block12_data_unref (_data12_);
#line 1025 "../lib/Widgets/SourceList.vala"
		_data12_ = NULL;
#line 1025 "../lib/Widgets/SourceList.vala"
		return;
#line 5219 "SourceList.c"
	}
#line 1027 "../lib/Widgets/SourceList.vala"
	_tmp1_ = g_object_get_data ((GObject*) _data12_->parent, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_PARENT_NEEDS_UPDATE);
#line 1027 "../lib/Widgets/SourceList.vala"
	needs_update = (gboolean) ((gintptr) _tmp1_);
#line 1031 "../lib/Widgets/SourceList.vala"
	if (needs_update) {
#line 1032 "../lib/Widgets/SourceList.vala"
		block12_data_unref (_data12_);
#line 1032 "../lib/Widgets/SourceList.vala"
		_data12_ = NULL;
#line 1032 "../lib/Widgets/SourceList.vala"
		return;
#line 5233 "SourceList.c"
	}
#line 1034 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_data_model_get_item_path (self, (GraniteWidgetsSourceListItem*) _data12_->parent);
#line 1034 "../lib/Widgets/SourceList.vala"
	path = _tmp2_;
#line 1036 "../lib/Widgets/SourceList.vala"
	_tmp3_ = path;
#line 1036 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ != NULL) {
#line 1038 "../lib/Widgets/SourceList.vala"
		g_object_set_data_full ((GObject*) _data12_->parent, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_PARENT_NEEDS_UPDATE, (gpointer) ((gintptr) TRUE), NULL);
#line 1040 "../lib/Widgets/SourceList.vala"
		g_idle_add_full (G_PRIORITY_DEFAULT_IDLE, ____lambda77__gsource_func, block12_data_ref (_data12_), block12_data_unref);
#line 5247 "SourceList.c"
	}
#line 1023 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 1023 "../lib/Widgets/SourceList.vala"
	block12_data_unref (_data12_);
#line 1023 "../lib/Widgets/SourceList.vala"
	_data12_ = NULL;
#line 5255 "SourceList.c"
}

/**
         * Returns the Item pointed by iter, or null if the iter doesn't refer to a valid item.
         */
static GraniteWidgetsSourceListItem*
granite_widgets_source_list_data_model_get_item (GraniteWidgetsSourceListDataModel* self,
                                                 GtkTreeIter* iter)
{
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeIter _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_ = NULL;
	GraniteWidgetsSourceListItem* result = NULL;
#line 1056 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1056 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (iter != NULL, NULL);
#line 1058 "../lib/Widgets/SourceList.vala"
	_tmp0_ = *iter;
#line 1058 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_get ((GtkTreeModel*) self, &_tmp0_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, &_tmp1_, -1, -1);
#line 1058 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 1058 "../lib/Widgets/SourceList.vala"
	item = _tmp1_;
#line 1059 "../lib/Widgets/SourceList.vala"
	result = item;
#line 1059 "../lib/Widgets/SourceList.vala"
	return result;
#line 5285 "SourceList.c"
}

/**
         * Returns the Item pointed by path, or null if the path doesn't refer to a valid item.
         */
static GraniteWidgetsSourceListItem*
granite_widgets_source_list_data_model_get_item_from_path (GraniteWidgetsSourceListDataModel* self,
                                                           GtkTreePath* path)
{
	GtkTreeIter iter = {0};
	GtkTreeIter _tmp0_ = {0};
	gboolean _tmp1_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 1065 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1065 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, NULL);
#line 1067 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gtk_tree_model_get_iter ((GtkTreeModel*) self, &_tmp0_, path);
#line 1067 "../lib/Widgets/SourceList.vala"
	iter = _tmp0_;
#line 1067 "../lib/Widgets/SourceList.vala"
	if (_tmp1_) {
#line 5309 "SourceList.c"
		GtkTreeIter _tmp2_;
		GraniteWidgetsSourceListItem* _tmp3_;
#line 1068 "../lib/Widgets/SourceList.vala"
		_tmp2_ = iter;
#line 1068 "../lib/Widgets/SourceList.vala"
		_tmp3_ = granite_widgets_source_list_data_model_get_item (self, &_tmp2_);
#line 1068 "../lib/Widgets/SourceList.vala"
		result = _tmp3_;
#line 1068 "../lib/Widgets/SourceList.vala"
		return result;
#line 5320 "SourceList.c"
	}
#line 1070 "../lib/Widgets/SourceList.vala"
	result = NULL;
#line 1070 "../lib/Widgets/SourceList.vala"
	return result;
#line 5326 "SourceList.c"
}

/**
         * Returns a newly-created path pointing to the item, or null in case a valid path
         * is not found.
         */
static GtkTreePath*
granite_widgets_source_list_data_model_get_item_path (GraniteWidgetsSourceListDataModel* self,
                                                      GraniteWidgetsSourceListItem* item)
{
	GtkTreePath* path = NULL;
	GtkTreePath* child_path = NULL;
	GtkTreePath* _tmp0_;
	GtkTreePath* _tmp1_;
	GtkTreePath* result = NULL;
#line 1077 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1077 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, NULL);
#line 1078 "../lib/Widgets/SourceList.vala"
	path = NULL;
#line 1078 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_item_child_path (self, item);
#line 1078 "../lib/Widgets/SourceList.vala"
	child_path = _tmp0_;
#line 1081 "../lib/Widgets/SourceList.vala"
	_tmp1_ = child_path;
#line 1081 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 5356 "SourceList.c"
		GtkTreePath* _tmp2_;
		GtkTreePath* _tmp3_;
#line 1082 "../lib/Widgets/SourceList.vala"
		_tmp2_ = child_path;
#line 1082 "../lib/Widgets/SourceList.vala"
		_tmp3_ = gtk_tree_model_filter_convert_child_path_to_path ((GtkTreeModelFilter*) self, _tmp2_);
#line 1082 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 1082 "../lib/Widgets/SourceList.vala"
		path = _tmp3_;
#line 5367 "SourceList.c"
	}
#line 1084 "../lib/Widgets/SourceList.vala"
	result = path;
#line 1084 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (child_path);
#line 1084 "../lib/Widgets/SourceList.vala"
	return result;
#line 5375 "SourceList.c"
}

/**
         * Returns a newly-created iterator pointing to the item, or null in case a valid iter
         * was not found.
         */
static GtkTreeIter*
granite_widgets_source_list_data_model_get_item_iter (GraniteWidgetsSourceListDataModel* self,
                                                      GraniteWidgetsSourceListItem* item)
{
	GtkTreeIter* child_iter = NULL;
	GtkTreeIter* _tmp0_;
	GtkTreeIter* _tmp1_;
	GtkTreeIter* result = NULL;
#line 1091 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1091 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, NULL);
#line 1092 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_item_child_iter (self, item);
#line 1092 "../lib/Widgets/SourceList.vala"
	child_iter = _tmp0_;
#line 1094 "../lib/Widgets/SourceList.vala"
	_tmp1_ = child_iter;
#line 1094 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 5402 "SourceList.c"
		GtkTreeIter iter = {0};
		GtkTreeIter* _tmp2_;
		GtkTreeIter _tmp3_ = {0};
		GtkTreeIter _tmp4_;
		gboolean _tmp5_;
#line 1096 "../lib/Widgets/SourceList.vala"
		_tmp2_ = child_iter;
#line 1096 "../lib/Widgets/SourceList.vala"
		_tmp4_ = *_tmp2_;
#line 1096 "../lib/Widgets/SourceList.vala"
		_tmp5_ = gtk_tree_model_filter_convert_child_iter_to_iter ((GtkTreeModelFilter*) self, &_tmp3_, &_tmp4_);
#line 1096 "../lib/Widgets/SourceList.vala"
		iter = _tmp3_;
#line 1096 "../lib/Widgets/SourceList.vala"
		if (_tmp5_) {
#line 5418 "SourceList.c"
			GtkTreeIter* _tmp6_;
#line 1097 "../lib/Widgets/SourceList.vala"
			_tmp6_ = __vala_GtkTreeIter_copy0 (&iter);
#line 1097 "../lib/Widgets/SourceList.vala"
			result = _tmp6_;
#line 1097 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreeIter_free0 (child_iter);
#line 1097 "../lib/Widgets/SourceList.vala"
			return result;
#line 5428 "SourceList.c"
		}
	}
#line 1100 "../lib/Widgets/SourceList.vala"
	result = NULL;
#line 1100 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeIter_free0 (child_iter);
#line 1100 "../lib/Widgets/SourceList.vala"
	return result;
#line 5437 "SourceList.c"
}

/**
         * External "extra" filter method.
         */
static void
granite_widgets_source_list_data_model_set_filter_func (GraniteWidgetsSourceListDataModel* self,
                                                        GraniteWidgetsSourceListVisibleFunc visible_func,
                                                        gpointer visible_func_target)
{
#line 1106 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1107 "../lib/Widgets/SourceList.vala"
	self->priv->filter_func = visible_func;
#line 1107 "../lib/Widgets/SourceList.vala"
	self->priv->filter_func_target = visible_func_target;
#line 5454 "SourceList.c"
}

/**
         * Checks whether an item is a category (i.e. a root-level expandable item).
         * The caller must pass an iter or path pointing to the item, but not both
         * (one of them must be null.)
         *
         * TODO: instead of checking the position of the iter or path, we should simply
         * check whether the item's parent is the root item and whether the item is
         * expandable. We don't do so right now because vala still allows client code
         * to access the Item.parent property, even though its setter is defined as internal.
         */
static gboolean
granite_widgets_source_list_data_model_is_category (GraniteWidgetsSourceListDataModel* self,
                                                    GraniteWidgetsSourceListItem* item,
                                                    GtkTreeIter* iter,
                                                    GtkTreePath* path)
{
	gboolean is_category = FALSE;
	gboolean result = FALSE;
#line 1120 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1120 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 1121 "../lib/Widgets/SourceList.vala"
	is_category = FALSE;
#line 1123 "../lib/Widgets/SourceList.vala"
	if (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (item)) {
#line 1124 "../lib/Widgets/SourceList.vala"
		if (iter != NULL) {
#line 5485 "SourceList.c"
			GtkTreeIter _tmp0_;
#line 1125 "../lib/Widgets/SourceList.vala"
			_vala_assert (path == NULL, "path == null");
#line 1126 "../lib/Widgets/SourceList.vala"
			_tmp0_ = *iter;
#line 1126 "../lib/Widgets/SourceList.vala"
			is_category = granite_widgets_source_list_data_model_is_iter_at_root_level (self, &_tmp0_);
#line 5493 "SourceList.c"
		} else {
#line 1128 "../lib/Widgets/SourceList.vala"
			_vala_assert (iter == NULL, "iter == null");
#line 1129 "../lib/Widgets/SourceList.vala"
			is_category = granite_widgets_source_list_data_model_is_path_at_root_level (self, path);
#line 5499 "SourceList.c"
		}
	}
#line 1132 "../lib/Widgets/SourceList.vala"
	result = is_category;
#line 1132 "../lib/Widgets/SourceList.vala"
	return result;
#line 5506 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_is_iter_at_root_level (GraniteWidgetsSourceListDataModel* self,
                                                              GtkTreeIter* iter)
{
	GtkTreeIter _tmp0_;
	GtkTreePath* _tmp1_;
	GtkTreePath* _tmp2_;
	gboolean _tmp3_;
	gboolean result = FALSE;
#line 1135 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1135 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (iter != NULL, FALSE);
#line 1136 "../lib/Widgets/SourceList.vala"
	_tmp0_ = *iter;
#line 1136 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gtk_tree_model_get_path ((GtkTreeModel*) self, &_tmp0_);
#line 1136 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 1136 "../lib/Widgets/SourceList.vala"
	_tmp3_ = granite_widgets_source_list_data_model_is_path_at_root_level (self, _tmp2_);
#line 1136 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (_tmp2_);
#line 1136 "../lib/Widgets/SourceList.vala"
	result = _tmp3_;
#line 1136 "../lib/Widgets/SourceList.vala"
	return result;
#line 5536 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_is_path_at_root_level (GraniteWidgetsSourceListDataModel* self,
                                                              GtkTreePath* path)
{
	gboolean result = FALSE;
#line 1139 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1139 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 1140 "../lib/Widgets/SourceList.vala"
	result = gtk_tree_path_get_depth (path) == 1;
#line 1140 "../lib/Widgets/SourceList.vala"
	return result;
#line 5552 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_resort (GraniteWidgetsSourceListDataModel* self)
{
	GtkTreeStore* _tmp0_;
	GtkTreeStore* _tmp1_;
#line 1143 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1144 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->child_tree;
#line 1144 "../lib/Widgets/SourceList.vala"
	gtk_tree_sortable_set_sort_column_id ((GtkTreeSortable*) _tmp0_, GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID, GTK_SORT_ASCENDING);
#line 1145 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->child_tree;
#line 1145 "../lib/Widgets/SourceList.vala"
	gtk_tree_sortable_set_sort_column_id ((GtkTreeSortable*) _tmp1_, GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID, GTK_SORT_ASCENDING);
#line 5570 "SourceList.c"
}

static gint
granite_widgets_source_list_data_model_child_model_sort_func (GraniteWidgetsSourceListDataModel* self,
                                                              GtkTreeModel* model,
                                                              GtkTreeIter* a,
                                                              GtkTreeIter* b)
{
	gint order = 0;
	GraniteWidgetsSourceListItem* item_a = NULL;
	GraniteWidgetsSourceListItem* item_b = NULL;
	GtkTreeStore* _tmp0_;
	GtkTreeIter _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_ = NULL;
	GtkTreeStore* _tmp3_;
	GtkTreeIter _tmp4_;
	GraniteWidgetsSourceListItem* _tmp5_ = NULL;
	GraniteWidgetsSourceListItem* _tmp6_;
	GraniteWidgetsSourceListExpandableItem* _tmp7_;
	GraniteWidgetsSourceListExpandableItem* _tmp8_;
	GraniteWidgetsSourceListItem* _tmp9_;
	GraniteWidgetsSourceListExpandableItem* _tmp10_;
	GraniteWidgetsSourceListExpandableItem* _tmp11_;
	GraniteWidgetsSourceListSortable* parent = NULL;
	GraniteWidgetsSourceListItem* _tmp12_;
	GraniteWidgetsSourceListExpandableItem* _tmp13_;
	GraniteWidgetsSourceListExpandableItem* _tmp14_;
	GraniteWidgetsSourceListSortable* _tmp15_;
	GraniteWidgetsSourceListSortable* _tmp16_;
	gint result = 0;
#line 1148 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 1148 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (model != NULL, 0);
#line 1148 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 1148 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 1149 "../lib/Widgets/SourceList.vala"
	order = 0;
#line 1152 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->child_tree;
#line 1152 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *a;
#line 1152 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_get ((GtkTreeModel*) _tmp0_, &_tmp1_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, &_tmp2_, -1, -1);
#line 1152 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item_a);
#line 1152 "../lib/Widgets/SourceList.vala"
	item_a = _tmp2_;
#line 1153 "../lib/Widgets/SourceList.vala"
	_tmp3_ = self->priv->child_tree;
#line 1153 "../lib/Widgets/SourceList.vala"
	_tmp4_ = *b;
#line 1153 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_get ((GtkTreeModel*) _tmp3_, &_tmp4_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, &_tmp5_, -1, -1);
#line 1153 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item_b);
#line 1153 "../lib/Widgets/SourceList.vala"
	item_b = _tmp5_;
#line 1156 "../lib/Widgets/SourceList.vala"
	_tmp6_ = item_a;
#line 1156 "../lib/Widgets/SourceList.vala"
	_tmp7_ = granite_widgets_source_list_item_get_parent (_tmp6_);
#line 1156 "../lib/Widgets/SourceList.vala"
	_tmp8_ = _tmp7_;
#line 1156 "../lib/Widgets/SourceList.vala"
	_tmp9_ = item_b;
#line 1156 "../lib/Widgets/SourceList.vala"
	_tmp10_ = granite_widgets_source_list_item_get_parent (_tmp9_);
#line 1156 "../lib/Widgets/SourceList.vala"
	_tmp11_ = _tmp10_;
#line 1156 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp8_ == _tmp11_, "item_a.parent == item_b.parent");
#line 1158 "../lib/Widgets/SourceList.vala"
	_tmp12_ = item_a;
#line 1158 "../lib/Widgets/SourceList.vala"
	_tmp13_ = granite_widgets_source_list_item_get_parent (_tmp12_);
#line 1158 "../lib/Widgets/SourceList.vala"
	_tmp14_ = _tmp13_;
#line 1158 "../lib/Widgets/SourceList.vala"
	_tmp15_ = _g_object_ref0 (GRANITE_WIDGETS_IS_SOURCE_LIST_SORTABLE (_tmp14_) ? ((GraniteWidgetsSourceListSortable*) _tmp14_) : NULL);
#line 1158 "../lib/Widgets/SourceList.vala"
	parent = _tmp15_;
#line 1159 "../lib/Widgets/SourceList.vala"
	_tmp16_ = parent;
#line 1159 "../lib/Widgets/SourceList.vala"
	if (_tmp16_ != NULL) {
#line 5659 "SourceList.c"
		GraniteWidgetsSourceListSortable* _tmp17_;
		GraniteWidgetsSourceListItem* _tmp18_;
		GraniteWidgetsSourceListItem* _tmp19_;
#line 1160 "../lib/Widgets/SourceList.vala"
		_tmp17_ = parent;
#line 1160 "../lib/Widgets/SourceList.vala"
		_tmp18_ = item_a;
#line 1160 "../lib/Widgets/SourceList.vala"
		_tmp19_ = item_b;
#line 1160 "../lib/Widgets/SourceList.vala"
		order = granite_widgets_source_list_sortable_compare (_tmp17_, _tmp18_, _tmp19_);
#line 5671 "SourceList.c"
	}
#line 1162 "../lib/Widgets/SourceList.vala"
	result = order;
#line 1162 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (parent);
#line 1162 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item_b);
#line 1162 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item_a);
#line 1162 "../lib/Widgets/SourceList.vala"
	return result;
#line 5683 "SourceList.c"
}

static GtkTreeIter*
granite_widgets_source_list_data_model_get_item_child_iter (GraniteWidgetsSourceListDataModel* self,
                                                            GraniteWidgetsSourceListItem* item)
{
	GtkTreeIter* child_iter = NULL;
	GraniteWidgetsSourceListDataModelNodeWrapper* child_node_wrapper = NULL;
	GeeHashMap* _tmp0_;
	gpointer _tmp1_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp2_;
	GtkTreeIter* result = NULL;
#line 1165 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1165 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, NULL);
#line 1166 "../lib/Widgets/SourceList.vala"
	child_iter = NULL;
#line 1168 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->items;
#line 1168 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp0_, item);
#line 1168 "../lib/Widgets/SourceList.vala"
	child_node_wrapper = (GraniteWidgetsSourceListDataModelNodeWrapper*) _tmp1_;
#line 1169 "../lib/Widgets/SourceList.vala"
	_tmp2_ = child_node_wrapper;
#line 1169 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 5712 "SourceList.c"
		GraniteWidgetsSourceListDataModelNodeWrapper* _tmp3_;
		GtkTreeIter* _tmp4_;
		GtkTreeIter* _tmp5_;
#line 1170 "../lib/Widgets/SourceList.vala"
		_tmp3_ = child_node_wrapper;
#line 1170 "../lib/Widgets/SourceList.vala"
		_tmp4_ = granite_widgets_source_list_data_model_node_wrapper_get_iter (_tmp3_);
#line 1170 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _tmp4_;
#line 1170 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreeIter_free0 (child_iter);
#line 1170 "../lib/Widgets/SourceList.vala"
		child_iter = _tmp5_;
#line 5726 "SourceList.c"
	}
#line 1172 "../lib/Widgets/SourceList.vala"
	result = child_iter;
#line 1172 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_node_wrapper_unref0 (child_node_wrapper);
#line 1172 "../lib/Widgets/SourceList.vala"
	return result;
#line 5734 "SourceList.c"
}

static GtkTreePath*
granite_widgets_source_list_data_model_get_item_child_path (GraniteWidgetsSourceListDataModel* self,
                                                            GraniteWidgetsSourceListItem* item)
{
	GtkTreePath* child_path = NULL;
	GraniteWidgetsSourceListDataModelNodeWrapper* child_node_wrapper = NULL;
	GeeHashMap* _tmp0_;
	gpointer _tmp1_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp2_;
	GtkTreePath* result = NULL;
#line 1175 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1175 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, NULL);
#line 1176 "../lib/Widgets/SourceList.vala"
	child_path = NULL;
#line 1178 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->items;
#line 1178 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp0_, item);
#line 1178 "../lib/Widgets/SourceList.vala"
	child_node_wrapper = (GraniteWidgetsSourceListDataModelNodeWrapper*) _tmp1_;
#line 1179 "../lib/Widgets/SourceList.vala"
	_tmp2_ = child_node_wrapper;
#line 1179 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 5763 "SourceList.c"
		GraniteWidgetsSourceListDataModelNodeWrapper* _tmp3_;
		GtkTreePath* _tmp4_;
		GtkTreePath* _tmp5_;
#line 1180 "../lib/Widgets/SourceList.vala"
		_tmp3_ = child_node_wrapper;
#line 1180 "../lib/Widgets/SourceList.vala"
		_tmp4_ = granite_widgets_source_list_data_model_node_wrapper_get_path (_tmp3_);
#line 1180 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _tmp4_;
#line 1180 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_path);
#line 1180 "../lib/Widgets/SourceList.vala"
		child_path = _tmp5_;
#line 5777 "SourceList.c"
	}
#line 1182 "../lib/Widgets/SourceList.vala"
	result = child_path;
#line 1182 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_node_wrapper_unref0 (child_node_wrapper);
#line 1182 "../lib/Widgets/SourceList.vala"
	return result;
#line 5785 "SourceList.c"
}

/**
         * Filters the child-tree items based on their "visible" property.
         */
static gboolean
granite_widgets_source_list_data_model_filter_visible_func (GraniteWidgetsSourceListDataModel* self,
                                                            GtkTreeModel* child_model,
                                                            GtkTreeIter* iter)
{
	gboolean item_visible = FALSE;
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeStore* _tmp0_;
	GtkTreeIter _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_ = NULL;
	GraniteWidgetsSourceListItem* _tmp3_;
	GraniteWidgetsSourceListVisibleFunc _tmp27_;
	gpointer _tmp27__target;
	gboolean result = FALSE;
#line 1188 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1188 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (child_model != NULL, FALSE);
#line 1188 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (iter != NULL, FALSE);
#line 1189 "../lib/Widgets/SourceList.vala"
	item_visible = FALSE;
#line 1192 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->child_tree;
#line 1192 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *iter;
#line 1192 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_get ((GtkTreeModel*) _tmp0_, &_tmp1_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, &_tmp2_, -1, -1);
#line 1192 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 1192 "../lib/Widgets/SourceList.vala"
	item = _tmp2_;
#line 1194 "../lib/Widgets/SourceList.vala"
	_tmp3_ = item;
#line 1194 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ != NULL) {
#line 5827 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp4_;
		gboolean _tmp5_;
		gboolean _tmp6_;
		GraniteWidgetsSourceListExpandableItem* expandable = NULL;
		GraniteWidgetsSourceListItem* _tmp7_;
		GraniteWidgetsSourceListExpandableItem* _tmp8_;
		gboolean _tmp9_ = FALSE;
		GraniteWidgetsSourceListExpandableItem* _tmp10_;
#line 1195 "../lib/Widgets/SourceList.vala"
		_tmp4_ = item;
#line 1195 "../lib/Widgets/SourceList.vala"
		_tmp5_ = granite_widgets_source_list_item_get_visible (_tmp4_);
#line 1195 "../lib/Widgets/SourceList.vala"
		_tmp6_ = _tmp5_;
#line 1195 "../lib/Widgets/SourceList.vala"
		item_visible = _tmp6_;
#line 1199 "../lib/Widgets/SourceList.vala"
		_tmp7_ = item;
#line 1199 "../lib/Widgets/SourceList.vala"
		_tmp8_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp7_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp7_) : NULL);
#line 1199 "../lib/Widgets/SourceList.vala"
		expandable = _tmp8_;
#line 1200 "../lib/Widgets/SourceList.vala"
		_tmp10_ = expandable;
#line 1200 "../lib/Widgets/SourceList.vala"
		if (_tmp10_ != NULL) {
#line 5854 "SourceList.c"
			GtkTreeStore* _tmp11_;
			GtkTreeIter _tmp12_;
#line 1200 "../lib/Widgets/SourceList.vala"
			_tmp11_ = self->priv->child_tree;
#line 1200 "../lib/Widgets/SourceList.vala"
			_tmp12_ = *iter;
#line 1200 "../lib/Widgets/SourceList.vala"
			_tmp9_ = gtk_tree_store_iter_depth (_tmp11_, &_tmp12_) == 0;
#line 5863 "SourceList.c"
		} else {
#line 1200 "../lib/Widgets/SourceList.vala"
			_tmp9_ = FALSE;
#line 5867 "SourceList.c"
		}
#line 1200 "../lib/Widgets/SourceList.vala"
		if (_tmp9_) {
#line 5871 "SourceList.c"
			guint n_visible_children = 0U;
			gboolean _tmp26_ = FALSE;
#line 1201 "../lib/Widgets/SourceList.vala"
			n_visible_children = (guint) 0;
#line 5876 "SourceList.c"
			{
				GeeIterator* _child_item_it = NULL;
				GraniteWidgetsSourceListExpandableItem* _tmp13_;
				GeeCollection* _tmp14_;
				GeeCollection* _tmp15_;
				GeeCollection* _tmp16_;
				GeeIterator* _tmp17_;
				GeeIterator* _tmp18_;
#line 1202 "../lib/Widgets/SourceList.vala"
				_tmp13_ = expandable;
#line 1202 "../lib/Widgets/SourceList.vala"
				_tmp14_ = granite_widgets_source_list_expandable_item_get_children (_tmp13_);
#line 1202 "../lib/Widgets/SourceList.vala"
				_tmp15_ = _tmp14_;
#line 1202 "../lib/Widgets/SourceList.vala"
				_tmp16_ = _tmp15_;
#line 1202 "../lib/Widgets/SourceList.vala"
				_tmp17_ = gee_iterable_iterator ((GeeIterable*) _tmp16_);
#line 1202 "../lib/Widgets/SourceList.vala"
				_tmp18_ = _tmp17_;
#line 1202 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_tmp16_);
#line 1202 "../lib/Widgets/SourceList.vala"
				_child_item_it = _tmp18_;
#line 1202 "../lib/Widgets/SourceList.vala"
				while (TRUE) {
#line 5903 "SourceList.c"
					GeeIterator* _tmp19_;
					GraniteWidgetsSourceListItem* child_item = NULL;
					GeeIterator* _tmp20_;
					gpointer _tmp21_;
					GraniteWidgetsSourceListItem* _tmp22_;
					gboolean _tmp23_;
					gboolean _tmp24_;
#line 1202 "../lib/Widgets/SourceList.vala"
					_tmp19_ = _child_item_it;
#line 1202 "../lib/Widgets/SourceList.vala"
					if (!gee_iterator_next (_tmp19_)) {
#line 1202 "../lib/Widgets/SourceList.vala"
						break;
#line 5917 "SourceList.c"
					}
#line 1202 "../lib/Widgets/SourceList.vala"
					_tmp20_ = _child_item_it;
#line 1202 "../lib/Widgets/SourceList.vala"
					_tmp21_ = gee_iterator_get (_tmp20_);
#line 1202 "../lib/Widgets/SourceList.vala"
					child_item = (GraniteWidgetsSourceListItem*) _tmp21_;
#line 1203 "../lib/Widgets/SourceList.vala"
					_tmp22_ = child_item;
#line 1203 "../lib/Widgets/SourceList.vala"
					_tmp23_ = granite_widgets_source_list_item_get_visible (_tmp22_);
#line 1203 "../lib/Widgets/SourceList.vala"
					_tmp24_ = _tmp23_;
#line 1203 "../lib/Widgets/SourceList.vala"
					if (_tmp24_) {
#line 5933 "SourceList.c"
						guint _tmp25_;
#line 1204 "../lib/Widgets/SourceList.vala"
						_tmp25_ = n_visible_children;
#line 1204 "../lib/Widgets/SourceList.vala"
						n_visible_children = _tmp25_ + 1;
#line 5939 "SourceList.c"
					}
#line 1202 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (child_item);
#line 5943 "SourceList.c"
				}
#line 1202 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_child_item_it);
#line 5947 "SourceList.c"
			}
#line 1206 "../lib/Widgets/SourceList.vala"
			if (item_visible) {
#line 1206 "../lib/Widgets/SourceList.vala"
				_tmp26_ = n_visible_children > ((guint) 0);
#line 5953 "SourceList.c"
			} else {
#line 1206 "../lib/Widgets/SourceList.vala"
				_tmp26_ = FALSE;
#line 5957 "SourceList.c"
			}
#line 1206 "../lib/Widgets/SourceList.vala"
			item_visible = _tmp26_;
#line 5961 "SourceList.c"
		}
#line 1194 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (expandable);
#line 5965 "SourceList.c"
	}
#line 1210 "../lib/Widgets/SourceList.vala"
	_tmp27_ = self->priv->filter_func;
#line 1210 "../lib/Widgets/SourceList.vala"
	_tmp27__target = self->priv->filter_func_target;
#line 1210 "../lib/Widgets/SourceList.vala"
	if (_tmp27_ != NULL) {
#line 5973 "SourceList.c"
		gboolean _tmp28_ = FALSE;
#line 1211 "../lib/Widgets/SourceList.vala"
		if (item_visible) {
#line 5977 "SourceList.c"
			GraniteWidgetsSourceListVisibleFunc _tmp29_;
			gpointer _tmp29__target;
			GraniteWidgetsSourceListItem* _tmp30_;
#line 1211 "../lib/Widgets/SourceList.vala"
			_tmp29_ = self->priv->filter_func;
#line 1211 "../lib/Widgets/SourceList.vala"
			_tmp29__target = self->priv->filter_func_target;
#line 1211 "../lib/Widgets/SourceList.vala"
			_tmp30_ = item;
#line 1211 "../lib/Widgets/SourceList.vala"
			_tmp28_ = _tmp29_ (_tmp30_, _tmp29__target);
#line 5989 "SourceList.c"
		} else {
#line 1211 "../lib/Widgets/SourceList.vala"
			_tmp28_ = FALSE;
#line 5993 "SourceList.c"
		}
#line 1211 "../lib/Widgets/SourceList.vala"
		item_visible = _tmp28_;
#line 5997 "SourceList.c"
	}
#line 1213 "../lib/Widgets/SourceList.vala"
	result = item_visible;
#line 1213 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 1213 "../lib/Widgets/SourceList.vala"
	return result;
#line 6005 "SourceList.c"
}

/**
         * TreeDragDest implementation
         */
static gboolean
granite_widgets_source_list_data_model_real_drag_data_received (GtkTreeDragDest* base,
                                                                GtkTreePath* dest,
                                                                GtkSelectionData* selection_data)
{
	GraniteWidgetsSourceListDataModel * self;
	GtkTreeModel* model = NULL;
	GtkTreePath* src_path = NULL;
	gboolean _tmp0_ = FALSE;
	GtkTreeModel* _tmp1_ = NULL;
	GtkTreePath* _tmp2_ = NULL;
	gboolean _tmp3_;
	GtkTreeModel* _tmp4_;
	gboolean result = FALSE;
#line 1220 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModel*) base;
#line 1220 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (dest != NULL, FALSE);
#line 1220 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (selection_data != NULL, FALSE);
#line 1228 "../lib/Widgets/SourceList.vala"
	_tmp3_ = gtk_tree_get_row_drag_data (selection_data, &_tmp1_, &_tmp2_);
#line 1228 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (model);
#line 1228 "../lib/Widgets/SourceList.vala"
	_tmp4_ = _g_object_ref0 (_tmp1_);
#line 1228 "../lib/Widgets/SourceList.vala"
	model = _tmp4_;
#line 1228 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (src_path);
#line 1228 "../lib/Widgets/SourceList.vala"
	src_path = _tmp2_;
#line 1228 "../lib/Widgets/SourceList.vala"
	if (_tmp3_) {
#line 6045 "SourceList.c"
		GtkTreeModel* _tmp5_;
		GtkTreeStore* _tmp6_;
#line 1228 "../lib/Widgets/SourceList.vala"
		_tmp5_ = model;
#line 1228 "../lib/Widgets/SourceList.vala"
		_tmp6_ = self->priv->child_tree;
#line 1228 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp5_ == G_TYPE_CHECK_INSTANCE_CAST (_tmp6_, gtk_tree_model_get_type (), GtkTreeModel);
#line 6054 "SourceList.c"
	} else {
#line 1228 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 6058 "SourceList.c"
	}
#line 1228 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 6062 "SourceList.c"
		GtkTreePath* child_dest = NULL;
		GtkTreePath* _tmp7_;
		GtkTreePath* _tmp8_;
#line 1230 "../lib/Widgets/SourceList.vala"
		_tmp7_ = gtk_tree_model_filter_convert_path_to_child_path ((GtkTreeModelFilter*) self, dest);
#line 1230 "../lib/Widgets/SourceList.vala"
		child_dest = _tmp7_;
#line 1232 "../lib/Widgets/SourceList.vala"
		_tmp8_ = child_dest;
#line 1232 "../lib/Widgets/SourceList.vala"
		if (_tmp8_ != NULL) {
#line 6074 "SourceList.c"
			GtkTreePath* _tmp9_;
			GtkTreePath* _tmp10_;
#line 1234 "../lib/Widgets/SourceList.vala"
			_tmp9_ = child_dest;
#line 1234 "../lib/Widgets/SourceList.vala"
			_tmp10_ = src_path;
#line 1234 "../lib/Widgets/SourceList.vala"
			if (granite_widgets_source_list_data_model_child_tree_drag_data_received (self, _tmp9_, _tmp10_)) {
#line 1235 "../lib/Widgets/SourceList.vala"
				result = TRUE;
#line 1235 "../lib/Widgets/SourceList.vala"
				__vala_GtkTreePath_free0 (child_dest);
#line 1235 "../lib/Widgets/SourceList.vala"
				__vala_GtkTreePath_free0 (src_path);
#line 1235 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (model);
#line 1235 "../lib/Widgets/SourceList.vala"
				return result;
#line 6093 "SourceList.c"
			}
		}
#line 1228 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 6098 "SourceList.c"
	}
#line 1240 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 1240 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (src_path);
#line 1240 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (model);
#line 1240 "../lib/Widgets/SourceList.vala"
	return result;
#line 6108 "SourceList.c"
}

static GtkTreePath*
_vala_GtkTreePath_copy (GtkTreePath* self)
{
#line 1250 "../lib/Widgets/SourceList.vala"
	return g_boxed_copy (gtk_tree_path_get_type (), self);
#line 6116 "SourceList.c"
}

static gpointer
__vala_GtkTreePath_copy0 (gpointer self)
{
#line 1250 "../lib/Widgets/SourceList.vala"
	return self ? _vala_GtkTreePath_copy (self) : NULL;
#line 6124 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_child_tree_drag_data_received (GraniteWidgetsSourceListDataModel* self,
                                                                      GtkTreePath* dest,
                                                                      GtkTreePath* src_path)
{
	gboolean retval = FALSE;
	GtkTreeIter src_iter = {0};
	GtkTreeIter dest_iter = {0};
	GtkTreeStore* _tmp0_;
	GtkTreeIter _tmp1_ = {0};
	gboolean _tmp2_;
	GtkTreePath* prev = NULL;
	GtkTreePath* _tmp3_;
	GtkTreePath* _tmp4_;
	gboolean result = FALSE;
#line 1243 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1243 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (dest != NULL, FALSE);
#line 1243 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (src_path != NULL, FALSE);
#line 1244 "../lib/Widgets/SourceList.vala"
	retval = FALSE;
#line 1247 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->child_tree;
#line 1247 "../lib/Widgets/SourceList.vala"
	_tmp2_ = gtk_tree_model_get_iter ((GtkTreeModel*) _tmp0_, &_tmp1_, src_path);
#line 1247 "../lib/Widgets/SourceList.vala"
	src_iter = _tmp1_;
#line 1247 "../lib/Widgets/SourceList.vala"
	if (!_tmp2_) {
#line 1248 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1248 "../lib/Widgets/SourceList.vala"
		return result;
#line 6162 "SourceList.c"
	}
#line 1250 "../lib/Widgets/SourceList.vala"
	_tmp3_ = __vala_GtkTreePath_copy0 (dest);
#line 1250 "../lib/Widgets/SourceList.vala"
	prev = _tmp3_;
#line 1253 "../lib/Widgets/SourceList.vala"
	_tmp4_ = prev;
#line 1253 "../lib/Widgets/SourceList.vala"
	if (!gtk_tree_path_prev (_tmp4_)) {
#line 6172 "SourceList.c"
		GtkTreePath* parent = NULL;
		GtkTreePath* _tmp5_;
		GtkTreeIter* dest_parent = NULL;
		gboolean _tmp6_ = FALSE;
		GtkTreePath* _tmp7_;
		GtkTreeStore* _tmp14_;
		GtkTreeIter* _tmp15_;
		GtkTreeIter _tmp16_ = {0};
#line 1257 "../lib/Widgets/SourceList.vala"
		_tmp5_ = __vala_GtkTreePath_copy0 (dest);
#line 1257 "../lib/Widgets/SourceList.vala"
		parent = _tmp5_;
#line 1258 "../lib/Widgets/SourceList.vala"
		dest_parent = NULL;
#line 1260 "../lib/Widgets/SourceList.vala"
		_tmp7_ = parent;
#line 1260 "../lib/Widgets/SourceList.vala"
		if (gtk_tree_path_up (_tmp7_)) {
#line 6191 "SourceList.c"
			GtkTreePath* _tmp8_;
#line 1260 "../lib/Widgets/SourceList.vala"
			_tmp8_ = parent;
#line 1260 "../lib/Widgets/SourceList.vala"
			_tmp6_ = gtk_tree_path_get_depth (_tmp8_) > 0;
#line 6197 "SourceList.c"
		} else {
#line 1260 "../lib/Widgets/SourceList.vala"
			_tmp6_ = FALSE;
#line 6201 "SourceList.c"
		}
#line 1260 "../lib/Widgets/SourceList.vala"
		if (_tmp6_) {
#line 6205 "SourceList.c"
			GtkTreeStore* _tmp9_;
			GtkTreePath* _tmp10_;
			GtkTreeIter _tmp11_ = {0};
			GtkTreeIter _tmp12_;
			GtkTreeIter* _tmp13_;
#line 1261 "../lib/Widgets/SourceList.vala"
			_tmp9_ = self->priv->child_tree;
#line 1261 "../lib/Widgets/SourceList.vala"
			_tmp10_ = parent;
#line 1261 "../lib/Widgets/SourceList.vala"
			gtk_tree_model_get_iter ((GtkTreeModel*) _tmp9_, &_tmp11_, _tmp10_);
#line 1261 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreeIter_free0 (dest_parent);
#line 1261 "../lib/Widgets/SourceList.vala"
			_tmp12_ = _tmp11_;
#line 1261 "../lib/Widgets/SourceList.vala"
			_tmp13_ = __vala_GtkTreeIter_copy0 (&_tmp12_);
#line 1261 "../lib/Widgets/SourceList.vala"
			dest_parent = _tmp13_;
#line 6225 "SourceList.c"
		}
#line 1263 "../lib/Widgets/SourceList.vala"
		_tmp14_ = self->priv->child_tree;
#line 1263 "../lib/Widgets/SourceList.vala"
		_tmp15_ = dest_parent;
#line 1263 "../lib/Widgets/SourceList.vala"
		gtk_tree_store_prepend (_tmp14_, &_tmp16_, _tmp15_);
#line 1263 "../lib/Widgets/SourceList.vala"
		dest_iter = _tmp16_;
#line 1264 "../lib/Widgets/SourceList.vala"
		retval = TRUE;
#line 1253 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreeIter_free0 (dest_parent);
#line 1253 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (parent);
#line 6241 "SourceList.c"
	} else {
		GtkTreeStore* _tmp17_;
		GtkTreePath* _tmp18_;
		GtkTreeIter _tmp19_ = {0};
		gboolean _tmp20_;
#line 1265 "../lib/Widgets/SourceList.vala"
		_tmp17_ = self->priv->child_tree;
#line 1265 "../lib/Widgets/SourceList.vala"
		_tmp18_ = prev;
#line 1265 "../lib/Widgets/SourceList.vala"
		_tmp20_ = gtk_tree_model_get_iter ((GtkTreeModel*) _tmp17_, &_tmp19_, _tmp18_);
#line 1265 "../lib/Widgets/SourceList.vala"
		dest_iter = _tmp19_;
#line 1265 "../lib/Widgets/SourceList.vala"
		if (_tmp20_) {
#line 6257 "SourceList.c"
			GtkTreeIter tmp_iter = {0};
			GtkTreeIter _tmp21_;
			GtkTreeStore* _tmp22_;
			GtkTreeIter _tmp23_;
			GtkTreeIter _tmp24_ = {0};
#line 1266 "../lib/Widgets/SourceList.vala"
			_tmp21_ = dest_iter;
#line 1266 "../lib/Widgets/SourceList.vala"
			tmp_iter = _tmp21_;
#line 1267 "../lib/Widgets/SourceList.vala"
			_tmp22_ = self->priv->child_tree;
#line 1267 "../lib/Widgets/SourceList.vala"
			_tmp23_ = tmp_iter;
#line 1267 "../lib/Widgets/SourceList.vala"
			gtk_tree_store_insert_after (_tmp22_, &_tmp24_, NULL, &_tmp23_);
#line 1267 "../lib/Widgets/SourceList.vala"
			dest_iter = _tmp24_;
#line 1268 "../lib/Widgets/SourceList.vala"
			retval = TRUE;
#line 6277 "SourceList.c"
		}
	}
#line 1273 "../lib/Widgets/SourceList.vala"
	if (retval) {
#line 6282 "SourceList.c"
		GtkTreeIter _tmp25_;
		GtkTreeIter _tmp26_;
		GraniteWidgetsSourceListItem* item = NULL;
		GtkTreeStore* _tmp27_;
		GtkTreeIter _tmp28_;
		GraniteWidgetsSourceListItem* _tmp29_ = NULL;
		GraniteWidgetsSourceListItem* _tmp30_;
		GraniteWidgetsSourceListItem* _tmp31_;
		GraniteWidgetsSourceListSortable* parent = NULL;
		GraniteWidgetsSourceListItem* _tmp32_;
		GraniteWidgetsSourceListExpandableItem* _tmp33_;
		GraniteWidgetsSourceListExpandableItem* _tmp34_;
		GraniteWidgetsSourceListSortable* _tmp35_;
		GraniteWidgetsSourceListSortable* _tmp36_;
		GraniteWidgetsSourceListSortable* _tmp37_;
		GraniteWidgetsSourceListItem* _tmp38_;
#line 1274 "../lib/Widgets/SourceList.vala"
		_tmp25_ = src_iter;
#line 1274 "../lib/Widgets/SourceList.vala"
		_tmp26_ = dest_iter;
#line 1274 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_recursive_node_copy (self, &_tmp25_, &_tmp26_);
#line 1278 "../lib/Widgets/SourceList.vala"
		_tmp27_ = self->priv->child_tree;
#line 1278 "../lib/Widgets/SourceList.vala"
		_tmp28_ = src_iter;
#line 1278 "../lib/Widgets/SourceList.vala"
		gtk_tree_model_get ((GtkTreeModel*) _tmp27_, &_tmp28_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, &_tmp29_, -1, -1);
#line 1278 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (item);
#line 1278 "../lib/Widgets/SourceList.vala"
		item = _tmp29_;
#line 1279 "../lib/Widgets/SourceList.vala"
		_tmp30_ = item;
#line 1279 "../lib/Widgets/SourceList.vala"
		g_return_val_if_fail (_tmp30_ != NULL, retval);
#line 1288 "../lib/Widgets/SourceList.vala"
		_tmp31_ = item;
#line 1288 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_update_item (self, _tmp31_);
#line 1290 "../lib/Widgets/SourceList.vala"
		_tmp32_ = item;
#line 1290 "../lib/Widgets/SourceList.vala"
		_tmp33_ = granite_widgets_source_list_item_get_parent (_tmp32_);
#line 1290 "../lib/Widgets/SourceList.vala"
		_tmp34_ = _tmp33_;
#line 1290 "../lib/Widgets/SourceList.vala"
		_tmp35_ = _g_object_ref0 (GRANITE_WIDGETS_IS_SOURCE_LIST_SORTABLE (_tmp34_) ? ((GraniteWidgetsSourceListSortable*) _tmp34_) : NULL);
#line 1290 "../lib/Widgets/SourceList.vala"
		parent = _tmp35_;
#line 1291 "../lib/Widgets/SourceList.vala"
		_tmp36_ = parent;
#line 1291 "../lib/Widgets/SourceList.vala"
		g_return_val_if_fail (_tmp36_ != NULL, retval);
#line 1293 "../lib/Widgets/SourceList.vala"
		_tmp37_ = parent;
#line 1293 "../lib/Widgets/SourceList.vala"
		_tmp38_ = item;
#line 1293 "../lib/Widgets/SourceList.vala"
		g_signal_emit (_tmp37_, granite_widgets_source_list_sortable_signals[GRANITE_WIDGETS_SOURCE_LIST_SORTABLE_USER_MOVED_ITEM_SIGNAL], 0, _tmp38_);
#line 1273 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1273 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (item);
#line 6347 "SourceList.c"
	}
#line 1296 "../lib/Widgets/SourceList.vala"
	result = retval;
#line 1296 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (prev);
#line 1296 "../lib/Widgets/SourceList.vala"
	return result;
#line 6355 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_recursive_node_copy (GraniteWidgetsSourceListDataModel* self,
                                                            GtkTreeIter* src_iter,
                                                            GtkTreeIter* dest_iter)
{
	GtkTreeIter _tmp0_;
	GtkTreeIter _tmp1_;
	GtkTreeIter child = {0};
	GtkTreeStore* _tmp2_;
	GtkTreeIter _tmp3_;
	GtkTreeIter _tmp4_ = {0};
	gboolean _tmp5_;
#line 1299 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1299 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (src_iter != NULL);
#line 1299 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (dest_iter != NULL);
#line 1300 "../lib/Widgets/SourceList.vala"
	_tmp0_ = *src_iter;
#line 1300 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *dest_iter;
#line 1300 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_move_item (self, &_tmp0_, &_tmp1_);
#line 1303 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->child_tree;
#line 1303 "../lib/Widgets/SourceList.vala"
	_tmp3_ = *src_iter;
#line 1303 "../lib/Widgets/SourceList.vala"
	_tmp5_ = gtk_tree_model_iter_children ((GtkTreeModel*) _tmp2_, &_tmp4_, &_tmp3_);
#line 1303 "../lib/Widgets/SourceList.vala"
	child = _tmp4_;
#line 1303 "../lib/Widgets/SourceList.vala"
	if (_tmp5_) {
#line 6392 "SourceList.c"
		{
			gboolean _tmp6_ = FALSE;
#line 1306 "../lib/Widgets/SourceList.vala"
			_tmp6_ = TRUE;
#line 1306 "../lib/Widgets/SourceList.vala"
			while (TRUE) {
#line 6399 "SourceList.c"
				GtkTreeIter copy = {0};
				GtkTreeStore* _tmp9_;
				GtkTreeIter _tmp10_;
				GtkTreeIter _tmp11_ = {0};
				GtkTreeIter _tmp12_;
				GtkTreeIter _tmp13_;
#line 1306 "../lib/Widgets/SourceList.vala"
				if (!_tmp6_) {
#line 6408 "SourceList.c"
					GtkTreeStore* _tmp7_;
					gboolean _tmp8_;
#line 1310 "../lib/Widgets/SourceList.vala"
					_tmp7_ = self->priv->child_tree;
#line 1310 "../lib/Widgets/SourceList.vala"
					_tmp8_ = gtk_tree_model_iter_next ((GtkTreeModel*) _tmp7_, &child);
#line 1310 "../lib/Widgets/SourceList.vala"
					if (!_tmp8_) {
#line 1310 "../lib/Widgets/SourceList.vala"
						break;
#line 6419 "SourceList.c"
					}
				}
#line 1306 "../lib/Widgets/SourceList.vala"
				_tmp6_ = FALSE;
#line 1308 "../lib/Widgets/SourceList.vala"
				_tmp9_ = self->priv->child_tree;
#line 1308 "../lib/Widgets/SourceList.vala"
				_tmp10_ = *dest_iter;
#line 1308 "../lib/Widgets/SourceList.vala"
				gtk_tree_store_append (_tmp9_, &_tmp11_, &_tmp10_);
#line 1308 "../lib/Widgets/SourceList.vala"
				copy = _tmp11_;
#line 1309 "../lib/Widgets/SourceList.vala"
				_tmp12_ = child;
#line 1309 "../lib/Widgets/SourceList.vala"
				_tmp13_ = copy;
#line 1309 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_data_model_recursive_node_copy (self, &_tmp12_, &_tmp13_);
#line 6438 "SourceList.c"
			}
		}
	}
}

static void
granite_widgets_source_list_data_model_move_item (GraniteWidgetsSourceListDataModel* self,
                                                  GtkTreeIter* src_iter,
                                                  GtkTreeIter* dest_iter)
{
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeStore* _tmp0_;
	GtkTreeIter _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_ = NULL;
	GtkTreeStore* _tmp3_;
	GtkTreeIter _tmp4_;
	GeeHashMap* _tmp5_;
	GtkTreeStore* _tmp6_;
	GtkTreeIter _tmp7_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp8_;
	GraniteWidgetsSourceListDataModelNodeWrapper* _tmp9_;
#line 1314 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1314 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (src_iter != NULL);
#line 1314 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (dest_iter != NULL);
#line 1316 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->child_tree;
#line 1316 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *src_iter;
#line 1316 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_get ((GtkTreeModel*) _tmp0_, &_tmp1_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, &_tmp2_, -1, -1);
#line 1316 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 1316 "../lib/Widgets/SourceList.vala"
	item = _tmp2_;
#line 1317 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 1320 "../lib/Widgets/SourceList.vala"
	_tmp3_ = self->priv->child_tree;
#line 1320 "../lib/Widgets/SourceList.vala"
	_tmp4_ = *dest_iter;
#line 1320 "../lib/Widgets/SourceList.vala"
	gtk_tree_store_set (_tmp3_, &_tmp4_, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM, item, -1, -1);
#line 1321 "../lib/Widgets/SourceList.vala"
	_tmp5_ = self->priv->items;
#line 1321 "../lib/Widgets/SourceList.vala"
	_tmp6_ = self->priv->child_tree;
#line 1321 "../lib/Widgets/SourceList.vala"
	_tmp7_ = *dest_iter;
#line 1321 "../lib/Widgets/SourceList.vala"
	_tmp8_ = granite_widgets_source_list_data_model_node_wrapper_new ((GtkTreeModel*) _tmp6_, &_tmp7_);
#line 1321 "../lib/Widgets/SourceList.vala"
	_tmp9_ = _tmp8_;
#line 1321 "../lib/Widgets/SourceList.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp5_, item, _tmp9_);
#line 1321 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list_data_model_node_wrapper_unref0 (_tmp9_);
#line 1314 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 6500 "SourceList.c"
}

static gint*
_vala_array_dup1 (gint* self,
                  gint length)
{
#line 1368 "../lib/Widgets/SourceList.vala"
	if (length > 0) {
#line 1368 "../lib/Widgets/SourceList.vala"
		return g_memdup (self, length * sizeof (gint));
#line 6511 "SourceList.c"
	}
#line 1368 "../lib/Widgets/SourceList.vala"
	return NULL;
#line 6515 "SourceList.c"
}

static gint*
_vala_array_dup2 (gint* self,
                  gint length)
{
#line 1369 "../lib/Widgets/SourceList.vala"
	if (length > 0) {
#line 1369 "../lib/Widgets/SourceList.vala"
		return g_memdup (self, length * sizeof (gint));
#line 6526 "SourceList.c"
	}
#line 1369 "../lib/Widgets/SourceList.vala"
	return NULL;
#line 6530 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_real_row_drop_possible (GtkTreeDragDest* base,
                                                               GtkTreePath* dest,
                                                               GtkSelectionData* selection_data)
{
	GraniteWidgetsSourceListDataModel * self;
	GtkTreeModel* model = NULL;
	GtkTreePath* src_path = NULL;
	gboolean _tmp0_ = FALSE;
	GtkTreeModel* _tmp1_ = NULL;
	GtkTreePath* _tmp2_ = NULL;
	gboolean _tmp3_;
	GtkTreeModel* _tmp4_;
	GtkTreePath* child_dest = NULL;
	GtkTreePath* _tmp7_;
	gboolean _tmp8_ = FALSE;
	GtkTreePath* _tmp9_;
	gint src_depth = 0;
	GtkTreePath* _tmp12_;
	gint dest_depth = 0;
	GtkTreePath* _tmp13_;
	GraniteWidgetsSourceListItem* parent = NULL;
	GraniteWidgetsSourceListSortable* sortable = NULL;
	GraniteWidgetsSourceListItem* _tmp35_;
	GraniteWidgetsSourceListSortable* _tmp36_;
	gboolean _tmp37_ = FALSE;
	GraniteWidgetsSourceListSortable* _tmp38_;
	GraniteWidgetsSourceListItem* dest_item = NULL;
	GraniteWidgetsSourceListItem* _tmp40_;
	GraniteWidgetsSourceListItem* _tmp41_;
	GraniteWidgetsSourceListItem* source_item = NULL;
	GtkTreePath* filter_src_path = NULL;
	GtkTreePath* _tmp42_;
	GtkTreePath* _tmp43_;
	GtkTreePath* _tmp44_;
	GraniteWidgetsSourceListItem* _tmp47_;
	GraniteWidgetsSourceListSortable* _tmp48_;
	GraniteWidgetsSourceListItem* _tmp49_;
	GraniteWidgetsSourceListItem* _tmp50_;
	gboolean result = FALSE;
#line 1324 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModel*) base;
#line 1324 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (dest != NULL, FALSE);
#line 1324 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (selection_data != NULL, FALSE);
#line 1331 "../lib/Widgets/SourceList.vala"
	_tmp3_ = gtk_tree_get_row_drag_data (selection_data, &_tmp1_, &_tmp2_);
#line 1331 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (model);
#line 1331 "../lib/Widgets/SourceList.vala"
	_tmp4_ = _g_object_ref0 (_tmp1_);
#line 1331 "../lib/Widgets/SourceList.vala"
	model = _tmp4_;
#line 1331 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (src_path);
#line 1331 "../lib/Widgets/SourceList.vala"
	src_path = _tmp2_;
#line 1331 "../lib/Widgets/SourceList.vala"
	if (!_tmp3_) {
#line 1331 "../lib/Widgets/SourceList.vala"
		_tmp0_ = TRUE;
#line 6595 "SourceList.c"
	} else {
		GtkTreeModel* _tmp5_;
		GtkTreeStore* _tmp6_;
#line 1331 "../lib/Widgets/SourceList.vala"
		_tmp5_ = model;
#line 1331 "../lib/Widgets/SourceList.vala"
		_tmp6_ = self->priv->child_tree;
#line 1331 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp5_ != G_TYPE_CHECK_INSTANCE_CAST (_tmp6_, gtk_tree_model_get_type (), GtkTreeModel);
#line 6605 "SourceList.c"
	}
#line 1331 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 1332 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1332 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1332 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1332 "../lib/Widgets/SourceList.vala"
		return result;
#line 6617 "SourceList.c"
	}
#line 1335 "../lib/Widgets/SourceList.vala"
	_tmp7_ = gtk_tree_model_filter_convert_path_to_child_path ((GtkTreeModelFilter*) self, dest);
#line 1335 "../lib/Widgets/SourceList.vala"
	child_dest = _tmp7_;
#line 1338 "../lib/Widgets/SourceList.vala"
	_tmp9_ = child_dest;
#line 1338 "../lib/Widgets/SourceList.vala"
	if (_tmp9_ == NULL) {
#line 1338 "../lib/Widgets/SourceList.vala"
		_tmp8_ = TRUE;
#line 6629 "SourceList.c"
	} else {
		GtkTreePath* _tmp10_;
		GtkTreePath* _tmp11_;
#line 1338 "../lib/Widgets/SourceList.vala"
		_tmp10_ = src_path;
#line 1338 "../lib/Widgets/SourceList.vala"
		_tmp11_ = child_dest;
#line 1338 "../lib/Widgets/SourceList.vala"
		_tmp8_ = gtk_tree_path_compare (_tmp10_, _tmp11_) == 0;
#line 6639 "SourceList.c"
	}
#line 1338 "../lib/Widgets/SourceList.vala"
	if (_tmp8_) {
#line 1339 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1339 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1339 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1339 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1339 "../lib/Widgets/SourceList.vala"
		return result;
#line 6653 "SourceList.c"
	}
#line 1343 "../lib/Widgets/SourceList.vala"
	_tmp12_ = src_path;
#line 1343 "../lib/Widgets/SourceList.vala"
	src_depth = gtk_tree_path_get_depth (_tmp12_);
#line 1344 "../lib/Widgets/SourceList.vala"
	_tmp13_ = child_dest;
#line 1344 "../lib/Widgets/SourceList.vala"
	dest_depth = gtk_tree_path_get_depth (_tmp13_);
#line 1346 "../lib/Widgets/SourceList.vala"
	if (src_depth != dest_depth) {
#line 1347 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1347 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1347 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1347 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1347 "../lib/Widgets/SourceList.vala"
		return result;
#line 6675 "SourceList.c"
	}
#line 1350 "../lib/Widgets/SourceList.vala"
	if (src_depth < 1) {
#line 1351 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1351 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1351 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1351 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1351 "../lib/Widgets/SourceList.vala"
		return result;
#line 6689 "SourceList.c"
	}
#line 1353 "../lib/Widgets/SourceList.vala"
	parent = NULL;
#line 1358 "../lib/Widgets/SourceList.vala"
	if (src_depth == 1) {
#line 6695 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp14_;
		GraniteWidgetsSourceListExpandableItem* _tmp15_;
		GraniteWidgetsSourceListItem* _tmp16_;
#line 1359 "../lib/Widgets/SourceList.vala"
		_tmp14_ = granite_widgets_source_list_data_model_get_root (self);
#line 1359 "../lib/Widgets/SourceList.vala"
		_tmp15_ = _tmp14_;
#line 1359 "../lib/Widgets/SourceList.vala"
		_tmp16_ = _g_object_ref0 ((GraniteWidgetsSourceListItem*) _tmp15_);
#line 1359 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1359 "../lib/Widgets/SourceList.vala"
		parent = _tmp16_;
#line 6709 "SourceList.c"
	} else {
		gint* src_indices = NULL;
		GtkTreePath* _tmp17_;
		gint _tmp18_ = 0;
		gint* _tmp19_;
		gint* _tmp20_;
		gint _tmp20__length1;
		gint src_indices_length1;
		gint _src_indices_size_;
		gint* dest_indices = NULL;
		GtkTreePath* _tmp21_;
		gint _tmp22_ = 0;
		gint* _tmp23_;
		gint* _tmp24_;
		gint _tmp24__length1;
		gint dest_indices_length1;
		gint _dest_indices_size_;
		gint src_parent_index = 0;
		gint* _tmp25_;
		gint _tmp25__length1;
		gint _tmp26_;
		gint dest_parent_index = 0;
		gint* _tmp27_;
		gint _tmp27__length1;
		gint _tmp28_;
		GtkTreePath* dest_parent = NULL;
		GtkTreePath* _tmp29_;
		gboolean _tmp30_ = FALSE;
		GtkTreePath* _tmp31_;
		GtkTreePath* _tmp33_;
		GraniteWidgetsSourceListItem* _tmp34_;
#line 1362 "../lib/Widgets/SourceList.vala"
		_vala_assert (dest_depth > 1, "dest_depth > 1");
#line 1368 "../lib/Widgets/SourceList.vala"
		_tmp17_ = src_path;
#line 1368 "../lib/Widgets/SourceList.vala"
		_tmp19_ = gtk_tree_path_get_indices_with_depth (_tmp17_, &_tmp18_);
#line 1368 "../lib/Widgets/SourceList.vala"
		_tmp20_ = (_tmp19_ != NULL) ? _vala_array_dup1 (_tmp19_, _tmp18_) : ((gpointer) _tmp19_);
#line 1368 "../lib/Widgets/SourceList.vala"
		_tmp20__length1 = _tmp18_;
#line 1368 "../lib/Widgets/SourceList.vala"
		src_indices = _tmp20_;
#line 1368 "../lib/Widgets/SourceList.vala"
		src_indices_length1 = _tmp20__length1;
#line 1368 "../lib/Widgets/SourceList.vala"
		_src_indices_size_ = src_indices_length1;
#line 1369 "../lib/Widgets/SourceList.vala"
		_tmp21_ = child_dest;
#line 1369 "../lib/Widgets/SourceList.vala"
		_tmp23_ = gtk_tree_path_get_indices_with_depth (_tmp21_, &_tmp22_);
#line 1369 "../lib/Widgets/SourceList.vala"
		_tmp24_ = (_tmp23_ != NULL) ? _vala_array_dup2 (_tmp23_, _tmp22_) : ((gpointer) _tmp23_);
#line 1369 "../lib/Widgets/SourceList.vala"
		_tmp24__length1 = _tmp22_;
#line 1369 "../lib/Widgets/SourceList.vala"
		dest_indices = _tmp24_;
#line 1369 "../lib/Widgets/SourceList.vala"
		dest_indices_length1 = _tmp24__length1;
#line 1369 "../lib/Widgets/SourceList.vala"
		_dest_indices_size_ = dest_indices_length1;
#line 1372 "../lib/Widgets/SourceList.vala"
		_tmp25_ = src_indices;
#line 1372 "../lib/Widgets/SourceList.vala"
		_tmp25__length1 = src_indices_length1;
#line 1372 "../lib/Widgets/SourceList.vala"
		_tmp26_ = _tmp25_[src_depth - 2];
#line 1372 "../lib/Widgets/SourceList.vala"
		src_parent_index = _tmp26_;
#line 1373 "../lib/Widgets/SourceList.vala"
		_tmp27_ = dest_indices;
#line 1373 "../lib/Widgets/SourceList.vala"
		_tmp27__length1 = dest_indices_length1;
#line 1373 "../lib/Widgets/SourceList.vala"
		_tmp28_ = _tmp27_[dest_depth - 2];
#line 1373 "../lib/Widgets/SourceList.vala"
		dest_parent_index = _tmp28_;
#line 1375 "../lib/Widgets/SourceList.vala"
		if (src_parent_index != dest_parent_index) {
#line 1376 "../lib/Widgets/SourceList.vala"
			result = FALSE;
#line 1376 "../lib/Widgets/SourceList.vala"
			dest_indices = (g_free (dest_indices), NULL);
#line 1376 "../lib/Widgets/SourceList.vala"
			src_indices = (g_free (src_indices), NULL);
#line 1376 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (parent);
#line 1376 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (child_dest);
#line 1376 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (src_path);
#line 1376 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (model);
#line 1376 "../lib/Widgets/SourceList.vala"
			return result;
#line 6805 "SourceList.c"
		}
#line 1379 "../lib/Widgets/SourceList.vala"
		_tmp29_ = __vala_GtkTreePath_copy0 (dest);
#line 1379 "../lib/Widgets/SourceList.vala"
		dest_parent = _tmp29_;
#line 1381 "../lib/Widgets/SourceList.vala"
		_tmp31_ = dest_parent;
#line 1381 "../lib/Widgets/SourceList.vala"
		if (!gtk_tree_path_up (_tmp31_)) {
#line 1381 "../lib/Widgets/SourceList.vala"
			_tmp30_ = TRUE;
#line 6817 "SourceList.c"
		} else {
			GtkTreePath* _tmp32_;
#line 1381 "../lib/Widgets/SourceList.vala"
			_tmp32_ = dest_parent;
#line 1381 "../lib/Widgets/SourceList.vala"
			_tmp30_ = gtk_tree_path_get_depth (_tmp32_) < 1;
#line 6824 "SourceList.c"
		}
#line 1381 "../lib/Widgets/SourceList.vala"
		if (_tmp30_) {
#line 1382 "../lib/Widgets/SourceList.vala"
			result = FALSE;
#line 1382 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (dest_parent);
#line 1382 "../lib/Widgets/SourceList.vala"
			dest_indices = (g_free (dest_indices), NULL);
#line 1382 "../lib/Widgets/SourceList.vala"
			src_indices = (g_free (src_indices), NULL);
#line 1382 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (parent);
#line 1382 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (child_dest);
#line 1382 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (src_path);
#line 1382 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (model);
#line 1382 "../lib/Widgets/SourceList.vala"
			return result;
#line 6846 "SourceList.c"
		}
#line 1384 "../lib/Widgets/SourceList.vala"
		_tmp33_ = dest_parent;
#line 1384 "../lib/Widgets/SourceList.vala"
		_tmp34_ = granite_widgets_source_list_data_model_get_item_from_path (self, _tmp33_);
#line 1384 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1384 "../lib/Widgets/SourceList.vala"
		parent = _tmp34_;
#line 1358 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (dest_parent);
#line 1358 "../lib/Widgets/SourceList.vala"
		dest_indices = (g_free (dest_indices), NULL);
#line 1358 "../lib/Widgets/SourceList.vala"
		src_indices = (g_free (src_indices), NULL);
#line 6862 "SourceList.c"
	}
#line 1387 "../lib/Widgets/SourceList.vala"
	_tmp35_ = parent;
#line 1387 "../lib/Widgets/SourceList.vala"
	_tmp36_ = _g_object_ref0 (GRANITE_WIDGETS_IS_SOURCE_LIST_SORTABLE (_tmp35_) ? ((GraniteWidgetsSourceListSortable*) _tmp35_) : NULL);
#line 1387 "../lib/Widgets/SourceList.vala"
	sortable = _tmp36_;
#line 1389 "../lib/Widgets/SourceList.vala"
	_tmp38_ = sortable;
#line 1389 "../lib/Widgets/SourceList.vala"
	if (_tmp38_ == NULL) {
#line 1389 "../lib/Widgets/SourceList.vala"
		_tmp37_ = TRUE;
#line 6876 "SourceList.c"
	} else {
		GraniteWidgetsSourceListSortable* _tmp39_;
#line 1389 "../lib/Widgets/SourceList.vala"
		_tmp39_ = sortable;
#line 1389 "../lib/Widgets/SourceList.vala"
		_tmp37_ = !granite_widgets_source_list_sortable_allow_dnd_sorting (_tmp39_);
#line 6883 "SourceList.c"
	}
#line 1389 "../lib/Widgets/SourceList.vala"
	if (_tmp37_) {
#line 1390 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1390 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (sortable);
#line 1390 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1390 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1390 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1390 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1390 "../lib/Widgets/SourceList.vala"
		return result;
#line 6901 "SourceList.c"
	}
#line 1392 "../lib/Widgets/SourceList.vala"
	_tmp40_ = granite_widgets_source_list_data_model_get_item_from_path (self, dest);
#line 1392 "../lib/Widgets/SourceList.vala"
	dest_item = _tmp40_;
#line 1394 "../lib/Widgets/SourceList.vala"
	_tmp41_ = dest_item;
#line 1394 "../lib/Widgets/SourceList.vala"
	if (_tmp41_ == NULL) {
#line 1395 "../lib/Widgets/SourceList.vala"
		result = TRUE;
#line 1395 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (dest_item);
#line 1395 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (sortable);
#line 1395 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1395 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1395 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1395 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1395 "../lib/Widgets/SourceList.vala"
		return result;
#line 6927 "SourceList.c"
	}
#line 1397 "../lib/Widgets/SourceList.vala"
	source_item = NULL;
#line 1398 "../lib/Widgets/SourceList.vala"
	_tmp42_ = src_path;
#line 1398 "../lib/Widgets/SourceList.vala"
	_tmp43_ = gtk_tree_model_filter_convert_child_path_to_path ((GtkTreeModelFilter*) self, _tmp42_);
#line 1398 "../lib/Widgets/SourceList.vala"
	filter_src_path = _tmp43_;
#line 1400 "../lib/Widgets/SourceList.vala"
	_tmp44_ = filter_src_path;
#line 1400 "../lib/Widgets/SourceList.vala"
	if (_tmp44_ != NULL) {
#line 6941 "SourceList.c"
		GtkTreePath* _tmp45_;
		GraniteWidgetsSourceListItem* _tmp46_;
#line 1401 "../lib/Widgets/SourceList.vala"
		_tmp45_ = filter_src_path;
#line 1401 "../lib/Widgets/SourceList.vala"
		_tmp46_ = granite_widgets_source_list_data_model_get_item_from_path (self, _tmp45_);
#line 1401 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (source_item);
#line 1401 "../lib/Widgets/SourceList.vala"
		source_item = _tmp46_;
#line 6952 "SourceList.c"
	}
#line 1403 "../lib/Widgets/SourceList.vala"
	_tmp47_ = source_item;
#line 1403 "../lib/Widgets/SourceList.vala"
	if (_tmp47_ == NULL) {
#line 1404 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1404 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (filter_src_path);
#line 1404 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (source_item);
#line 1404 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (dest_item);
#line 1404 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (sortable);
#line 1404 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1404 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1404 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1404 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1404 "../lib/Widgets/SourceList.vala"
		return result;
#line 6978 "SourceList.c"
	}
#line 1412 "../lib/Widgets/SourceList.vala"
	_tmp48_ = sortable;
#line 1412 "../lib/Widgets/SourceList.vala"
	_tmp49_ = dest_item;
#line 1412 "../lib/Widgets/SourceList.vala"
	_tmp50_ = source_item;
#line 1412 "../lib/Widgets/SourceList.vala"
	if (granite_widgets_source_list_sortable_compare (_tmp48_, _tmp49_, _tmp50_) >= 0) {
#line 6988 "SourceList.c"
		GraniteWidgetsSourceListItem* dest_item_prev = NULL;
		GraniteWidgetsSourceListItem* _tmp51_;
		gboolean _tmp52_ = FALSE;
		gboolean _tmp53_ = FALSE;
		GraniteWidgetsSourceListItem* _tmp54_;
#line 1413 "../lib/Widgets/SourceList.vala"
		if (!gtk_tree_path_prev (dest)) {
#line 1414 "../lib/Widgets/SourceList.vala"
			result = TRUE;
#line 1414 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (filter_src_path);
#line 1414 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (source_item);
#line 1414 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (dest_item);
#line 1414 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (sortable);
#line 1414 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (parent);
#line 1414 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (child_dest);
#line 1414 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (src_path);
#line 1414 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (model);
#line 1414 "../lib/Widgets/SourceList.vala"
			return result;
#line 7016 "SourceList.c"
		}
#line 1418 "../lib/Widgets/SourceList.vala"
		_tmp51_ = granite_widgets_source_list_data_model_get_item_from_path (self, dest);
#line 1418 "../lib/Widgets/SourceList.vala"
		dest_item_prev = _tmp51_;
#line 1420 "../lib/Widgets/SourceList.vala"
		_tmp54_ = dest_item_prev;
#line 1420 "../lib/Widgets/SourceList.vala"
		if (_tmp54_ != NULL) {
#line 7026 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp55_;
			GraniteWidgetsSourceListItem* _tmp56_;
#line 1421 "../lib/Widgets/SourceList.vala"
			_tmp55_ = dest_item_prev;
#line 1421 "../lib/Widgets/SourceList.vala"
			_tmp56_ = source_item;
#line 1421 "../lib/Widgets/SourceList.vala"
			_tmp53_ = _tmp55_ != _tmp56_;
#line 7035 "SourceList.c"
		} else {
#line 1420 "../lib/Widgets/SourceList.vala"
			_tmp53_ = FALSE;
#line 7039 "SourceList.c"
		}
#line 1420 "../lib/Widgets/SourceList.vala"
		if (_tmp53_) {
#line 7043 "SourceList.c"
			GraniteWidgetsSourceListSortable* _tmp57_;
			GraniteWidgetsSourceListItem* _tmp58_;
			GraniteWidgetsSourceListItem* _tmp59_;
#line 1422 "../lib/Widgets/SourceList.vala"
			_tmp57_ = sortable;
#line 1422 "../lib/Widgets/SourceList.vala"
			_tmp58_ = dest_item_prev;
#line 1422 "../lib/Widgets/SourceList.vala"
			_tmp59_ = source_item;
#line 1422 "../lib/Widgets/SourceList.vala"
			_tmp52_ = granite_widgets_source_list_sortable_compare (_tmp57_, _tmp58_, _tmp59_) <= 0;
#line 7055 "SourceList.c"
		} else {
#line 1420 "../lib/Widgets/SourceList.vala"
			_tmp52_ = FALSE;
#line 7059 "SourceList.c"
		}
#line 1420 "../lib/Widgets/SourceList.vala"
		result = _tmp52_;
#line 1420 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (dest_item_prev);
#line 1420 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (filter_src_path);
#line 1420 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (source_item);
#line 1420 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (dest_item);
#line 1420 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (sortable);
#line 1420 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (parent);
#line 1420 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (child_dest);
#line 1420 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (src_path);
#line 1420 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 1420 "../lib/Widgets/SourceList.vala"
		return result;
#line 7083 "SourceList.c"
	}
#line 1425 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 1425 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (filter_src_path);
#line 1425 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (source_item);
#line 1425 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (dest_item);
#line 1425 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (sortable);
#line 1425 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (parent);
#line 1425 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (child_dest);
#line 1425 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (src_path);
#line 1425 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (model);
#line 1425 "../lib/Widgets/SourceList.vala"
	return result;
#line 7105 "SourceList.c"
}

/**
         * Override default implementation of TreeDragSource
         *
         * drag_data_delete is not overriden because the default implementation
         * does exactly what we need.
         */
static gboolean
granite_widgets_source_list_data_model_real_drag_data_get (GtkTreeDragSource* base,
                                                           GtkTreePath* path,
                                                           GtkSelectionData* selection_data)
{
	GraniteWidgetsSourceListDataModel * self;
	GraniteWidgetsSourceListDragSource* drag_source_item = NULL;
	GraniteWidgetsSourceListItem* _tmp0_;
	GraniteWidgetsSourceListDragSource* _tmp1_;
	gboolean _tmp2_ = FALSE;
	GraniteWidgetsSourceListDragSource* _tmp3_;
	gboolean result = FALSE;
#line 1435 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModel*) base;
#line 1435 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 1435 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (selection_data != NULL, FALSE);
#line 1438 "../lib/Widgets/SourceList.vala"
	if (gtk_selection_data_get_target (selection_data) == gdk_atom_intern_static_string ("GTK_TREE_MODEL_ROW")) {
#line 1439 "../lib/Widgets/SourceList.vala"
		result = granite_widgets_source_list_data_model_gtk_tree_drag_source_parent_iface->drag_data_get ((GtkTreeDragSource*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_model_filter_get_type (), GtkTreeModelFilter), path, selection_data);
#line 1439 "../lib/Widgets/SourceList.vala"
		return result;
#line 7138 "SourceList.c"
	}
#line 1442 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_item_from_path (self, path);
#line 1442 "../lib/Widgets/SourceList.vala"
	_tmp1_ = GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_SOURCE (_tmp0_) ? ((GraniteWidgetsSourceListDragSource*) _tmp0_) : NULL;
#line 1442 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ == NULL) {
#line 1442 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp0_);
#line 7148 "SourceList.c"
	}
#line 1442 "../lib/Widgets/SourceList.vala"
	drag_source_item = _tmp1_;
#line 1443 "../lib/Widgets/SourceList.vala"
	_tmp3_ = drag_source_item;
#line 1443 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ != NULL) {
#line 7156 "SourceList.c"
		GraniteWidgetsSourceListDragSource* _tmp4_;
#line 1443 "../lib/Widgets/SourceList.vala"
		_tmp4_ = drag_source_item;
#line 1443 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_drag_source_draggable (_tmp4_);
#line 7162 "SourceList.c"
	} else {
#line 1443 "../lib/Widgets/SourceList.vala"
		_tmp2_ = FALSE;
#line 7166 "SourceList.c"
	}
#line 1443 "../lib/Widgets/SourceList.vala"
	if (_tmp2_) {
#line 7170 "SourceList.c"
		GraniteWidgetsSourceListDragSource* _tmp5_;
#line 1444 "../lib/Widgets/SourceList.vala"
		_tmp5_ = drag_source_item;
#line 1444 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_drag_source_prepare_selection_data (_tmp5_, selection_data);
#line 1445 "../lib/Widgets/SourceList.vala"
		result = TRUE;
#line 1445 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (drag_source_item);
#line 1445 "../lib/Widgets/SourceList.vala"
		return result;
#line 7182 "SourceList.c"
	}
#line 1448 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 1448 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (drag_source_item);
#line 1448 "../lib/Widgets/SourceList.vala"
	return result;
#line 7190 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_real_row_draggable (GtkTreeDragSource* base,
                                                           GtkTreePath* path)
{
	GraniteWidgetsSourceListDataModel * self;
	GraniteWidgetsSourceListItem* item = NULL;
	GraniteWidgetsSourceListItem* _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_;
	gboolean result = FALSE;
#line 1451 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModel*) base;
#line 1451 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 1452 "../lib/Widgets/SourceList.vala"
	if (!granite_widgets_source_list_data_model_gtk_tree_drag_source_parent_iface->row_draggable ((GtkTreeDragSource*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_model_filter_get_type (), GtkTreeModelFilter), path)) {
#line 1453 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1453 "../lib/Widgets/SourceList.vala"
		return result;
#line 7212 "SourceList.c"
	}
#line 1455 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_get_item_from_path (self, path);
#line 1455 "../lib/Widgets/SourceList.vala"
	item = _tmp0_;
#line 1457 "../lib/Widgets/SourceList.vala"
	_tmp1_ = item;
#line 1457 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 7222 "SourceList.c"
		GraniteWidgetsSourceListSortable* sortable_item = NULL;
		GraniteWidgetsSourceListItem* _tmp2_;
		GraniteWidgetsSourceListExpandableItem* _tmp3_;
		GraniteWidgetsSourceListExpandableItem* _tmp4_;
		GraniteWidgetsSourceListSortable* _tmp5_;
		gboolean _tmp6_ = FALSE;
		GraniteWidgetsSourceListSortable* _tmp7_;
		GraniteWidgetsSourceListDragSource* drag_source_item = NULL;
		GraniteWidgetsSourceListItem* _tmp9_;
		GraniteWidgetsSourceListDragSource* _tmp10_;
		gboolean _tmp11_ = FALSE;
		GraniteWidgetsSourceListDragSource* _tmp12_;
#line 1459 "../lib/Widgets/SourceList.vala"
		_tmp2_ = item;
#line 1459 "../lib/Widgets/SourceList.vala"
		_tmp3_ = granite_widgets_source_list_item_get_parent (_tmp2_);
#line 1459 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _tmp3_;
#line 1459 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _g_object_ref0 (GRANITE_WIDGETS_IS_SOURCE_LIST_SORTABLE (_tmp4_) ? ((GraniteWidgetsSourceListSortable*) _tmp4_) : NULL);
#line 1459 "../lib/Widgets/SourceList.vala"
		sortable_item = _tmp5_;
#line 1461 "../lib/Widgets/SourceList.vala"
		_tmp7_ = sortable_item;
#line 1461 "../lib/Widgets/SourceList.vala"
		if (_tmp7_ != NULL) {
#line 7249 "SourceList.c"
			GraniteWidgetsSourceListSortable* _tmp8_;
#line 1461 "../lib/Widgets/SourceList.vala"
			_tmp8_ = sortable_item;
#line 1461 "../lib/Widgets/SourceList.vala"
			_tmp6_ = granite_widgets_source_list_sortable_allow_dnd_sorting (_tmp8_);
#line 7255 "SourceList.c"
		} else {
#line 1461 "../lib/Widgets/SourceList.vala"
			_tmp6_ = FALSE;
#line 7259 "SourceList.c"
		}
#line 1461 "../lib/Widgets/SourceList.vala"
		if (_tmp6_) {
#line 1462 "../lib/Widgets/SourceList.vala"
			result = TRUE;
#line 1462 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (sortable_item);
#line 1462 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 1462 "../lib/Widgets/SourceList.vala"
			return result;
#line 7271 "SourceList.c"
		}
#line 1466 "../lib/Widgets/SourceList.vala"
		_tmp9_ = item;
#line 1466 "../lib/Widgets/SourceList.vala"
		_tmp10_ = _g_object_ref0 (GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_SOURCE (_tmp9_) ? ((GraniteWidgetsSourceListDragSource*) _tmp9_) : NULL);
#line 1466 "../lib/Widgets/SourceList.vala"
		drag_source_item = _tmp10_;
#line 1468 "../lib/Widgets/SourceList.vala"
		_tmp12_ = drag_source_item;
#line 1468 "../lib/Widgets/SourceList.vala"
		if (_tmp12_ != NULL) {
#line 7283 "SourceList.c"
			GraniteWidgetsSourceListDragSource* _tmp13_;
#line 1468 "../lib/Widgets/SourceList.vala"
			_tmp13_ = drag_source_item;
#line 1468 "../lib/Widgets/SourceList.vala"
			_tmp11_ = granite_widgets_source_list_drag_source_draggable (_tmp13_);
#line 7289 "SourceList.c"
		} else {
#line 1468 "../lib/Widgets/SourceList.vala"
			_tmp11_ = FALSE;
#line 7293 "SourceList.c"
		}
#line 1468 "../lib/Widgets/SourceList.vala"
		if (_tmp11_) {
#line 1469 "../lib/Widgets/SourceList.vala"
			result = TRUE;
#line 1469 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (drag_source_item);
#line 1469 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (sortable_item);
#line 1469 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 1469 "../lib/Widgets/SourceList.vala"
			return result;
#line 7307 "SourceList.c"
		}
#line 1457 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (drag_source_item);
#line 1457 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (sortable_item);
#line 7313 "SourceList.c"
	}
#line 1472 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 1472 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 1472 "../lib/Widgets/SourceList.vala"
	return result;
#line 7321 "SourceList.c"
}

static inline gpointer
granite_widgets_source_list_data_model_node_wrapper_get_instance_private (GraniteWidgetsSourceListDataModelNodeWrapper* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListDataModelNodeWrapper_private_offset);
}

static void
_vala_GtkTreeRowReference_free (GtkTreeRowReference* self)
{
#line 748 "../lib/Widgets/SourceList.vala"
	g_boxed_free (gtk_tree_row_reference_get_type (), self);
#line 7335 "SourceList.c"
}

static GtkTreeIter*
granite_widgets_source_list_data_model_node_wrapper_get_iter (GraniteWidgetsSourceListDataModelNodeWrapper* self)
{
	GtkTreeIter* result;
	GtkTreeIter* rv = NULL;
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 754 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 755 "../lib/Widgets/SourceList.vala"
	rv = NULL;
#line 757 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_node_wrapper_get_valid (self);
#line 757 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 757 "../lib/Widgets/SourceList.vala"
	if (_tmp1_) {
#line 7355 "SourceList.c"
		GtkTreePath* _path = NULL;
		GtkTreePath* _tmp2_;
		GtkTreePath* _tmp3_;
		GtkTreePath* _tmp4_;
#line 758 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_data_model_node_wrapper_get_path (self);
#line 758 "../lib/Widgets/SourceList.vala"
		_tmp3_ = _tmp2_;
#line 758 "../lib/Widgets/SourceList.vala"
		_path = _tmp3_;
#line 759 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _path;
#line 759 "../lib/Widgets/SourceList.vala"
		if (_tmp4_ != NULL) {
#line 7370 "SourceList.c"
			GtkTreeIter _iter = {0};
			GtkTreeRowReference* _tmp5_;
			GtkTreeModel* _tmp6_;
			GtkTreePath* _tmp7_;
			GtkTreeIter _tmp8_ = {0};
			gboolean _tmp9_;
#line 761 "../lib/Widgets/SourceList.vala"
			_tmp5_ = self->priv->row_reference;
#line 761 "../lib/Widgets/SourceList.vala"
			_tmp6_ = gtk_tree_row_reference_get_model (_tmp5_);
#line 761 "../lib/Widgets/SourceList.vala"
			_tmp7_ = _path;
#line 761 "../lib/Widgets/SourceList.vala"
			_tmp9_ = gtk_tree_model_get_iter (_tmp6_, &_tmp8_, _tmp7_);
#line 761 "../lib/Widgets/SourceList.vala"
			_iter = _tmp8_;
#line 761 "../lib/Widgets/SourceList.vala"
			if (_tmp9_) {
#line 7389 "SourceList.c"
				GtkTreeIter _tmp10_;
				GtkTreeIter* _tmp11_;
#line 762 "../lib/Widgets/SourceList.vala"
				_tmp10_ = _iter;
#line 762 "../lib/Widgets/SourceList.vala"
				_tmp11_ = __vala_GtkTreeIter_copy0 (&_tmp10_);
#line 762 "../lib/Widgets/SourceList.vala"
				__vala_GtkTreeIter_free0 (rv);
#line 762 "../lib/Widgets/SourceList.vala"
				rv = _tmp11_;
#line 7400 "SourceList.c"
			}
		}
#line 757 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (_path);
#line 7405 "SourceList.c"
	}
#line 766 "../lib/Widgets/SourceList.vala"
	result = rv;
#line 766 "../lib/Widgets/SourceList.vala"
	return result;
#line 7411 "SourceList.c"
}

static GtkTreePath*
granite_widgets_source_list_data_model_node_wrapper_get_path (GraniteWidgetsSourceListDataModelNodeWrapper* self)
{
	GtkTreePath* result;
	GtkTreePath* _tmp0_ = NULL;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 774 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 774 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_node_wrapper_get_valid (self);
#line 774 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 774 "../lib/Widgets/SourceList.vala"
	if (_tmp2_) {
#line 7429 "SourceList.c"
		GtkTreeRowReference* _tmp3_;
		GtkTreePath* _tmp4_;
#line 774 "../lib/Widgets/SourceList.vala"
		_tmp3_ = self->priv->row_reference;
#line 774 "../lib/Widgets/SourceList.vala"
		_tmp4_ = gtk_tree_row_reference_get_path (_tmp3_);
#line 774 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (_tmp0_);
#line 774 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp4_;
#line 7440 "SourceList.c"
	} else {
#line 774 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (_tmp0_);
#line 774 "../lib/Widgets/SourceList.vala"
		_tmp0_ = NULL;
#line 7446 "SourceList.c"
	}
#line 774 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 774 "../lib/Widgets/SourceList.vala"
	return result;
#line 7452 "SourceList.c"
}

static gboolean
granite_widgets_source_list_data_model_node_wrapper_get_valid (GraniteWidgetsSourceListDataModelNodeWrapper* self)
{
	gboolean result;
	gboolean _tmp0_ = FALSE;
	GtkTreeRowReference* _tmp1_;
#line 782 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 782 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->row_reference;
#line 782 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 7467 "SourceList.c"
		GtkTreeRowReference* _tmp2_;
#line 782 "../lib/Widgets/SourceList.vala"
		_tmp2_ = self->priv->row_reference;
#line 782 "../lib/Widgets/SourceList.vala"
		_tmp0_ = gtk_tree_row_reference_valid (_tmp2_);
#line 7473 "SourceList.c"
	} else {
#line 782 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 7477 "SourceList.c"
	}
#line 782 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 782 "../lib/Widgets/SourceList.vala"
	return result;
#line 7483 "SourceList.c"
}

static GraniteWidgetsSourceListDataModelNodeWrapper*
granite_widgets_source_list_data_model_node_wrapper_construct (GType object_type,
                                                               GtkTreeModel* model,
                                                               GtkTreeIter* iter)
{
	GraniteWidgetsSourceListDataModelNodeWrapper* self = NULL;
	GtkTreeIter _tmp0_;
	GtkTreePath* _tmp1_;
	GtkTreePath* _tmp2_;
	GtkTreeRowReference* _tmp3_;
#line 785 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (model != NULL, NULL);
#line 785 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (iter != NULL, NULL);
#line 785 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModelNodeWrapper*) g_type_create_instance (object_type);
#line 786 "../lib/Widgets/SourceList.vala"
	_tmp0_ = *iter;
#line 786 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gtk_tree_model_get_path (model, &_tmp0_);
#line 786 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 786 "../lib/Widgets/SourceList.vala"
	_tmp3_ = gtk_tree_row_reference_new (model, _tmp2_);
#line 786 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeRowReference_free0 (self->priv->row_reference);
#line 786 "../lib/Widgets/SourceList.vala"
	self->priv->row_reference = _tmp3_;
#line 786 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (_tmp2_);
#line 785 "../lib/Widgets/SourceList.vala"
	return self;
#line 7518 "SourceList.c"
}

static GraniteWidgetsSourceListDataModelNodeWrapper*
granite_widgets_source_list_data_model_node_wrapper_new (GtkTreeModel* model,
                                                         GtkTreeIter* iter)
{
#line 785 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_data_model_node_wrapper_construct (GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER, model, iter);
#line 7527 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_value_node_wrapper_init (GValue* value)
{
#line 743 "../lib/Widgets/SourceList.vala"
	value->data[0].v_pointer = NULL;
#line 7535 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_value_node_wrapper_free_value (GValue* value)
{
#line 743 "../lib/Widgets/SourceList.vala"
	if (value->data[0].v_pointer) {
#line 743 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_node_wrapper_unref (value->data[0].v_pointer);
#line 7545 "SourceList.c"
	}
}

static void
granite_widgets_source_list_data_model_value_node_wrapper_copy_value (const GValue* src_value,
                                                                      GValue* dest_value)
{
#line 743 "../lib/Widgets/SourceList.vala"
	if (src_value->data[0].v_pointer) {
#line 743 "../lib/Widgets/SourceList.vala"
		dest_value->data[0].v_pointer = granite_widgets_source_list_data_model_node_wrapper_ref (src_value->data[0].v_pointer);
#line 7557 "SourceList.c"
	} else {
#line 743 "../lib/Widgets/SourceList.vala"
		dest_value->data[0].v_pointer = NULL;
#line 7561 "SourceList.c"
	}
}

static gpointer
granite_widgets_source_list_data_model_value_node_wrapper_peek_pointer (const GValue* value)
{
#line 743 "../lib/Widgets/SourceList.vala"
	return value->data[0].v_pointer;
#line 7570 "SourceList.c"
}

static gchar*
granite_widgets_source_list_data_model_value_node_wrapper_collect_value (GValue* value,
                                                                         guint n_collect_values,
                                                                         GTypeCValue* collect_values,
                                                                         guint collect_flags)
{
#line 743 "../lib/Widgets/SourceList.vala"
	if (collect_values[0].v_pointer) {
#line 7581 "SourceList.c"
		GraniteWidgetsSourceListDataModelNodeWrapper * object;
		object = collect_values[0].v_pointer;
#line 743 "../lib/Widgets/SourceList.vala"
		if (object->parent_instance.g_class == NULL) {
#line 743 "../lib/Widgets/SourceList.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 7588 "SourceList.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 743 "../lib/Widgets/SourceList.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 7592 "SourceList.c"
		}
#line 743 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = granite_widgets_source_list_data_model_node_wrapper_ref (object);
#line 7596 "SourceList.c"
	} else {
#line 743 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = NULL;
#line 7600 "SourceList.c"
	}
#line 743 "../lib/Widgets/SourceList.vala"
	return NULL;
#line 7604 "SourceList.c"
}

static gchar*
granite_widgets_source_list_data_model_value_node_wrapper_lcopy_value (const GValue* value,
                                                                       guint n_collect_values,
                                                                       GTypeCValue* collect_values,
                                                                       guint collect_flags)
{
	GraniteWidgetsSourceListDataModelNodeWrapper ** object_p;
	object_p = collect_values[0].v_pointer;
#line 743 "../lib/Widgets/SourceList.vala"
	if (!object_p) {
#line 743 "../lib/Widgets/SourceList.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 7619 "SourceList.c"
	}
#line 743 "../lib/Widgets/SourceList.vala"
	if (!value->data[0].v_pointer) {
#line 743 "../lib/Widgets/SourceList.vala"
		*object_p = NULL;
#line 7625 "SourceList.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 743 "../lib/Widgets/SourceList.vala"
		*object_p = value->data[0].v_pointer;
#line 7629 "SourceList.c"
	} else {
#line 743 "../lib/Widgets/SourceList.vala"
		*object_p = granite_widgets_source_list_data_model_node_wrapper_ref (value->data[0].v_pointer);
#line 7633 "SourceList.c"
	}
#line 743 "../lib/Widgets/SourceList.vala"
	return NULL;
#line 7637 "SourceList.c"
}

static GParamSpec*
granite_widgets_source_list_data_model_param_spec_node_wrapper (const gchar* name,
                                                                const gchar* nick,
                                                                const gchar* blurb,
                                                                GType object_type,
                                                                GParamFlags flags)
{
	GraniteWidgetsSourceListDataModelParamSpecNodeWrapper* spec;
#line 743 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (g_type_is_a (object_type, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER), NULL);
#line 743 "../lib/Widgets/SourceList.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 743 "../lib/Widgets/SourceList.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 743 "../lib/Widgets/SourceList.vala"
	return G_PARAM_SPEC (spec);
#line 7656 "SourceList.c"
}

static gpointer
granite_widgets_source_list_data_model_value_get_node_wrapper (const GValue* value)
{
#line 743 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER), NULL);
#line 743 "../lib/Widgets/SourceList.vala"
	return value->data[0].v_pointer;
#line 7666 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_value_set_node_wrapper (GValue* value,
                                                               gpointer v_object)
{
	GraniteWidgetsSourceListDataModelNodeWrapper * old;
#line 743 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER));
#line 743 "../lib/Widgets/SourceList.vala"
	old = value->data[0].v_pointer;
#line 743 "../lib/Widgets/SourceList.vala"
	if (v_object) {
#line 743 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER));
#line 743 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 743 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = v_object;
#line 743 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_node_wrapper_ref (value->data[0].v_pointer);
#line 7688 "SourceList.c"
	} else {
#line 743 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = NULL;
#line 7692 "SourceList.c"
	}
#line 743 "../lib/Widgets/SourceList.vala"
	if (old) {
#line 743 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_node_wrapper_unref (old);
#line 7698 "SourceList.c"
	}
}

static void
granite_widgets_source_list_data_model_value_take_node_wrapper (GValue* value,
                                                                gpointer v_object)
{
	GraniteWidgetsSourceListDataModelNodeWrapper * old;
#line 743 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER));
#line 743 "../lib/Widgets/SourceList.vala"
	old = value->data[0].v_pointer;
#line 743 "../lib/Widgets/SourceList.vala"
	if (v_object) {
#line 743 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER));
#line 743 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 743 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = v_object;
#line 7719 "SourceList.c"
	} else {
#line 743 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = NULL;
#line 7723 "SourceList.c"
	}
#line 743 "../lib/Widgets/SourceList.vala"
	if (old) {
#line 743 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_node_wrapper_unref (old);
#line 7729 "SourceList.c"
	}
}

static void
granite_widgets_source_list_data_model_node_wrapper_class_init (GraniteWidgetsSourceListDataModelNodeWrapperClass * klass,
                                                                gpointer klass_data)
{
#line 743 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_node_wrapper_parent_class = g_type_class_peek_parent (klass);
#line 743 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListDataModelNodeWrapperClass *) klass)->finalize = granite_widgets_source_list_data_model_node_wrapper_finalize;
#line 743 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListDataModelNodeWrapper_private_offset);
#line 7743 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_node_wrapper_instance_init (GraniteWidgetsSourceListDataModelNodeWrapper * self,
                                                                   gpointer klass)
{
#line 743 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_data_model_node_wrapper_get_instance_private (self);
#line 743 "../lib/Widgets/SourceList.vala"
	self->ref_count = 1;
#line 7754 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_node_wrapper_finalize (GraniteWidgetsSourceListDataModelNodeWrapper * obj)
{
	GraniteWidgetsSourceListDataModelNodeWrapper * self;
#line 743 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER, GraniteWidgetsSourceListDataModelNodeWrapper);
#line 743 "../lib/Widgets/SourceList.vala"
	g_signal_handlers_destroy (self);
#line 748 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreeRowReference_free0 (self->priv->row_reference);
#line 7767 "SourceList.c"
}

/**
         * An object that references a particular row in a model. This class is a wrapper built around
         * Gtk.TreeRowReference, and exists with the purpose of ensuring we never use invalid tree paths
         * or iters in the model, since most of these errors provoke failures due to GTK+ assertions
         * or, even worse, unexpected behavior.
         */
static GType
granite_widgets_source_list_data_model_node_wrapper_get_type_once (void)
{
	static const GTypeValueTable g_define_type_value_table = { granite_widgets_source_list_data_model_value_node_wrapper_init, granite_widgets_source_list_data_model_value_node_wrapper_free_value, granite_widgets_source_list_data_model_value_node_wrapper_copy_value, granite_widgets_source_list_data_model_value_node_wrapper_peek_pointer, "p", granite_widgets_source_list_data_model_value_node_wrapper_collect_value, "p", granite_widgets_source_list_data_model_value_node_wrapper_lcopy_value };
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListDataModelNodeWrapperClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_data_model_node_wrapper_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListDataModelNodeWrapper), 0, (GInstanceInitFunc) granite_widgets_source_list_data_model_node_wrapper_instance_init, &g_define_type_value_table };
	static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
	GType granite_widgets_source_list_data_model_node_wrapper_type_id;
	granite_widgets_source_list_data_model_node_wrapper_type_id = g_type_register_fundamental (g_type_fundamental_next (), "GraniteWidgetsSourceListDataModelNodeWrapper", &g_define_type_info, &g_define_type_fundamental_info, 0);
	GraniteWidgetsSourceListDataModelNodeWrapper_private_offset = g_type_add_instance_private (granite_widgets_source_list_data_model_node_wrapper_type_id, sizeof (GraniteWidgetsSourceListDataModelNodeWrapperPrivate));
	return granite_widgets_source_list_data_model_node_wrapper_type_id;
}

static GType
granite_widgets_source_list_data_model_node_wrapper_get_type (void)
{
	static volatile gsize granite_widgets_source_list_data_model_node_wrapper_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_data_model_node_wrapper_type_id__volatile)) {
		GType granite_widgets_source_list_data_model_node_wrapper_type_id;
		granite_widgets_source_list_data_model_node_wrapper_type_id = granite_widgets_source_list_data_model_node_wrapper_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_data_model_node_wrapper_type_id__volatile, granite_widgets_source_list_data_model_node_wrapper_type_id);
	}
	return granite_widgets_source_list_data_model_node_wrapper_type_id__volatile;
}

static gpointer
granite_widgets_source_list_data_model_node_wrapper_ref (gpointer instance)
{
	GraniteWidgetsSourceListDataModelNodeWrapper * self;
	self = instance;
#line 743 "../lib/Widgets/SourceList.vala"
	g_atomic_int_inc (&self->ref_count);
#line 743 "../lib/Widgets/SourceList.vala"
	return instance;
#line 7809 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_node_wrapper_unref (gpointer instance)
{
	GraniteWidgetsSourceListDataModelNodeWrapper * self;
	self = instance;
#line 743 "../lib/Widgets/SourceList.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 743 "../lib/Widgets/SourceList.vala"
		GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_NODE_WRAPPER_GET_CLASS (self)->finalize (self);
#line 743 "../lib/Widgets/SourceList.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 7823 "SourceList.c"
	}
}

static inline gpointer
granite_widgets_source_list_data_model_item_monitor_get_instance_private (GraniteWidgetsSourceListDataModelItemMonitor* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListDataModelItemMonitor_private_offset);
}

static void
_granite_widgets_source_list_data_model_item_monitor_on_notify_g_object_notify (GObject* _sender,
                                                                                GParamSpec* pspec,
                                                                                gpointer self)
{
#line 803 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_item_monitor_on_notify ((GraniteWidgetsSourceListDataModelItemMonitor*) self, pspec);
#line 7840 "SourceList.c"
}

static void
g_cclosure_user_marshal_VOID__OBJECT_STRING (GClosure * closure,
                                             GValue * return_value,
                                             guint n_param_values,
                                             const GValue * param_values,
                                             gpointer invocation_hint,
                                             gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__OBJECT_STRING) (gpointer data1, gpointer arg_1, const char* arg_2, gpointer data2);
	register GMarshalFunc_VOID__OBJECT_STRING callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 793 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (n_param_values == 3);
#line 793 "../lib/Widgets/SourceList.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 793 "../lib/Widgets/SourceList.vala"
		data1 = closure->data;
#line 793 "../lib/Widgets/SourceList.vala"
		data2 = param_values->data[0].v_pointer;
#line 7865 "SourceList.c"
	} else {
#line 793 "../lib/Widgets/SourceList.vala"
		data1 = param_values->data[0].v_pointer;
#line 793 "../lib/Widgets/SourceList.vala"
		data2 = closure->data;
#line 7871 "SourceList.c"
	}
#line 793 "../lib/Widgets/SourceList.vala"
	callback = (GMarshalFunc_VOID__OBJECT_STRING) (marshal_data ? marshal_data : cc->callback);
#line 793 "../lib/Widgets/SourceList.vala"
	callback (data1, g_value_get_object (param_values + 1), g_value_get_string (param_values + 2), data2);
#line 7877 "SourceList.c"
}

static GraniteWidgetsSourceListDataModelItemMonitor*
granite_widgets_source_list_data_model_item_monitor_construct (GType object_type,
                                                               GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListDataModelItemMonitor* self = NULL;
	GraniteWidgetsSourceListItem* _tmp0_;
#line 797 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, NULL);
#line 797 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListDataModelItemMonitor*) g_type_create_instance (object_type);
#line 798 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (item);
#line 798 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->item);
#line 798 "../lib/Widgets/SourceList.vala"
	self->priv->item = _tmp0_;
#line 799 "../lib/Widgets/SourceList.vala"
	g_signal_connect_after ((GObject*) item, "notify", (GCallback) _granite_widgets_source_list_data_model_item_monitor_on_notify_g_object_notify, self);
#line 797 "../lib/Widgets/SourceList.vala"
	return self;
#line 7900 "SourceList.c"
}

static GraniteWidgetsSourceListDataModelItemMonitor*
granite_widgets_source_list_data_model_item_monitor_new (GraniteWidgetsSourceListItem* item)
{
#line 797 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_data_model_item_monitor_construct (GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, item);
#line 7908 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_item_monitor_on_notify (GraniteWidgetsSourceListDataModelItemMonitor* self,
                                                               GParamSpec* prop)
{
	GraniteWidgetsSourceListItem* _tmp0_;
	const gchar* _tmp1_;
#line 806 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 806 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (prop != NULL);
#line 807 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->item;
#line 807 "../lib/Widgets/SourceList.vala"
	_tmp1_ = prop->name;
#line 807 "../lib/Widgets/SourceList.vala"
	g_signal_emit (self, granite_widgets_source_list_data_model_item_monitor_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_CHANGED_SIGNAL], 0, _tmp0_, _tmp1_);
#line 7927 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_value_item_monitor_init (GValue* value)
{
#line 793 "../lib/Widgets/SourceList.vala"
	value->data[0].v_pointer = NULL;
#line 7935 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_value_item_monitor_free_value (GValue* value)
{
#line 793 "../lib/Widgets/SourceList.vala"
	if (value->data[0].v_pointer) {
#line 793 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_item_monitor_unref (value->data[0].v_pointer);
#line 7945 "SourceList.c"
	}
}

static void
granite_widgets_source_list_data_model_value_item_monitor_copy_value (const GValue* src_value,
                                                                      GValue* dest_value)
{
#line 793 "../lib/Widgets/SourceList.vala"
	if (src_value->data[0].v_pointer) {
#line 793 "../lib/Widgets/SourceList.vala"
		dest_value->data[0].v_pointer = granite_widgets_source_list_data_model_item_monitor_ref (src_value->data[0].v_pointer);
#line 7957 "SourceList.c"
	} else {
#line 793 "../lib/Widgets/SourceList.vala"
		dest_value->data[0].v_pointer = NULL;
#line 7961 "SourceList.c"
	}
}

static gpointer
granite_widgets_source_list_data_model_value_item_monitor_peek_pointer (const GValue* value)
{
#line 793 "../lib/Widgets/SourceList.vala"
	return value->data[0].v_pointer;
#line 7970 "SourceList.c"
}

static gchar*
granite_widgets_source_list_data_model_value_item_monitor_collect_value (GValue* value,
                                                                         guint n_collect_values,
                                                                         GTypeCValue* collect_values,
                                                                         guint collect_flags)
{
#line 793 "../lib/Widgets/SourceList.vala"
	if (collect_values[0].v_pointer) {
#line 7981 "SourceList.c"
		GraniteWidgetsSourceListDataModelItemMonitor * object;
		object = collect_values[0].v_pointer;
#line 793 "../lib/Widgets/SourceList.vala"
		if (object->parent_instance.g_class == NULL) {
#line 793 "../lib/Widgets/SourceList.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 7988 "SourceList.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 793 "../lib/Widgets/SourceList.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 7992 "SourceList.c"
		}
#line 793 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = granite_widgets_source_list_data_model_item_monitor_ref (object);
#line 7996 "SourceList.c"
	} else {
#line 793 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = NULL;
#line 8000 "SourceList.c"
	}
#line 793 "../lib/Widgets/SourceList.vala"
	return NULL;
#line 8004 "SourceList.c"
}

static gchar*
granite_widgets_source_list_data_model_value_item_monitor_lcopy_value (const GValue* value,
                                                                       guint n_collect_values,
                                                                       GTypeCValue* collect_values,
                                                                       guint collect_flags)
{
	GraniteWidgetsSourceListDataModelItemMonitor ** object_p;
	object_p = collect_values[0].v_pointer;
#line 793 "../lib/Widgets/SourceList.vala"
	if (!object_p) {
#line 793 "../lib/Widgets/SourceList.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 8019 "SourceList.c"
	}
#line 793 "../lib/Widgets/SourceList.vala"
	if (!value->data[0].v_pointer) {
#line 793 "../lib/Widgets/SourceList.vala"
		*object_p = NULL;
#line 8025 "SourceList.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 793 "../lib/Widgets/SourceList.vala"
		*object_p = value->data[0].v_pointer;
#line 8029 "SourceList.c"
	} else {
#line 793 "../lib/Widgets/SourceList.vala"
		*object_p = granite_widgets_source_list_data_model_item_monitor_ref (value->data[0].v_pointer);
#line 8033 "SourceList.c"
	}
#line 793 "../lib/Widgets/SourceList.vala"
	return NULL;
#line 8037 "SourceList.c"
}

static GParamSpec*
granite_widgets_source_list_data_model_param_spec_item_monitor (const gchar* name,
                                                                const gchar* nick,
                                                                const gchar* blurb,
                                                                GType object_type,
                                                                GParamFlags flags)
{
	GraniteWidgetsSourceListDataModelParamSpecItemMonitor* spec;
#line 793 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (g_type_is_a (object_type, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR), NULL);
#line 793 "../lib/Widgets/SourceList.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 793 "../lib/Widgets/SourceList.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 793 "../lib/Widgets/SourceList.vala"
	return G_PARAM_SPEC (spec);
#line 8056 "SourceList.c"
}

static gpointer
granite_widgets_source_list_data_model_value_get_item_monitor (const GValue* value)
{
#line 793 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR), NULL);
#line 793 "../lib/Widgets/SourceList.vala"
	return value->data[0].v_pointer;
#line 8066 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_value_set_item_monitor (GValue* value,
                                                               gpointer v_object)
{
	GraniteWidgetsSourceListDataModelItemMonitor * old;
#line 793 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR));
#line 793 "../lib/Widgets/SourceList.vala"
	old = value->data[0].v_pointer;
#line 793 "../lib/Widgets/SourceList.vala"
	if (v_object) {
#line 793 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR));
#line 793 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 793 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = v_object;
#line 793 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_item_monitor_ref (value->data[0].v_pointer);
#line 8088 "SourceList.c"
	} else {
#line 793 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = NULL;
#line 8092 "SourceList.c"
	}
#line 793 "../lib/Widgets/SourceList.vala"
	if (old) {
#line 793 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_item_monitor_unref (old);
#line 8098 "SourceList.c"
	}
}

static void
granite_widgets_source_list_data_model_value_take_item_monitor (GValue* value,
                                                                gpointer v_object)
{
	GraniteWidgetsSourceListDataModelItemMonitor * old;
#line 793 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR));
#line 793 "../lib/Widgets/SourceList.vala"
	old = value->data[0].v_pointer;
#line 793 "../lib/Widgets/SourceList.vala"
	if (v_object) {
#line 793 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR));
#line 793 "../lib/Widgets/SourceList.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 793 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = v_object;
#line 8119 "SourceList.c"
	} else {
#line 793 "../lib/Widgets/SourceList.vala"
		value->data[0].v_pointer = NULL;
#line 8123 "SourceList.c"
	}
#line 793 "../lib/Widgets/SourceList.vala"
	if (old) {
#line 793 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_item_monitor_unref (old);
#line 8129 "SourceList.c"
	}
}

static void
granite_widgets_source_list_data_model_item_monitor_class_init (GraniteWidgetsSourceListDataModelItemMonitorClass * klass,
                                                                gpointer klass_data)
{
#line 793 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_item_monitor_parent_class = g_type_class_peek_parent (klass);
#line 793 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListDataModelItemMonitorClass *) klass)->finalize = granite_widgets_source_list_data_model_item_monitor_finalize;
#line 793 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListDataModelItemMonitor_private_offset);
#line 793 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_item_monitor_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_CHANGED_SIGNAL] = g_signal_new ("changed", GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__OBJECT_STRING, G_TYPE_NONE, 2, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, G_TYPE_STRING);
#line 8145 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_item_monitor_instance_init (GraniteWidgetsSourceListDataModelItemMonitor * self,
                                                                   gpointer klass)
{
#line 793 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_data_model_item_monitor_get_instance_private (self);
#line 793 "../lib/Widgets/SourceList.vala"
	self->ref_count = 1;
#line 8156 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_item_monitor_finalize (GraniteWidgetsSourceListDataModelItemMonitor * obj)
{
	GraniteWidgetsSourceListDataModelItemMonitor * self;
	GraniteWidgetsSourceListItem* _tmp0_;
	guint _tmp1_;
#line 793 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, GraniteWidgetsSourceListDataModelItemMonitor);
#line 793 "../lib/Widgets/SourceList.vala"
	g_signal_handlers_destroy (self);
#line 803 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->item;
#line 803 "../lib/Widgets/SourceList.vala"
	g_signal_parse_name ("notify", G_TYPE_OBJECT, &_tmp1_, NULL, FALSE);
#line 803 "../lib/Widgets/SourceList.vala"
	g_signal_handlers_disconnect_matched ((GObject*) _tmp0_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp1_, 0, NULL, (GCallback) _granite_widgets_source_list_data_model_item_monitor_on_notify_g_object_notify, self);
#line 795 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->item);
#line 8177 "SourceList.c"
}

/**
         * Helper object used to monitor item property changes.
         */
static GType
granite_widgets_source_list_data_model_item_monitor_get_type_once (void)
{
	static const GTypeValueTable g_define_type_value_table = { granite_widgets_source_list_data_model_value_item_monitor_init, granite_widgets_source_list_data_model_value_item_monitor_free_value, granite_widgets_source_list_data_model_value_item_monitor_copy_value, granite_widgets_source_list_data_model_value_item_monitor_peek_pointer, "p", granite_widgets_source_list_data_model_value_item_monitor_collect_value, "p", granite_widgets_source_list_data_model_value_item_monitor_lcopy_value };
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListDataModelItemMonitorClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_data_model_item_monitor_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListDataModelItemMonitor), 0, (GInstanceInitFunc) granite_widgets_source_list_data_model_item_monitor_instance_init, &g_define_type_value_table };
	static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
	GType granite_widgets_source_list_data_model_item_monitor_type_id;
	granite_widgets_source_list_data_model_item_monitor_type_id = g_type_register_fundamental (g_type_fundamental_next (), "GraniteWidgetsSourceListDataModelItemMonitor", &g_define_type_info, &g_define_type_fundamental_info, 0);
	GraniteWidgetsSourceListDataModelItemMonitor_private_offset = g_type_add_instance_private (granite_widgets_source_list_data_model_item_monitor_type_id, sizeof (GraniteWidgetsSourceListDataModelItemMonitorPrivate));
	return granite_widgets_source_list_data_model_item_monitor_type_id;
}

static GType
granite_widgets_source_list_data_model_item_monitor_get_type (void)
{
	static volatile gsize granite_widgets_source_list_data_model_item_monitor_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_data_model_item_monitor_type_id__volatile)) {
		GType granite_widgets_source_list_data_model_item_monitor_type_id;
		granite_widgets_source_list_data_model_item_monitor_type_id = granite_widgets_source_list_data_model_item_monitor_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_data_model_item_monitor_type_id__volatile, granite_widgets_source_list_data_model_item_monitor_type_id);
	}
	return granite_widgets_source_list_data_model_item_monitor_type_id__volatile;
}

static gpointer
granite_widgets_source_list_data_model_item_monitor_ref (gpointer instance)
{
	GraniteWidgetsSourceListDataModelItemMonitor * self;
	self = instance;
#line 793 "../lib/Widgets/SourceList.vala"
	g_atomic_int_inc (&self->ref_count);
#line 793 "../lib/Widgets/SourceList.vala"
	return instance;
#line 8216 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_item_monitor_unref (gpointer instance)
{
	GraniteWidgetsSourceListDataModelItemMonitor * self;
	self = instance;
#line 793 "../lib/Widgets/SourceList.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 793 "../lib/Widgets/SourceList.vala"
		GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_MONITOR_GET_CLASS (self)->finalize (self);
#line 793 "../lib/Widgets/SourceList.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 8230 "SourceList.c"
	}
}

static gint
_granite_widgets_source_list_data_model_child_model_sort_func_gtk_tree_iter_compare_func (GtkTreeModel* model,
                                                                                          GtkTreeIter* a,
                                                                                          GtkTreeIter* b,
                                                                                          gpointer self)
{
	gint result;
	result = granite_widgets_source_list_data_model_child_model_sort_func ((GraniteWidgetsSourceListDataModel*) self, model, a, b);
#line 877 "../lib/Widgets/SourceList.vala"
	return result;
#line 8244 "SourceList.c"
}

static gboolean
_granite_widgets_source_list_data_model_filter_visible_func_gtk_tree_model_filter_visible_func (GtkTreeModel* model,
                                                                                                GtkTreeIter* iter,
                                                                                                gpointer self)
{
	gboolean result;
	result = granite_widgets_source_list_data_model_filter_visible_func ((GraniteWidgetsSourceListDataModel*) self, model, iter);
#line 880 "../lib/Widgets/SourceList.vala"
	return result;
#line 8256 "SourceList.c"
}

static GObject *
granite_widgets_source_list_data_model_constructor (GType type,
                                                    guint n_construct_properties,
                                                    GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsSourceListDataModel * self;
	GtkTreeStore* _tmp0_;
	GtkTreeStore* _tmp1_;
	GtkTreeStore* _tmp2_;
#line 872 "../lib/Widgets/SourceList.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_source_list_data_model_parent_class);
#line 872 "../lib/Widgets/SourceList.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 872 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModel);
#line 873 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_tree_store_new ((gint) GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_N_COLUMNS, granite_widgets_source_list_data_model_column_type (GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_COLUMN_ITEM));
#line 873 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->child_tree);
#line 873 "../lib/Widgets/SourceList.vala"
	self->priv->child_tree = _tmp0_;
#line 874 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->child_tree;
#line 874 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkTreeModelFilter*) self, "child-model", (GtkTreeModel*) _tmp1_, NULL);
#line 875 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkTreeModelFilter*) self, "virtual-root", NULL, NULL);
#line 877 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->child_tree;
#line 877 "../lib/Widgets/SourceList.vala"
	gtk_tree_sortable_set_default_sort_func ((GtkTreeSortable*) _tmp2_, _granite_widgets_source_list_data_model_child_model_sort_func_gtk_tree_iter_compare_func, g_object_ref (self), g_object_unref);
#line 878 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_resort (self);
#line 880 "../lib/Widgets/SourceList.vala"
	gtk_tree_model_filter_set_visible_func ((GtkTreeModelFilter*) self, _granite_widgets_source_list_data_model_filter_visible_func_gtk_tree_model_filter_visible_func, g_object_ref (self), g_object_unref);
#line 872 "../lib/Widgets/SourceList.vala"
	return obj;
#line 8298 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_class_init (GraniteWidgetsSourceListDataModelClass * klass,
                                                   gpointer klass_data)
{
#line 735 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_parent_class = g_type_class_peek_parent (klass);
#line 735 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListDataModel_private_offset);
#line 735 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_source_list_data_model_get_property;
#line 735 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_source_list_data_model_set_property;
#line 735 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_source_list_data_model_constructor;
#line 735 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_source_list_data_model_finalize;
#line 8317 "SourceList.c"
	/**
	         * Root item.
	         *
	         * This item is not actually part of the model. It's only used as a proxy
	         * for adding and removing items.
	         */
#line 735 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ROOT_PROPERTY, granite_widgets_source_list_data_model_properties[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ROOT_PROPERTY] = g_param_spec_object ("root", "root", "root", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 735 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_signals[GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ITEM_UPDATED_SIGNAL] = g_signal_new ("item-updated", GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
#line 8328 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_gtk_tree_drag_source_interface_init (GtkTreeDragSourceIface * iface,
                                                                            gpointer iface_data)
{
#line 735 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_gtk_tree_drag_source_parent_iface = g_type_interface_peek_parent (iface);
#line 735 "../lib/Widgets/SourceList.vala"
	iface->drag_data_get = (gboolean (*) (GtkTreeDragSource*, GtkTreePath*, GtkSelectionData*)) granite_widgets_source_list_data_model_real_drag_data_get;
#line 735 "../lib/Widgets/SourceList.vala"
	iface->row_draggable = (gboolean (*) (GtkTreeDragSource*, GtkTreePath*)) granite_widgets_source_list_data_model_real_row_draggable;
#line 8341 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_gtk_tree_drag_dest_interface_init (GtkTreeDragDestIface * iface,
                                                                          gpointer iface_data)
{
#line 735 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_data_model_gtk_tree_drag_dest_parent_iface = g_type_interface_peek_parent (iface);
#line 735 "../lib/Widgets/SourceList.vala"
	iface->drag_data_received = (gboolean (*) (GtkTreeDragDest*, GtkTreePath*, GtkSelectionData*)) granite_widgets_source_list_data_model_real_drag_data_received;
#line 735 "../lib/Widgets/SourceList.vala"
	iface->row_drop_possible = (gboolean (*) (GtkTreeDragDest*, GtkTreePath*, GtkSelectionData*)) granite_widgets_source_list_data_model_real_row_drop_possible;
#line 8354 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_instance_init (GraniteWidgetsSourceListDataModel * self,
                                                      gpointer klass)
{
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp1_;
#line 735 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_data_model_get_instance_private (self);
#line 861 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gee_hash_map_new (GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_NODE_WRAPPER, (GBoxedCopyFunc) granite_widgets_source_list_data_model_node_wrapper_ref, (GDestroyNotify) granite_widgets_source_list_data_model_node_wrapper_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 861 "../lib/Widgets/SourceList.vala"
	self->priv->items = _tmp0_;
#line 863 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gee_hash_map_new (GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_TYPE_ITEM_MONITOR, (GBoxedCopyFunc) granite_widgets_source_list_data_model_item_monitor_ref, (GDestroyNotify) granite_widgets_source_list_data_model_item_monitor_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 863 "../lib/Widgets/SourceList.vala"
	self->priv->monitors = _tmp1_;
#line 8373 "SourceList.c"
}

static void
granite_widgets_source_list_data_model_finalize (GObject * obj)
{
	GraniteWidgetsSourceListDataModel * self;
#line 735 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModel);
#line 833 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->_root);
#line 861 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->items);
#line 863 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->monitors);
#line 865 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->child_tree);
#line 735 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (granite_widgets_source_list_data_model_parent_class)->finalize (obj);
#line 8392 "SourceList.c"
}

/**
     * The model backing the SourceList tree.
     *
     * It monitors item property changes, and handles children additions and removals. It also controls
     * the visibility of the items based on their "visible" property, and on their number of children,
     * if they happen to be categories. Its main purpose is to provide an easy and practical interface
     * for sorting, adding, removing and updating items, eliminating the need of repeatedly dealing with
     * the Gtk.TreeModel API directly.
     */
static GType
granite_widgets_source_list_data_model_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListDataModelClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_data_model_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListDataModel), 0, (GInstanceInitFunc) granite_widgets_source_list_data_model_instance_init, NULL };
	static const GInterfaceInfo gtk_tree_drag_source_info = { (GInterfaceInitFunc) granite_widgets_source_list_data_model_gtk_tree_drag_source_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
	static const GInterfaceInfo gtk_tree_drag_dest_info = { (GInterfaceInitFunc) granite_widgets_source_list_data_model_gtk_tree_drag_dest_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
	GType granite_widgets_source_list_data_model_type_id;
	granite_widgets_source_list_data_model_type_id = g_type_register_static (gtk_tree_model_filter_get_type (), "GraniteWidgetsSourceListDataModel", &g_define_type_info, 0);
	g_type_add_interface_static (granite_widgets_source_list_data_model_type_id, gtk_tree_drag_source_get_type (), &gtk_tree_drag_source_info);
	g_type_add_interface_static (granite_widgets_source_list_data_model_type_id, gtk_tree_drag_dest_get_type (), &gtk_tree_drag_dest_info);
	GraniteWidgetsSourceListDataModel_private_offset = g_type_add_instance_private (granite_widgets_source_list_data_model_type_id, sizeof (GraniteWidgetsSourceListDataModelPrivate));
	return granite_widgets_source_list_data_model_type_id;
}

static GType
granite_widgets_source_list_data_model_get_type (void)
{
	static volatile gsize granite_widgets_source_list_data_model_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_data_model_type_id__volatile)) {
		GType granite_widgets_source_list_data_model_type_id;
		granite_widgets_source_list_data_model_type_id = granite_widgets_source_list_data_model_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_data_model_type_id__volatile, granite_widgets_source_list_data_model_type_id);
	}
	return granite_widgets_source_list_data_model_type_id__volatile;
}

static void
_vala_granite_widgets_source_list_data_model_get_property (GObject * object,
                                                           guint property_id,
                                                           GValue * value,
                                                           GParamSpec * pspec)
{
	GraniteWidgetsSourceListDataModel * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModel);
#line 735 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 735 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ROOT_PROPERTY:
#line 735 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_data_model_get_root (self));
#line 735 "../lib/Widgets/SourceList.vala"
		break;
#line 8446 "SourceList.c"
		default:
#line 735 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 735 "../lib/Widgets/SourceList.vala"
		break;
#line 8452 "SourceList.c"
	}
}

static void
_vala_granite_widgets_source_list_data_model_set_property (GObject * object,
                                                           guint property_id,
                                                           const GValue * value,
                                                           GParamSpec * pspec)
{
	GraniteWidgetsSourceListDataModel * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, GraniteWidgetsSourceListDataModel);
#line 735 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 735 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_DATA_MODEL_ROOT_PROPERTY:
#line 735 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_data_model_set_root (self, g_value_get_object (value));
#line 735 "../lib/Widgets/SourceList.vala"
		break;
#line 8472 "SourceList.c"
		default:
#line 735 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 735 "../lib/Widgets/SourceList.vala"
		break;
#line 8478 "SourceList.c"
	}
}

static GraniteWidgetsSourceListCellRendererIcon*
granite_widgets_source_list_cell_renderer_icon_construct (GType object_type)
{
	GraniteWidgetsSourceListCellRendererIcon * self = NULL;
#line 1486 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererIcon*) g_object_new (object_type, NULL);
#line 1486 "../lib/Widgets/SourceList.vala"
	return self;
#line 8490 "SourceList.c"
}

static GraniteWidgetsSourceListCellRendererIcon*
granite_widgets_source_list_cell_renderer_icon_new (void)
{
#line 1486 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_cell_renderer_icon_construct (GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON);
#line 8498 "SourceList.c"
}

static gboolean
granite_widgets_source_list_cell_renderer_icon_real_activate (GtkCellRenderer* base,
                                                              GdkEvent* event,
                                                              GtkWidget* widget,
                                                              const gchar* path,
                                                              GdkRectangle* background_area,
                                                              GdkRectangle* cell_area,
                                                              GtkCellRendererState flags)
{
	GraniteWidgetsSourceListCellRendererIcon * self;
	gboolean result = FALSE;
#line 1495 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererIcon*) base;
#line 1495 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 1495 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (widget != NULL, FALSE);
#line 1495 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 1495 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (background_area != NULL, FALSE);
#line 1495 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (cell_area != NULL, FALSE);
#line 1503 "../lib/Widgets/SourceList.vala"
	g_signal_emit (self, granite_widgets_source_list_cell_renderer_icon_signals[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_ACTIVATED_SIGNAL], 0, path);
#line 1504 "../lib/Widgets/SourceList.vala"
	result = TRUE;
#line 1504 "../lib/Widgets/SourceList.vala"
	return result;
#line 8530 "SourceList.c"
}

static GObject *
granite_widgets_source_list_cell_renderer_icon_constructor (GType type,
                                                            guint n_construct_properties,
                                                            GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsSourceListCellRendererIcon * self;
#line 1490 "../lib/Widgets/SourceList.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_source_list_cell_renderer_icon_parent_class);
#line 1490 "../lib/Widgets/SourceList.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 1490 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON, GraniteWidgetsSourceListCellRendererIcon);
#line 1491 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) self, "mode", GTK_CELL_RENDERER_MODE_ACTIVATABLE, NULL);
#line 1492 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRendererPixbuf*) self, "stock-size", (guint) GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_ICON_SIZE, NULL);
#line 1490 "../lib/Widgets/SourceList.vala"
	return obj;
#line 8553 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_icon_class_init (GraniteWidgetsSourceListCellRendererIconClass * klass,
                                                           gpointer klass_data)
{
#line 1481 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_cell_renderer_icon_parent_class = g_type_class_peek_parent (klass);
#line 1481 "../lib/Widgets/SourceList.vala"
	((GtkCellRendererClass *) klass)->activate = (gboolean (*) (GtkCellRenderer*, GdkEvent*, GtkWidget*, const gchar*, GdkRectangle*, GdkRectangle*, GtkCellRendererState)) granite_widgets_source_list_cell_renderer_icon_real_activate;
#line 1481 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_source_list_cell_renderer_icon_constructor;
#line 1481 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_cell_renderer_icon_signals[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_ICON_ACTIVATED_SIGNAL] = g_signal_new ("activated", GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_ICON, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__STRING, G_TYPE_NONE, 1, G_TYPE_STRING);
#line 8568 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_icon_instance_init (GraniteWidgetsSourceListCellRendererIcon * self,
                                                              gpointer klass)
{
}

/**
     * Class responsible for rendering Item.icon and Item.activatable. It also
     * notifies about clicks through the activated() signal.
     */
static GType
granite_widgets_source_list_cell_renderer_icon_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListCellRendererIconClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_cell_renderer_icon_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListCellRendererIcon), 0, (GInstanceInitFunc) granite_widgets_source_list_cell_renderer_icon_instance_init, NULL };
	GType granite_widgets_source_list_cell_renderer_icon_type_id;
	granite_widgets_source_list_cell_renderer_icon_type_id = g_type_register_static (gtk_cell_renderer_pixbuf_get_type (), "GraniteWidgetsSourceListCellRendererIcon", &g_define_type_info, 0);
	return granite_widgets_source_list_cell_renderer_icon_type_id;
}

static GType
granite_widgets_source_list_cell_renderer_icon_get_type (void)
{
	static volatile gsize granite_widgets_source_list_cell_renderer_icon_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_cell_renderer_icon_type_id__volatile)) {
		GType granite_widgets_source_list_cell_renderer_icon_type_id;
		granite_widgets_source_list_cell_renderer_icon_type_id = granite_widgets_source_list_cell_renderer_icon_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_cell_renderer_icon_type_id__volatile, granite_widgets_source_list_cell_renderer_icon_type_id);
	}
	return granite_widgets_source_list_cell_renderer_icon_type_id__volatile;
}

static inline gpointer
granite_widgets_source_list_cell_renderer_spacer_get_instance_private (GraniteWidgetsSourceListCellRendererSpacer* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListCellRendererSpacer_private_offset);
}

static gint
granite_widgets_source_list_cell_renderer_spacer_get_level (GraniteWidgetsSourceListCellRendererSpacer* self)
{
	gint result;
#line 1517 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 1517 "../lib/Widgets/SourceList.vala"
	result = self->priv->_level;
#line 1517 "../lib/Widgets/SourceList.vala"
	return result;
#line 8618 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_spacer_set_level (GraniteWidgetsSourceListCellRendererSpacer* self,
                                                            gint value)
{
	gint old_value;
#line 1517 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1517 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_cell_renderer_spacer_get_level (self);
#line 1517 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 1517 "../lib/Widgets/SourceList.vala"
		self->priv->_level = value;
#line 1517 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_cell_renderer_spacer_properties[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_LEVEL_PROPERTY]);
#line 8636 "SourceList.c"
	}
}

static GtkSizeRequestMode
granite_widgets_source_list_cell_renderer_spacer_real_get_request_mode (GtkCellRenderer* base)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
	GtkSizeRequestMode result = 0;
#line 1519 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererSpacer*) base;
#line 1520 "../lib/Widgets/SourceList.vala"
	result = GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH;
#line 1520 "../lib/Widgets/SourceList.vala"
	return result;
#line 8651 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_spacer_real_get_preferred_width (GtkCellRenderer* base,
                                                                           GtkWidget* widget,
                                                                           gint* min_size,
                                                                           gint* natural_size)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
	gint _vala_min_size = 0;
	gint _vala_natural_size = 0;
	guint _tmp0_;
	guint _tmp1_;
#line 1523 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererSpacer*) base;
#line 1523 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (widget != NULL);
#line 1524 "../lib/Widgets/SourceList.vala"
	g_object_get ((GtkCellRenderer*) self, "xpad", &_tmp0_, NULL);
#line 1524 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 1524 "../lib/Widgets/SourceList.vala"
	_vala_natural_size = 2 * ((gint) _tmp1_);
#line 1524 "../lib/Widgets/SourceList.vala"
	_vala_min_size = _vala_natural_size;
#line 1523 "../lib/Widgets/SourceList.vala"
	if (min_size) {
#line 1523 "../lib/Widgets/SourceList.vala"
		*min_size = _vala_min_size;
#line 8681 "SourceList.c"
	}
#line 1523 "../lib/Widgets/SourceList.vala"
	if (natural_size) {
#line 1523 "../lib/Widgets/SourceList.vala"
		*natural_size = _vala_natural_size;
#line 8687 "SourceList.c"
	}
}

static void
granite_widgets_source_list_cell_renderer_spacer_real_get_preferred_height_for_width (GtkCellRenderer* base,
                                                                                      GtkWidget* widget,
                                                                                      gint width,
                                                                                      gint* min_height,
                                                                                      gint* natural_height)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
	gint _vala_min_height = 0;
	gint _vala_natural_height = 0;
	guint _tmp0_;
	guint _tmp1_;
#line 1527 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererSpacer*) base;
#line 1527 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (widget != NULL);
#line 1533 "../lib/Widgets/SourceList.vala"
	g_object_get ((GtkCellRenderer*) self, "ypad", &_tmp0_, NULL);
#line 1533 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 1533 "../lib/Widgets/SourceList.vala"
	_vala_natural_height = 2 * ((gint) _tmp1_);
#line 1533 "../lib/Widgets/SourceList.vala"
	_vala_min_height = _vala_natural_height;
#line 1527 "../lib/Widgets/SourceList.vala"
	if (min_height) {
#line 1527 "../lib/Widgets/SourceList.vala"
		*min_height = _vala_min_height;
#line 8719 "SourceList.c"
	}
#line 1527 "../lib/Widgets/SourceList.vala"
	if (natural_height) {
#line 1527 "../lib/Widgets/SourceList.vala"
		*natural_height = _vala_natural_height;
#line 8725 "SourceList.c"
	}
}

static void
granite_widgets_source_list_cell_renderer_spacer_real_render (GtkCellRenderer* base,
                                                              cairo_t* context,
                                                              GtkWidget* widget,
                                                              GdkRectangle* bg_area,
                                                              GdkRectangle* cell_area,
                                                              GtkCellRendererState flags)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
#line 1536 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererSpacer*) base;
#line 1536 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (context != NULL);
#line 1536 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (widget != NULL);
#line 1536 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (bg_area != NULL);
#line 1536 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (cell_area != NULL);
#line 8748 "SourceList.c"
}

static GraniteWidgetsSourceListCellRendererSpacer*
granite_widgets_source_list_cell_renderer_spacer_construct (GType object_type)
{
	GraniteWidgetsSourceListCellRendererSpacer * self = NULL;
#line 1513 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListCellRendererSpacer*) g_object_new (object_type, NULL);
#line 1513 "../lib/Widgets/SourceList.vala"
	return self;
#line 8759 "SourceList.c"
}

static GraniteWidgetsSourceListCellRendererSpacer*
granite_widgets_source_list_cell_renderer_spacer_new (void)
{
#line 1513 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_cell_renderer_spacer_construct (GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER);
#line 8767 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_spacer_class_init (GraniteWidgetsSourceListCellRendererSpacerClass * klass,
                                                             gpointer klass_data)
{
#line 1513 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_cell_renderer_spacer_parent_class = g_type_class_peek_parent (klass);
#line 1513 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListCellRendererSpacer_private_offset);
#line 1513 "../lib/Widgets/SourceList.vala"
	((GtkCellRendererClass *) klass)->get_request_mode = (GtkSizeRequestMode (*) (GtkCellRenderer*)) granite_widgets_source_list_cell_renderer_spacer_real_get_request_mode;
#line 1513 "../lib/Widgets/SourceList.vala"
	((GtkCellRendererClass *) klass)->get_preferred_width = (void (*) (GtkCellRenderer*, GtkWidget*, gint*, gint*)) granite_widgets_source_list_cell_renderer_spacer_real_get_preferred_width;
#line 1513 "../lib/Widgets/SourceList.vala"
	((GtkCellRendererClass *) klass)->get_preferred_height_for_width = (void (*) (GtkCellRenderer*, GtkWidget*, gint, gint*, gint*)) granite_widgets_source_list_cell_renderer_spacer_real_get_preferred_height_for_width;
#line 1513 "../lib/Widgets/SourceList.vala"
	((GtkCellRendererClass *) klass)->render = (void (*) (GtkCellRenderer*, cairo_t*, GtkWidget*, GdkRectangle*, GdkRectangle*, GtkCellRendererState)) granite_widgets_source_list_cell_renderer_spacer_real_render;
#line 1513 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_source_list_cell_renderer_spacer_get_property;
#line 1513 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_source_list_cell_renderer_spacer_set_property;
#line 1513 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_source_list_cell_renderer_spacer_finalize;
#line 8792 "SourceList.c"
	/**
	         * Indentation level represented by this cell renderer
	         */
#line 1513 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_LEVEL_PROPERTY, granite_widgets_source_list_cell_renderer_spacer_properties[GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_LEVEL_PROPERTY] = g_param_spec_int ("level", "level", "level", G_MININT, G_MAXINT, -1, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 8798 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_spacer_instance_init (GraniteWidgetsSourceListCellRendererSpacer * self,
                                                                gpointer klass)
{
#line 1513 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_cell_renderer_spacer_get_instance_private (self);
#line 1517 "../lib/Widgets/SourceList.vala"
	self->priv->_level = -1;
#line 8809 "SourceList.c"
}

static void
granite_widgets_source_list_cell_renderer_spacer_finalize (GObject * obj)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
#line 1513 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, GraniteWidgetsSourceListCellRendererSpacer);
#line 1513 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (granite_widgets_source_list_cell_renderer_spacer_parent_class)->finalize (obj);
#line 8820 "SourceList.c"
}

/**
     * A cell renderer that only adds space.
     */
static GType
granite_widgets_source_list_cell_renderer_spacer_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListCellRendererSpacerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_cell_renderer_spacer_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListCellRendererSpacer), 0, (GInstanceInitFunc) granite_widgets_source_list_cell_renderer_spacer_instance_init, NULL };
	GType granite_widgets_source_list_cell_renderer_spacer_type_id;
	granite_widgets_source_list_cell_renderer_spacer_type_id = g_type_register_static (gtk_cell_renderer_get_type (), "GraniteWidgetsSourceListCellRendererSpacer", &g_define_type_info, 0);
	GraniteWidgetsSourceListCellRendererSpacer_private_offset = g_type_add_instance_private (granite_widgets_source_list_cell_renderer_spacer_type_id, sizeof (GraniteWidgetsSourceListCellRendererSpacerPrivate));
	return granite_widgets_source_list_cell_renderer_spacer_type_id;
}

static GType
granite_widgets_source_list_cell_renderer_spacer_get_type (void)
{
	static volatile gsize granite_widgets_source_list_cell_renderer_spacer_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_cell_renderer_spacer_type_id__volatile)) {
		GType granite_widgets_source_list_cell_renderer_spacer_type_id;
		granite_widgets_source_list_cell_renderer_spacer_type_id = granite_widgets_source_list_cell_renderer_spacer_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_cell_renderer_spacer_type_id__volatile, granite_widgets_source_list_cell_renderer_spacer_type_id);
	}
	return granite_widgets_source_list_cell_renderer_spacer_type_id__volatile;
}

static void
_vala_granite_widgets_source_list_cell_renderer_spacer_get_property (GObject * object,
                                                                     guint property_id,
                                                                     GValue * value,
                                                                     GParamSpec * pspec)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, GraniteWidgetsSourceListCellRendererSpacer);
#line 1513 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 1513 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_LEVEL_PROPERTY:
#line 1513 "../lib/Widgets/SourceList.vala"
		g_value_set_int (value, granite_widgets_source_list_cell_renderer_spacer_get_level (self));
#line 1513 "../lib/Widgets/SourceList.vala"
		break;
#line 8864 "SourceList.c"
		default:
#line 1513 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1513 "../lib/Widgets/SourceList.vala"
		break;
#line 8870 "SourceList.c"
	}
}

static void
_vala_granite_widgets_source_list_cell_renderer_spacer_set_property (GObject * object,
                                                                     guint property_id,
                                                                     const GValue * value,
                                                                     GParamSpec * pspec)
{
	GraniteWidgetsSourceListCellRendererSpacer * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, GraniteWidgetsSourceListCellRendererSpacer);
#line 1513 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 1513 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_CELL_RENDERER_SPACER_LEVEL_PROPERTY:
#line 1513 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_cell_renderer_spacer_set_level (self, g_value_get_int (value));
#line 1513 "../lib/Widgets/SourceList.vala"
		break;
#line 8890 "SourceList.c"
		default:
#line 1513 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1513 "../lib/Widgets/SourceList.vala"
		break;
#line 8896 "SourceList.c"
	}
}

static inline gpointer
granite_widgets_source_list_tree_get_instance_private (GraniteWidgetsSourceListTree* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteWidgetsSourceListTree_private_offset);
}

static GType
granite_widgets_source_list_tree_column_get_type_once (void)
{
	static const GEnumValue values[] = {{GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM, "GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM", "item"}, {GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_N_COLS, "GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_N_COLS", "n-cols"}, {0, NULL, NULL}};
	GType granite_widgets_source_list_tree_column_type_id;
	granite_widgets_source_list_tree_column_type_id = g_enum_register_static ("GraniteWidgetsSourceListTreeColumn", values);
	return granite_widgets_source_list_tree_column_type_id;
}

static GType
granite_widgets_source_list_tree_column_get_type (void)
{
	static volatile gsize granite_widgets_source_list_tree_column_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_tree_column_type_id__volatile)) {
		GType granite_widgets_source_list_tree_column_type_id;
		granite_widgets_source_list_tree_column_type_id = granite_widgets_source_list_tree_column_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_tree_column_type_id__volatile, granite_widgets_source_list_tree_column_type_id);
	}
	return granite_widgets_source_list_tree_column_type_id__volatile;
}

static GraniteWidgetsSourceListDataModel*
granite_widgets_source_list_tree_get_data_model (GraniteWidgetsSourceListTree* self)
{
	GraniteWidgetsSourceListDataModel* result;
	GraniteWidgetsSourceListDataModel* _tmp0_;
#line 1556 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1556 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 1556 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 1556 "../lib/Widgets/SourceList.vala"
	return result;
#line 8940 "SourceList.c"
}

static void
granite_widgets_source_list_tree_set_data_model (GraniteWidgetsSourceListTree* self,
                                                 GraniteWidgetsSourceListDataModel* value)
{
	GraniteWidgetsSourceListDataModel* old_value;
#line 1556 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1556 "../lib/Widgets/SourceList.vala"
	old_value = granite_widgets_source_list_tree_get_data_model (self);
#line 1556 "../lib/Widgets/SourceList.vala"
	if (old_value != value) {
#line 8954 "SourceList.c"
		GraniteWidgetsSourceListDataModel* _tmp0_;
#line 1556 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 1556 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->_data_model);
#line 1556 "../lib/Widgets/SourceList.vala"
		self->priv->_data_model = _tmp0_;
#line 1556 "../lib/Widgets/SourceList.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_DATA_MODEL_PROPERTY]);
#line 8964 "SourceList.c"
	}
}

static GraniteWidgetsSourceListItem*
granite_widgets_source_list_tree_get_selected_item (GraniteWidgetsSourceListTree* self)
{
	GraniteWidgetsSourceListItem* result;
	GraniteWidgetsSourceListItem* _tmp0_;
#line 1561 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1561 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->selected;
#line 1561 "../lib/Widgets/SourceList.vala"
	result = _tmp0_;
#line 1561 "../lib/Widgets/SourceList.vala"
	return result;
#line 8981 "SourceList.c"
}

static void
granite_widgets_source_list_tree_set_selected_item (GraniteWidgetsSourceListTree* self,
                                                    GraniteWidgetsSourceListItem* value)
{
#line 1562 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1562 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_set_selected (self, value, TRUE);
#line 1562 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_SELECTED_ITEM_PROPERTY]);
#line 8994 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_get_editing (GraniteWidgetsSourceListTree* self)
{
	gboolean result;
	GtkCellRendererText* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 1566 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1566 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->text_cell;
#line 1566 "../lib/Widgets/SourceList.vala"
	g_object_get ((GtkCellRenderer*) _tmp0_, "editing", &_tmp1_, NULL);
#line 1566 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 1566 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 1566 "../lib/Widgets/SourceList.vala"
	return result;
#line 9016 "SourceList.c"
}

static PangoEllipsizeMode
granite_widgets_source_list_tree_get_ellipsize_mode (GraniteWidgetsSourceListTree* self)
{
	PangoEllipsizeMode result;
	GtkCellRendererText* _tmp0_;
	PangoEllipsizeMode _tmp1_;
	PangoEllipsizeMode _tmp2_;
#line 1570 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 1570 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->text_cell;
#line 1570 "../lib/Widgets/SourceList.vala"
	g_object_get (_tmp0_, "ellipsize", &_tmp1_, NULL);
#line 1570 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 1570 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 1570 "../lib/Widgets/SourceList.vala"
	return result;
#line 9038 "SourceList.c"
}

static void
granite_widgets_source_list_tree_set_ellipsize_mode (GraniteWidgetsSourceListTree* self,
                                                     PangoEllipsizeMode value)
{
	GtkCellRendererText* _tmp0_;
#line 1571 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1571 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->text_cell;
#line 1571 "../lib/Widgets/SourceList.vala"
	g_object_set (_tmp0_, "ellipsize", value, NULL);
#line 1571 "../lib/Widgets/SourceList.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_ELLIPSIZE_MODE_PROPERTY]);
#line 9054 "SourceList.c"
}

static GraniteWidgetsSourceListTree*
granite_widgets_source_list_tree_construct (GType object_type,
                                            GraniteWidgetsSourceListDataModel* data_model)
{
	GraniteWidgetsSourceListTree * self = NULL;
#line 1637 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (data_model != NULL, NULL);
#line 1638 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) g_object_new (object_type, "data-model", data_model, NULL);
#line 1637 "../lib/Widgets/SourceList.vala"
	return self;
#line 9068 "SourceList.c"
}

static GraniteWidgetsSourceListTree*
granite_widgets_source_list_tree_new (GraniteWidgetsSourceListDataModel* data_model)
{
#line 1637 "../lib/Widgets/SourceList.vala"
	return granite_widgets_source_list_tree_construct (GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, data_model);
#line 9076 "SourceList.c"
}

static gpointer
_gtk_target_list_ref0 (gpointer self)
{
#line 1786 "../lib/Widgets/SourceList.vala"
	return self ? gtk_target_list_ref (self) : NULL;
#line 9084 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_real_drag_motion (GtkWidget* base,
                                                   GdkDragContext* context,
                                                   gint x,
                                                   gint y,
                                                   guint time)
{
	GraniteWidgetsSourceListTree * self;
	GtkTreePath* suggested_path = NULL;
	GtkTreePath* current_path = NULL;
	GtkTreeViewDropPosition suggested_pos = 0;
	GtkTreeViewDropPosition current_pos = 0;
	GtkTreePath* _tmp0_ = NULL;
	GtkTreeViewDropPosition _tmp1_ = 0;
	gboolean _tmp2_;
	gboolean result = FALSE;
#line 1744 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 1744 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (context != NULL, FALSE);
#line 1746 "../lib/Widgets/SourceList.vala"
	if (!GTK_WIDGET_CLASS (granite_widgets_source_list_tree_parent_class)->drag_motion ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_view_get_type (), GtkTreeView), context, x, y, time)) {
#line 1747 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1747 "../lib/Widgets/SourceList.vala"
		return result;
#line 9113 "SourceList.c"
	}
#line 1752 "../lib/Widgets/SourceList.vala"
	_tmp2_ = gtk_tree_view_get_dest_row_at_pos ((GtkTreeView*) self, x, y, &_tmp0_, &_tmp1_);
#line 1752 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (suggested_path);
#line 1752 "../lib/Widgets/SourceList.vala"
	suggested_path = _tmp0_;
#line 1752 "../lib/Widgets/SourceList.vala"
	suggested_pos = _tmp1_;
#line 1752 "../lib/Widgets/SourceList.vala"
	if (_tmp2_) {
#line 9125 "SourceList.c"
		GtkTreePath* _tmp3_ = NULL;
		GtkTreeViewDropPosition _tmp4_ = 0;
		gboolean _tmp5_ = FALSE;
		GtkTreePath* _tmp6_;
#line 1756 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_get_drag_dest_row ((GtkTreeView*) self, &_tmp3_, &_tmp4_);
#line 1756 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (current_path);
#line 1756 "../lib/Widgets/SourceList.vala"
		current_path = _tmp3_;
#line 1756 "../lib/Widgets/SourceList.vala"
		current_pos = _tmp4_;
#line 1758 "../lib/Widgets/SourceList.vala"
		_tmp6_ = current_path;
#line 1758 "../lib/Widgets/SourceList.vala"
		if (_tmp6_ != NULL) {
#line 9142 "SourceList.c"
			GtkTreePath* _tmp7_;
			GtkTreePath* _tmp8_;
#line 1758 "../lib/Widgets/SourceList.vala"
			_tmp7_ = suggested_path;
#line 1758 "../lib/Widgets/SourceList.vala"
			_tmp8_ = current_path;
#line 1758 "../lib/Widgets/SourceList.vala"
			_tmp5_ = gtk_tree_path_compare (_tmp7_, _tmp8_) == 0;
#line 9151 "SourceList.c"
		} else {
#line 1758 "../lib/Widgets/SourceList.vala"
			_tmp5_ = FALSE;
#line 9155 "SourceList.c"
		}
#line 1758 "../lib/Widgets/SourceList.vala"
		if (_tmp5_) {
#line 9159 "SourceList.c"
			GtkWidget* source_widget = NULL;
			GtkWidget* _tmp9_;
			GtkWidget* _tmp10_;
			gboolean dragging_treemodel_row = FALSE;
			GtkWidget* _tmp11_;
#line 1762 "../lib/Widgets/SourceList.vala"
			_tmp9_ = gtk_drag_get_source_widget (context);
#line 1762 "../lib/Widgets/SourceList.vala"
			_tmp10_ = _g_object_ref0 (_tmp9_);
#line 1762 "../lib/Widgets/SourceList.vala"
			source_widget = _tmp10_;
#line 1763 "../lib/Widgets/SourceList.vala"
			_tmp11_ = source_widget;
#line 1763 "../lib/Widgets/SourceList.vala"
			dragging_treemodel_row = _tmp11_ == G_TYPE_CHECK_INSTANCE_CAST (self, gtk_widget_get_type (), GtkWidget);
#line 1765 "../lib/Widgets/SourceList.vala"
			if (dragging_treemodel_row) {
#line 9177 "SourceList.c"
				GtkTreeViewDropPosition _tmp12_;
#line 1768 "../lib/Widgets/SourceList.vala"
				_tmp12_ = current_pos;
#line 1768 "../lib/Widgets/SourceList.vala"
				if (_tmp12_ != GTK_TREE_VIEW_DROP_BEFORE) {
#line 9183 "SourceList.c"
					GtkTreeViewDropPosition _tmp13_;
#line 1769 "../lib/Widgets/SourceList.vala"
					_tmp13_ = current_pos;
#line 1769 "../lib/Widgets/SourceList.vala"
					if (_tmp13_ == GTK_TREE_VIEW_DROP_INTO_OR_BEFORE) {
#line 9189 "SourceList.c"
						GtkTreePath* _tmp14_;
#line 1770 "../lib/Widgets/SourceList.vala"
						_tmp14_ = current_path;
#line 1770 "../lib/Widgets/SourceList.vala"
						gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, _tmp14_, GTK_TREE_VIEW_DROP_BEFORE);
#line 9195 "SourceList.c"
					} else {
#line 1772 "../lib/Widgets/SourceList.vala"
						gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, NULL, GTK_TREE_VIEW_DROP_AFTER);
#line 9199 "SourceList.c"
					}
				}
			} else {
				GtkTreeViewDropPosition _tmp15_;
				GraniteWidgetsSourceListDragDest* dest = NULL;
				GraniteWidgetsSourceListDataModel* _tmp19_;
				GtkTreePath* _tmp20_;
				GraniteWidgetsSourceListItem* _tmp21_;
				GraniteWidgetsSourceListDragDest* _tmp22_;
				GraniteWidgetsSourceListDragDest* _tmp23_;
#line 1777 "../lib/Widgets/SourceList.vala"
				_tmp15_ = current_pos;
#line 1777 "../lib/Widgets/SourceList.vala"
				if (_tmp15_ == GTK_TREE_VIEW_DROP_BEFORE) {
#line 9214 "SourceList.c"
					GtkTreePath* _tmp16_;
#line 1778 "../lib/Widgets/SourceList.vala"
					_tmp16_ = current_path;
#line 1778 "../lib/Widgets/SourceList.vala"
					gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, _tmp16_, GTK_TREE_VIEW_DROP_INTO_OR_BEFORE);
#line 9220 "SourceList.c"
				} else {
					GtkTreeViewDropPosition _tmp17_;
#line 1779 "../lib/Widgets/SourceList.vala"
					_tmp17_ = current_pos;
#line 1779 "../lib/Widgets/SourceList.vala"
					if (_tmp17_ == GTK_TREE_VIEW_DROP_AFTER) {
#line 9227 "SourceList.c"
						GtkTreePath* _tmp18_;
#line 1780 "../lib/Widgets/SourceList.vala"
						_tmp18_ = current_path;
#line 1780 "../lib/Widgets/SourceList.vala"
						gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, _tmp18_, GTK_TREE_VIEW_DROP_INTO_OR_AFTER);
#line 9233 "SourceList.c"
					}
				}
#line 1783 "../lib/Widgets/SourceList.vala"
				_tmp19_ = self->priv->_data_model;
#line 1783 "../lib/Widgets/SourceList.vala"
				_tmp20_ = current_path;
#line 1783 "../lib/Widgets/SourceList.vala"
				_tmp21_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp19_, _tmp20_);
#line 1783 "../lib/Widgets/SourceList.vala"
				_tmp22_ = GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_DEST (_tmp21_) ? ((GraniteWidgetsSourceListDragDest*) _tmp21_) : NULL;
#line 1783 "../lib/Widgets/SourceList.vala"
				if (_tmp22_ == NULL) {
#line 1783 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (_tmp21_);
#line 9248 "SourceList.c"
				}
#line 1783 "../lib/Widgets/SourceList.vala"
				dest = _tmp22_;
#line 1785 "../lib/Widgets/SourceList.vala"
				_tmp23_ = dest;
#line 1785 "../lib/Widgets/SourceList.vala"
				if (_tmp23_ != NULL) {
#line 9256 "SourceList.c"
					GtkTargetList* target_list = NULL;
					GtkTargetList* _tmp24_;
					GtkTargetList* _tmp25_;
					GdkAtom target = 0U;
					GtkTargetList* _tmp26_;
#line 1786 "../lib/Widgets/SourceList.vala"
					_tmp24_ = gtk_drag_dest_get_target_list ((GtkWidget*) self);
#line 1786 "../lib/Widgets/SourceList.vala"
					_tmp25_ = _gtk_target_list_ref0 (_tmp24_);
#line 1786 "../lib/Widgets/SourceList.vala"
					target_list = _tmp25_;
#line 1787 "../lib/Widgets/SourceList.vala"
					_tmp26_ = target_list;
#line 1787 "../lib/Widgets/SourceList.vala"
					target = gtk_drag_dest_find_target ((GtkWidget*) self, context, _tmp26_);
#line 1791 "../lib/Widgets/SourceList.vala"
					g_object_set_data_full ((GObject*) context, "suggested-dnd-action", (gpointer) ((gintptr) ((gint) gdk_drag_context_get_suggested_action (context))), NULL);
#line 1792 "../lib/Widgets/SourceList.vala"
					gtk_drag_get_data ((GtkWidget*) self, context, target, (guint32) time);
#line 1785 "../lib/Widgets/SourceList.vala"
					_gtk_target_list_unref0 (target_list);
#line 9278 "SourceList.c"
				} else {
#line 1795 "../lib/Widgets/SourceList.vala"
					gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, NULL, GTK_TREE_VIEW_DROP_BEFORE);
#line 9282 "SourceList.c"
				}
#line 1765 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (dest);
#line 9286 "SourceList.c"
			}
#line 1758 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (source_widget);
#line 9290 "SourceList.c"
		}
	} else {
#line 1801 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, NULL, GTK_TREE_VIEW_DROP_AFTER);
#line 1802 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1802 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (current_path);
#line 1802 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (suggested_path);
#line 1802 "../lib/Widgets/SourceList.vala"
		return result;
#line 9303 "SourceList.c"
	}
#line 1805 "../lib/Widgets/SourceList.vala"
	result = TRUE;
#line 1805 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (current_path);
#line 1805 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (suggested_path);
#line 1805 "../lib/Widgets/SourceList.vala"
	return result;
#line 9313 "SourceList.c"
}

static void
granite_widgets_source_list_tree_real_drag_data_received (GtkWidget* base,
                                                          GdkDragContext* context,
                                                          gint x,
                                                          gint y,
                                                          GtkSelectionData* selection_data,
                                                          guint info,
                                                          guint time)
{
	GraniteWidgetsSourceListTree * self;
	GtkTargetList* target_list = NULL;
	GtkTargetList* _tmp0_;
	GtkTargetList* _tmp1_;
	GdkAtom target = 0U;
	GtkTargetList* _tmp2_;
	GtkTreePath* path = NULL;
	GtkTreeViewDropPosition pos = 0;
	gconstpointer _tmp3_;
#line 1808 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 1808 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (context != NULL);
#line 1808 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (selection_data != NULL);
#line 1816 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_drag_dest_get_target_list ((GtkWidget*) self);
#line 1816 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _gtk_target_list_ref0 (_tmp0_);
#line 1816 "../lib/Widgets/SourceList.vala"
	target_list = _tmp1_;
#line 1817 "../lib/Widgets/SourceList.vala"
	_tmp2_ = target_list;
#line 1817 "../lib/Widgets/SourceList.vala"
	target = gtk_drag_dest_find_target ((GtkWidget*) self, context, _tmp2_);
#line 1819 "../lib/Widgets/SourceList.vala"
	if (target == gdk_atom_intern_static_string ("GTK_TREE_MODEL_ROW")) {
#line 1820 "../lib/Widgets/SourceList.vala"
		GTK_WIDGET_CLASS (granite_widgets_source_list_tree_parent_class)->drag_data_received ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_view_get_type (), GtkTreeView), context, x, y, selection_data, info, time);
#line 1821 "../lib/Widgets/SourceList.vala"
		_gtk_target_list_unref0 (target_list);
#line 1821 "../lib/Widgets/SourceList.vala"
		return;
#line 9358 "SourceList.c"
	}
#line 1827 "../lib/Widgets/SourceList.vala"
	_tmp3_ = g_object_get_data ((GObject*) context, "suggested-dnd-action");
#line 1827 "../lib/Widgets/SourceList.vala"
	if (((gint) ((gintptr) _tmp3_)) != 0) {
#line 9364 "SourceList.c"
		GtkTreePath* _tmp4_ = NULL;
		GtkTreeViewDropPosition _tmp5_ = 0;
		GtkTreePath* _tmp6_;
#line 1828 "../lib/Widgets/SourceList.vala"
		g_object_set_data_full ((GObject*) context, "suggested-dnd-action", (gpointer) ((gintptr) 0), NULL);
#line 1830 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_get_drag_dest_row ((GtkTreeView*) self, &_tmp4_, &_tmp5_);
#line 1830 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 1830 "../lib/Widgets/SourceList.vala"
		path = _tmp4_;
#line 1830 "../lib/Widgets/SourceList.vala"
		pos = _tmp5_;
#line 1832 "../lib/Widgets/SourceList.vala"
		_tmp6_ = path;
#line 1832 "../lib/Widgets/SourceList.vala"
		if (_tmp6_ != NULL) {
#line 9382 "SourceList.c"
			GraniteWidgetsSourceListDragDest* dest = NULL;
			GraniteWidgetsSourceListDataModel* _tmp7_;
			GtkTreePath* _tmp8_;
			GraniteWidgetsSourceListItem* _tmp9_;
			GraniteWidgetsSourceListDragDest* _tmp10_;
			gboolean _tmp11_ = FALSE;
			GraniteWidgetsSourceListDragDest* _tmp12_;
#line 1834 "../lib/Widgets/SourceList.vala"
			_tmp7_ = self->priv->_data_model;
#line 1834 "../lib/Widgets/SourceList.vala"
			_tmp8_ = path;
#line 1834 "../lib/Widgets/SourceList.vala"
			_tmp9_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp7_, _tmp8_);
#line 1834 "../lib/Widgets/SourceList.vala"
			_tmp10_ = GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_DEST (_tmp9_) ? ((GraniteWidgetsSourceListDragDest*) _tmp9_) : NULL;
#line 1834 "../lib/Widgets/SourceList.vala"
			if (_tmp10_ == NULL) {
#line 1834 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_tmp9_);
#line 9402 "SourceList.c"
			}
#line 1834 "../lib/Widgets/SourceList.vala"
			dest = _tmp10_;
#line 1836 "../lib/Widgets/SourceList.vala"
			_tmp12_ = dest;
#line 1836 "../lib/Widgets/SourceList.vala"
			if (_tmp12_ == NULL) {
#line 1836 "../lib/Widgets/SourceList.vala"
				_tmp11_ = TRUE;
#line 9412 "SourceList.c"
			} else {
				GraniteWidgetsSourceListDragDest* _tmp13_;
#line 1836 "../lib/Widgets/SourceList.vala"
				_tmp13_ = dest;
#line 1836 "../lib/Widgets/SourceList.vala"
				_tmp11_ = !granite_widgets_source_list_drag_dest_data_drop_possible (_tmp13_, context, selection_data);
#line 9419 "SourceList.c"
			}
#line 1836 "../lib/Widgets/SourceList.vala"
			if (_tmp11_) {
#line 1839 "../lib/Widgets/SourceList.vala"
				gtk_tree_view_set_drag_dest_row ((GtkTreeView*) self, NULL, GTK_TREE_VIEW_DROP_BEFORE);
#line 1840 "../lib/Widgets/SourceList.vala"
				gdk_drag_status (context, 0, (guint32) time);
#line 1841 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (dest);
#line 1841 "../lib/Widgets/SourceList.vala"
				__vala_GtkTreePath_free0 (path);
#line 1841 "../lib/Widgets/SourceList.vala"
				_gtk_target_list_unref0 (target_list);
#line 1841 "../lib/Widgets/SourceList.vala"
				return;
#line 9435 "SourceList.c"
			}
#line 1832 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (dest);
#line 9439 "SourceList.c"
		}
#line 1845 "../lib/Widgets/SourceList.vala"
		gdk_drag_status (context, gdk_drag_context_get_suggested_action (context), (guint32) time);
#line 9443 "SourceList.c"
	} else {
		GtkTreePath* _tmp14_ = NULL;
		GtkTreeViewDropPosition _tmp15_ = 0;
		gboolean _tmp16_;
#line 1847 "../lib/Widgets/SourceList.vala"
		_tmp16_ = gtk_tree_view_get_dest_row_at_pos ((GtkTreeView*) self, x, y, &_tmp14_, &_tmp15_);
#line 1847 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 1847 "../lib/Widgets/SourceList.vala"
		path = _tmp14_;
#line 1847 "../lib/Widgets/SourceList.vala"
		pos = _tmp15_;
#line 1847 "../lib/Widgets/SourceList.vala"
		if (_tmp16_) {
#line 9458 "SourceList.c"
			GraniteWidgetsSourceListDragDest* drag_dest = NULL;
			GraniteWidgetsSourceListDataModel* _tmp17_;
			GtkTreePath* _tmp18_;
			GraniteWidgetsSourceListItem* _tmp19_;
			GraniteWidgetsSourceListDragDest* _tmp20_;
			GraniteWidgetsSourceListDragDest* _tmp21_;
#line 1853 "../lib/Widgets/SourceList.vala"
			_tmp17_ = self->priv->_data_model;
#line 1853 "../lib/Widgets/SourceList.vala"
			_tmp18_ = path;
#line 1853 "../lib/Widgets/SourceList.vala"
			_tmp19_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp17_, _tmp18_);
#line 1853 "../lib/Widgets/SourceList.vala"
			_tmp20_ = GRANITE_WIDGETS_IS_SOURCE_LIST_DRAG_DEST (_tmp19_) ? ((GraniteWidgetsSourceListDragDest*) _tmp19_) : NULL;
#line 1853 "../lib/Widgets/SourceList.vala"
			if (_tmp20_ == NULL) {
#line 1853 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_tmp19_);
#line 9477 "SourceList.c"
			}
#line 1853 "../lib/Widgets/SourceList.vala"
			drag_dest = _tmp20_;
#line 1855 "../lib/Widgets/SourceList.vala"
			_tmp21_ = drag_dest;
#line 1855 "../lib/Widgets/SourceList.vala"
			if (_tmp21_ != NULL) {
#line 9485 "SourceList.c"
				GdkDragAction action = 0U;
				GraniteWidgetsSourceListDragDest* _tmp22_;
				GdkDragAction _tmp23_;
				GdkDragAction _tmp24_;
#line 1856 "../lib/Widgets/SourceList.vala"
				_tmp22_ = drag_dest;
#line 1856 "../lib/Widgets/SourceList.vala"
				action = granite_widgets_source_list_drag_dest_data_received (_tmp22_, context, selection_data);
#line 1857 "../lib/Widgets/SourceList.vala"
				_tmp23_ = action;
#line 1857 "../lib/Widgets/SourceList.vala"
				_tmp24_ = action;
#line 1857 "../lib/Widgets/SourceList.vala"
				gtk_drag_finish (context, _tmp23_ != 0, _tmp24_ == GDK_ACTION_MOVE, (guint32) time);
#line 1858 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (drag_dest);
#line 1858 "../lib/Widgets/SourceList.vala"
				__vala_GtkTreePath_free0 (path);
#line 1858 "../lib/Widgets/SourceList.vala"
				_gtk_target_list_unref0 (target_list);
#line 1858 "../lib/Widgets/SourceList.vala"
				return;
#line 9508 "SourceList.c"
			}
#line 1847 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (drag_dest);
#line 9512 "SourceList.c"
		}
#line 1863 "../lib/Widgets/SourceList.vala"
		gtk_drag_finish (context, FALSE, FALSE, (guint32) time);
#line 9516 "SourceList.c"
	}
#line 1808 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 1808 "../lib/Widgets/SourceList.vala"
	_gtk_target_list_unref0 (target_list);
#line 9522 "SourceList.c"
}

static void
granite_widgets_source_list_tree_configure_drag_source (GraniteWidgetsSourceListTree* self,
                                                        GtkTargetEntry* src_entries,
                                                        gint src_entries_length1)
{
	GtkTargetEntry* entries = NULL;
	gint _tmp0_ = 0;
	GtkTargetEntry* _tmp1_;
	gint entries_length1;
	gint _entries_size_;
#line 1867 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1869 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_append_row_target_entry (src_entries, (gint) src_entries_length1, &_tmp0_);
#line 1869 "../lib/Widgets/SourceList.vala"
	entries = _tmp1_;
#line 1869 "../lib/Widgets/SourceList.vala"
	entries_length1 = _tmp0_;
#line 1869 "../lib/Widgets/SourceList.vala"
	_entries_size_ = entries_length1;
#line 1871 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_unset_rows_drag_source ((GtkTreeView*) self);
#line 1872 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_enable_model_drag_source ((GtkTreeView*) self, GDK_BUTTON1_MASK, entries, (gint) entries_length1, GDK_ACTION_MOVE);
#line 1867 "../lib/Widgets/SourceList.vala"
	entries = (g_free (entries), NULL);
#line 9551 "SourceList.c"
}

static void
granite_widgets_source_list_tree_configure_drag_dest (GraniteWidgetsSourceListTree* self,
                                                      GtkTargetEntry* dest_entries,
                                                      gint dest_entries_length1,
                                                      GdkDragAction actions)
{
	GtkTargetEntry* entries = NULL;
	gint _tmp0_ = 0;
	GtkTargetEntry* _tmp1_;
	gint entries_length1;
	gint _entries_size_;
#line 1875 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1877 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_append_row_target_entry (dest_entries, (gint) dest_entries_length1, &_tmp0_);
#line 1877 "../lib/Widgets/SourceList.vala"
	entries = _tmp1_;
#line 1877 "../lib/Widgets/SourceList.vala"
	entries_length1 = _tmp0_;
#line 1877 "../lib/Widgets/SourceList.vala"
	_entries_size_ = entries_length1;
#line 1879 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_unset_rows_drag_dest ((GtkTreeView*) self);
#line 1882 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_enable_model_drag_dest ((GtkTreeView*) self, entries, (gint) entries_length1, GDK_ACTION_MOVE | actions);
#line 1875 "../lib/Widgets/SourceList.vala"
	entries = (g_free (entries), NULL);
#line 9581 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_on_query_tooltip (GraniteWidgetsSourceListTree* self,
                                                   gint x,
                                                   gint y,
                                                   gboolean keyboard_tooltip,
                                                   GtkTooltip* tooltip)
{
	GtkTreePath* path = NULL;
	GtkTreeViewColumn* column = NULL;
	GtkTreeViewColumn* _tmp0_;
	GtkTreeViewColumn* _tmp1_;
	GtkTreePath* _tmp2_ = NULL;
	GtkTreePath* _tmp3_;
	GraniteWidgetsSourceListItem* item = NULL;
	GraniteWidgetsSourceListDataModel* _tmp4_;
	GtkTreePath* _tmp5_;
	GraniteWidgetsSourceListItem* _tmp6_;
	GraniteWidgetsSourceListItem* _tmp7_;
	gboolean result = FALSE;
#line 1885 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1885 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (tooltip != NULL, FALSE);
#line 1887 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 1887 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _g_object_ref0 (_tmp0_);
#line 1887 "../lib/Widgets/SourceList.vala"
	column = _tmp1_;
#line 1889 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_get_tooltip_context ((GtkTreeView*) self, &x, &y, keyboard_tooltip, NULL, &_tmp2_, NULL);
#line 1889 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 1889 "../lib/Widgets/SourceList.vala"
	path = _tmp2_;
#line 1890 "../lib/Widgets/SourceList.vala"
	_tmp3_ = path;
#line 1890 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ == NULL) {
#line 1891 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 1891 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (column);
#line 1891 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 1891 "../lib/Widgets/SourceList.vala"
		return result;
#line 9631 "SourceList.c"
	}
#line 1894 "../lib/Widgets/SourceList.vala"
	_tmp4_ = self->priv->_data_model;
#line 1894 "../lib/Widgets/SourceList.vala"
	_tmp5_ = path;
#line 1894 "../lib/Widgets/SourceList.vala"
	_tmp6_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp4_, _tmp5_);
#line 1894 "../lib/Widgets/SourceList.vala"
	item = _tmp6_;
#line 1895 "../lib/Widgets/SourceList.vala"
	_tmp7_ = item;
#line 1895 "../lib/Widgets/SourceList.vala"
	if (_tmp7_ != NULL) {
#line 9645 "SourceList.c"
		gboolean should_show = FALSE;
		GdkRectangle start_cell_area = {0};
		GtkTreePath* _tmp8_;
		GtkTreeViewColumn* _tmp9_;
		GdkRectangle _tmp10_ = {0};
		GtkTreePath* _tmp11_;
		GraniteWidgetsSourceListItem* _tmp12_;
		const gchar* _tmp13_;
		const gchar* _tmp14_;
		gboolean _tmp24_ = FALSE;
		GtkTreeViewColumn* _tmp25_;
		GtkTreePath* _tmp26_;
		GtkCellRendererText* _tmp27_;
		GdkRectangle _tmp28_;
#line 1896 "../lib/Widgets/SourceList.vala"
		should_show = FALSE;
#line 1899 "../lib/Widgets/SourceList.vala"
		_tmp8_ = path;
#line 1899 "../lib/Widgets/SourceList.vala"
		_tmp9_ = column;
#line 1899 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_get_cell_area ((GtkTreeView*) self, _tmp8_, _tmp9_, &_tmp10_);
#line 1899 "../lib/Widgets/SourceList.vala"
		start_cell_area = _tmp10_;
#line 1901 "../lib/Widgets/SourceList.vala"
		_tmp11_ = path;
#line 1901 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_set_tooltip_row ((GtkTreeView*) self, tooltip, _tmp11_);
#line 1903 "../lib/Widgets/SourceList.vala"
		_tmp12_ = item;
#line 1903 "../lib/Widgets/SourceList.vala"
		_tmp13_ = granite_widgets_source_list_item_get_tooltip (_tmp12_);
#line 1903 "../lib/Widgets/SourceList.vala"
		_tmp14_ = _tmp13_;
#line 1903 "../lib/Widgets/SourceList.vala"
		if (_tmp14_ == NULL) {
#line 9682 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp15_;
			const gchar* _tmp16_;
			const gchar* _tmp17_;
#line 1904 "../lib/Widgets/SourceList.vala"
			_tmp15_ = item;
#line 1904 "../lib/Widgets/SourceList.vala"
			_tmp16_ = granite_widgets_source_list_item_get_name (_tmp15_);
#line 1904 "../lib/Widgets/SourceList.vala"
			_tmp17_ = _tmp16_;
#line 1904 "../lib/Widgets/SourceList.vala"
			gtk_tooltip_set_markup (tooltip, _tmp17_);
#line 1905 "../lib/Widgets/SourceList.vala"
			should_show = TRUE;
#line 9696 "SourceList.c"
		} else {
			GraniteWidgetsSourceListItem* _tmp18_;
			const gchar* _tmp19_;
			const gchar* _tmp20_;
#line 1906 "../lib/Widgets/SourceList.vala"
			_tmp18_ = item;
#line 1906 "../lib/Widgets/SourceList.vala"
			_tmp19_ = granite_widgets_source_list_item_get_tooltip (_tmp18_);
#line 1906 "../lib/Widgets/SourceList.vala"
			_tmp20_ = _tmp19_;
#line 1906 "../lib/Widgets/SourceList.vala"
			if (g_strcmp0 (_tmp20_, "") != 0) {
#line 9709 "SourceList.c"
				GraniteWidgetsSourceListItem* _tmp21_;
				const gchar* _tmp22_;
				const gchar* _tmp23_;
#line 1907 "../lib/Widgets/SourceList.vala"
				_tmp21_ = item;
#line 1907 "../lib/Widgets/SourceList.vala"
				_tmp22_ = granite_widgets_source_list_item_get_tooltip (_tmp21_);
#line 1907 "../lib/Widgets/SourceList.vala"
				_tmp23_ = _tmp22_;
#line 1907 "../lib/Widgets/SourceList.vala"
				gtk_tooltip_set_markup (tooltip, _tmp23_);
#line 1908 "../lib/Widgets/SourceList.vala"
				should_show = TRUE;
#line 9723 "SourceList.c"
			}
		}
#line 1911 "../lib/Widgets/SourceList.vala"
		if (keyboard_tooltip) {
#line 1912 "../lib/Widgets/SourceList.vala"
			result = should_show;
#line 1912 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 1912 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (column);
#line 1912 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (path);
#line 1912 "../lib/Widgets/SourceList.vala"
			return result;
#line 9738 "SourceList.c"
		}
#line 1915 "../lib/Widgets/SourceList.vala"
		_tmp25_ = column;
#line 1915 "../lib/Widgets/SourceList.vala"
		_tmp26_ = path;
#line 1915 "../lib/Widgets/SourceList.vala"
		_tmp27_ = self->priv->text_cell;
#line 1915 "../lib/Widgets/SourceList.vala"
		_tmp28_ = start_cell_area;
#line 1915 "../lib/Widgets/SourceList.vala"
		if (granite_widgets_source_list_tree_over_cell (self, _tmp25_, _tmp26_, (GtkCellRenderer*) _tmp27_, x - _tmp28_.x)) {
#line 1915 "../lib/Widgets/SourceList.vala"
			_tmp24_ = TRUE;
#line 9752 "SourceList.c"
		} else {
			GtkTreeViewColumn* _tmp29_;
			GtkTreePath* _tmp30_;
			GraniteWidgetsSourceListCellRendererIcon* _tmp31_;
			GdkRectangle _tmp32_;
#line 1916 "../lib/Widgets/SourceList.vala"
			_tmp29_ = column;
#line 1916 "../lib/Widgets/SourceList.vala"
			_tmp30_ = path;
#line 1916 "../lib/Widgets/SourceList.vala"
			_tmp31_ = self->priv->icon_cell;
#line 1916 "../lib/Widgets/SourceList.vala"
			_tmp32_ = start_cell_area;
#line 1916 "../lib/Widgets/SourceList.vala"
			_tmp24_ = granite_widgets_source_list_tree_over_cell (self, _tmp29_, _tmp30_, (GtkCellRenderer*) _tmp31_, x - _tmp32_.x);
#line 9768 "SourceList.c"
		}
#line 1915 "../lib/Widgets/SourceList.vala"
		if (_tmp24_) {
#line 1918 "../lib/Widgets/SourceList.vala"
			result = should_show;
#line 1918 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 1918 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (column);
#line 1918 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (path);
#line 1918 "../lib/Widgets/SourceList.vala"
			return result;
#line 9782 "SourceList.c"
		} else {
			GtkTreeViewColumn* _tmp33_;
			GtkTreePath* _tmp34_;
			GraniteWidgetsSourceListCellRendererIcon* _tmp35_;
			GdkRectangle _tmp36_;
#line 1919 "../lib/Widgets/SourceList.vala"
			_tmp33_ = column;
#line 1919 "../lib/Widgets/SourceList.vala"
			_tmp34_ = path;
#line 1919 "../lib/Widgets/SourceList.vala"
			_tmp35_ = self->priv->activatable_cell;
#line 1919 "../lib/Widgets/SourceList.vala"
			_tmp36_ = start_cell_area;
#line 1919 "../lib/Widgets/SourceList.vala"
			if (granite_widgets_source_list_tree_over_cell (self, _tmp33_, _tmp34_, (GtkCellRenderer*) _tmp35_, x - _tmp36_.x)) {
#line 9798 "SourceList.c"
				GraniteWidgetsSourceListItem* _tmp37_;
				const gchar* _tmp38_;
				const gchar* _tmp39_;
#line 1920 "../lib/Widgets/SourceList.vala"
				_tmp37_ = item;
#line 1920 "../lib/Widgets/SourceList.vala"
				_tmp38_ = granite_widgets_source_list_item_get_activatable_tooltip (_tmp37_);
#line 1920 "../lib/Widgets/SourceList.vala"
				_tmp39_ = _tmp38_;
#line 1920 "../lib/Widgets/SourceList.vala"
				if (g_strcmp0 (_tmp39_, "") == 0) {
#line 1921 "../lib/Widgets/SourceList.vala"
					result = FALSE;
#line 1921 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (item);
#line 1921 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (column);
#line 1921 "../lib/Widgets/SourceList.vala"
					__vala_GtkTreePath_free0 (path);
#line 1921 "../lib/Widgets/SourceList.vala"
					return result;
#line 9820 "SourceList.c"
				} else {
					GraniteWidgetsSourceListItem* _tmp40_;
					const gchar* _tmp41_;
					const gchar* _tmp42_;
#line 1923 "../lib/Widgets/SourceList.vala"
					_tmp40_ = item;
#line 1923 "../lib/Widgets/SourceList.vala"
					_tmp41_ = granite_widgets_source_list_item_get_activatable_tooltip (_tmp40_);
#line 1923 "../lib/Widgets/SourceList.vala"
					_tmp42_ = _tmp41_;
#line 1923 "../lib/Widgets/SourceList.vala"
					gtk_tooltip_set_markup (tooltip, _tmp42_);
#line 1924 "../lib/Widgets/SourceList.vala"
					result = TRUE;
#line 1924 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (item);
#line 1924 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (column);
#line 1924 "../lib/Widgets/SourceList.vala"
					__vala_GtkTreePath_free0 (path);
#line 1924 "../lib/Widgets/SourceList.vala"
					return result;
#line 9843 "SourceList.c"
				}
			}
		}
	}
#line 1929 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 1929 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 1929 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (column);
#line 1929 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 1929 "../lib/Widgets/SourceList.vala"
	return result;
#line 9858 "SourceList.c"
}

static void
_vala_array_add2 (GtkTargetEntry* * array,
                  gint* length,
                  gint* size,
                  const GtkTargetEntry* value)
{
#line 1940 "../lib/Widgets/SourceList.vala"
	if ((*length) == (*size)) {
#line 1940 "../lib/Widgets/SourceList.vala"
		*size = (*size) ? (2 * (*size)) : 4;
#line 1940 "../lib/Widgets/SourceList.vala"
		*array = g_renew (GtkTargetEntry, *array, *size);
#line 9873 "SourceList.c"
	}
#line 1940 "../lib/Widgets/SourceList.vala"
	(*array)[(*length)++] = *value;
#line 9877 "SourceList.c"
}

static void
_vala_array_add3 (GtkTargetEntry* * array,
                  gint* length,
                  gint* size,
                  const GtkTargetEntry* value)
{
#line 1944 "../lib/Widgets/SourceList.vala"
	if ((*length) == (*size)) {
#line 1944 "../lib/Widgets/SourceList.vala"
		*size = (*size) ? (2 * (*size)) : 4;
#line 1944 "../lib/Widgets/SourceList.vala"
		*array = g_renew (GtkTargetEntry, *array, *size);
#line 9892 "SourceList.c"
	}
#line 1944 "../lib/Widgets/SourceList.vala"
	(*array)[(*length)++] = *value;
#line 9896 "SourceList.c"
}

static GtkTargetEntry*
granite_widgets_source_list_tree_append_row_target_entry (GtkTargetEntry* orig,
                                                          gint orig_length1,
                                                          gint* result_length1)
{
#line 1933 "../lib/Widgets/SourceList.vala"
	static const GtkTargetEntry row_target_entry = {"GTK_TREE_MODEL_ROW", (guint) GTK_TARGET_SAME_WIDGET, (guint) 0};
#line 9906 "SourceList.c"
	GtkTargetEntry* entries = NULL;
	GtkTargetEntry* _tmp0_;
	gint entries_length1;
	gint _entries_size_;
	GtkTargetEntry* _tmp2_;
	gint _tmp2__length1;
	GtkTargetEntry* result = NULL;
#line 1939 "../lib/Widgets/SourceList.vala"
	_tmp0_ = g_new0 (GtkTargetEntry, 0);
#line 1939 "../lib/Widgets/SourceList.vala"
	entries = _tmp0_;
#line 1939 "../lib/Widgets/SourceList.vala"
	entries_length1 = 0;
#line 1939 "../lib/Widgets/SourceList.vala"
	_entries_size_ = entries_length1;
#line 1940 "../lib/Widgets/SourceList.vala"
	_vala_array_add2 (&entries, &entries_length1, &_entries_size_, &row_target_entry);
#line 1942 "../lib/Widgets/SourceList.vala"
	if (orig != NULL) {
#line 9926 "SourceList.c"
		{
			GtkTargetEntry* target_entry_collection = NULL;
			gint target_entry_collection_length1 = 0;
			gint _target_entry_collection_size_ = 0;
			gint target_entry_it = 0;
#line 1943 "../lib/Widgets/SourceList.vala"
			target_entry_collection = orig;
#line 1943 "../lib/Widgets/SourceList.vala"
			target_entry_collection_length1 = orig_length1;
#line 1943 "../lib/Widgets/SourceList.vala"
			for (target_entry_it = 0; target_entry_it < target_entry_collection_length1; target_entry_it = target_entry_it + 1) {
#line 9938 "SourceList.c"
				GtkTargetEntry target_entry = {0};
#line 1943 "../lib/Widgets/SourceList.vala"
				target_entry = target_entry_collection[target_entry_it];
#line 9942 "SourceList.c"
				{
					GtkTargetEntry _tmp1_;
#line 1944 "../lib/Widgets/SourceList.vala"
					_tmp1_ = target_entry;
#line 1944 "../lib/Widgets/SourceList.vala"
					_vala_array_add3 (&entries, &entries_length1, &_entries_size_, &_tmp1_);
#line 9949 "SourceList.c"
				}
			}
		}
	}
#line 1947 "../lib/Widgets/SourceList.vala"
	_tmp2_ = entries;
#line 1947 "../lib/Widgets/SourceList.vala"
	_tmp2__length1 = entries_length1;
#line 1947 "../lib/Widgets/SourceList.vala"
	if (result_length1) {
#line 1947 "../lib/Widgets/SourceList.vala"
		*result_length1 = _tmp2__length1;
#line 9962 "SourceList.c"
	}
#line 1947 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 1947 "../lib/Widgets/SourceList.vala"
	return result;
#line 9968 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_on_model_item_updated_granite_widgets_source_list_data_model_item_updated (GraniteWidgetsSourceListDataModel* _sender,
                                                                                                             GraniteWidgetsSourceListItem* item,
                                                                                                             gpointer self)
{
#line 1951 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_on_model_item_updated ((GraniteWidgetsSourceListTree*) self, item);
#line 9978 "SourceList.c"
}

static void
granite_widgets_source_list_tree_enable_item_property_monitor (GraniteWidgetsSourceListTree* self)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
#line 1950 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1951 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 1951 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object (_tmp0_, "item-updated", (GCallback) _granite_widgets_source_list_tree_on_model_item_updated_granite_widgets_source_list_data_model_item_updated, self, G_CONNECT_AFTER);
#line 9991 "SourceList.c"
}

static void
granite_widgets_source_list_tree_disable_item_property_monitor (GraniteWidgetsSourceListTree* self)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
	guint _tmp1_;
#line 1954 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1955 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 1955 "../lib/Widgets/SourceList.vala"
	g_signal_parse_name ("item-updated", GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, &_tmp1_, NULL, FALSE);
#line 1955 "../lib/Widgets/SourceList.vala"
	g_signal_handlers_disconnect_matched (_tmp0_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp1_, 0, NULL, (GCallback) _granite_widgets_source_list_tree_on_model_item_updated_granite_widgets_source_list_data_model_item_updated, self);
#line 10007 "SourceList.c"
}

static void
granite_widgets_source_list_tree_on_model_item_updated (GraniteWidgetsSourceListTree* self,
                                                        GraniteWidgetsSourceListItem* item)
{
	GraniteWidgetsSourceListExpandableItem* expandable_item = NULL;
	GraniteWidgetsSourceListExpandableItem* _tmp0_;
	GraniteWidgetsSourceListExpandableItem* _tmp1_;
#line 1958 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1958 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 1961 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (item) ? ((GraniteWidgetsSourceListExpandableItem*) item) : NULL);
#line 1961 "../lib/Widgets/SourceList.vala"
	expandable_item = _tmp0_;
#line 1962 "../lib/Widgets/SourceList.vala"
	_tmp1_ = expandable_item;
#line 1962 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 10029 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* _tmp2_;
#line 1963 "../lib/Widgets/SourceList.vala"
		_tmp2_ = expandable_item;
#line 1963 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_tree_update_expansion (self, _tmp2_);
#line 10035 "SourceList.c"
	}
#line 1958 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (expandable_item);
#line 10039 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_spacer_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                   GtkCellRenderer* cell,
                                                                                   GtkTreeModel* tree_model,
                                                                                   GtkTreeIter* iter,
                                                                                   gpointer self)
{
#line 2008 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_spacer_cell_data_func (cell_layout, cell, tree_model, iter);
#line 10051 "SourceList.c"
}

static void
granite_widgets_source_list_tree_add_spacer_cell_for_level (GraniteWidgetsSourceListTree* self,
                                                            gint level,
                                                            gboolean check_previous)
{
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp2_;
#line 1966 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 1966 "../lib/Widgets/SourceList.vala"
	_vala_return_if_fail (level > 0, "level > 0");
#line 1970 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->spacer_cells;
#line 1970 "../lib/Widgets/SourceList.vala"
	if (_tmp0_ == NULL) {
#line 10069 "SourceList.c"
		GeeHashMap* _tmp1_;
#line 1971 "../lib/Widgets/SourceList.vala"
		_tmp1_ = gee_hash_map_new (G_TYPE_INT, NULL, NULL, GRANITE_WIDGETS_SOURCE_LIST_TYPE_CELL_RENDERER_SPACER, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 1971 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->spacer_cells);
#line 1971 "../lib/Widgets/SourceList.vala"
		self->priv->spacer_cells = _tmp1_;
#line 10077 "SourceList.c"
	}
#line 1973 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->spacer_cells;
#line 1973 "../lib/Widgets/SourceList.vala"
	if (!gee_abstract_map_has_key ((GeeAbstractMap*) _tmp2_, (gpointer) ((gintptr) level))) {
#line 10083 "SourceList.c"
		GraniteWidgetsSourceListCellRendererSpacer* spacer_cell = NULL;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp3_;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp4_;
		GeeHashMap* _tmp5_;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp6_;
		guint cell_xpadding = 0U;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp9_;
		GtkTreeViewColumn* item_column = NULL;
		GtkTreeViewColumn* _tmp10_;
		GtkTreeViewColumn* _tmp11_;
		GtkTreeViewColumn* _tmp12_;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp13_;
		GtkTreeViewColumn* _tmp14_;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp15_;
#line 1974 "../lib/Widgets/SourceList.vala"
		_tmp3_ = granite_widgets_source_list_cell_renderer_spacer_new ();
#line 1974 "../lib/Widgets/SourceList.vala"
		g_object_ref_sink (_tmp3_);
#line 1974 "../lib/Widgets/SourceList.vala"
		spacer_cell = _tmp3_;
#line 1975 "../lib/Widgets/SourceList.vala"
		_tmp4_ = spacer_cell;
#line 1975 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_cell_renderer_spacer_set_level (_tmp4_, level);
#line 1976 "../lib/Widgets/SourceList.vala"
		_tmp5_ = self->priv->spacer_cells;
#line 1976 "../lib/Widgets/SourceList.vala"
		_tmp6_ = spacer_cell;
#line 1976 "../lib/Widgets/SourceList.vala"
		gee_abstract_map_set ((GeeAbstractMap*) _tmp5_, (gpointer) ((gintptr) level), _tmp6_);
#line 1986 "../lib/Widgets/SourceList.vala"
		switch (level) {
#line 1986 "../lib/Widgets/SourceList.vala"
			case 1:
#line 10118 "SourceList.c"
			{
				gint left_padding = 0;
				gint _tmp7_ = 0;
#line 1989 "../lib/Widgets/SourceList.vala"
				gtk_widget_style_get ((GtkWidget*) self, GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_LEFT_PADDING, &_tmp7_, NULL);
#line 1989 "../lib/Widgets/SourceList.vala"
				left_padding = _tmp7_;
#line 1990 "../lib/Widgets/SourceList.vala"
				cell_xpadding = (guint) (left_padding / 2);
#line 1991 "../lib/Widgets/SourceList.vala"
				break;
#line 10130 "SourceList.c"
			}
#line 1986 "../lib/Widgets/SourceList.vala"
			case 2:
#line 10134 "SourceList.c"
			{
#line 1994 "../lib/Widgets/SourceList.vala"
				cell_xpadding = (guint) 0;
#line 1995 "../lib/Widgets/SourceList.vala"
				break;
#line 10140 "SourceList.c"
			}
			default:
			{
				gint level_indentation = 0;
				gint _tmp8_ = 0;
#line 1999 "../lib/Widgets/SourceList.vala"
				gtk_widget_style_get ((GtkWidget*) self, GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_LEVEL_INDENTATION, &_tmp8_, NULL);
#line 1999 "../lib/Widgets/SourceList.vala"
				level_indentation = _tmp8_;
#line 2000 "../lib/Widgets/SourceList.vala"
				cell_xpadding = (guint) (level_indentation / 2);
#line 2001 "../lib/Widgets/SourceList.vala"
				break;
#line 10154 "SourceList.c"
			}
		}
#line 2004 "../lib/Widgets/SourceList.vala"
		_tmp9_ = spacer_cell;
#line 2004 "../lib/Widgets/SourceList.vala"
		g_object_set ((GtkCellRenderer*) _tmp9_, "xpad", cell_xpadding, NULL);
#line 2006 "../lib/Widgets/SourceList.vala"
		_tmp10_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 2006 "../lib/Widgets/SourceList.vala"
		_tmp11_ = _g_object_ref0 (_tmp10_);
#line 2006 "../lib/Widgets/SourceList.vala"
		item_column = _tmp11_;
#line 2007 "../lib/Widgets/SourceList.vala"
		_tmp12_ = item_column;
#line 2007 "../lib/Widgets/SourceList.vala"
		_tmp13_ = spacer_cell;
#line 2007 "../lib/Widgets/SourceList.vala"
		gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp12_, (GtkCellRenderer*) _tmp13_, FALSE);
#line 2008 "../lib/Widgets/SourceList.vala"
		_tmp14_ = item_column;
#line 2008 "../lib/Widgets/SourceList.vala"
		_tmp15_ = spacer_cell;
#line 2008 "../lib/Widgets/SourceList.vala"
		gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp14_, (GtkCellRenderer*) _tmp15_, _granite_widgets_source_list_tree_spacer_cell_data_func_gtk_cell_layout_data_func, NULL, NULL);
#line 2011 "../lib/Widgets/SourceList.vala"
		if (check_previous) {
#line 10181 "SourceList.c"
			{
				gint i = 0;
#line 2012 "../lib/Widgets/SourceList.vala"
				i = level - 1;
#line 10186 "SourceList.c"
				{
					gboolean _tmp16_ = FALSE;
#line 2012 "../lib/Widgets/SourceList.vala"
					_tmp16_ = TRUE;
#line 2012 "../lib/Widgets/SourceList.vala"
					while (TRUE) {
#line 2012 "../lib/Widgets/SourceList.vala"
						if (!_tmp16_) {
#line 10195 "SourceList.c"
							gint _tmp17_;
#line 2012 "../lib/Widgets/SourceList.vala"
							_tmp17_ = i;
#line 2012 "../lib/Widgets/SourceList.vala"
							i = _tmp17_ - 1;
#line 10201 "SourceList.c"
						}
#line 2012 "../lib/Widgets/SourceList.vala"
						_tmp16_ = FALSE;
#line 2012 "../lib/Widgets/SourceList.vala"
						if (!(i > 0)) {
#line 2012 "../lib/Widgets/SourceList.vala"
							break;
#line 10209 "SourceList.c"
						}
#line 2013 "../lib/Widgets/SourceList.vala"
						granite_widgets_source_list_tree_add_spacer_cell_for_level (self, i, FALSE);
#line 10213 "SourceList.c"
					}
				}
			}
		}
#line 1973 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (item_column);
#line 1973 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (spacer_cell);
#line 10222 "SourceList.c"
	}
}

/**
         * Evaluates whether the item at the specified path can be selected or not.
         */
static gboolean
granite_widgets_source_list_tree_select_func (GraniteWidgetsSourceListTree* self,
                                              GtkTreeSelection* selection,
                                              GtkTreeModel* model,
                                              GtkTreePath* path,
                                              gboolean path_currently_selected)
{
	gboolean selectable = FALSE;
	GraniteWidgetsSourceListItem* item = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
	gboolean result = FALSE;
#line 2021 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2021 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (selection != NULL, FALSE);
#line 2021 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (model != NULL, FALSE);
#line 2021 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 2027 "../lib/Widgets/SourceList.vala"
	selectable = FALSE;
#line 2028 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 2028 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp0_, path);
#line 2028 "../lib/Widgets/SourceList.vala"
	item = _tmp1_;
#line 2030 "../lib/Widgets/SourceList.vala"
	_tmp2_ = item;
#line 2030 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 10262 "SourceList.c"
		GraniteWidgetsSourceListDataModel* _tmp3_;
		GraniteWidgetsSourceListItem* _tmp4_;
#line 2032 "../lib/Widgets/SourceList.vala"
		_tmp3_ = self->priv->_data_model;
#line 2032 "../lib/Widgets/SourceList.vala"
		_tmp4_ = item;
#line 2032 "../lib/Widgets/SourceList.vala"
		if (!granite_widgets_source_list_data_model_is_category (_tmp3_, _tmp4_, NULL, path)) {
#line 10271 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp5_;
			gboolean _tmp6_;
			gboolean _tmp7_;
#line 2033 "../lib/Widgets/SourceList.vala"
			_tmp5_ = item;
#line 2033 "../lib/Widgets/SourceList.vala"
			_tmp6_ = granite_widgets_source_list_item_get_selectable (_tmp5_);
#line 2033 "../lib/Widgets/SourceList.vala"
			_tmp7_ = _tmp6_;
#line 2033 "../lib/Widgets/SourceList.vala"
			selectable = _tmp7_;
#line 10283 "SourceList.c"
		}
	}
#line 2036 "../lib/Widgets/SourceList.vala"
	result = selectable;
#line 2036 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 2036 "../lib/Widgets/SourceList.vala"
	return result;
#line 10292 "SourceList.c"
}

static void
__vala_GtkTreePath_free0_ (gpointer var)
{
#line 2043 "../lib/Widgets/SourceList.vala"
	(var == NULL) ? NULL : (var = (_vala_GtkTreePath_free (var), NULL));
#line 10300 "SourceList.c"
}

static inline void
_g_list_free___vala_GtkTreePath_free0_ (GList* self)
{
#line 2043 "../lib/Widgets/SourceList.vala"
	g_list_free_full (self, (GDestroyNotify) __vala_GtkTreePath_free0_);
#line 10308 "SourceList.c"
}

static GtkTreePath*
granite_widgets_source_list_tree_get_selected_path (GraniteWidgetsSourceListTree* self)
{
	GtkTreePath* selected_path = NULL;
	GtkTreeSelection* selection = NULL;
	GtkTreeSelection* _tmp0_;
	GtkTreeSelection* _tmp1_;
	GtkTreeSelection* _tmp2_;
	GtkTreePath* result = NULL;
#line 2039 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2040 "../lib/Widgets/SourceList.vala"
	selected_path = NULL;
#line 2041 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_tree_view_get_selection ((GtkTreeView*) self);
#line 2041 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _g_object_ref0 (_tmp0_);
#line 2041 "../lib/Widgets/SourceList.vala"
	selection = _tmp1_;
#line 2043 "../lib/Widgets/SourceList.vala"
	_tmp2_ = selection;
#line 2043 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 10334 "SourceList.c"
		GtkTreeModel* model = NULL;
		GList* selected_rows = NULL;
		GtkTreeSelection* _tmp3_;
		GtkTreeModel* _tmp4_ = NULL;
		GList* _tmp5_;
		GtkTreeModel* _tmp6_;
		GList* _tmp7_;
#line 2045 "../lib/Widgets/SourceList.vala"
		_tmp3_ = selection;
#line 2045 "../lib/Widgets/SourceList.vala"
		_tmp5_ = gtk_tree_selection_get_selected_rows (_tmp3_, &_tmp4_);
#line 2045 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 2045 "../lib/Widgets/SourceList.vala"
		_tmp6_ = _g_object_ref0 (_tmp4_);
#line 2045 "../lib/Widgets/SourceList.vala"
		model = _tmp6_;
#line 2045 "../lib/Widgets/SourceList.vala"
		selected_rows = _tmp5_;
#line 2046 "../lib/Widgets/SourceList.vala"
		_tmp7_ = selected_rows;
#line 2046 "../lib/Widgets/SourceList.vala"
		if (g_list_length (_tmp7_) == ((guint) 1)) {
#line 10358 "SourceList.c"
			GList* _tmp8_;
			gconstpointer _tmp9_;
			GtkTreePath* _tmp10_;
#line 2047 "../lib/Widgets/SourceList.vala"
			_tmp8_ = selected_rows;
#line 2047 "../lib/Widgets/SourceList.vala"
			_tmp9_ = g_list_nth_data (_tmp8_, (guint) 0);
#line 2047 "../lib/Widgets/SourceList.vala"
			_tmp10_ = __vala_GtkTreePath_copy0 ((GtkTreePath*) _tmp9_);
#line 2047 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (selected_path);
#line 2047 "../lib/Widgets/SourceList.vala"
			selected_path = _tmp10_;
#line 10372 "SourceList.c"
		}
#line 2043 "../lib/Widgets/SourceList.vala"
		(selected_rows == NULL) ? NULL : (selected_rows = (_g_list_free___vala_GtkTreePath_free0_ (selected_rows), NULL));
#line 2043 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (model);
#line 10378 "SourceList.c"
	}
#line 2050 "../lib/Widgets/SourceList.vala"
	result = selected_path;
#line 2050 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (selection);
#line 2050 "../lib/Widgets/SourceList.vala"
	return result;
#line 10386 "SourceList.c"
}

static void
granite_widgets_source_list_tree_set_selected (GraniteWidgetsSourceListTree* self,
                                               GraniteWidgetsSourceListItem* item,
                                               gboolean scroll_to_item)
{
#line 2053 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2054 "../lib/Widgets/SourceList.vala"
	if (item == NULL) {
#line 10398 "SourceList.c"
		GtkTreeSelection* selection = NULL;
		GtkTreeSelection* _tmp0_;
		GtkTreeSelection* _tmp1_;
		GtkTreeSelection* _tmp2_;
#line 2055 "../lib/Widgets/SourceList.vala"
		_tmp0_ = gtk_tree_view_get_selection ((GtkTreeView*) self);
#line 2055 "../lib/Widgets/SourceList.vala"
		_tmp1_ = _g_object_ref0 (_tmp0_);
#line 2055 "../lib/Widgets/SourceList.vala"
		selection = _tmp1_;
#line 2056 "../lib/Widgets/SourceList.vala"
		_tmp2_ = selection;
#line 2056 "../lib/Widgets/SourceList.vala"
		if (_tmp2_ != NULL) {
#line 10413 "SourceList.c"
			GtkTreeSelection* _tmp3_;
#line 2057 "../lib/Widgets/SourceList.vala"
			_tmp3_ = selection;
#line 2057 "../lib/Widgets/SourceList.vala"
			gtk_tree_selection_unselect_all (_tmp3_);
#line 10419 "SourceList.c"
		}
#line 2068 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->selected);
#line 2068 "../lib/Widgets/SourceList.vala"
		self->priv->selected = NULL;
#line 2069 "../lib/Widgets/SourceList.vala"
		g_signal_emit (self, granite_widgets_source_list_tree_signals[GRANITE_WIDGETS_SOURCE_LIST_TREE_ITEM_SELECTED_SIGNAL], 0, NULL);
#line 2054 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (selection);
#line 10429 "SourceList.c"
	} else {
		gboolean _tmp4_;
		gboolean _tmp5_;
#line 2070 "../lib/Widgets/SourceList.vala"
		_tmp4_ = granite_widgets_source_list_item_get_selectable (item);
#line 2070 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _tmp4_;
#line 2070 "../lib/Widgets/SourceList.vala"
		if (_tmp5_) {
#line 10439 "SourceList.c"
			GtkTreePath* to_select = NULL;
			GraniteWidgetsSourceListDataModel* _tmp6_;
			GtkTreePath* _tmp7_;
			GtkTreePath* _tmp8_;
#line 2071 "../lib/Widgets/SourceList.vala"
			if (scroll_to_item) {
#line 2072 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_tree_scroll_to_item (self, item, FALSE, (gfloat) 0);
#line 10448 "SourceList.c"
			}
#line 2074 "../lib/Widgets/SourceList.vala"
			_tmp6_ = self->priv->_data_model;
#line 2074 "../lib/Widgets/SourceList.vala"
			_tmp7_ = granite_widgets_source_list_data_model_get_item_path (_tmp6_, item);
#line 2074 "../lib/Widgets/SourceList.vala"
			to_select = _tmp7_;
#line 2075 "../lib/Widgets/SourceList.vala"
			_tmp8_ = to_select;
#line 2075 "../lib/Widgets/SourceList.vala"
			if (_tmp8_ != NULL) {
#line 10460 "SourceList.c"
				GtkTreePath* _tmp9_;
				GtkTreeViewColumn* _tmp10_;
				GtkCellRendererText* _tmp11_;
#line 2076 "../lib/Widgets/SourceList.vala"
				_tmp9_ = to_select;
#line 2076 "../lib/Widgets/SourceList.vala"
				_tmp10_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 2076 "../lib/Widgets/SourceList.vala"
				_tmp11_ = self->priv->text_cell;
#line 2076 "../lib/Widgets/SourceList.vala"
				gtk_tree_view_set_cursor_on_cell ((GtkTreeView*) self, _tmp9_, _tmp10_, (GtkCellRenderer*) _tmp11_, FALSE);
#line 10472 "SourceList.c"
			}
#line 2070 "../lib/Widgets/SourceList.vala"
			__vala_GtkTreePath_free0 (to_select);
#line 10476 "SourceList.c"
		}
	}
}

static void
granite_widgets_source_list_tree_real_cursor_changed (GtkTreeView* base)
{
	GraniteWidgetsSourceListTree * self;
	GtkTreePath* path = NULL;
	GtkTreePath* _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_ = NULL;
	GtkTreePath* _tmp2_;
	GraniteWidgetsSourceListItem* new_item = NULL;
	GraniteWidgetsSourceListItem* _tmp6_;
	gboolean _tmp7_ = FALSE;
	GraniteWidgetsSourceListItem* _tmp8_;
#line 2080 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2081 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_tree_get_selected_path (self);
#line 2081 "../lib/Widgets/SourceList.vala"
	path = _tmp0_;
#line 2082 "../lib/Widgets/SourceList.vala"
	_tmp2_ = path;
#line 2082 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 10503 "SourceList.c"
		GraniteWidgetsSourceListDataModel* _tmp3_;
		GtkTreePath* _tmp4_;
		GraniteWidgetsSourceListItem* _tmp5_;
#line 2082 "../lib/Widgets/SourceList.vala"
		_tmp3_ = self->priv->_data_model;
#line 2082 "../lib/Widgets/SourceList.vala"
		_tmp4_ = path;
#line 2082 "../lib/Widgets/SourceList.vala"
		_tmp5_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp3_, _tmp4_);
#line 2082 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp1_);
#line 2082 "../lib/Widgets/SourceList.vala"
		_tmp1_ = _tmp5_;
#line 10517 "SourceList.c"
	} else {
#line 2082 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp1_);
#line 2082 "../lib/Widgets/SourceList.vala"
		_tmp1_ = NULL;
#line 10523 "SourceList.c"
	}
#line 2082 "../lib/Widgets/SourceList.vala"
	_tmp6_ = _g_object_ref0 (_tmp1_);
#line 2082 "../lib/Widgets/SourceList.vala"
	new_item = _tmp6_;
#line 2095 "../lib/Widgets/SourceList.vala"
	_tmp8_ = new_item;
#line 2095 "../lib/Widgets/SourceList.vala"
	if (_tmp8_ != NULL) {
#line 10533 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp9_;
		GraniteWidgetsSourceListItem* _tmp10_;
#line 2095 "../lib/Widgets/SourceList.vala"
		_tmp9_ = new_item;
#line 2095 "../lib/Widgets/SourceList.vala"
		_tmp10_ = self->priv->selected;
#line 2095 "../lib/Widgets/SourceList.vala"
		_tmp7_ = _tmp9_ != _tmp10_;
#line 10542 "SourceList.c"
	} else {
#line 2095 "../lib/Widgets/SourceList.vala"
		_tmp7_ = FALSE;
#line 10546 "SourceList.c"
	}
#line 2095 "../lib/Widgets/SourceList.vala"
	if (_tmp7_) {
#line 10550 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp11_;
		GraniteWidgetsSourceListItem* _tmp12_;
		GraniteWidgetsSourceListItem* _tmp13_;
#line 2096 "../lib/Widgets/SourceList.vala"
		_tmp11_ = new_item;
#line 2096 "../lib/Widgets/SourceList.vala"
		_tmp12_ = _g_object_ref0 (_tmp11_);
#line 2096 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (self->priv->selected);
#line 2096 "../lib/Widgets/SourceList.vala"
		self->priv->selected = _tmp12_;
#line 2097 "../lib/Widgets/SourceList.vala"
		_tmp13_ = new_item;
#line 2097 "../lib/Widgets/SourceList.vala"
		g_signal_emit (self, granite_widgets_source_list_tree_signals[GRANITE_WIDGETS_SOURCE_LIST_TREE_ITEM_SELECTED_SIGNAL], 0, _tmp13_);
#line 10566 "SourceList.c"
	}
#line 2080 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (new_item);
#line 2080 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (_tmp1_);
#line 2080 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 10574 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_scroll_to_item (GraniteWidgetsSourceListTree* self,
                                                 GraniteWidgetsSourceListItem* item,
                                                 gboolean use_align,
                                                 gfloat row_align)
{
	gboolean scrolled = FALSE;
	GtkTreePath* path = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreePath* _tmp1_;
	GtkTreePath* _tmp2_;
	gboolean result = FALSE;
#line 2101 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2101 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2102 "../lib/Widgets/SourceList.vala"
	scrolled = FALSE;
#line 2104 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 2104 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_path (_tmp0_, item);
#line 2104 "../lib/Widgets/SourceList.vala"
	path = _tmp1_;
#line 2105 "../lib/Widgets/SourceList.vala"
	_tmp2_ = path;
#line 2105 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 10605 "SourceList.c"
		GtkTreePath* _tmp3_;
#line 2106 "../lib/Widgets/SourceList.vala"
		_tmp3_ = path;
#line 2106 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_scroll_to_cell ((GtkTreeView*) self, _tmp3_, NULL, use_align, row_align, (gfloat) 0);
#line 2107 "../lib/Widgets/SourceList.vala"
		scrolled = TRUE;
#line 10613 "SourceList.c"
	}
#line 2110 "../lib/Widgets/SourceList.vala"
	result = scrolled;
#line 2110 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 2110 "../lib/Widgets/SourceList.vala"
	return result;
#line 10621 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_start_editing_item (GraniteWidgetsSourceListTree* self,
                                                     GraniteWidgetsSourceListItem* item)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_;
	gboolean _tmp6_;
	GtkTreePath* path = NULL;
	GraniteWidgetsSourceListDataModel* _tmp8_;
	GtkTreePath* _tmp9_;
	GtkTreePath* _tmp10_;
	gboolean _tmp17_;
	gboolean _tmp18_;
	gboolean result = FALSE;
#line 2113 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2113 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2113 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_item_get_editable (item);
#line 2113 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 2113 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (_tmp1_, "item.editable", FALSE);
#line 2113 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_item_get_selectable (item);
#line 2113 "../lib/Widgets/SourceList.vala"
	_tmp3_ = _tmp2_;
#line 2113 "../lib/Widgets/SourceList.vala"
	_vala_return_val_if_fail (_tmp3_, "item.selectable", FALSE);
#line 2114 "../lib/Widgets/SourceList.vala"
	_tmp5_ = granite_widgets_source_list_tree_get_editing (self);
#line 2114 "../lib/Widgets/SourceList.vala"
	_tmp6_ = _tmp5_;
#line 2114 "../lib/Widgets/SourceList.vala"
	if (_tmp6_) {
#line 10664 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp7_;
#line 2114 "../lib/Widgets/SourceList.vala"
		_tmp7_ = self->priv->edited;
#line 2114 "../lib/Widgets/SourceList.vala"
		_tmp4_ = item == _tmp7_;
#line 10670 "SourceList.c"
	} else {
#line 2114 "../lib/Widgets/SourceList.vala"
		_tmp4_ = FALSE;
#line 10674 "SourceList.c"
	}
#line 2114 "../lib/Widgets/SourceList.vala"
	if (_tmp4_) {
#line 2115 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 2115 "../lib/Widgets/SourceList.vala"
		return result;
#line 10682 "SourceList.c"
	}
#line 2117 "../lib/Widgets/SourceList.vala"
	_tmp8_ = self->priv->_data_model;
#line 2117 "../lib/Widgets/SourceList.vala"
	_tmp9_ = granite_widgets_source_list_data_model_get_item_path (_tmp8_, item);
#line 2117 "../lib/Widgets/SourceList.vala"
	path = _tmp9_;
#line 2118 "../lib/Widgets/SourceList.vala"
	_tmp10_ = path;
#line 2118 "../lib/Widgets/SourceList.vala"
	if (_tmp10_ != NULL) {
#line 10694 "SourceList.c"
		GtkCellRendererText* _tmp11_;
		GtkTreePath* _tmp12_;
		GtkTreeViewColumn* _tmp13_;
		GtkCellRendererText* _tmp14_;
#line 2119 "../lib/Widgets/SourceList.vala"
		self->priv->edited = item;
#line 2120 "../lib/Widgets/SourceList.vala"
		_tmp11_ = self->priv->text_cell;
#line 2120 "../lib/Widgets/SourceList.vala"
		g_object_set (_tmp11_, "editable", TRUE, NULL);
#line 2121 "../lib/Widgets/SourceList.vala"
		_tmp12_ = path;
#line 2121 "../lib/Widgets/SourceList.vala"
		_tmp13_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 2121 "../lib/Widgets/SourceList.vala"
		_tmp14_ = self->priv->text_cell;
#line 2121 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_set_cursor_on_cell ((GtkTreeView*) self, _tmp12_, _tmp13_, (GtkCellRenderer*) _tmp14_, TRUE);
#line 10713 "SourceList.c"
	} else {
		const gchar* _tmp15_;
		const gchar* _tmp16_;
#line 2123 "../lib/Widgets/SourceList.vala"
		_tmp15_ = granite_widgets_source_list_item_get_name (item);
#line 2123 "../lib/Widgets/SourceList.vala"
		_tmp16_ = _tmp15_;
#line 2123 "../lib/Widgets/SourceList.vala"
		g_warning ("SourceList.vala:2123: Could not edit \"%s\": path not found", _tmp16_);
#line 10723 "SourceList.c"
	}
#line 2126 "../lib/Widgets/SourceList.vala"
	_tmp17_ = granite_widgets_source_list_tree_get_editing (self);
#line 2126 "../lib/Widgets/SourceList.vala"
	_tmp18_ = _tmp17_;
#line 2126 "../lib/Widgets/SourceList.vala"
	result = _tmp18_;
#line 2126 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 2126 "../lib/Widgets/SourceList.vala"
	return result;
#line 10735 "SourceList.c"
}

static void
granite_widgets_source_list_tree_stop_editing (GraniteWidgetsSourceListTree* self)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 2129 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2130 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_get_editing (self);
#line 2130 "../lib/Widgets/SourceList.vala"
	_tmp2_ = _tmp1_;
#line 2130 "../lib/Widgets/SourceList.vala"
	if (_tmp2_) {
#line 10752 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp3_;
#line 2130 "../lib/Widgets/SourceList.vala"
		_tmp3_ = self->priv->edited;
#line 2130 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp3_ != NULL;
#line 10758 "SourceList.c"
	} else {
#line 2130 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 10762 "SourceList.c"
	}
#line 2130 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 10766 "SourceList.c"
		GtkTreePath* path = NULL;
		GraniteWidgetsSourceListDataModel* _tmp4_;
		GraniteWidgetsSourceListItem* _tmp5_;
		GtkTreePath* _tmp6_;
		GtkTreePath* _tmp7_;
#line 2131 "../lib/Widgets/SourceList.vala"
		_tmp4_ = self->priv->_data_model;
#line 2131 "../lib/Widgets/SourceList.vala"
		_tmp5_ = self->priv->edited;
#line 2131 "../lib/Widgets/SourceList.vala"
		_tmp6_ = granite_widgets_source_list_data_model_get_item_path (_tmp4_, _tmp5_);
#line 2131 "../lib/Widgets/SourceList.vala"
		path = _tmp6_;
#line 2135 "../lib/Widgets/SourceList.vala"
		_tmp7_ = path;
#line 2135 "../lib/Widgets/SourceList.vala"
		if (_tmp7_ != NULL) {
#line 10784 "SourceList.c"
			GtkTreePath* _tmp8_;
			GtkTreeViewColumn* _tmp9_;
			GtkCellRendererText* _tmp10_;
#line 2136 "../lib/Widgets/SourceList.vala"
			_tmp8_ = path;
#line 2136 "../lib/Widgets/SourceList.vala"
			_tmp9_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 2136 "../lib/Widgets/SourceList.vala"
			_tmp10_ = self->priv->text_cell;
#line 2136 "../lib/Widgets/SourceList.vala"
			gtk_tree_view_set_cursor_on_cell ((GtkTreeView*) self, _tmp8_, _tmp9_, (GtkCellRenderer*) _tmp10_, FALSE);
#line 10796 "SourceList.c"
		}
#line 2130 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 10800 "SourceList.c"
	}
}

static void
_granite_widgets_source_list_tree_on_editing_done_gtk_cell_editable_editing_done (GtkCellEditable* _sender,
                                                                                  gpointer self)
{
#line 2143 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_on_editing_done ((GraniteWidgetsSourceListTree*) self);
#line 10810 "SourceList.c"
}

static void
granite_widgets_source_list_tree_on_editing_started (GraniteWidgetsSourceListTree* self,
                                                     GtkCellEditable* editable,
                                                     const gchar* path)
{
	GtkEntry* _tmp0_;
	GtkEntry* _tmp1_;
#line 2140 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2140 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (editable != NULL);
#line 2140 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (path != NULL);
#line 2141 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (editable, gtk_entry_get_type ()) ? ((GtkEntry*) editable) : NULL);
#line 2141 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->editable_entry);
#line 2141 "../lib/Widgets/SourceList.vala"
	self->priv->editable_entry = _tmp0_;
#line 2142 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->editable_entry;
#line 2142 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 10836 "SourceList.c"
		GtkEntry* _tmp2_;
		GtkEntry* _tmp3_;
#line 2143 "../lib/Widgets/SourceList.vala"
		_tmp2_ = self->priv->editable_entry;
#line 2143 "../lib/Widgets/SourceList.vala"
		g_signal_connect_object ((GtkCellEditable*) _tmp2_, "editing-done", (GCallback) _granite_widgets_source_list_tree_on_editing_done_gtk_cell_editable_editing_done, self, 0);
#line 2144 "../lib/Widgets/SourceList.vala"
		_tmp3_ = self->priv->editable_entry;
#line 2144 "../lib/Widgets/SourceList.vala"
		g_object_set (_tmp3_, "editable", TRUE, NULL);
#line 10847 "SourceList.c"
	}
}

static void
granite_widgets_source_list_tree_on_editing_canceled (GraniteWidgetsSourceListTree* self)
{
	GtkEntry* _tmp0_;
	GtkCellRendererText* _tmp4_;
#line 2148 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2149 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->editable_entry;
#line 2149 "../lib/Widgets/SourceList.vala"
	if (_tmp0_ != NULL) {
#line 10862 "SourceList.c"
		GtkEntry* _tmp1_;
		GtkEntry* _tmp2_;
		guint _tmp3_;
#line 2150 "../lib/Widgets/SourceList.vala"
		_tmp1_ = self->priv->editable_entry;
#line 2150 "../lib/Widgets/SourceList.vala"
		g_object_set (_tmp1_, "editable", FALSE, NULL);
#line 2151 "../lib/Widgets/SourceList.vala"
		_tmp2_ = self->priv->editable_entry;
#line 2151 "../lib/Widgets/SourceList.vala"
		g_signal_parse_name ("editing-done", gtk_cell_editable_get_type (), &_tmp3_, NULL, FALSE);
#line 2151 "../lib/Widgets/SourceList.vala"
		g_signal_handlers_disconnect_matched ((GtkCellEditable*) _tmp2_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp3_, 0, NULL, (GCallback) _granite_widgets_source_list_tree_on_editing_done_gtk_cell_editable_editing_done, self);
#line 10876 "SourceList.c"
	}
#line 2154 "../lib/Widgets/SourceList.vala"
	_tmp4_ = self->priv->text_cell;
#line 2154 "../lib/Widgets/SourceList.vala"
	g_object_set (_tmp4_, "editable", FALSE, NULL);
#line 2155 "../lib/Widgets/SourceList.vala"
	self->priv->edited = NULL;
#line 10884 "SourceList.c"
}

static void
granite_widgets_source_list_tree_on_editing_done (GraniteWidgetsSourceListTree* self)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GraniteWidgetsSourceListItem* _tmp2_;
#line 2158 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2159 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->edited;
#line 2159 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 10899 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp3_;
		gboolean _tmp4_;
		gboolean _tmp5_;
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp3_ = self->priv->edited;
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp4_ = granite_widgets_source_list_item_get_editable (_tmp3_);
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _tmp4_;
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp1_ = _tmp5_;
#line 10911 "SourceList.c"
	} else {
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp1_ = FALSE;
#line 10915 "SourceList.c"
	}
#line 2159 "../lib/Widgets/SourceList.vala"
	if (_tmp1_) {
#line 10919 "SourceList.c"
		GtkEntry* _tmp6_;
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp6_ = self->priv->editable_entry;
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp6_ != NULL;
#line 10925 "SourceList.c"
	} else {
#line 2159 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 10929 "SourceList.c"
	}
#line 2159 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 10933 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp7_;
		GtkEntry* _tmp8_;
		const gchar* _tmp9_;
#line 2160 "../lib/Widgets/SourceList.vala"
		_tmp7_ = self->priv->edited;
#line 2160 "../lib/Widgets/SourceList.vala"
		_tmp8_ = self->priv->editable_entry;
#line 2160 "../lib/Widgets/SourceList.vala"
		_tmp9_ = gtk_entry_get_text (_tmp8_);
#line 2160 "../lib/Widgets/SourceList.vala"
		g_signal_emit (_tmp7_, granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_EDITED_SIGNAL], 0, _tmp9_);
#line 10945 "SourceList.c"
	}
#line 2163 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_on_editing_canceled (self);
#line 10949 "SourceList.c"
}

static void
granite_widgets_source_list_tree_on_activatable_activated (GraniteWidgetsSourceListTree* self,
                                                           const gchar* item_path_str)
{
	GraniteWidgetsSourceListItem* item = NULL;
	GraniteWidgetsSourceListItem* _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_;
#line 2166 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2166 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item_path_str != NULL);
#line 2167 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_tree_get_item_from_path_string (self, item_path_str);
#line 2167 "../lib/Widgets/SourceList.vala"
	item = _tmp0_;
#line 2168 "../lib/Widgets/SourceList.vala"
	_tmp1_ = item;
#line 2168 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 10971 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp2_;
#line 2169 "../lib/Widgets/SourceList.vala"
		_tmp2_ = item;
#line 2169 "../lib/Widgets/SourceList.vala"
		g_signal_emit (_tmp2_, granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTION_ACTIVATED_SIGNAL], 0);
#line 10977 "SourceList.c"
	}
#line 2166 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 10981 "SourceList.c"
}

static GraniteWidgetsSourceListItem*
granite_widgets_source_list_tree_get_item_from_path_string (GraniteWidgetsSourceListTree* self,
                                                            const gchar* item_path_str)
{
	GtkTreePath* item_path = NULL;
	GtkTreePath* _tmp0_;
	GraniteWidgetsSourceListDataModel* _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2172 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2172 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item_path_str != NULL, NULL);
#line 2173 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_tree_path_new_from_string (item_path_str);
#line 2173 "../lib/Widgets/SourceList.vala"
	item_path = _tmp0_;
#line 2174 "../lib/Widgets/SourceList.vala"
	_tmp1_ = self->priv->_data_model;
#line 2174 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp1_, item_path);
#line 2174 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2174 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (item_path);
#line 2174 "../lib/Widgets/SourceList.vala"
	return result;
#line 11011 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_toggle_expansion (GraniteWidgetsSourceListTree* self,
                                                   GraniteWidgetsSourceListExpandableItem* item)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
	gboolean result = FALSE;
#line 2177 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2177 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 2178 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_expandable_item_get_collapsible (item);
#line 2178 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 2178 "../lib/Widgets/SourceList.vala"
	if (_tmp1_) {
#line 11031 "SourceList.c"
		gboolean _tmp2_;
		gboolean _tmp3_;
#line 2179 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_expandable_item_get_expanded (item);
#line 2179 "../lib/Widgets/SourceList.vala"
		_tmp3_ = _tmp2_;
#line 2179 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_expandable_item_set_expanded (item, !_tmp3_);
#line 2180 "../lib/Widgets/SourceList.vala"
		result = TRUE;
#line 2180 "../lib/Widgets/SourceList.vala"
		return result;
#line 11044 "SourceList.c"
	}
#line 2182 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 2182 "../lib/Widgets/SourceList.vala"
	return result;
#line 11050 "SourceList.c"
}

/**
         * Updates the tree to reflect the ''expanded'' property of expandable_item.
         */
static void
granite_widgets_source_list_tree_update_expansion (GraniteWidgetsSourceListTree* self,
                                                   GraniteWidgetsSourceListExpandableItem* expandable_item)
{
	GtkTreePath* path = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreePath* _tmp1_;
	GtkTreePath* _tmp2_;
#line 2188 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2188 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (expandable_item != NULL);
#line 2189 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 2189 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_data_model_get_item_path (_tmp0_, (GraniteWidgetsSourceListItem*) expandable_item);
#line 2189 "../lib/Widgets/SourceList.vala"
	path = _tmp1_;
#line 2191 "../lib/Widgets/SourceList.vala"
	_tmp2_ = path;
#line 2191 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 11078 "SourceList.c"
		GtkTreePath* _tmp3_;
		gboolean _tmp4_;
		gboolean _tmp5_;
#line 2195 "../lib/Widgets/SourceList.vala"
		_tmp3_ = path;
#line 2195 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_tree_add_spacer_cell_for_level (self, gtk_tree_path_get_depth (_tmp3_) + 1, TRUE);
#line 2197 "../lib/Widgets/SourceList.vala"
		_tmp4_ = granite_widgets_source_list_expandable_item_get_expanded (expandable_item);
#line 2197 "../lib/Widgets/SourceList.vala"
		_tmp5_ = _tmp4_;
#line 2197 "../lib/Widgets/SourceList.vala"
		if (_tmp5_) {
#line 11092 "SourceList.c"
			GtkTreePath* _tmp6_;
			gboolean _tmp7_ = FALSE;
			GraniteWidgetsSourceListItem* _tmp8_;
#line 2198 "../lib/Widgets/SourceList.vala"
			_tmp6_ = path;
#line 2198 "../lib/Widgets/SourceList.vala"
			gtk_tree_view_expand_row ((GtkTreeView*) self, _tmp6_, FALSE);
#line 2206 "../lib/Widgets/SourceList.vala"
			_tmp8_ = self->priv->selected;
#line 2206 "../lib/Widgets/SourceList.vala"
			if (_tmp8_ != NULL) {
#line 11104 "SourceList.c"
				GraniteWidgetsSourceListItem* _tmp9_;
				GraniteWidgetsSourceListExpandableItem* _tmp10_;
				GraniteWidgetsSourceListExpandableItem* _tmp11_;
#line 2206 "../lib/Widgets/SourceList.vala"
				_tmp9_ = self->priv->selected;
#line 2206 "../lib/Widgets/SourceList.vala"
				_tmp10_ = granite_widgets_source_list_item_get_parent (_tmp9_);
#line 2206 "../lib/Widgets/SourceList.vala"
				_tmp11_ = _tmp10_;
#line 2206 "../lib/Widgets/SourceList.vala"
				_tmp7_ = _tmp11_ == expandable_item;
#line 11116 "SourceList.c"
			} else {
#line 2206 "../lib/Widgets/SourceList.vala"
				_tmp7_ = FALSE;
#line 11120 "SourceList.c"
			}
#line 2206 "../lib/Widgets/SourceList.vala"
			if (_tmp7_) {
#line 11124 "SourceList.c"
				GraniteWidgetsSourceListItem* _tmp12_;
#line 2207 "../lib/Widgets/SourceList.vala"
				_tmp12_ = self->priv->selected;
#line 2207 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_tree_set_selected (self, _tmp12_, TRUE);
#line 11130 "SourceList.c"
			}
			{
				GeeIterator* _child_item_it = NULL;
				GeeCollection* _tmp13_;
				GeeCollection* _tmp14_;
				GeeCollection* _tmp15_;
				GeeIterator* _tmp16_;
				GeeIterator* _tmp17_;
#line 2212 "../lib/Widgets/SourceList.vala"
				_tmp13_ = granite_widgets_source_list_expandable_item_get_children (expandable_item);
#line 2212 "../lib/Widgets/SourceList.vala"
				_tmp14_ = _tmp13_;
#line 2212 "../lib/Widgets/SourceList.vala"
				_tmp15_ = _tmp14_;
#line 2212 "../lib/Widgets/SourceList.vala"
				_tmp16_ = gee_iterable_iterator ((GeeIterable*) _tmp15_);
#line 2212 "../lib/Widgets/SourceList.vala"
				_tmp17_ = _tmp16_;
#line 2212 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_tmp15_);
#line 2212 "../lib/Widgets/SourceList.vala"
				_child_item_it = _tmp17_;
#line 2212 "../lib/Widgets/SourceList.vala"
				while (TRUE) {
#line 11155 "SourceList.c"
					GeeIterator* _tmp18_;
					GraniteWidgetsSourceListItem* child_item = NULL;
					GeeIterator* _tmp19_;
					gpointer _tmp20_;
					GraniteWidgetsSourceListExpandableItem* child_expandable_item = NULL;
					GraniteWidgetsSourceListItem* _tmp21_;
					GraniteWidgetsSourceListExpandableItem* _tmp22_;
					GraniteWidgetsSourceListExpandableItem* _tmp23_;
#line 2212 "../lib/Widgets/SourceList.vala"
					_tmp18_ = _child_item_it;
#line 2212 "../lib/Widgets/SourceList.vala"
					if (!gee_iterator_next (_tmp18_)) {
#line 2212 "../lib/Widgets/SourceList.vala"
						break;
#line 11170 "SourceList.c"
					}
#line 2212 "../lib/Widgets/SourceList.vala"
					_tmp19_ = _child_item_it;
#line 2212 "../lib/Widgets/SourceList.vala"
					_tmp20_ = gee_iterator_get (_tmp19_);
#line 2212 "../lib/Widgets/SourceList.vala"
					child_item = (GraniteWidgetsSourceListItem*) _tmp20_;
#line 2213 "../lib/Widgets/SourceList.vala"
					_tmp21_ = child_item;
#line 2213 "../lib/Widgets/SourceList.vala"
					_tmp22_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp21_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp21_) : NULL);
#line 2213 "../lib/Widgets/SourceList.vala"
					child_expandable_item = _tmp22_;
#line 2214 "../lib/Widgets/SourceList.vala"
					_tmp23_ = child_expandable_item;
#line 2214 "../lib/Widgets/SourceList.vala"
					if (_tmp23_ != NULL) {
#line 11188 "SourceList.c"
						GraniteWidgetsSourceListExpandableItem* _tmp24_;
#line 2215 "../lib/Widgets/SourceList.vala"
						_tmp24_ = child_expandable_item;
#line 2215 "../lib/Widgets/SourceList.vala"
						granite_widgets_source_list_tree_update_expansion (self, _tmp24_);
#line 11194 "SourceList.c"
					}
#line 2212 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (child_expandable_item);
#line 2212 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (child_item);
#line 11200 "SourceList.c"
				}
#line 2212 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_child_item_it);
#line 11204 "SourceList.c"
			}
		} else {
			GtkTreePath* _tmp25_;
#line 2218 "../lib/Widgets/SourceList.vala"
			_tmp25_ = path;
#line 2218 "../lib/Widgets/SourceList.vala"
			gtk_tree_view_collapse_row ((GtkTreeView*) self, _tmp25_);
#line 11212 "SourceList.c"
		}
	}
#line 2188 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 11217 "SourceList.c"
}

static void
granite_widgets_source_list_tree_real_row_expanded (GtkTreeView* base,
                                                    GtkTreeIter* iter,
                                                    GtkTreePath* path)
{
	GraniteWidgetsSourceListTree * self;
	GraniteWidgetsSourceListExpandableItem* item = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
	GraniteWidgetsSourceListExpandableItem* _tmp3_;
#line 2223 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2223 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2223 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (path != NULL);
#line 2224 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 2224 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *iter;
#line 2224 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_data_model_get_item (_tmp0_, &_tmp1_);
#line 2224 "../lib/Widgets/SourceList.vala"
	_tmp3_ = GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp2_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp2_) : NULL;
#line 2224 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ == NULL) {
#line 2224 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp2_);
#line 11249 "SourceList.c"
	}
#line 2224 "../lib/Widgets/SourceList.vala"
	item = _tmp3_;
#line 2225 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 2227 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_disable_item_property_monitor (self);
#line 2228 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_set_expanded (item, TRUE);
#line 2229 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_enable_item_property_monitor (self);
#line 2223 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 11263 "SourceList.c"
}

static void
granite_widgets_source_list_tree_real_row_collapsed (GtkTreeView* base,
                                                     GtkTreeIter* iter,
                                                     GtkTreePath* path)
{
	GraniteWidgetsSourceListTree * self;
	GraniteWidgetsSourceListExpandableItem* item = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
	GraniteWidgetsSourceListExpandableItem* _tmp3_;
#line 2232 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2232 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2232 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (path != NULL);
#line 2233 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->_data_model;
#line 2233 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *iter;
#line 2233 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_data_model_get_item (_tmp0_, &_tmp1_);
#line 2233 "../lib/Widgets/SourceList.vala"
	_tmp3_ = GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp2_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp2_) : NULL;
#line 2233 "../lib/Widgets/SourceList.vala"
	if (_tmp3_ == NULL) {
#line 2233 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (_tmp2_);
#line 11295 "SourceList.c"
	}
#line 2233 "../lib/Widgets/SourceList.vala"
	item = _tmp3_;
#line 2234 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (item != NULL);
#line 2236 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_disable_item_property_monitor (self);
#line 2237 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_expandable_item_set_expanded (item, FALSE);
#line 2238 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_enable_item_property_monitor (self);
#line 2232 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 11309 "SourceList.c"
}

static void
granite_widgets_source_list_tree_real_row_activated (GtkTreeView* base,
                                                     GtkTreePath* path,
                                                     GtkTreeViewColumn* column)
{
	GraniteWidgetsSourceListTree * self;
	GtkTreeViewColumn* _tmp0_;
#line 2241 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2241 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (path != NULL);
#line 2241 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (column != NULL);
#line 2242 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 2242 "../lib/Widgets/SourceList.vala"
	if (column == _tmp0_) {
#line 11329 "SourceList.c"
		GraniteWidgetsSourceListItem* item = NULL;
		GraniteWidgetsSourceListDataModel* _tmp1_;
		GraniteWidgetsSourceListItem* _tmp2_;
		GraniteWidgetsSourceListItem* _tmp3_;
#line 2243 "../lib/Widgets/SourceList.vala"
		_tmp1_ = self->priv->_data_model;
#line 2243 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp1_, path);
#line 2243 "../lib/Widgets/SourceList.vala"
		item = _tmp2_;
#line 2244 "../lib/Widgets/SourceList.vala"
		_tmp3_ = item;
#line 2244 "../lib/Widgets/SourceList.vala"
		if (_tmp3_ != NULL) {
#line 11344 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp4_;
#line 2245 "../lib/Widgets/SourceList.vala"
			_tmp4_ = item;
#line 2245 "../lib/Widgets/SourceList.vala"
			g_signal_emit (_tmp4_, granite_widgets_source_list_item_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_ACTIVATED_SIGNAL], 0);
#line 11350 "SourceList.c"
		}
#line 2242 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (item);
#line 11354 "SourceList.c"
	}
}

static gboolean
granite_widgets_source_list_tree_real_key_release_event (GtkWidget* base,
                                                         GdkEventKey* event)
{
	GraniteWidgetsSourceListTree * self;
	GraniteWidgetsSourceListItem* _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_;
	gboolean result = FALSE;
#line 2249 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2249 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 2250 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_tree_get_selected_item (self);
#line 2250 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 2250 "../lib/Widgets/SourceList.vala"
	if (_tmp1_ != NULL) {
#line 2251 "../lib/Widgets/SourceList.vala"
		switch (event->keyval) {
#line 2251 "../lib/Widgets/SourceList.vala"
			case GDK_KEY_F2:
#line 11380 "SourceList.c"
			{
				GdkModifierType modifiers = 0U;
				gboolean _tmp2_ = FALSE;
				GdkModifierType _tmp3_;
				GdkModifierType _tmp4_;
#line 2253 "../lib/Widgets/SourceList.vala"
				modifiers = gtk_accelerator_get_default_mod_mask ();
#line 2255 "../lib/Widgets/SourceList.vala"
				_tmp3_ = event->state;
#line 2255 "../lib/Widgets/SourceList.vala"
				_tmp4_ = modifiers;
#line 2255 "../lib/Widgets/SourceList.vala"
				if ((_tmp3_ & _tmp4_) == 0) {
#line 11394 "SourceList.c"
					GraniteWidgetsSourceListItem* _tmp5_;
					GraniteWidgetsSourceListItem* _tmp6_;
					gboolean _tmp7_;
					gboolean _tmp8_;
#line 2255 "../lib/Widgets/SourceList.vala"
					_tmp5_ = granite_widgets_source_list_tree_get_selected_item (self);
#line 2255 "../lib/Widgets/SourceList.vala"
					_tmp6_ = _tmp5_;
#line 2255 "../lib/Widgets/SourceList.vala"
					_tmp7_ = granite_widgets_source_list_item_get_editable (_tmp6_);
#line 2255 "../lib/Widgets/SourceList.vala"
					_tmp8_ = _tmp7_;
#line 2255 "../lib/Widgets/SourceList.vala"
					_tmp2_ = _tmp8_;
#line 11409 "SourceList.c"
				} else {
#line 2255 "../lib/Widgets/SourceList.vala"
					_tmp2_ = FALSE;
#line 11413 "SourceList.c"
				}
#line 2255 "../lib/Widgets/SourceList.vala"
				if (_tmp2_) {
#line 11417 "SourceList.c"
					GraniteWidgetsSourceListItem* _tmp9_;
					GraniteWidgetsSourceListItem* _tmp10_;
#line 2256 "../lib/Widgets/SourceList.vala"
					_tmp9_ = granite_widgets_source_list_tree_get_selected_item (self);
#line 2256 "../lib/Widgets/SourceList.vala"
					_tmp10_ = _tmp9_;
#line 2256 "../lib/Widgets/SourceList.vala"
					granite_widgets_source_list_tree_start_editing_item (self, _tmp10_);
#line 11426 "SourceList.c"
				}
#line 2257 "../lib/Widgets/SourceList.vala"
				break;
#line 11430 "SourceList.c"
			}
			default:
#line 2251 "../lib/Widgets/SourceList.vala"
			break;
#line 11435 "SourceList.c"
		}
	}
#line 2261 "../lib/Widgets/SourceList.vala"
	result = GTK_WIDGET_CLASS (granite_widgets_source_list_tree_parent_class)->key_release_event ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_view_get_type (), GtkTreeView), event);
#line 2261 "../lib/Widgets/SourceList.vala"
	return result;
#line 11442 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_real_button_release_event (GtkWidget* base,
                                                            GdkEventButton* event)
{
	GraniteWidgetsSourceListTree * self;
	gboolean _tmp0_ = FALSE;
	gboolean result = FALSE;
#line 2264 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2264 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 2265 "../lib/Widgets/SourceList.vala"
	if (self->priv->unselectable_item_clicked) {
#line 11458 "SourceList.c"
		GdkWindow* _tmp1_;
		GdkWindow* _tmp2_;
#line 2265 "../lib/Widgets/SourceList.vala"
		_tmp1_ = event->window;
#line 2265 "../lib/Widgets/SourceList.vala"
		_tmp2_ = gtk_tree_view_get_bin_window ((GtkTreeView*) self);
#line 2265 "../lib/Widgets/SourceList.vala"
		_tmp0_ = _tmp1_ == _tmp2_;
#line 11467 "SourceList.c"
	} else {
#line 2265 "../lib/Widgets/SourceList.vala"
		_tmp0_ = FALSE;
#line 11471 "SourceList.c"
	}
#line 2265 "../lib/Widgets/SourceList.vala"
	if (_tmp0_) {
#line 11475 "SourceList.c"
		GtkTreePath* path = NULL;
		GtkTreeViewColumn* column = NULL;
		gint x = 0;
		gint y = 0;
		gint cell_x = 0;
		gint cell_y = 0;
		GtkTreePath* _tmp3_ = NULL;
		GtkTreeViewColumn* _tmp4_ = NULL;
		gint _tmp5_ = 0;
		gint _tmp6_ = 0;
		gboolean _tmp7_;
		GtkTreeViewColumn* _tmp8_;
#line 2266 "../lib/Widgets/SourceList.vala"
		self->priv->unselectable_item_clicked = FALSE;
#line 2270 "../lib/Widgets/SourceList.vala"
		x = (gint) event->x;
#line 2270 "../lib/Widgets/SourceList.vala"
		y = (gint) event->y;
#line 2272 "../lib/Widgets/SourceList.vala"
		_tmp7_ = gtk_tree_view_get_path_at_pos ((GtkTreeView*) self, x, y, &_tmp3_, &_tmp4_, &_tmp5_, &_tmp6_);
#line 2272 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 2272 "../lib/Widgets/SourceList.vala"
		path = _tmp3_;
#line 2272 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (column);
#line 2272 "../lib/Widgets/SourceList.vala"
		_tmp8_ = _g_object_ref0 (_tmp4_);
#line 2272 "../lib/Widgets/SourceList.vala"
		column = _tmp8_;
#line 2272 "../lib/Widgets/SourceList.vala"
		cell_x = _tmp5_;
#line 2272 "../lib/Widgets/SourceList.vala"
		cell_y = _tmp6_;
#line 2272 "../lib/Widgets/SourceList.vala"
		if (_tmp7_) {
#line 11512 "SourceList.c"
			GraniteWidgetsSourceListExpandableItem* item = NULL;
			GraniteWidgetsSourceListDataModel* _tmp9_;
			GtkTreePath* _tmp10_;
			GraniteWidgetsSourceListItem* _tmp11_;
			GraniteWidgetsSourceListExpandableItem* _tmp12_;
			GraniteWidgetsSourceListExpandableItem* _tmp13_;
#line 2273 "../lib/Widgets/SourceList.vala"
			_tmp9_ = self->priv->_data_model;
#line 2273 "../lib/Widgets/SourceList.vala"
			_tmp10_ = path;
#line 2273 "../lib/Widgets/SourceList.vala"
			_tmp11_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp9_, _tmp10_);
#line 2273 "../lib/Widgets/SourceList.vala"
			_tmp12_ = GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp11_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp11_) : NULL;
#line 2273 "../lib/Widgets/SourceList.vala"
			if (_tmp12_ == NULL) {
#line 2273 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (_tmp11_);
#line 11531 "SourceList.c"
			}
#line 2273 "../lib/Widgets/SourceList.vala"
			item = _tmp12_;
#line 2275 "../lib/Widgets/SourceList.vala"
			_tmp13_ = item;
#line 2275 "../lib/Widgets/SourceList.vala"
			if (_tmp13_ != NULL) {
#line 11539 "SourceList.c"
				gboolean _tmp14_ = FALSE;
				GraniteWidgetsSourceListExpandableItem* _tmp15_;
				gboolean _tmp16_;
				gboolean _tmp17_;
#line 2276 "../lib/Widgets/SourceList.vala"
				_tmp15_ = item;
#line 2276 "../lib/Widgets/SourceList.vala"
				_tmp16_ = granite_widgets_source_list_item_get_selectable ((GraniteWidgetsSourceListItem*) _tmp15_);
#line 2276 "../lib/Widgets/SourceList.vala"
				_tmp17_ = _tmp16_;
#line 2276 "../lib/Widgets/SourceList.vala"
				if (!_tmp17_) {
#line 2276 "../lib/Widgets/SourceList.vala"
					_tmp14_ = TRUE;
#line 11554 "SourceList.c"
				} else {
					GraniteWidgetsSourceListDataModel* _tmp18_;
					GraniteWidgetsSourceListExpandableItem* _tmp19_;
					GtkTreePath* _tmp20_;
#line 2276 "../lib/Widgets/SourceList.vala"
					_tmp18_ = self->priv->_data_model;
#line 2276 "../lib/Widgets/SourceList.vala"
					_tmp19_ = item;
#line 2276 "../lib/Widgets/SourceList.vala"
					_tmp20_ = path;
#line 2276 "../lib/Widgets/SourceList.vala"
					_tmp14_ = granite_widgets_source_list_data_model_is_category (_tmp18_, (GraniteWidgetsSourceListItem*) _tmp19_, NULL, _tmp20_);
#line 11567 "SourceList.c"
				}
#line 2276 "../lib/Widgets/SourceList.vala"
				if (_tmp14_) {
#line 11571 "SourceList.c"
					GraniteWidgetsSourceListExpandableItem* _tmp21_;
#line 2277 "../lib/Widgets/SourceList.vala"
					_tmp21_ = item;
#line 2277 "../lib/Widgets/SourceList.vala"
					granite_widgets_source_list_tree_toggle_expansion (self, _tmp21_);
#line 11577 "SourceList.c"
				}
			}
#line 2272 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (item);
#line 11582 "SourceList.c"
		}
#line 2265 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (column);
#line 2265 "../lib/Widgets/SourceList.vala"
		__vala_GtkTreePath_free0 (path);
#line 11588 "SourceList.c"
	}
#line 2282 "../lib/Widgets/SourceList.vala"
	result = GTK_WIDGET_CLASS (granite_widgets_source_list_tree_parent_class)->button_release_event ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_view_get_type (), GtkTreeView), event);
#line 2282 "../lib/Widgets/SourceList.vala"
	return result;
#line 11594 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_real_button_press_event (GtkWidget* base,
                                                          GdkEventButton* event)
{
	GraniteWidgetsSourceListTree * self;
	GdkWindow* _tmp0_;
	GdkWindow* _tmp1_;
	GtkTreePath* path = NULL;
	GtkTreeViewColumn* column = NULL;
	gint x = 0;
	gint y = 0;
	gint cell_x = 0;
	gint cell_y = 0;
	GtkTreePath* _tmp2_ = NULL;
	GtkTreeViewColumn* _tmp3_ = NULL;
	gint _tmp4_ = 0;
	gint _tmp5_ = 0;
	gboolean _tmp6_;
	GtkTreeViewColumn* _tmp7_;
	gboolean result = FALSE;
#line 2285 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2285 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 2286 "../lib/Widgets/SourceList.vala"
	_tmp0_ = event->window;
#line 2286 "../lib/Widgets/SourceList.vala"
	_tmp1_ = gtk_tree_view_get_bin_window ((GtkTreeView*) self);
#line 2286 "../lib/Widgets/SourceList.vala"
	if (_tmp0_ != _tmp1_) {
#line 2287 "../lib/Widgets/SourceList.vala"
		result = GTK_WIDGET_CLASS (granite_widgets_source_list_tree_parent_class)->button_press_event ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_view_get_type (), GtkTreeView), event);
#line 2287 "../lib/Widgets/SourceList.vala"
		return result;
#line 11631 "SourceList.c"
	}
#line 2291 "../lib/Widgets/SourceList.vala"
	x = (gint) event->x;
#line 2291 "../lib/Widgets/SourceList.vala"
	y = (gint) event->y;
#line 2293 "../lib/Widgets/SourceList.vala"
	_tmp6_ = gtk_tree_view_get_path_at_pos ((GtkTreeView*) self, x, y, &_tmp2_, &_tmp3_, &_tmp4_, &_tmp5_);
#line 2293 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 2293 "../lib/Widgets/SourceList.vala"
	path = _tmp2_;
#line 2293 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (column);
#line 2293 "../lib/Widgets/SourceList.vala"
	_tmp7_ = _g_object_ref0 (_tmp3_);
#line 2293 "../lib/Widgets/SourceList.vala"
	column = _tmp7_;
#line 2293 "../lib/Widgets/SourceList.vala"
	cell_x = _tmp4_;
#line 2293 "../lib/Widgets/SourceList.vala"
	cell_y = _tmp5_;
#line 2293 "../lib/Widgets/SourceList.vala"
	if (_tmp6_) {
#line 11655 "SourceList.c"
		GraniteWidgetsSourceListItem* item = NULL;
		GraniteWidgetsSourceListDataModel* _tmp8_;
		GtkTreePath* _tmp9_;
		GraniteWidgetsSourceListItem* _tmp10_;
		GdkRectangle start_cell_area = {0};
		GtkTreePath* _tmp11_;
		GtkTreeViewColumn* _tmp12_;
		GdkRectangle _tmp13_ = {0};
		GdkRectangle _tmp14_;
		gboolean _tmp15_ = FALSE;
		GraniteWidgetsSourceListItem* _tmp16_;
#line 2294 "../lib/Widgets/SourceList.vala"
		_tmp8_ = self->priv->_data_model;
#line 2294 "../lib/Widgets/SourceList.vala"
		_tmp9_ = path;
#line 2294 "../lib/Widgets/SourceList.vala"
		_tmp10_ = granite_widgets_source_list_data_model_get_item_from_path (_tmp8_, _tmp9_);
#line 2294 "../lib/Widgets/SourceList.vala"
		item = _tmp10_;
#line 2298 "../lib/Widgets/SourceList.vala"
		_tmp11_ = path;
#line 2298 "../lib/Widgets/SourceList.vala"
		_tmp12_ = gtk_tree_view_get_column ((GtkTreeView*) self, 0);
#line 2298 "../lib/Widgets/SourceList.vala"
		gtk_tree_view_get_cell_area ((GtkTreeView*) self, _tmp11_, _tmp12_, &_tmp13_);
#line 2298 "../lib/Widgets/SourceList.vala"
		start_cell_area = _tmp13_;
#line 2299 "../lib/Widgets/SourceList.vala"
		_tmp14_ = start_cell_area;
#line 2299 "../lib/Widgets/SourceList.vala"
		cell_x -= _tmp14_.x;
#line 2301 "../lib/Widgets/SourceList.vala"
		_tmp16_ = item;
#line 2301 "../lib/Widgets/SourceList.vala"
		if (_tmp16_ != NULL) {
#line 11691 "SourceList.c"
			GtkTreeViewColumn* _tmp17_;
			GtkTreeViewColumn* _tmp18_;
#line 2301 "../lib/Widgets/SourceList.vala"
			_tmp17_ = column;
#line 2301 "../lib/Widgets/SourceList.vala"
			_tmp18_ = gtk_tree_view_get_column ((GtkTreeView*) self, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 2301 "../lib/Widgets/SourceList.vala"
			_tmp15_ = _tmp17_ == _tmp18_;
#line 11700 "SourceList.c"
		} else {
#line 2301 "../lib/Widgets/SourceList.vala"
			_tmp15_ = FALSE;
#line 11704 "SourceList.c"
		}
#line 2301 "../lib/Widgets/SourceList.vala"
		if (_tmp15_) {
#line 2303 "../lib/Widgets/SourceList.vala"
			granite_widgets_source_list_tree_stop_editing (self);
#line 2305 "../lib/Widgets/SourceList.vala"
			if (event->button == ((guint) GDK_BUTTON_SECONDARY)) {
#line 11712 "SourceList.c"
				GraniteWidgetsSourceListItem* _tmp19_;
#line 2306 "../lib/Widgets/SourceList.vala"
				_tmp19_ = item;
#line 2306 "../lib/Widgets/SourceList.vala"
				granite_widgets_source_list_tree_popup_context_menu (self, _tmp19_, event);
#line 2307 "../lib/Widgets/SourceList.vala"
				result = TRUE;
#line 2307 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (item);
#line 2307 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (column);
#line 2307 "../lib/Widgets/SourceList.vala"
				__vala_GtkTreePath_free0 (path);
#line 2307 "../lib/Widgets/SourceList.vala"
				return result;
#line 11728 "SourceList.c"
			} else {
#line 2308 "../lib/Widgets/SourceList.vala"
				if (event->button == ((guint) GDK_BUTTON_PRIMARY)) {
#line 11732 "SourceList.c"
					gboolean is_expandable = FALSE;
					GraniteWidgetsSourceListItem* _tmp20_;
					gboolean _tmp21_ = FALSE;
					gboolean is_category = FALSE;
					GdkEventType _tmp25_;
#line 2310 "../lib/Widgets/SourceList.vala"
					_tmp20_ = item;
#line 2310 "../lib/Widgets/SourceList.vala"
					is_expandable = GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp20_);
#line 2311 "../lib/Widgets/SourceList.vala"
					if (is_expandable) {
#line 11744 "SourceList.c"
						GraniteWidgetsSourceListDataModel* _tmp22_;
						GraniteWidgetsSourceListItem* _tmp23_;
						GtkTreePath* _tmp24_;
#line 2311 "../lib/Widgets/SourceList.vala"
						_tmp22_ = self->priv->_data_model;
#line 2311 "../lib/Widgets/SourceList.vala"
						_tmp23_ = item;
#line 2311 "../lib/Widgets/SourceList.vala"
						_tmp24_ = path;
#line 2311 "../lib/Widgets/SourceList.vala"
						_tmp21_ = granite_widgets_source_list_data_model_is_category (_tmp22_, _tmp23_, NULL, _tmp24_);
#line 11756 "SourceList.c"
					} else {
#line 2311 "../lib/Widgets/SourceList.vala"
						_tmp21_ = FALSE;
#line 11760 "SourceList.c"
					}
#line 2311 "../lib/Widgets/SourceList.vala"
					is_category = _tmp21_;
#line 2313 "../lib/Widgets/SourceList.vala"
					_tmp25_ = event->type;
#line 2313 "../lib/Widgets/SourceList.vala"
					if (_tmp25_ == GDK_BUTTON_PRESS) {
#line 2314 "../lib/Widgets/SourceList.vala"
						if (is_expandable) {
#line 11770 "SourceList.c"
							gboolean _tmp26_ = FALSE;
							gboolean _tmp34_ = FALSE;
							gboolean _tmp35_ = FALSE;
#line 2320 "../lib/Widgets/SourceList.vala"
							if (is_category) {
#line 2320 "../lib/Widgets/SourceList.vala"
								_tmp26_ = TRUE;
#line 11778 "SourceList.c"
							} else {
								gboolean _tmp27_ = FALSE;
								GraniteWidgetsSourceListItem* _tmp28_;
								gboolean _tmp29_;
								gboolean _tmp30_;
#line 2321 "../lib/Widgets/SourceList.vala"
								_tmp28_ = item;
#line 2321 "../lib/Widgets/SourceList.vala"
								_tmp29_ = granite_widgets_source_list_item_get_selectable (_tmp28_);
#line 2321 "../lib/Widgets/SourceList.vala"
								_tmp30_ = _tmp29_;
#line 2321 "../lib/Widgets/SourceList.vala"
								if (!_tmp30_) {
#line 11792 "SourceList.c"
									GtkTreeViewColumn* _tmp31_;
									GtkTreePath* _tmp32_;
									GraniteWidgetsSourceListCellRendererIcon* _tmp33_;
#line 2321 "../lib/Widgets/SourceList.vala"
									_tmp31_ = column;
#line 2321 "../lib/Widgets/SourceList.vala"
									_tmp32_ = path;
#line 2321 "../lib/Widgets/SourceList.vala"
									_tmp33_ = self->priv->activatable_cell;
#line 2321 "../lib/Widgets/SourceList.vala"
									_tmp27_ = !granite_widgets_source_list_tree_over_cell (self, _tmp31_, _tmp32_, (GtkCellRenderer*) _tmp33_, cell_x);
#line 11804 "SourceList.c"
								} else {
#line 2321 "../lib/Widgets/SourceList.vala"
									_tmp27_ = FALSE;
#line 11808 "SourceList.c"
								}
#line 2321 "../lib/Widgets/SourceList.vala"
								_tmp26_ = _tmp27_;
#line 11812 "SourceList.c"
							}
#line 2320 "../lib/Widgets/SourceList.vala"
							self->priv->unselectable_item_clicked = _tmp26_;
#line 2323 "../lib/Widgets/SourceList.vala"
							if (!self->priv->unselectable_item_clicked) {
#line 11818 "SourceList.c"
								GtkTreeViewColumn* _tmp36_;
								GtkTreePath* _tmp37_;
#line 2324 "../lib/Widgets/SourceList.vala"
								_tmp36_ = column;
#line 2324 "../lib/Widgets/SourceList.vala"
								_tmp37_ = path;
#line 2324 "../lib/Widgets/SourceList.vala"
								_tmp35_ = granite_widgets_source_list_tree_over_primary_expander (self, _tmp36_, _tmp37_, cell_x);
#line 11827 "SourceList.c"
							} else {
#line 2323 "../lib/Widgets/SourceList.vala"
								_tmp35_ = FALSE;
#line 11831 "SourceList.c"
							}
#line 2323 "../lib/Widgets/SourceList.vala"
							if (_tmp35_) {
#line 11835 "SourceList.c"
								GraniteWidgetsSourceListItem* _tmp38_;
#line 2325 "../lib/Widgets/SourceList.vala"
								_tmp38_ = item;
#line 2325 "../lib/Widgets/SourceList.vala"
								_tmp34_ = granite_widgets_source_list_tree_toggle_expansion (self, GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp38_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp38_) : NULL);
#line 11841 "SourceList.c"
							} else {
#line 2323 "../lib/Widgets/SourceList.vala"
								_tmp34_ = FALSE;
#line 11845 "SourceList.c"
							}
#line 2323 "../lib/Widgets/SourceList.vala"
							if (_tmp34_) {
#line 2326 "../lib/Widgets/SourceList.vala"
								result = TRUE;
#line 2326 "../lib/Widgets/SourceList.vala"
								_g_object_unref0 (item);
#line 2326 "../lib/Widgets/SourceList.vala"
								_g_object_unref0 (column);
#line 2326 "../lib/Widgets/SourceList.vala"
								__vala_GtkTreePath_free0 (path);
#line 2326 "../lib/Widgets/SourceList.vala"
								return result;
#line 11859 "SourceList.c"
							}
						}
					} else {
						gboolean _tmp39_ = FALSE;
						gboolean _tmp40_ = FALSE;
						gboolean _tmp41_ = FALSE;
						gboolean _tmp42_ = FALSE;
						gboolean _tmp43_ = FALSE;
						GdkEventType _tmp44_;
#line 2329 "../lib/Widgets/SourceList.vala"
						_tmp44_ = event->type;
#line 2329 "../lib/Widgets/SourceList.vala"
						if (_tmp44_ == GDK_2BUTTON_PRESS) {
#line 2330 "../lib/Widgets/SourceList.vala"
							_tmp43_ = !is_category;
#line 11875 "SourceList.c"
						} else {
#line 2329 "../lib/Widgets/SourceList.vala"
							_tmp43_ = FALSE;
#line 11879 "SourceList.c"
						}
#line 2329 "../lib/Widgets/SourceList.vala"
						if (_tmp43_) {
#line 11883 "SourceList.c"
							GraniteWidgetsSourceListItem* _tmp45_;
							gboolean _tmp46_;
							gboolean _tmp47_;
#line 2331 "../lib/Widgets/SourceList.vala"
							_tmp45_ = item;
#line 2331 "../lib/Widgets/SourceList.vala"
							_tmp46_ = granite_widgets_source_list_item_get_editable (_tmp45_);
#line 2331 "../lib/Widgets/SourceList.vala"
							_tmp47_ = _tmp46_;
#line 2331 "../lib/Widgets/SourceList.vala"
							_tmp42_ = _tmp47_;
#line 11895 "SourceList.c"
						} else {
#line 2329 "../lib/Widgets/SourceList.vala"
							_tmp42_ = FALSE;
#line 11899 "SourceList.c"
						}
#line 2329 "../lib/Widgets/SourceList.vala"
						if (_tmp42_) {
#line 11903 "SourceList.c"
							GraniteWidgetsSourceListItem* _tmp48_;
							gboolean _tmp49_;
							gboolean _tmp50_;
#line 2332 "../lib/Widgets/SourceList.vala"
							_tmp48_ = item;
#line 2332 "../lib/Widgets/SourceList.vala"
							_tmp49_ = granite_widgets_source_list_item_get_selectable (_tmp48_);
#line 2332 "../lib/Widgets/SourceList.vala"
							_tmp50_ = _tmp49_;
#line 2332 "../lib/Widgets/SourceList.vala"
							_tmp41_ = _tmp50_;
#line 11915 "SourceList.c"
						} else {
#line 2329 "../lib/Widgets/SourceList.vala"
							_tmp41_ = FALSE;
#line 11919 "SourceList.c"
						}
#line 2329 "../lib/Widgets/SourceList.vala"
						if (_tmp41_) {
#line 11923 "SourceList.c"
							GtkTreeViewColumn* _tmp51_;
							GtkTreePath* _tmp52_;
							GtkCellRendererText* _tmp53_;
#line 2333 "../lib/Widgets/SourceList.vala"
							_tmp51_ = column;
#line 2333 "../lib/Widgets/SourceList.vala"
							_tmp52_ = path;
#line 2333 "../lib/Widgets/SourceList.vala"
							_tmp53_ = self->priv->text_cell;
#line 2333 "../lib/Widgets/SourceList.vala"
							_tmp40_ = granite_widgets_source_list_tree_over_cell (self, _tmp51_, _tmp52_, (GtkCellRenderer*) _tmp53_, cell_x);
#line 11935 "SourceList.c"
						} else {
#line 2329 "../lib/Widgets/SourceList.vala"
							_tmp40_ = FALSE;
#line 11939 "SourceList.c"
						}
#line 2329 "../lib/Widgets/SourceList.vala"
						if (_tmp40_) {
#line 11943 "SourceList.c"
							GraniteWidgetsSourceListItem* _tmp54_;
#line 2334 "../lib/Widgets/SourceList.vala"
							_tmp54_ = item;
#line 2334 "../lib/Widgets/SourceList.vala"
							_tmp39_ = granite_widgets_source_list_tree_start_editing_item (self, _tmp54_);
#line 11949 "SourceList.c"
						} else {
#line 2329 "../lib/Widgets/SourceList.vala"
							_tmp39_ = FALSE;
#line 11953 "SourceList.c"
						}
#line 2328 "../lib/Widgets/SourceList.vala"
						if (_tmp39_) {
#line 2337 "../lib/Widgets/SourceList.vala"
							result = TRUE;
#line 2337 "../lib/Widgets/SourceList.vala"
							_g_object_unref0 (item);
#line 2337 "../lib/Widgets/SourceList.vala"
							_g_object_unref0 (column);
#line 2337 "../lib/Widgets/SourceList.vala"
							__vala_GtkTreePath_free0 (path);
#line 2337 "../lib/Widgets/SourceList.vala"
							return result;
#line 11967 "SourceList.c"
						}
					}
				}
			}
		}
#line 2293 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (item);
#line 11975 "SourceList.c"
	}
#line 2343 "../lib/Widgets/SourceList.vala"
	result = GTK_WIDGET_CLASS (granite_widgets_source_list_tree_parent_class)->button_press_event ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_tree_view_get_type (), GtkTreeView), event);
#line 2343 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (column);
#line 2343 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 2343 "../lib/Widgets/SourceList.vala"
	return result;
#line 11985 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_over_primary_expander (GraniteWidgetsSourceListTree* self,
                                                        GtkTreeViewColumn* col,
                                                        GtkTreePath* path,
                                                        gint x)
{
	GtkTreeIter iter = {0};
	GtkTreeModel* _tmp0_;
	GtkTreeModel* _tmp1_;
	GtkTreeIter _tmp2_ = {0};
	gboolean _tmp3_;
	GraniteWidgetsCellRendererExpander* _tmp4_;
	GtkTreeModel* _tmp5_;
	GtkTreeModel* _tmp6_;
	GtkTreeIter _tmp7_;
	GraniteWidgetsCellRendererExpander* _tmp8_;
	gboolean _tmp9_;
	gboolean _tmp10_;
	GtkTreeModel* _tmp11_;
	GtkTreeModel* _tmp12_;
	GtkTreeIter _tmp13_;
	gint indentation_level = 0;
	GraniteWidgetsSourceListCellRendererSpacer* last_spacer_cell = NULL;
	GeeHashMap* _tmp14_;
	gpointer _tmp15_;
	GraniteWidgetsSourceListCellRendererSpacer* _tmp16_;
	gboolean result = FALSE;
#line 2346 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2346 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (col != NULL, FALSE);
#line 2346 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 2348 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_tree_view_get_model ((GtkTreeView*) self);
#line 2348 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 2348 "../lib/Widgets/SourceList.vala"
	_tmp3_ = gtk_tree_model_get_iter (_tmp1_, &_tmp2_, path);
#line 2348 "../lib/Widgets/SourceList.vala"
	iter = _tmp2_;
#line 2348 "../lib/Widgets/SourceList.vala"
	if (!_tmp3_) {
#line 2349 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 2349 "../lib/Widgets/SourceList.vala"
		return result;
#line 12035 "SourceList.c"
	}
#line 2352 "../lib/Widgets/SourceList.vala"
	_tmp4_ = self->priv->primary_expander_cell;
#line 2352 "../lib/Widgets/SourceList.vala"
	_tmp5_ = gtk_tree_view_get_model ((GtkTreeView*) self);
#line 2352 "../lib/Widgets/SourceList.vala"
	_tmp6_ = _tmp5_;
#line 2352 "../lib/Widgets/SourceList.vala"
	_tmp7_ = iter;
#line 2352 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_expander_cell_data_func (self, (GtkCellLayout*) col, (GtkCellRenderer*) _tmp4_, _tmp6_, &_tmp7_);
#line 2354 "../lib/Widgets/SourceList.vala"
	_tmp8_ = self->priv->primary_expander_cell;
#line 2354 "../lib/Widgets/SourceList.vala"
	_tmp9_ = gtk_cell_renderer_get_visible ((GtkCellRenderer*) _tmp8_);
#line 2354 "../lib/Widgets/SourceList.vala"
	_tmp10_ = _tmp9_;
#line 2354 "../lib/Widgets/SourceList.vala"
	if (!_tmp10_) {
#line 2355 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 2355 "../lib/Widgets/SourceList.vala"
		return result;
#line 12059 "SourceList.c"
	}
#line 2358 "../lib/Widgets/SourceList.vala"
	_tmp11_ = gtk_tree_view_get_model ((GtkTreeView*) self);
#line 2358 "../lib/Widgets/SourceList.vala"
	_tmp12_ = _tmp11_;
#line 2358 "../lib/Widgets/SourceList.vala"
	_tmp13_ = iter;
#line 2358 "../lib/Widgets/SourceList.vala"
	if (gtk_tree_model_iter_n_children (_tmp12_, &_tmp13_) < 1) {
#line 2359 "../lib/Widgets/SourceList.vala"
		result = FALSE;
#line 2359 "../lib/Widgets/SourceList.vala"
		return result;
#line 12073 "SourceList.c"
	}
#line 2367 "../lib/Widgets/SourceList.vala"
	indentation_level = gtk_tree_path_get_depth (path);
#line 2368 "../lib/Widgets/SourceList.vala"
	_tmp14_ = self->priv->spacer_cells;
#line 2368 "../lib/Widgets/SourceList.vala"
	_tmp15_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp14_, (gpointer) ((gintptr) indentation_level));
#line 2368 "../lib/Widgets/SourceList.vala"
	last_spacer_cell = (GraniteWidgetsSourceListCellRendererSpacer*) _tmp15_;
#line 2370 "../lib/Widgets/SourceList.vala"
	_tmp16_ = last_spacer_cell;
#line 2370 "../lib/Widgets/SourceList.vala"
	if (_tmp16_ != NULL) {
#line 12087 "SourceList.c"
		gint cell_x = 0;
		gint cell_width = 0;
		GraniteWidgetsSourceListCellRendererSpacer* _tmp17_;
		gint _tmp18_ = 0;
		gint _tmp19_ = 0;
		gboolean _tmp20_;
#line 2373 "../lib/Widgets/SourceList.vala"
		_tmp17_ = last_spacer_cell;
#line 2373 "../lib/Widgets/SourceList.vala"
		_tmp20_ = gtk_tree_view_column_cell_get_position (col, (GtkCellRenderer*) _tmp17_, &_tmp18_, &_tmp19_);
#line 2373 "../lib/Widgets/SourceList.vala"
		cell_x = _tmp18_;
#line 2373 "../lib/Widgets/SourceList.vala"
		cell_width = _tmp19_;
#line 2373 "../lib/Widgets/SourceList.vala"
		if (_tmp20_) {
#line 12104 "SourceList.c"
			gint expander_width = 0;
			GraniteWidgetsCellRendererExpander* _tmp21_;
			GtkTextDirection dir = 0;
			GtkTextDirection _tmp22_;
			GtkTextDirection _tmp23_;
			gboolean _tmp25_ = FALSE;
#line 2375 "../lib/Widgets/SourceList.vala"
			_tmp21_ = self->priv->primary_expander_cell;
#line 2375 "../lib/Widgets/SourceList.vala"
			expander_width = granite_widgets_source_list_tree_get_cell_width (self, (GtkCellRenderer*) _tmp21_) + 1;
#line 2377 "../lib/Widgets/SourceList.vala"
			dir = gtk_widget_get_direction ((GtkWidget*) self);
#line 2378 "../lib/Widgets/SourceList.vala"
			_tmp22_ = dir;
#line 2378 "../lib/Widgets/SourceList.vala"
			if (_tmp22_ == GTK_TEXT_DIR_NONE) {
#line 2379 "../lib/Widgets/SourceList.vala"
				dir = gtk_widget_get_default_direction ();
#line 12123 "SourceList.c"
			}
#line 2382 "../lib/Widgets/SourceList.vala"
			_tmp23_ = dir;
#line 2382 "../lib/Widgets/SourceList.vala"
			if (_tmp23_ == GTK_TEXT_DIR_LTR) {
#line 12129 "SourceList.c"
				gint indentation_offset = 0;
				gboolean _tmp24_ = FALSE;
#line 2383 "../lib/Widgets/SourceList.vala"
				indentation_offset = cell_x + cell_width;
#line 2384 "../lib/Widgets/SourceList.vala"
				if (x >= indentation_offset) {
#line 2384 "../lib/Widgets/SourceList.vala"
					_tmp24_ = x <= (indentation_offset + expander_width);
#line 12138 "SourceList.c"
				} else {
#line 2384 "../lib/Widgets/SourceList.vala"
					_tmp24_ = FALSE;
#line 12142 "SourceList.c"
				}
#line 2384 "../lib/Widgets/SourceList.vala"
				result = _tmp24_;
#line 2384 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (last_spacer_cell);
#line 2384 "../lib/Widgets/SourceList.vala"
				return result;
#line 12150 "SourceList.c"
			}
#line 2387 "../lib/Widgets/SourceList.vala"
			if (x <= cell_x) {
#line 2387 "../lib/Widgets/SourceList.vala"
				_tmp25_ = x >= (cell_x - expander_width);
#line 12156 "SourceList.c"
			} else {
#line 2387 "../lib/Widgets/SourceList.vala"
				_tmp25_ = FALSE;
#line 12160 "SourceList.c"
			}
#line 2387 "../lib/Widgets/SourceList.vala"
			result = _tmp25_;
#line 2387 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (last_spacer_cell);
#line 2387 "../lib/Widgets/SourceList.vala"
			return result;
#line 12168 "SourceList.c"
		}
	}
#line 2391 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 2391 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (last_spacer_cell);
#line 2391 "../lib/Widgets/SourceList.vala"
	return result;
#line 12177 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_over_cell (GraniteWidgetsSourceListTree* self,
                                            GtkTreeViewColumn* col,
                                            GtkTreePath* path,
                                            GtkCellRenderer* cell,
                                            gint x)
{
	gint cell_x = 0;
	gint cell_width = 0;
	gboolean found = FALSE;
	gint _tmp0_ = 0;
	gint _tmp1_ = 0;
	gboolean _tmp2_;
	gboolean _tmp3_ = FALSE;
	gboolean _tmp4_ = FALSE;
	gboolean result = FALSE;
#line 2394 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2394 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (col != NULL, FALSE);
#line 2394 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 2394 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (cell != NULL, FALSE);
#line 2396 "../lib/Widgets/SourceList.vala"
	_tmp2_ = gtk_tree_view_column_cell_get_position (col, cell, &_tmp0_, &_tmp1_);
#line 2396 "../lib/Widgets/SourceList.vala"
	cell_x = _tmp0_;
#line 2396 "../lib/Widgets/SourceList.vala"
	cell_width = _tmp1_;
#line 2396 "../lib/Widgets/SourceList.vala"
	found = _tmp2_;
#line 2397 "../lib/Widgets/SourceList.vala"
	if (found) {
#line 2397 "../lib/Widgets/SourceList.vala"
		_tmp4_ = x > cell_x;
#line 12216 "SourceList.c"
	} else {
#line 2397 "../lib/Widgets/SourceList.vala"
		_tmp4_ = FALSE;
#line 12220 "SourceList.c"
	}
#line 2397 "../lib/Widgets/SourceList.vala"
	if (_tmp4_) {
#line 2397 "../lib/Widgets/SourceList.vala"
		_tmp3_ = x < (cell_x + cell_width);
#line 12226 "SourceList.c"
	} else {
#line 2397 "../lib/Widgets/SourceList.vala"
		_tmp3_ = FALSE;
#line 12230 "SourceList.c"
	}
#line 2397 "../lib/Widgets/SourceList.vala"
	result = _tmp3_;
#line 2397 "../lib/Widgets/SourceList.vala"
	return result;
#line 12236 "SourceList.c"
}

static gint
granite_widgets_source_list_tree_get_cell_width (GraniteWidgetsSourceListTree* self,
                                                 GtkCellRenderer* cell_renderer)
{
	GtkRequisition min_req = {0};
	GtkRequisition _tmp0_ = {0};
	GtkRequisition _tmp1_;
	gint result = 0;
#line 2400 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 2400 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (cell_renderer != NULL, 0);
#line 2402 "../lib/Widgets/SourceList.vala"
	gtk_cell_renderer_get_preferred_size (cell_renderer, (GtkWidget*) self, &_tmp0_, NULL);
#line 2402 "../lib/Widgets/SourceList.vala"
	min_req = _tmp0_;
#line 2403 "../lib/Widgets/SourceList.vala"
	_tmp1_ = min_req;
#line 2403 "../lib/Widgets/SourceList.vala"
	result = _tmp1_.width;
#line 2403 "../lib/Widgets/SourceList.vala"
	return result;
#line 12261 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_real_popup_menu (GtkWidget* base)
{
	GraniteWidgetsSourceListTree * self;
	gboolean result = FALSE;
#line 2406 "../lib/Widgets/SourceList.vala"
	self = (GraniteWidgetsSourceListTree*) base;
#line 2407 "../lib/Widgets/SourceList.vala"
	result = granite_widgets_source_list_tree_popup_context_menu (self, NULL, NULL);
#line 2407 "../lib/Widgets/SourceList.vala"
	return result;
#line 12275 "SourceList.c"
}

static gboolean
granite_widgets_source_list_tree_popup_context_menu (GraniteWidgetsSourceListTree* self,
                                                     GraniteWidgetsSourceListItem* item,
                                                     GdkEventButton* event)
{
	gboolean result = FALSE;
#line 2410 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 2411 "../lib/Widgets/SourceList.vala"
	if (item == NULL) {
#line 12288 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp0_;
		GraniteWidgetsSourceListItem* _tmp1_;
#line 2412 "../lib/Widgets/SourceList.vala"
		_tmp0_ = granite_widgets_source_list_tree_get_selected_item (self);
#line 2412 "../lib/Widgets/SourceList.vala"
		_tmp1_ = _tmp0_;
#line 2412 "../lib/Widgets/SourceList.vala"
		item = _tmp1_;
#line 12297 "SourceList.c"
	}
#line 2414 "../lib/Widgets/SourceList.vala"
	if (item != NULL) {
#line 12301 "SourceList.c"
		GtkMenu* menu = NULL;
		GtkMenu* _tmp2_;
		GtkMenu* _tmp3_;
#line 2415 "../lib/Widgets/SourceList.vala"
		_tmp2_ = granite_widgets_source_list_item_get_context_menu (item);
#line 2415 "../lib/Widgets/SourceList.vala"
		menu = _tmp2_;
#line 2416 "../lib/Widgets/SourceList.vala"
		_tmp3_ = menu;
#line 2416 "../lib/Widgets/SourceList.vala"
		if (_tmp3_ != NULL) {
#line 12313 "SourceList.c"
			GtkMenu* _tmp4_;
			GtkMenu* _tmp5_;
#line 2417 "../lib/Widgets/SourceList.vala"
			_tmp4_ = menu;
#line 2417 "../lib/Widgets/SourceList.vala"
			g_object_set (_tmp4_, "attach-widget", (GtkWidget*) self, NULL);
#line 2418 "../lib/Widgets/SourceList.vala"
			_tmp5_ = menu;
#line 2418 "../lib/Widgets/SourceList.vala"
			gtk_menu_popup_at_pointer (_tmp5_, (GdkEvent*) event);
#line 2419 "../lib/Widgets/SourceList.vala"
			if (event == NULL) {
#line 12326 "SourceList.c"
				GtkMenu* _tmp6_;
#line 2420 "../lib/Widgets/SourceList.vala"
				_tmp6_ = menu;
#line 2420 "../lib/Widgets/SourceList.vala"
				gtk_menu_shell_select_first ((GtkMenuShell*) _tmp6_, FALSE);
#line 12332 "SourceList.c"
			}
#line 2423 "../lib/Widgets/SourceList.vala"
			result = TRUE;
#line 2423 "../lib/Widgets/SourceList.vala"
			_g_object_unref0 (menu);
#line 2423 "../lib/Widgets/SourceList.vala"
			return result;
#line 12340 "SourceList.c"
		}
#line 2414 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (menu);
#line 12344 "SourceList.c"
	}
#line 2427 "../lib/Widgets/SourceList.vala"
	result = FALSE;
#line 2427 "../lib/Widgets/SourceList.vala"
	return result;
#line 12350 "SourceList.c"
}

static GraniteWidgetsSourceListItem*
granite_widgets_source_list_tree_get_item_from_model (GtkTreeModel* model,
                                                      GtkTreeIter* iter)
{
	GraniteWidgetsSourceListDataModel* data_model = NULL;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GtkTreeIter _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
	GraniteWidgetsSourceListItem* result = NULL;
#line 2430 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (model != NULL, NULL);
#line 2430 "../lib/Widgets/SourceList.vala"
	g_return_val_if_fail (iter != NULL, NULL);
#line 2431 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_DATA_MODEL (model) ? ((GraniteWidgetsSourceListDataModel*) model) : NULL);
#line 2431 "../lib/Widgets/SourceList.vala"
	data_model = _tmp0_;
#line 2432 "../lib/Widgets/SourceList.vala"
	_vala_assert (data_model != NULL, "data_model != null");
#line 2433 "../lib/Widgets/SourceList.vala"
	_tmp1_ = *iter;
#line 2433 "../lib/Widgets/SourceList.vala"
	_tmp2_ = granite_widgets_source_list_data_model_get_item (data_model, &_tmp1_);
#line 2433 "../lib/Widgets/SourceList.vala"
	result = _tmp2_;
#line 2433 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (data_model);
#line 2433 "../lib/Widgets/SourceList.vala"
	return result;
#line 12382 "SourceList.c"
}

static void
granite_widgets_source_list_tree_spacer_cell_data_func (GtkCellLayout* layout,
                                                        GtkCellRenderer* renderer,
                                                        GtkTreeModel* model,
                                                        GtkTreeIter* iter)
{
	GraniteWidgetsSourceListCellRendererSpacer* spacer = NULL;
	GraniteWidgetsSourceListCellRendererSpacer* _tmp0_;
	GraniteWidgetsSourceListCellRendererSpacer* _tmp1_;
	GraniteWidgetsSourceListCellRendererSpacer* _tmp2_;
	gint _tmp3_;
	gint _tmp4_;
	GtkTreePath* path = NULL;
	GtkTreeIter _tmp5_;
	GtkTreePath* _tmp6_;
	gint level = 0;
	GtkTreePath* _tmp7_;
	GraniteWidgetsSourceListCellRendererSpacer* _tmp9_;
	gint _tmp10_;
	gint _tmp11_;
#line 2436 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (layout != NULL);
#line 2436 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (renderer != NULL);
#line 2436 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (model != NULL);
#line 2436 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2442 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_CELL_RENDERER_SPACER (renderer) ? ((GraniteWidgetsSourceListCellRendererSpacer*) renderer) : NULL);
#line 2442 "../lib/Widgets/SourceList.vala"
	spacer = _tmp0_;
#line 2443 "../lib/Widgets/SourceList.vala"
	_tmp1_ = spacer;
#line 2443 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "spacer != null");
#line 2444 "../lib/Widgets/SourceList.vala"
	_tmp2_ = spacer;
#line 2444 "../lib/Widgets/SourceList.vala"
	_tmp3_ = granite_widgets_source_list_cell_renderer_spacer_get_level (_tmp2_);
#line 2444 "../lib/Widgets/SourceList.vala"
	_tmp4_ = _tmp3_;
#line 2444 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp4_ > 0, "spacer.level > 0");
#line 2446 "../lib/Widgets/SourceList.vala"
	_tmp5_ = *iter;
#line 2446 "../lib/Widgets/SourceList.vala"
	_tmp6_ = gtk_tree_model_get_path (model, &_tmp5_);
#line 2446 "../lib/Widgets/SourceList.vala"
	path = _tmp6_;
#line 2448 "../lib/Widgets/SourceList.vala"
	level = -1;
#line 2449 "../lib/Widgets/SourceList.vala"
	_tmp7_ = path;
#line 2449 "../lib/Widgets/SourceList.vala"
	if (_tmp7_ != NULL) {
#line 12441 "SourceList.c"
		GtkTreePath* _tmp8_;
#line 2450 "../lib/Widgets/SourceList.vala"
		_tmp8_ = path;
#line 2450 "../lib/Widgets/SourceList.vala"
		level = gtk_tree_path_get_depth (_tmp8_);
#line 12447 "SourceList.c"
	}
#line 2452 "../lib/Widgets/SourceList.vala"
	_tmp9_ = spacer;
#line 2452 "../lib/Widgets/SourceList.vala"
	_tmp10_ = granite_widgets_source_list_cell_renderer_spacer_get_level (_tmp9_);
#line 2452 "../lib/Widgets/SourceList.vala"
	_tmp11_ = _tmp10_;
#line 2452 "../lib/Widgets/SourceList.vala"
	gtk_cell_renderer_set_visible (renderer, _tmp11_ <= level);
#line 2436 "../lib/Widgets/SourceList.vala"
	__vala_GtkTreePath_free0 (path);
#line 2436 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (spacer);
#line 12461 "SourceList.c"
}

static void
granite_widgets_source_list_tree_name_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                      GtkCellLayout* layout,
                                                      GtkCellRenderer* renderer,
                                                      GtkTreeModel* model,
                                                      GtkTreeIter* iter)
{
	GtkCellRendererText* text_renderer = NULL;
	GtkCellRendererText* _tmp0_;
	GtkCellRendererText* _tmp1_;
	GString* text = NULL;
	GString* _tmp2_;
	PangoWeight weight = 0;
	gboolean use_markup = FALSE;
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeIter _tmp3_;
	GraniteWidgetsSourceListItem* _tmp4_;
	GraniteWidgetsSourceListItem* _tmp5_;
	GtkCellRendererText* _tmp20_;
	PangoWeight _tmp21_;
#line 2455 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2455 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (layout != NULL);
#line 2455 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (renderer != NULL);
#line 2455 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (model != NULL);
#line 2455 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2461 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (renderer, gtk_cell_renderer_text_get_type ()) ? ((GtkCellRendererText*) renderer) : NULL);
#line 2461 "../lib/Widgets/SourceList.vala"
	text_renderer = _tmp0_;
#line 2462 "../lib/Widgets/SourceList.vala"
	_tmp1_ = text_renderer;
#line 2462 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "text_renderer != null");
#line 2464 "../lib/Widgets/SourceList.vala"
	_tmp2_ = g_string_new ("");
#line 2464 "../lib/Widgets/SourceList.vala"
	text = _tmp2_;
#line 2465 "../lib/Widgets/SourceList.vala"
	weight = PANGO_WEIGHT_NORMAL;
#line 2466 "../lib/Widgets/SourceList.vala"
	use_markup = FALSE;
#line 2468 "../lib/Widgets/SourceList.vala"
	_tmp3_ = *iter;
#line 2468 "../lib/Widgets/SourceList.vala"
	_tmp4_ = granite_widgets_source_list_tree_get_item_from_model (model, &_tmp3_);
#line 2468 "../lib/Widgets/SourceList.vala"
	item = _tmp4_;
#line 2469 "../lib/Widgets/SourceList.vala"
	_tmp5_ = item;
#line 2469 "../lib/Widgets/SourceList.vala"
	if (_tmp5_ != NULL) {
#line 12520 "SourceList.c"
		GraniteWidgetsSourceListItem* _tmp6_;
		const gchar* _tmp7_;
		const gchar* _tmp8_;
		GraniteWidgetsSourceListDataModel* _tmp17_;
		GraniteWidgetsSourceListItem* _tmp18_;
		GtkTreeIter _tmp19_;
#line 2470 "../lib/Widgets/SourceList.vala"
		_tmp6_ = item;
#line 2470 "../lib/Widgets/SourceList.vala"
		_tmp7_ = granite_widgets_source_list_item_get_markup (_tmp6_);
#line 2470 "../lib/Widgets/SourceList.vala"
		_tmp8_ = _tmp7_;
#line 2470 "../lib/Widgets/SourceList.vala"
		if (_tmp8_ != NULL) {
#line 12535 "SourceList.c"
			GString* _tmp9_;
			GraniteWidgetsSourceListItem* _tmp10_;
			const gchar* _tmp11_;
			const gchar* _tmp12_;
#line 2471 "../lib/Widgets/SourceList.vala"
			_tmp9_ = text;
#line 2471 "../lib/Widgets/SourceList.vala"
			_tmp10_ = item;
#line 2471 "../lib/Widgets/SourceList.vala"
			_tmp11_ = granite_widgets_source_list_item_get_markup (_tmp10_);
#line 2471 "../lib/Widgets/SourceList.vala"
			_tmp12_ = _tmp11_;
#line 2471 "../lib/Widgets/SourceList.vala"
			g_string_append (_tmp9_, _tmp12_);
#line 2472 "../lib/Widgets/SourceList.vala"
			use_markup = TRUE;
#line 12552 "SourceList.c"
		} else {
			GString* _tmp13_;
			GraniteWidgetsSourceListItem* _tmp14_;
			const gchar* _tmp15_;
			const gchar* _tmp16_;
#line 2474 "../lib/Widgets/SourceList.vala"
			_tmp13_ = text;
#line 2474 "../lib/Widgets/SourceList.vala"
			_tmp14_ = item;
#line 2474 "../lib/Widgets/SourceList.vala"
			_tmp15_ = granite_widgets_source_list_item_get_name (_tmp14_);
#line 2474 "../lib/Widgets/SourceList.vala"
			_tmp16_ = _tmp15_;
#line 2474 "../lib/Widgets/SourceList.vala"
			g_string_append (_tmp13_, _tmp16_);
#line 12568 "SourceList.c"
		}
#line 2477 "../lib/Widgets/SourceList.vala"
		_tmp17_ = self->priv->_data_model;
#line 2477 "../lib/Widgets/SourceList.vala"
		_tmp18_ = item;
#line 2477 "../lib/Widgets/SourceList.vala"
		_tmp19_ = *iter;
#line 2477 "../lib/Widgets/SourceList.vala"
		if (granite_widgets_source_list_data_model_is_category (_tmp17_, _tmp18_, &_tmp19_, NULL)) {
#line 2478 "../lib/Widgets/SourceList.vala"
			weight = PANGO_WEIGHT_BOLD;
#line 12580 "SourceList.c"
		}
	}
#line 2481 "../lib/Widgets/SourceList.vala"
	_tmp20_ = text_renderer;
#line 2481 "../lib/Widgets/SourceList.vala"
	_tmp21_ = weight;
#line 2481 "../lib/Widgets/SourceList.vala"
	g_object_set (_tmp20_, "weight", (gint) _tmp21_, NULL);
#line 2482 "../lib/Widgets/SourceList.vala"
	if (use_markup) {
#line 12591 "SourceList.c"
		GtkCellRendererText* _tmp22_;
		GString* _tmp23_;
		const gchar* _tmp24_;
#line 2483 "../lib/Widgets/SourceList.vala"
		_tmp22_ = text_renderer;
#line 2483 "../lib/Widgets/SourceList.vala"
		_tmp23_ = text;
#line 2483 "../lib/Widgets/SourceList.vala"
		_tmp24_ = _tmp23_->str;
#line 2483 "../lib/Widgets/SourceList.vala"
		g_object_set (_tmp22_, "markup", _tmp24_, NULL);
#line 12603 "SourceList.c"
	} else {
		GtkCellRendererText* _tmp25_;
		GString* _tmp26_;
		const gchar* _tmp27_;
#line 2485 "../lib/Widgets/SourceList.vala"
		_tmp25_ = text_renderer;
#line 2485 "../lib/Widgets/SourceList.vala"
		_tmp26_ = text;
#line 2485 "../lib/Widgets/SourceList.vala"
		_tmp27_ = _tmp26_->str;
#line 2485 "../lib/Widgets/SourceList.vala"
		g_object_set (_tmp25_, "text", _tmp27_, NULL);
#line 12616 "SourceList.c"
	}
#line 2455 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 2455 "../lib/Widgets/SourceList.vala"
	_g_string_free0 (text);
#line 2455 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (text_renderer);
#line 12624 "SourceList.c"
}

static void
granite_widgets_source_list_tree_badge_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                       GtkCellLayout* layout,
                                                       GtkCellRenderer* renderer,
                                                       GtkTreeModel* model,
                                                       GtkTreeIter* iter)
{
	GraniteWidgetsCellRendererBadge* badge_renderer = NULL;
	GraniteWidgetsCellRendererBadge* _tmp0_;
	GraniteWidgetsCellRendererBadge* _tmp1_;
	gchar* text = NULL;
	gchar* _tmp2_;
	gboolean visible = FALSE;
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeIter _tmp3_;
	GraniteWidgetsSourceListItem* _tmp4_;
	GraniteWidgetsSourceListItem* _tmp5_;
	GraniteWidgetsCellRendererBadge* _tmp23_;
	GraniteWidgetsCellRendererBadge* _tmp24_;
	const gchar* _tmp25_;
#line 2489 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2489 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (layout != NULL);
#line 2489 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (renderer != NULL);
#line 2489 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (model != NULL);
#line 2489 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2495 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (GRANITE_WIDGETS_IS_CELL_RENDERER_BADGE (renderer) ? ((GraniteWidgetsCellRendererBadge*) renderer) : NULL);
#line 2495 "../lib/Widgets/SourceList.vala"
	badge_renderer = _tmp0_;
#line 2496 "../lib/Widgets/SourceList.vala"
	_tmp1_ = badge_renderer;
#line 2496 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "badge_renderer != null");
#line 2498 "../lib/Widgets/SourceList.vala"
	_tmp2_ = g_strdup ("");
#line 2498 "../lib/Widgets/SourceList.vala"
	text = _tmp2_;
#line 2499 "../lib/Widgets/SourceList.vala"
	visible = FALSE;
#line 2501 "../lib/Widgets/SourceList.vala"
	_tmp3_ = *iter;
#line 2501 "../lib/Widgets/SourceList.vala"
	_tmp4_ = granite_widgets_source_list_tree_get_item_from_model (model, &_tmp3_);
#line 2501 "../lib/Widgets/SourceList.vala"
	item = _tmp4_;
#line 2502 "../lib/Widgets/SourceList.vala"
	_tmp5_ = item;
#line 2502 "../lib/Widgets/SourceList.vala"
	if (_tmp5_ != NULL) {
#line 12681 "SourceList.c"
		gboolean _tmp6_ = FALSE;
		gboolean _tmp7_ = FALSE;
		GraniteWidgetsSourceListDataModel* _tmp8_;
		GraniteWidgetsSourceListItem* _tmp9_;
		GtkTreeIter _tmp10_;
#line 2504 "../lib/Widgets/SourceList.vala"
		_tmp8_ = self->priv->_data_model;
#line 2504 "../lib/Widgets/SourceList.vala"
		_tmp9_ = item;
#line 2504 "../lib/Widgets/SourceList.vala"
		_tmp10_ = *iter;
#line 2504 "../lib/Widgets/SourceList.vala"
		if (!granite_widgets_source_list_data_model_is_category (_tmp8_, _tmp9_, &_tmp10_, NULL)) {
#line 12695 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp11_;
			const gchar* _tmp12_;
			const gchar* _tmp13_;
#line 2505 "../lib/Widgets/SourceList.vala"
			_tmp11_ = item;
#line 2505 "../lib/Widgets/SourceList.vala"
			_tmp12_ = granite_widgets_source_list_item_get_badge (_tmp11_);
#line 2505 "../lib/Widgets/SourceList.vala"
			_tmp13_ = _tmp12_;
#line 2505 "../lib/Widgets/SourceList.vala"
			_tmp7_ = _tmp13_ != NULL;
#line 12707 "SourceList.c"
		} else {
#line 2504 "../lib/Widgets/SourceList.vala"
			_tmp7_ = FALSE;
#line 12711 "SourceList.c"
		}
#line 2504 "../lib/Widgets/SourceList.vala"
		if (_tmp7_) {
#line 12715 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp14_;
			const gchar* _tmp15_;
			const gchar* _tmp16_;
			gchar* _tmp17_;
			gchar* _tmp18_;
#line 2506 "../lib/Widgets/SourceList.vala"
			_tmp14_ = item;
#line 2506 "../lib/Widgets/SourceList.vala"
			_tmp15_ = granite_widgets_source_list_item_get_badge (_tmp14_);
#line 2506 "../lib/Widgets/SourceList.vala"
			_tmp16_ = _tmp15_;
#line 2506 "../lib/Widgets/SourceList.vala"
			_tmp17_ = string_strip (_tmp16_);
#line 2506 "../lib/Widgets/SourceList.vala"
			_tmp18_ = _tmp17_;
#line 2506 "../lib/Widgets/SourceList.vala"
			_tmp6_ = g_strcmp0 (_tmp18_, "") != 0;
#line 2506 "../lib/Widgets/SourceList.vala"
			_g_free0 (_tmp18_);
#line 12735 "SourceList.c"
		} else {
#line 2504 "../lib/Widgets/SourceList.vala"
			_tmp6_ = FALSE;
#line 12739 "SourceList.c"
		}
#line 2504 "../lib/Widgets/SourceList.vala"
		visible = _tmp6_;
#line 2508 "../lib/Widgets/SourceList.vala"
		if (visible) {
#line 12745 "SourceList.c"
			GraniteWidgetsSourceListItem* _tmp19_;
			const gchar* _tmp20_;
			const gchar* _tmp21_;
			gchar* _tmp22_;
#line 2509 "../lib/Widgets/SourceList.vala"
			_tmp19_ = item;
#line 2509 "../lib/Widgets/SourceList.vala"
			_tmp20_ = granite_widgets_source_list_item_get_badge (_tmp19_);
#line 2509 "../lib/Widgets/SourceList.vala"
			_tmp21_ = _tmp20_;
#line 2509 "../lib/Widgets/SourceList.vala"
			_tmp22_ = g_strdup (_tmp21_);
#line 2509 "../lib/Widgets/SourceList.vala"
			_g_free0 (text);
#line 2509 "../lib/Widgets/SourceList.vala"
			text = _tmp22_;
#line 12762 "SourceList.c"
		}
	}
#line 2512 "../lib/Widgets/SourceList.vala"
	_tmp23_ = badge_renderer;
#line 2512 "../lib/Widgets/SourceList.vala"
	gtk_cell_renderer_set_visible ((GtkCellRenderer*) _tmp23_, visible);
#line 2513 "../lib/Widgets/SourceList.vala"
	_tmp24_ = badge_renderer;
#line 2513 "../lib/Widgets/SourceList.vala"
	_tmp25_ = text;
#line 2513 "../lib/Widgets/SourceList.vala"
	granite_widgets_cell_renderer_badge_set_text (_tmp24_, _tmp25_);
#line 2489 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 2489 "../lib/Widgets/SourceList.vala"
	_g_free0 (text);
#line 2489 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (badge_renderer);
#line 12781 "SourceList.c"
}

static void
granite_widgets_source_list_tree_icon_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                      GtkCellLayout* layout,
                                                      GtkCellRenderer* renderer,
                                                      GtkTreeModel* model,
                                                      GtkTreeIter* iter)
{
	GraniteWidgetsSourceListCellRendererIcon* icon_renderer = NULL;
	GraniteWidgetsSourceListCellRendererIcon* _tmp0_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp1_;
	gboolean visible = FALSE;
	GIcon* icon = NULL;
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeIter _tmp2_;
	GraniteWidgetsSourceListItem* _tmp3_;
	GraniteWidgetsSourceListItem* _tmp4_;
	gboolean _tmp20_ = FALSE;
	GraniteWidgetsSourceListCellRendererIcon* _tmp22_;
	GIcon* _tmp23_ = NULL;
	GraniteWidgetsSourceListCellRendererIcon* _tmp25_;
#line 2516 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2516 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (layout != NULL);
#line 2516 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (renderer != NULL);
#line 2516 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (model != NULL);
#line 2516 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2521 "../lib/Widgets/SourceList.vala"
	_tmp0_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_CELL_RENDERER_ICON (renderer) ? ((GraniteWidgetsSourceListCellRendererIcon*) renderer) : NULL);
#line 2521 "../lib/Widgets/SourceList.vala"
	icon_renderer = _tmp0_;
#line 2522 "../lib/Widgets/SourceList.vala"
	_tmp1_ = icon_renderer;
#line 2522 "../lib/Widgets/SourceList.vala"
	_vala_assert (_tmp1_ != NULL, "icon_renderer != null");
#line 2524 "../lib/Widgets/SourceList.vala"
	visible = FALSE;
#line 2525 "../lib/Widgets/SourceList.vala"
	icon = NULL;
#line 2527 "../lib/Widgets/SourceList.vala"
	_tmp2_ = *iter;
#line 2527 "../lib/Widgets/SourceList.vala"
	_tmp3_ = granite_widgets_source_list_tree_get_item_from_model (model, &_tmp2_);
#line 2527 "../lib/Widgets/SourceList.vala"
	item = _tmp3_;
#line 2528 "../lib/Widgets/SourceList.vala"
	_tmp4_ = item;
#line 2528 "../lib/Widgets/SourceList.vala"
	if (_tmp4_ != NULL) {
#line 12836 "SourceList.c"
		GraniteWidgetsSourceListDataModel* _tmp5_;
		GraniteWidgetsSourceListItem* _tmp6_;
		GtkTreeIter _tmp7_;
#line 2530 "../lib/Widgets/SourceList.vala"
		_tmp5_ = self->priv->_data_model;
#line 2530 "../lib/Widgets/SourceList.vala"
		_tmp6_ = item;
#line 2530 "../lib/Widgets/SourceList.vala"
		_tmp7_ = *iter;
#line 2530 "../lib/Widgets/SourceList.vala"
		visible = !granite_widgets_source_list_data_model_is_category (_tmp5_, _tmp6_, &_tmp7_, NULL);
#line 2532 "../lib/Widgets/SourceList.vala"
		if (visible) {
#line 12850 "SourceList.c"
			GraniteWidgetsSourceListCellRendererIcon* _tmp8_;
			GraniteWidgetsSourceListCellRendererIcon* _tmp9_;
#line 2533 "../lib/Widgets/SourceList.vala"
			_tmp8_ = icon_renderer;
#line 2533 "../lib/Widgets/SourceList.vala"
			_tmp9_ = self->priv->icon_cell;
#line 2533 "../lib/Widgets/SourceList.vala"
			if (_tmp8_ == _tmp9_) {
#line 12859 "SourceList.c"
				GraniteWidgetsSourceListItem* _tmp10_;
				GIcon* _tmp11_;
				GIcon* _tmp12_;
				GIcon* _tmp13_;
#line 2534 "../lib/Widgets/SourceList.vala"
				_tmp10_ = item;
#line 2534 "../lib/Widgets/SourceList.vala"
				_tmp11_ = granite_widgets_source_list_item_get_icon (_tmp10_);
#line 2534 "../lib/Widgets/SourceList.vala"
				_tmp12_ = _tmp11_;
#line 2534 "../lib/Widgets/SourceList.vala"
				_tmp13_ = _g_object_ref0 (_tmp12_);
#line 2534 "../lib/Widgets/SourceList.vala"
				_g_object_unref0 (icon);
#line 2534 "../lib/Widgets/SourceList.vala"
				icon = _tmp13_;
#line 12876 "SourceList.c"
			} else {
				GraniteWidgetsSourceListCellRendererIcon* _tmp14_;
				GraniteWidgetsSourceListCellRendererIcon* _tmp15_;
#line 2535 "../lib/Widgets/SourceList.vala"
				_tmp14_ = icon_renderer;
#line 2535 "../lib/Widgets/SourceList.vala"
				_tmp15_ = self->priv->activatable_cell;
#line 2535 "../lib/Widgets/SourceList.vala"
				if (_tmp14_ == _tmp15_) {
#line 12886 "SourceList.c"
					GraniteWidgetsSourceListItem* _tmp16_;
					GIcon* _tmp17_;
					GIcon* _tmp18_;
					GIcon* _tmp19_;
#line 2536 "../lib/Widgets/SourceList.vala"
					_tmp16_ = item;
#line 2536 "../lib/Widgets/SourceList.vala"
					_tmp17_ = granite_widgets_source_list_item_get_activatable (_tmp16_);
#line 2536 "../lib/Widgets/SourceList.vala"
					_tmp18_ = _tmp17_;
#line 2536 "../lib/Widgets/SourceList.vala"
					_tmp19_ = _g_object_ref0 (_tmp18_);
#line 2536 "../lib/Widgets/SourceList.vala"
					_g_object_unref0 (icon);
#line 2536 "../lib/Widgets/SourceList.vala"
					icon = _tmp19_;
#line 12903 "SourceList.c"
				} else {
#line 2538 "../lib/Widgets/SourceList.vala"
					g_assert_not_reached ();
#line 12907 "SourceList.c"
				}
			}
		}
	}
#line 2542 "../lib/Widgets/SourceList.vala"
	if (visible) {
#line 12914 "SourceList.c"
		GIcon* _tmp21_;
#line 2542 "../lib/Widgets/SourceList.vala"
		_tmp21_ = icon;
#line 2542 "../lib/Widgets/SourceList.vala"
		_tmp20_ = _tmp21_ != NULL;
#line 12920 "SourceList.c"
	} else {
#line 2542 "../lib/Widgets/SourceList.vala"
		_tmp20_ = FALSE;
#line 12924 "SourceList.c"
	}
#line 2542 "../lib/Widgets/SourceList.vala"
	visible = _tmp20_;
#line 2544 "../lib/Widgets/SourceList.vala"
	_tmp22_ = icon_renderer;
#line 2544 "../lib/Widgets/SourceList.vala"
	gtk_cell_renderer_set_visible ((GtkCellRenderer*) _tmp22_, visible);
#line 2545 "../lib/Widgets/SourceList.vala"
	if (visible) {
#line 12934 "SourceList.c"
		GIcon* _tmp24_;
#line 2545 "../lib/Widgets/SourceList.vala"
		_tmp24_ = icon;
#line 2545 "../lib/Widgets/SourceList.vala"
		_tmp23_ = _tmp24_;
#line 12940 "SourceList.c"
	} else {
#line 2545 "../lib/Widgets/SourceList.vala"
		_tmp23_ = NULL;
#line 12944 "SourceList.c"
	}
#line 2545 "../lib/Widgets/SourceList.vala"
	_tmp25_ = icon_renderer;
#line 2545 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRendererPixbuf*) _tmp25_, "gicon", _tmp23_, NULL);
#line 2516 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 2516 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (icon);
#line 2516 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (icon_renderer);
#line 12956 "SourceList.c"
}

/**
         * Controls expander visibility.
         */
static void
granite_widgets_source_list_tree_expander_cell_data_func (GraniteWidgetsSourceListTree* self,
                                                          GtkCellLayout* layout,
                                                          GtkCellRenderer* renderer,
                                                          GtkTreeModel* model,
                                                          GtkTreeIter* iter)
{
	GraniteWidgetsSourceListItem* item = NULL;
	GtkTreeIter _tmp0_;
	GraniteWidgetsSourceListItem* _tmp1_;
	GraniteWidgetsSourceListItem* _tmp2_;
	GraniteWidgetsCellRendererExpander* _tmp12_;
#line 2551 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (self != NULL);
#line 2551 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (layout != NULL);
#line 2551 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (renderer != NULL);
#line 2551 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (model != NULL);
#line 2551 "../lib/Widgets/SourceList.vala"
	g_return_if_fail (iter != NULL);
#line 2557 "../lib/Widgets/SourceList.vala"
	_tmp0_ = *iter;
#line 2557 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_get_item_from_model (model, &_tmp0_);
#line 2557 "../lib/Widgets/SourceList.vala"
	item = _tmp1_;
#line 2558 "../lib/Widgets/SourceList.vala"
	_tmp2_ = item;
#line 2558 "../lib/Widgets/SourceList.vala"
	if (_tmp2_ != NULL) {
#line 12994 "SourceList.c"
		GraniteWidgetsSourceListExpandableItem* expandable_item = NULL;
		GraniteWidgetsSourceListItem* _tmp3_;
		GraniteWidgetsSourceListExpandableItem* _tmp4_;
		GraniteWidgetsSourceListExpandableItem* _tmp5_;
#line 2562 "../lib/Widgets/SourceList.vala"
		_tmp3_ = item;
#line 2562 "../lib/Widgets/SourceList.vala"
		_tmp4_ = _g_object_ref0 (GRANITE_WIDGETS_SOURCE_LIST_IS_EXPANDABLE_ITEM (_tmp3_) ? ((GraniteWidgetsSourceListExpandableItem*) _tmp3_) : NULL);
#line 2562 "../lib/Widgets/SourceList.vala"
		expandable_item = _tmp4_;
#line 2563 "../lib/Widgets/SourceList.vala"
		_tmp5_ = expandable_item;
#line 2563 "../lib/Widgets/SourceList.vala"
		if (_tmp5_ != NULL) {
#line 13009 "SourceList.c"
			gboolean _tmp6_ = FALSE;
			gboolean _tmp7_;
			gboolean _tmp8_;
#line 2564 "../lib/Widgets/SourceList.vala"
			g_object_get (renderer, "is-expander", &_tmp7_, NULL);
#line 2564 "../lib/Widgets/SourceList.vala"
			_tmp8_ = _tmp7_;
#line 2564 "../lib/Widgets/SourceList.vala"
			if (_tmp8_) {
#line 13019 "SourceList.c"
				GraniteWidgetsSourceListExpandableItem* _tmp9_;
				gboolean _tmp10_;
				gboolean _tmp11_;
#line 2564 "../lib/Widgets/SourceList.vala"
				_tmp9_ = expandable_item;
#line 2564 "../lib/Widgets/SourceList.vala"
				_tmp10_ = granite_widgets_source_list_expandable_item_get_collapsible (_tmp9_);
#line 2564 "../lib/Widgets/SourceList.vala"
				_tmp11_ = _tmp10_;
#line 2564 "../lib/Widgets/SourceList.vala"
				_tmp6_ = _tmp11_;
#line 13031 "SourceList.c"
			} else {
#line 2564 "../lib/Widgets/SourceList.vala"
				_tmp6_ = FALSE;
#line 13035 "SourceList.c"
			}
#line 2564 "../lib/Widgets/SourceList.vala"
			g_object_set (renderer, "is-expander", _tmp6_, NULL);
#line 13039 "SourceList.c"
		}
#line 2558 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (expandable_item);
#line 13043 "SourceList.c"
	}
#line 2567 "../lib/Widgets/SourceList.vala"
	_tmp12_ = self->priv->primary_expander_cell;
#line 2567 "../lib/Widgets/SourceList.vala"
	if (renderer == G_TYPE_CHECK_INSTANCE_CAST (_tmp12_, gtk_cell_renderer_get_type (), GtkCellRenderer)) {
#line 13049 "SourceList.c"
		GraniteWidgetsSourceListDataModel* _tmp13_;
		GtkTreeIter _tmp14_;
#line 2568 "../lib/Widgets/SourceList.vala"
		_tmp13_ = self->priv->_data_model;
#line 2568 "../lib/Widgets/SourceList.vala"
		_tmp14_ = *iter;
#line 2568 "../lib/Widgets/SourceList.vala"
		gtk_cell_renderer_set_visible (renderer, !granite_widgets_source_list_data_model_is_iter_at_root_level (_tmp13_, &_tmp14_));
#line 13058 "SourceList.c"
	} else {
		GraniteWidgetsCellRendererExpander* _tmp15_;
#line 2569 "../lib/Widgets/SourceList.vala"
		_tmp15_ = self->priv->secondary_expander_cell;
#line 2569 "../lib/Widgets/SourceList.vala"
		if (renderer == G_TYPE_CHECK_INSTANCE_CAST (_tmp15_, gtk_cell_renderer_get_type (), GtkCellRenderer)) {
#line 13065 "SourceList.c"
			GraniteWidgetsSourceListDataModel* _tmp16_;
			GraniteWidgetsSourceListItem* _tmp17_;
			GtkTreeIter _tmp18_;
#line 2570 "../lib/Widgets/SourceList.vala"
			_tmp16_ = self->priv->_data_model;
#line 2570 "../lib/Widgets/SourceList.vala"
			_tmp17_ = item;
#line 2570 "../lib/Widgets/SourceList.vala"
			_tmp18_ = *iter;
#line 2570 "../lib/Widgets/SourceList.vala"
			gtk_cell_renderer_set_visible (renderer, granite_widgets_source_list_data_model_is_category (_tmp16_, _tmp17_, &_tmp18_, NULL));
#line 13077 "SourceList.c"
		} else {
#line 2572 "../lib/Widgets/SourceList.vala"
			g_assert_not_reached ();
#line 13081 "SourceList.c"
		}
	}
#line 2551 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item);
#line 13086 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_expander_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                     GtkCellRenderer* cell,
                                                                                     GtkTreeModel* tree_model,
                                                                                     GtkTreeIter* iter,
                                                                                     gpointer self)
{
#line 1682 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_expander_cell_data_func ((GraniteWidgetsSourceListTree*) self, cell_layout, cell, tree_model, iter);
#line 13098 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_on_activatable_activated_granite_widgets_source_list_cell_renderer_icon_activated (GraniteWidgetsSourceListCellRendererIcon* _sender,
                                                                                                                     const gchar* path,
                                                                                                                     gpointer self)
{
#line 1686 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_on_activatable_activated ((GraniteWidgetsSourceListTree*) self, path);
#line 13108 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_icon_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                 GtkCellRenderer* cell,
                                                                                 GtkTreeModel* tree_model,
                                                                                 GtkTreeIter* iter,
                                                                                 gpointer self)
{
#line 1688 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_icon_cell_data_func ((GraniteWidgetsSourceListTree*) self, cell_layout, cell, tree_model, iter);
#line 13120 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_badge_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                  GtkCellRenderer* cell,
                                                                                  GtkTreeModel* tree_model,
                                                                                  GtkTreeIter* iter,
                                                                                  gpointer self)
{
#line 1694 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_badge_cell_data_func ((GraniteWidgetsSourceListTree*) self, cell_layout, cell, tree_model, iter);
#line 13132 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_on_editing_started_gtk_cell_renderer_editing_started (GtkCellRenderer* _sender,
                                                                                        GtkCellEditable* editable,
                                                                                        const gchar* path,
                                                                                        gpointer self)
{
#line 1699 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_on_editing_started ((GraniteWidgetsSourceListTree*) self, editable, path);
#line 13143 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_on_editing_canceled_gtk_cell_renderer_editing_canceled (GtkCellRenderer* _sender,
                                                                                          gpointer self)
{
#line 1700 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_on_editing_canceled ((GraniteWidgetsSourceListTree*) self);
#line 13152 "SourceList.c"
}

static void
_granite_widgets_source_list_tree_name_cell_data_func_gtk_cell_layout_data_func (GtkCellLayout* cell_layout,
                                                                                 GtkCellRenderer* cell,
                                                                                 GtkTreeModel* tree_model,
                                                                                 GtkTreeIter* iter,
                                                                                 gpointer self)
{
#line 1704 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_name_cell_data_func ((GraniteWidgetsSourceListTree*) self, cell_layout, cell, tree_model, iter);
#line 13164 "SourceList.c"
}

static gboolean
_granite_widgets_source_list_tree_select_func_gtk_tree_selection_func (GtkTreeSelection* selection,
                                                                       GtkTreeModel* model,
                                                                       GtkTreePath* path,
                                                                       gboolean path_currently_selected,
                                                                       gpointer self)
{
	gboolean result;
	result = granite_widgets_source_list_tree_select_func ((GraniteWidgetsSourceListTree*) self, selection, model, path, path_currently_selected);
#line 1724 "../lib/Widgets/SourceList.vala"
	return result;
#line 13178 "SourceList.c"
}

static gboolean
_granite_widgets_source_list_tree_on_query_tooltip_gtk_widget_query_tooltip (GtkWidget* _sender,
                                                                             gint x,
                                                                             gint y,
                                                                             gboolean keyboard_tooltip,
                                                                             GtkTooltip* tooltip,
                                                                             gpointer self)
{
	gboolean result;
	result = granite_widgets_source_list_tree_on_query_tooltip ((GraniteWidgetsSourceListTree*) self, x, y, keyboard_tooltip, tooltip);
#line 1736 "../lib/Widgets/SourceList.vala"
	return result;
#line 13193 "SourceList.c"
}

static GObject *
granite_widgets_source_list_tree_constructor (GType type,
                                              guint n_construct_properties,
                                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsSourceListTree * self;
	GtkStyleContext* style_context = NULL;
	GtkStyleContext* _tmp0_;
	GtkStyleContext* _tmp1_;
	GtkStyleContext* _tmp2_;
	GtkCssProvider* css_provider = NULL;
	GtkCssProvider* _tmp3_;
	GraniteWidgetsSourceListDataModel* _tmp9_;
	GtkTreeViewColumn* item_column = NULL;
	GtkTreeViewColumn* _tmp10_;
	GtkTreeViewColumn* _tmp11_;
	GtkTreeViewColumn* _tmp12_;
	GraniteWidgetsCellRendererExpander* _tmp13_;
	GraniteWidgetsCellRendererExpander* _tmp14_;
	GraniteWidgetsCellRendererExpander* _tmp15_;
	GtkTreeViewColumn* _tmp16_;
	GraniteWidgetsCellRendererExpander* _tmp17_;
	GtkTreeViewColumn* _tmp18_;
	GraniteWidgetsCellRendererExpander* _tmp19_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp20_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp21_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp22_;
	GtkTreeViewColumn* _tmp23_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp24_;
	GtkTreeViewColumn* _tmp25_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp26_;
	GraniteWidgetsCellRendererBadge* _tmp27_;
	GraniteWidgetsCellRendererBadge* _tmp28_;
	GraniteWidgetsCellRendererBadge* _tmp29_;
	GtkTreeViewColumn* _tmp30_;
	GraniteWidgetsCellRendererBadge* _tmp31_;
	GtkTreeViewColumn* _tmp32_;
	GraniteWidgetsCellRendererBadge* _tmp33_;
	GtkCellRendererText* _tmp34_;
	GtkCellRendererText* _tmp35_;
	GtkCellRendererText* _tmp36_;
	GtkCellRendererText* _tmp37_;
	GtkCellRendererText* _tmp38_;
	GtkCellRendererText* _tmp39_;
	GtkCellRendererText* _tmp40_;
	GtkTreeViewColumn* _tmp41_;
	GtkCellRendererText* _tmp42_;
	GtkTreeViewColumn* _tmp43_;
	GtkCellRendererText* _tmp44_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp45_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp46_;
	GtkTreeViewColumn* _tmp47_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp48_;
	GtkTreeViewColumn* _tmp49_;
	GraniteWidgetsSourceListCellRendererIcon* _tmp50_;
	GraniteWidgetsCellRendererExpander* _tmp51_;
	gint expander_spacing = 0;
	gint _tmp52_ = 0;
	GraniteWidgetsCellRendererExpander* _tmp53_;
	GtkTreeViewColumn* _tmp54_;
	GraniteWidgetsCellRendererExpander* _tmp55_;
	GtkTreeViewColumn* _tmp56_;
	GraniteWidgetsCellRendererExpander* _tmp57_;
	GtkTreeSelection* selection = NULL;
	GtkTreeSelection* _tmp58_;
	GtkTreeSelection* _tmp59_;
	GtkTreeSelection* _tmp60_;
	GtkTreeSelection* _tmp61_;
	GError* _inner_error0_ = NULL;
#line 1641 "../lib/Widgets/SourceList.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_source_list_tree_parent_class);
#line 1641 "../lib/Widgets/SourceList.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 1641 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTree);
#line 1642 "../lib/Widgets/SourceList.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 1642 "../lib/Widgets/SourceList.vala"
	style_context = _tmp0_;
#line 1643 "../lib/Widgets/SourceList.vala"
	_tmp1_ = style_context;
#line 1643 "../lib/Widgets/SourceList.vala"
	gtk_style_context_add_class (_tmp1_, GTK_STYLE_CLASS_SIDEBAR);
#line 1644 "../lib/Widgets/SourceList.vala"
	_tmp2_ = style_context;
#line 1644 "../lib/Widgets/SourceList.vala"
	gtk_style_context_add_class (_tmp2_, GRANITE_STYLE_CLASS_SOURCE_LIST);
#line 1646 "../lib/Widgets/SourceList.vala"
	_tmp3_ = gtk_css_provider_new ();
#line 1646 "../lib/Widgets/SourceList.vala"
	css_provider = _tmp3_;
#line 13289 "SourceList.c"
	{
		GtkCssProvider* _tmp4_;
		GtkStyleContext* _tmp5_;
		GtkCssProvider* _tmp6_;
#line 1648 "../lib/Widgets/SourceList.vala"
		_tmp4_ = css_provider;
#line 1648 "../lib/Widgets/SourceList.vala"
		gtk_css_provider_load_from_data (_tmp4_, GRANITE_WIDGETS_SOURCE_LIST_TREE_DEFAULT_STYLESHEET, (gssize) -1, &_inner_error0_);
#line 1648 "../lib/Widgets/SourceList.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 13300 "SourceList.c"
			goto __catch0_g_error;
		}
#line 1649 "../lib/Widgets/SourceList.vala"
		_tmp5_ = style_context;
#line 1649 "../lib/Widgets/SourceList.vala"
		_tmp6_ = css_provider;
#line 1649 "../lib/Widgets/SourceList.vala"
		gtk_style_context_add_provider (_tmp5_, (GtkStyleProvider*) _tmp6_, (guint) GTK_STYLE_PROVIDER_PRIORITY_FALLBACK);
#line 13309 "SourceList.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp7_;
		const gchar* _tmp8_;
#line 1647 "../lib/Widgets/SourceList.vala"
		e = _inner_error0_;
#line 1647 "../lib/Widgets/SourceList.vala"
		_inner_error0_ = NULL;
#line 1651 "../lib/Widgets/SourceList.vala"
		_tmp7_ = e;
#line 1651 "../lib/Widgets/SourceList.vala"
		_tmp8_ = _tmp7_->message;
#line 1651 "../lib/Widgets/SourceList.vala"
		g_warning ("SourceList.vala:1651: Could not create CSS Provider: %s\n" \
"Stylesheet:\n" \
"%s", _tmp8_, GRANITE_WIDGETS_SOURCE_LIST_TREE_DEFAULT_STYLESHEET);
#line 1647 "../lib/Widgets/SourceList.vala"
		_g_error_free0 (e);
#line 13329 "SourceList.c"
	}
	__finally0:
#line 1647 "../lib/Widgets/SourceList.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1647 "../lib/Widgets/SourceList.vala"
		_g_object_unref0 (css_provider);
#line 1647 "../lib/Widgets/SourceList.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1647 "../lib/Widgets/SourceList.vala"
		g_clear_error (&_inner_error0_);
#line 13340 "SourceList.c"
	}
#line 1654 "../lib/Widgets/SourceList.vala"
	_tmp9_ = self->priv->_data_model;
#line 1654 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_set_model ((GtkTreeView*) self, (GtkTreeModel*) _tmp9_);
#line 1656 "../lib/Widgets/SourceList.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_FILL);
#line 1656 "../lib/Widgets/SourceList.vala"
	gtk_widget_set_halign ((GtkWidget*) self, GTK_ALIGN_FILL);
#line 1657 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkWidget*) self, "expand", TRUE, NULL);
#line 1659 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_set_enable_search ((GtkTreeView*) self, FALSE);
#line 1660 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_set_headers_visible ((GtkTreeView*) self, FALSE);
#line 1661 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkTreeView*) self, "enable-grid-lines", GTK_TREE_VIEW_GRID_LINES_NONE, NULL);
#line 1664 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_set_expander_column ((GtkTreeView*) self, NULL);
#line 1665 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_set_show_expanders ((GtkTreeView*) self, FALSE);
#line 1667 "../lib/Widgets/SourceList.vala"
	_tmp10_ = gtk_tree_view_column_new ();
#line 1667 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp10_);
#line 1667 "../lib/Widgets/SourceList.vala"
	item_column = _tmp10_;
#line 1668 "../lib/Widgets/SourceList.vala"
	_tmp11_ = item_column;
#line 1668 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_column_set_expand (_tmp11_, TRUE);
#line 1670 "../lib/Widgets/SourceList.vala"
	_tmp12_ = item_column;
#line 1670 "../lib/Widgets/SourceList.vala"
	gtk_tree_view_insert_column ((GtkTreeView*) self, _tmp12_, (gint) GRANITE_WIDGETS_SOURCE_LIST_TREE_COLUMN_ITEM);
#line 1678 "../lib/Widgets/SourceList.vala"
	_tmp13_ = granite_widgets_cell_renderer_expander_new ();
#line 1678 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp13_);
#line 1678 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->secondary_expander_cell);
#line 1678 "../lib/Widgets/SourceList.vala"
	self->priv->secondary_expander_cell = _tmp13_;
#line 1679 "../lib/Widgets/SourceList.vala"
	_tmp14_ = self->priv->secondary_expander_cell;
#line 1679 "../lib/Widgets/SourceList.vala"
	granite_widgets_cell_renderer_expander_set_is_category_expander (_tmp14_, TRUE);
#line 1680 "../lib/Widgets/SourceList.vala"
	_tmp15_ = self->priv->secondary_expander_cell;
#line 1680 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp15_, "xpad", (guint) 10, NULL);
#line 1681 "../lib/Widgets/SourceList.vala"
	_tmp16_ = item_column;
#line 1681 "../lib/Widgets/SourceList.vala"
	_tmp17_ = self->priv->secondary_expander_cell;
#line 1681 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_pack_end ((GtkCellLayout*) _tmp16_, (GtkCellRenderer*) _tmp17_, FALSE);
#line 1682 "../lib/Widgets/SourceList.vala"
	_tmp18_ = item_column;
#line 1682 "../lib/Widgets/SourceList.vala"
	_tmp19_ = self->priv->secondary_expander_cell;
#line 1682 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp18_, (GtkCellRenderer*) _tmp19_, _granite_widgets_source_list_tree_expander_cell_data_func_gtk_cell_layout_data_func, g_object_ref (self), g_object_unref);
#line 1684 "../lib/Widgets/SourceList.vala"
	_tmp20_ = granite_widgets_source_list_cell_renderer_icon_new ();
#line 1684 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp20_);
#line 1684 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->activatable_cell);
#line 1684 "../lib/Widgets/SourceList.vala"
	self->priv->activatable_cell = _tmp20_;
#line 1685 "../lib/Widgets/SourceList.vala"
	_tmp21_ = self->priv->activatable_cell;
#line 1685 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp21_, "xpad", (guint) 6, NULL);
#line 1686 "../lib/Widgets/SourceList.vala"
	_tmp22_ = self->priv->activatable_cell;
#line 1686 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object (_tmp22_, "activated", (GCallback) _granite_widgets_source_list_tree_on_activatable_activated_granite_widgets_source_list_cell_renderer_icon_activated, self, 0);
#line 1687 "../lib/Widgets/SourceList.vala"
	_tmp23_ = item_column;
#line 1687 "../lib/Widgets/SourceList.vala"
	_tmp24_ = self->priv->activatable_cell;
#line 1687 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_pack_end ((GtkCellLayout*) _tmp23_, (GtkCellRenderer*) _tmp24_, FALSE);
#line 1688 "../lib/Widgets/SourceList.vala"
	_tmp25_ = item_column;
#line 1688 "../lib/Widgets/SourceList.vala"
	_tmp26_ = self->priv->activatable_cell;
#line 1688 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp25_, (GtkCellRenderer*) _tmp26_, _granite_widgets_source_list_tree_icon_cell_data_func_gtk_cell_layout_data_func, g_object_ref (self), g_object_unref);
#line 1690 "../lib/Widgets/SourceList.vala"
	_tmp27_ = granite_widgets_cell_renderer_badge_new ();
#line 1690 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp27_);
#line 1690 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->badge_cell);
#line 1690 "../lib/Widgets/SourceList.vala"
	self->priv->badge_cell = _tmp27_;
#line 1691 "../lib/Widgets/SourceList.vala"
	_tmp28_ = self->priv->badge_cell;
#line 1691 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp28_, "xpad", (guint) 1, NULL);
#line 1692 "../lib/Widgets/SourceList.vala"
	_tmp29_ = self->priv->badge_cell;
#line 1692 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp29_, "xalign", (gfloat) 1, NULL);
#line 1693 "../lib/Widgets/SourceList.vala"
	_tmp30_ = item_column;
#line 1693 "../lib/Widgets/SourceList.vala"
	_tmp31_ = self->priv->badge_cell;
#line 1693 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_pack_end ((GtkCellLayout*) _tmp30_, (GtkCellRenderer*) _tmp31_, FALSE);
#line 1694 "../lib/Widgets/SourceList.vala"
	_tmp32_ = item_column;
#line 1694 "../lib/Widgets/SourceList.vala"
	_tmp33_ = self->priv->badge_cell;
#line 1694 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp32_, (GtkCellRenderer*) _tmp33_, _granite_widgets_source_list_tree_badge_cell_data_func_gtk_cell_layout_data_func, g_object_ref (self), g_object_unref);
#line 1696 "../lib/Widgets/SourceList.vala"
	_tmp34_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
#line 1696 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp34_);
#line 1696 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->text_cell);
#line 1696 "../lib/Widgets/SourceList.vala"
	self->priv->text_cell = _tmp34_;
#line 1697 "../lib/Widgets/SourceList.vala"
	_tmp35_ = self->priv->text_cell;
#line 1697 "../lib/Widgets/SourceList.vala"
	g_object_set (_tmp35_, "editable-set", TRUE, NULL);
#line 1698 "../lib/Widgets/SourceList.vala"
	_tmp36_ = self->priv->text_cell;
#line 1698 "../lib/Widgets/SourceList.vala"
	g_object_set (_tmp36_, "editable", FALSE, NULL);
#line 1699 "../lib/Widgets/SourceList.vala"
	_tmp37_ = self->priv->text_cell;
#line 1699 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object ((GtkCellRenderer*) _tmp37_, "editing-started", (GCallback) _granite_widgets_source_list_tree_on_editing_started_gtk_cell_renderer_editing_started, self, 0);
#line 1700 "../lib/Widgets/SourceList.vala"
	_tmp38_ = self->priv->text_cell;
#line 1700 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object ((GtkCellRenderer*) _tmp38_, "editing-canceled", (GCallback) _granite_widgets_source_list_tree_on_editing_canceled_gtk_cell_renderer_editing_canceled, self, 0);
#line 1701 "../lib/Widgets/SourceList.vala"
	_tmp39_ = self->priv->text_cell;
#line 1701 "../lib/Widgets/SourceList.vala"
	g_object_set (_tmp39_, "ellipsize", PANGO_ELLIPSIZE_END, NULL);
#line 1702 "../lib/Widgets/SourceList.vala"
	_tmp40_ = self->priv->text_cell;
#line 1702 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp40_, "xalign", (gfloat) 0, NULL);
#line 1703 "../lib/Widgets/SourceList.vala"
	_tmp41_ = item_column;
#line 1703 "../lib/Widgets/SourceList.vala"
	_tmp42_ = self->priv->text_cell;
#line 1703 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_pack_end ((GtkCellLayout*) _tmp41_, (GtkCellRenderer*) _tmp42_, TRUE);
#line 1704 "../lib/Widgets/SourceList.vala"
	_tmp43_ = item_column;
#line 1704 "../lib/Widgets/SourceList.vala"
	_tmp44_ = self->priv->text_cell;
#line 1704 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp43_, (GtkCellRenderer*) _tmp44_, _granite_widgets_source_list_tree_name_cell_data_func_gtk_cell_layout_data_func, g_object_ref (self), g_object_unref);
#line 1706 "../lib/Widgets/SourceList.vala"
	_tmp45_ = granite_widgets_source_list_cell_renderer_icon_new ();
#line 1706 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp45_);
#line 1706 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->icon_cell);
#line 1706 "../lib/Widgets/SourceList.vala"
	self->priv->icon_cell = _tmp45_;
#line 1707 "../lib/Widgets/SourceList.vala"
	_tmp46_ = self->priv->icon_cell;
#line 1707 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp46_, "xpad", (guint) 2, NULL);
#line 1708 "../lib/Widgets/SourceList.vala"
	_tmp47_ = item_column;
#line 1708 "../lib/Widgets/SourceList.vala"
	_tmp48_ = self->priv->icon_cell;
#line 1708 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_pack_end ((GtkCellLayout*) _tmp47_, (GtkCellRenderer*) _tmp48_, FALSE);
#line 1709 "../lib/Widgets/SourceList.vala"
	_tmp49_ = item_column;
#line 1709 "../lib/Widgets/SourceList.vala"
	_tmp50_ = self->priv->icon_cell;
#line 1709 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp49_, (GtkCellRenderer*) _tmp50_, _granite_widgets_source_list_tree_icon_cell_data_func_gtk_cell_layout_data_func, g_object_ref (self), g_object_unref);
#line 1712 "../lib/Widgets/SourceList.vala"
	_tmp51_ = granite_widgets_cell_renderer_expander_new ();
#line 1712 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp51_);
#line 1712 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->primary_expander_cell);
#line 1712 "../lib/Widgets/SourceList.vala"
	self->priv->primary_expander_cell = _tmp51_;
#line 1715 "../lib/Widgets/SourceList.vala"
	gtk_widget_style_get ((GtkWidget*) self, GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_EXPANDER_SPACING, &_tmp52_, NULL);
#line 1715 "../lib/Widgets/SourceList.vala"
	expander_spacing = _tmp52_;
#line 1716 "../lib/Widgets/SourceList.vala"
	_tmp53_ = self->priv->primary_expander_cell;
#line 1716 "../lib/Widgets/SourceList.vala"
	g_object_set ((GtkCellRenderer*) _tmp53_, "xpad", (guint) (expander_spacing / 2), NULL);
#line 1718 "../lib/Widgets/SourceList.vala"
	_tmp54_ = item_column;
#line 1718 "../lib/Widgets/SourceList.vala"
	_tmp55_ = self->priv->primary_expander_cell;
#line 1718 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_pack_end ((GtkCellLayout*) _tmp54_, (GtkCellRenderer*) _tmp55_, FALSE);
#line 1719 "../lib/Widgets/SourceList.vala"
	_tmp56_ = item_column;
#line 1719 "../lib/Widgets/SourceList.vala"
	_tmp57_ = self->priv->primary_expander_cell;
#line 1719 "../lib/Widgets/SourceList.vala"
	gtk_cell_layout_set_cell_data_func ((GtkCellLayout*) _tmp56_, (GtkCellRenderer*) _tmp57_, _granite_widgets_source_list_tree_expander_cell_data_func_gtk_cell_layout_data_func, g_object_ref (self), g_object_unref);
#line 1722 "../lib/Widgets/SourceList.vala"
	_tmp58_ = gtk_tree_view_get_selection ((GtkTreeView*) self);
#line 1722 "../lib/Widgets/SourceList.vala"
	_tmp59_ = _g_object_ref0 (_tmp58_);
#line 1722 "../lib/Widgets/SourceList.vala"
	selection = _tmp59_;
#line 1723 "../lib/Widgets/SourceList.vala"
	_tmp60_ = selection;
#line 1723 "../lib/Widgets/SourceList.vala"
	gtk_tree_selection_set_mode (_tmp60_, GTK_SELECTION_BROWSE);
#line 1724 "../lib/Widgets/SourceList.vala"
	_tmp61_ = selection;
#line 1724 "../lib/Widgets/SourceList.vala"
	gtk_tree_selection_set_select_function (_tmp61_, _granite_widgets_source_list_tree_select_func_gtk_tree_selection_func, g_object_ref (self), g_object_unref);
#line 1727 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_enable_item_property_monitor (self);
#line 1730 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_add_spacer_cell_for_level (self, 1, TRUE);
#line 1733 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_configure_drag_source (self, NULL, (gint) 0);
#line 1734 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_configure_drag_dest (self, NULL, (gint) 0, 0);
#line 1736 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object ((GtkWidget*) self, "query-tooltip", (GCallback) _granite_widgets_source_list_tree_on_query_tooltip_gtk_widget_query_tooltip, self, G_CONNECT_AFTER);
#line 1737 "../lib/Widgets/SourceList.vala"
	gtk_widget_set_has_tooltip ((GtkWidget*) self, TRUE);
#line 1641 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (selection);
#line 1641 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (item_column);
#line 1641 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (css_provider);
#line 1641 "../lib/Widgets/SourceList.vala"
	return obj;
#line 13590 "SourceList.c"
}

static void
granite_widgets_source_list_tree_class_init (GraniteWidgetsSourceListTreeClass * klass,
                                             gpointer klass_data)
{
	GParamSpecInt* _tmp0_;
	GParamSpecInt* _tmp1_;
	GParamSpecInt* _tmp2_;
	GParamSpecInt* _tmp3_;
	GParamSpecInt* _tmp4_;
	GParamSpecInt* _tmp5_;
#line 1554 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_parent_class = g_type_class_peek_parent (klass);
#line 1554 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceListTree_private_offset);
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkWidgetClass *) klass)->drag_motion = (gboolean (*) (GtkWidget*, GdkDragContext*, gint, gint, guint)) granite_widgets_source_list_tree_real_drag_motion;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkWidgetClass *) klass)->drag_data_received = (void (*) (GtkWidget*, GdkDragContext*, gint, gint, GtkSelectionData*, guint, guint)) granite_widgets_source_list_tree_real_drag_data_received;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkTreeViewClass *) klass)->cursor_changed = (void (*) (GtkTreeView*)) granite_widgets_source_list_tree_real_cursor_changed;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkTreeViewClass *) klass)->row_expanded = (void (*) (GtkTreeView*, GtkTreeIter*, GtkTreePath*)) granite_widgets_source_list_tree_real_row_expanded;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkTreeViewClass *) klass)->row_collapsed = (void (*) (GtkTreeView*, GtkTreeIter*, GtkTreePath*)) granite_widgets_source_list_tree_real_row_collapsed;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkTreeViewClass *) klass)->row_activated = (void (*) (GtkTreeView*, GtkTreePath*, GtkTreeViewColumn*)) granite_widgets_source_list_tree_real_row_activated;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkWidgetClass *) klass)->key_release_event = (gboolean (*) (GtkWidget*, GdkEventKey*)) granite_widgets_source_list_tree_real_key_release_event;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkWidgetClass *) klass)->button_release_event = (gboolean (*) (GtkWidget*, GdkEventButton*)) granite_widgets_source_list_tree_real_button_release_event;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkWidgetClass *) klass)->button_press_event = (gboolean (*) (GtkWidget*, GdkEventButton*)) granite_widgets_source_list_tree_real_button_press_event;
#line 1554 "../lib/Widgets/SourceList.vala"
	((GtkWidgetClass *) klass)->popup_menu = (gboolean (*) (GtkWidget*)) granite_widgets_source_list_tree_real_popup_menu;
#line 1554 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_source_list_tree_get_property;
#line 1554 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_source_list_tree_set_property;
#line 1554 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_source_list_tree_constructor;
#line 1554 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_source_list_tree_finalize;
#line 1554 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_TREE_DATA_MODEL_PROPERTY, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_DATA_MODEL_PROPERTY] = g_param_spec_object ("data-model", "data-model", "data-model", GRANITE_WIDGETS_SOURCE_LIST_TYPE_DATA_MODEL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1554 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_TREE_SELECTED_ITEM_PROPERTY, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_SELECTED_ITEM_PROPERTY] = g_param_spec_object ("selected-item", "selected-item", "selected-item", GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1554 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_TREE_EDITING_PROPERTY, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_EDITING_PROPERTY] = g_param_spec_boolean ("editing", "editing", "editing", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1554 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_TREE_ELLIPSIZE_MODE_PROPERTY, granite_widgets_source_list_tree_properties[GRANITE_WIDGETS_SOURCE_LIST_TREE_ELLIPSIZE_MODE_PROPERTY] = g_param_spec_enum ("ellipsize-mode", "ellipsize-mode", "ellipsize-mode", pango_ellipsize_mode_get_type (), 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1554 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_signals[GRANITE_WIDGETS_SOURCE_LIST_TREE_ITEM_SELECTED_SIGNAL] = g_signal_new ("item-selected", GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
#line 1606 "../lib/Widgets/SourceList.vala"
	_tmp0_ = (GParamSpecInt*) g_param_spec_int (GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_LEVEL_INDENTATION, "Level Indentation", "Space to add at the beginning of every indentation level. Must be an e" \
"ven number.", 1, 50, 6, G_PARAM_READABLE);
#line 1606 "../lib/Widgets/SourceList.vala"
	_tmp1_ = _tmp0_;
#line 1606 "../lib/Widgets/SourceList.vala"
	gtk_widget_class_install_style_property (GTK_WIDGET_CLASS (klass), (GParamSpec*) _tmp1_);
#line 1606 "../lib/Widgets/SourceList.vala"
	_g_param_spec_unref0 (_tmp1_);
#line 1616 "../lib/Widgets/SourceList.vala"
	_tmp2_ = (GParamSpecInt*) g_param_spec_int (GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_LEFT_PADDING, "Left Padding", "Padding added to the left side of the tree. Must be an even number.", 1, 50, 4, G_PARAM_READABLE);
#line 1616 "../lib/Widgets/SourceList.vala"
	_tmp3_ = _tmp2_;
#line 1616 "../lib/Widgets/SourceList.vala"
	gtk_widget_class_install_style_property (GTK_WIDGET_CLASS (klass), (GParamSpec*) _tmp3_);
#line 1616 "../lib/Widgets/SourceList.vala"
	_g_param_spec_unref0 (_tmp3_);
#line 1626 "../lib/Widgets/SourceList.vala"
	_tmp4_ = (GParamSpecInt*) g_param_spec_int (GRANITE_WIDGETS_SOURCE_LIST_TREE_STYLE_PROP_EXPANDER_SPACING, "Expander Spacing", "Space added between an item and its expander. Must be an even number.", 1, 50, 4, G_PARAM_READABLE);
#line 1626 "../lib/Widgets/SourceList.vala"
	_tmp5_ = _tmp4_;
#line 1626 "../lib/Widgets/SourceList.vala"
	gtk_widget_class_install_style_property (GTK_WIDGET_CLASS (klass), (GParamSpec*) _tmp5_);
#line 1626 "../lib/Widgets/SourceList.vala"
	_g_param_spec_unref0 (_tmp5_);
#line 13669 "SourceList.c"
}

static void
granite_widgets_source_list_tree_instance_init (GraniteWidgetsSourceListTree * self,
                                                gpointer klass)
{
#line 1554 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_tree_get_instance_private (self);
#line 1590 "../lib/Widgets/SourceList.vala"
	self->priv->unselectable_item_clicked = FALSE;
#line 13680 "SourceList.c"
}

static void
granite_widgets_source_list_tree_finalize (GObject * obj)
{
	GraniteWidgetsSourceListTree * self;
#line 1554 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTree);
#line 1741 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_tree_disable_item_property_monitor (self);
#line 1556 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->_data_model);
#line 1579 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->selected);
#line 1582 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->editable_entry);
#line 1583 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->text_cell);
#line 1584 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->icon_cell);
#line 1585 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->activatable_cell);
#line 1586 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->badge_cell);
#line 1587 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->primary_expander_cell);
#line 1588 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->secondary_expander_cell);
#line 1589 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->spacer_cells);
#line 1554 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (granite_widgets_source_list_tree_parent_class)->finalize (obj);
#line 13713 "SourceList.c"
}

/**
     * The tree that actually displays the items.
     *
     * All the user interaction happens here.
     */
static GType
granite_widgets_source_list_tree_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListTreeClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_tree_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceListTree), 0, (GInstanceInitFunc) granite_widgets_source_list_tree_instance_init, NULL };
	GType granite_widgets_source_list_tree_type_id;
	granite_widgets_source_list_tree_type_id = g_type_register_static (gtk_tree_view_get_type (), "GraniteWidgetsSourceListTree", &g_define_type_info, 0);
	GraniteWidgetsSourceListTree_private_offset = g_type_add_instance_private (granite_widgets_source_list_tree_type_id, sizeof (GraniteWidgetsSourceListTreePrivate));
	return granite_widgets_source_list_tree_type_id;
}

static GType
granite_widgets_source_list_tree_get_type (void)
{
	static volatile gsize granite_widgets_source_list_tree_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_tree_type_id__volatile)) {
		GType granite_widgets_source_list_tree_type_id;
		granite_widgets_source_list_tree_type_id = granite_widgets_source_list_tree_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_tree_type_id__volatile, granite_widgets_source_list_tree_type_id);
	}
	return granite_widgets_source_list_tree_type_id__volatile;
}

static void
_vala_granite_widgets_source_list_tree_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec)
{
	GraniteWidgetsSourceListTree * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTree);
#line 1554 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_DATA_MODEL_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_tree_get_data_model (self));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_SELECTED_ITEM_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_tree_get_selected_item (self));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_EDITING_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_tree_get_editing (self));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_ELLIPSIZE_MODE_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		g_value_set_enum (value, granite_widgets_source_list_tree_get_ellipsize_mode (self));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 13777 "SourceList.c"
		default:
#line 1554 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 13783 "SourceList.c"
	}
}

static void
_vala_granite_widgets_source_list_tree_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec)
{
	GraniteWidgetsSourceListTree * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_SOURCE_LIST_TYPE_TREE, GraniteWidgetsSourceListTree);
#line 1554 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_DATA_MODEL_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_tree_set_data_model (self, g_value_get_object (value));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_SELECTED_ITEM_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_tree_set_selected_item (self, g_value_get_object (value));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 1554 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_TREE_ELLIPSIZE_MODE_PROPERTY:
#line 1554 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_tree_set_ellipsize_mode (self, g_value_get_enum (value));
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 13815 "SourceList.c"
		default:
#line 1554 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1554 "../lib/Widgets/SourceList.vala"
		break;
#line 13821 "SourceList.c"
	}
}

static void
_granite_widgets_source_list___lambda78_ (GraniteWidgetsSourceList* self,
                                          GraniteWidgetsSourceListItem* item)
{
#line 2683 "../lib/Widgets/SourceList.vala"
	g_signal_emit (self, granite_widgets_source_list_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTED_SIGNAL], 0, item);
#line 13831 "SourceList.c"
}

static void
__granite_widgets_source_list___lambda78__granite_widgets_source_list_tree_item_selected (GraniteWidgetsSourceListTree* _sender,
                                                                                          GraniteWidgetsSourceListItem* item,
                                                                                          gpointer self)
{
#line 2683 "../lib/Widgets/SourceList.vala"
	_granite_widgets_source_list___lambda78_ ((GraniteWidgetsSourceList*) self, item);
#line 13841 "SourceList.c"
}

static GObject *
granite_widgets_source_list_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteWidgetsSourceList * self;
	GraniteWidgetsSourceListDataModel* _tmp0_;
	GraniteWidgetsSourceListTree* _tmp1_;
	GraniteWidgetsSourceListTree* _tmp2_;
	GraniteWidgetsSourceListTree* _tmp3_;
#line 2676 "../lib/Widgets/SourceList.vala"
	parent_class = G_OBJECT_CLASS (granite_widgets_source_list_parent_class);
#line 2676 "../lib/Widgets/SourceList.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 2676 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceList);
#line 2677 "../lib/Widgets/SourceList.vala"
	_tmp0_ = self->priv->data_model;
#line 2677 "../lib/Widgets/SourceList.vala"
	_tmp1_ = granite_widgets_source_list_tree_new (_tmp0_);
#line 2677 "../lib/Widgets/SourceList.vala"
	g_object_ref_sink (_tmp1_);
#line 2677 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->tree);
#line 2677 "../lib/Widgets/SourceList.vala"
	self->priv->tree = _tmp1_;
#line 2679 "../lib/Widgets/SourceList.vala"
	gtk_scrolled_window_set_policy ((GtkScrolledWindow*) self, GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
#line 2680 "../lib/Widgets/SourceList.vala"
	_tmp2_ = self->priv->tree;
#line 2680 "../lib/Widgets/SourceList.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp2_);
#line 2681 "../lib/Widgets/SourceList.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 2683 "../lib/Widgets/SourceList.vala"
	_tmp3_ = self->priv->tree;
#line 2683 "../lib/Widgets/SourceList.vala"
	g_signal_connect_object (_tmp3_, "item-selected", (GCallback) __granite_widgets_source_list___lambda78__granite_widgets_source_list_tree_item_selected, self, 0);
#line 2676 "../lib/Widgets/SourceList.vala"
	return obj;
#line 13886 "SourceList.c"
}

static void
granite_widgets_source_list_class_init (GraniteWidgetsSourceListClass * klass,
                                        gpointer klass_data)
{
#line 234 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_parent_class = g_type_class_peek_parent (klass);
#line 234 "../lib/Widgets/SourceList.vala"
	g_type_class_adjust_private_offset (klass, &GraniteWidgetsSourceList_private_offset);
#line 234 "../lib/Widgets/SourceList.vala"
	((GraniteWidgetsSourceListClass *) klass)->item_selected = granite_widgets_source_list_real_item_selected;
#line 234 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_widgets_source_list_get_property;
#line 234 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_widgets_source_list_set_property;
#line 234 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_widgets_source_list_constructor;
#line 234 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_widgets_source_list_finalize;
#line 13907 "SourceList.c"
	/**
	     * Root-level expandable item.
	     *
	     * This item contains the first-level source list items. It //only serves as an item container//.
	     * It is used to add and remove items to/from the widget.
	     *
	     * Internally, it allows the source list to connect to its {@link Granite.Widgets.SourceList.ExpandableItem.child_added}
	     * and {@link Granite.Widgets.SourceList.ExpandableItem.child_removed} signals in order to monitor
	     * new children additions/removals.
	     *
	     * @since 0.2
	     */
#line 234 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ROOT_PROPERTY, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_ROOT_PROPERTY] = g_param_spec_object ("root", "root", "root", GRANITE_WIDGETS_SOURCE_LIST_TYPE_EXPANDABLE_ITEM, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 13922 "SourceList.c"
	/**
	     * The current selected item.
	     *
	     * Setting it to //null// un-selects the previously selected item, if there was any.
	     * {@link Granite.Widgets.SourceList.ExpandableItem.expand_with_parents} is called on the
	     * item's parent to make sure it's possible to select it.
	     *
	     * @since 0.2
	     */
#line 234 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_SELECTED_PROPERTY, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_SELECTED_PROPERTY] = g_param_spec_object ("selected", "selected", "selected", GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 13934 "SourceList.c"
	/**
	     * Text ellipsize mode.
	     *
	     * @since 0.2
	     */
#line 234 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_ELLIPSIZE_MODE_PROPERTY, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_ELLIPSIZE_MODE_PROPERTY] = g_param_spec_enum ("ellipsize-mode", "ellipsize-mode", "ellipsize-mode", pango_ellipsize_mode_get_type (), 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 13942 "SourceList.c"
	/**
	     * Whether an item is being edited.
	     *
	     * @see Granite.Widgets.SourceList.start_editing_item
	     * @since 0.2
	     */
#line 234 "../lib/Widgets/SourceList.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_WIDGETS_SOURCE_LIST_EDITING_PROPERTY, granite_widgets_source_list_properties[GRANITE_WIDGETS_SOURCE_LIST_EDITING_PROPERTY] = g_param_spec_boolean ("editing", "editing", "editing", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 13951 "SourceList.c"
	/**
	     * Emitted when the source list selection changes.
	     *
	     * @param item Selected item; //null// if nothing is selected.
	     * @since 0.2
	     */
#line 234 "../lib/Widgets/SourceList.vala"
	granite_widgets_source_list_signals[GRANITE_WIDGETS_SOURCE_LIST_ITEM_SELECTED_SIGNAL] = g_signal_new ("item-selected", GRANITE_WIDGETS_TYPE_SOURCE_LIST, G_SIGNAL_RUN_LAST, G_STRUCT_OFFSET (GraniteWidgetsSourceListClass, item_selected), NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, GRANITE_WIDGETS_SOURCE_LIST_TYPE_ITEM);
#line 13960 "SourceList.c"
}

static void
granite_widgets_source_list_instance_init (GraniteWidgetsSourceList * self,
                                           gpointer klass)
{
	GraniteWidgetsSourceListDataModel* _tmp0_;
#line 234 "../lib/Widgets/SourceList.vala"
	self->priv = granite_widgets_source_list_get_instance_private (self);
#line 2664 "../lib/Widgets/SourceList.vala"
	_tmp0_ = granite_widgets_source_list_data_model_new ();
#line 2664 "../lib/Widgets/SourceList.vala"
	self->priv->data_model = _tmp0_;
#line 13974 "SourceList.c"
}

static void
granite_widgets_source_list_finalize (GObject * obj)
{
	GraniteWidgetsSourceList * self;
#line 234 "../lib/Widgets/SourceList.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceList);
#line 2663 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->tree);
#line 2664 "../lib/Widgets/SourceList.vala"
	_g_object_unref0 (self->priv->data_model);
#line 234 "../lib/Widgets/SourceList.vala"
	G_OBJECT_CLASS (granite_widgets_source_list_parent_class)->finalize (obj);
#line 13989 "SourceList.c"
}

/**
 * A widget that can display a list of items organized in categories.
 *
 * The source list widget consists of a collection of items, some of which are also expandable (and
 * thus can contain more items). All the items displayed in the source list are children of the widget's
 * root item. The API is meant to be used as follows:
 *
 * 1. Create the items you want to display in the source list, setting the appropriate values for their
 * properties. The desired hierarchy is achieved by creating expandable items and adding items to them.
 * These will be displayed as descendants in the widget's tree structure. The expandable items that are
 * not nested inside any other item are considered to be at root level, and should be added to
 * the widget's root item.<<BR>>
 *
 * Expandable items located at the root level are treated as categories, and only support text.
 *
 * ''Example''<<BR>>
 * The final tree will have the following structure:
 * {{{
 * Libraries
 *   Music
 * Stores
 *   My Store
 *      Music
 *      Podcasts
 * Devices
 *   Player 1
 *   Player 2
 * }}}
 *
 * {{{
 * var library_category = new Granite.Widgets.SourceList.ExpandableItem ("Libraries");
 * var store_category = new Granite.Widgets.SourceList.ExpandableItem ("Stores");
 * var device_category = new Granite.Widgets.SourceList.ExpandableItem ("Devices");
 *
 * var music_item = new Granite.Widgets.SourceList.Item ("Music");
 *
 * // "Libraries" will be the parent category of "Music"
 * library_category.add (music_item);
 *
 * // We plan to add sub-items to the store, so let's use an expandable item
 * var my_store_item = new Granite.Widgets.SourceList.ExpandableItem ("My Store");
 * store_category.add (my_store_item);
 *
 * var my_store_podcast_item = new Granite.Widgets.SourceList.Item ("Podcasts");
 * var my_store_music_item = new Granite.Widgets.SourceList.Item ("Music");
 *
 * my_store_item.add (my_store_music_item);
 * my_store_item.add (my_store_podcast_item);
 *
 * var player1_item = new Granite.Widgets.SourceList.Item ("Player 1");
 * var player2_item = new Granite.Widgets.SourceList.Item ("Player 2");
 *
 * device_category.add (player1_item);
 * device_category.add (player2_item);
 * }}}
 *
 * 2. Create a source list widget.<<BR>>
 * {{{
 * var source_list = new Granite.Widgets.SourceList ();
 * }}}
 *
 * 3. Add root-level items to the {@link Granite.Widgets.SourceList.root} item.
 * This item only serves as a container, and all its properties are ignored by the widget.
 *
 * {{{
 * // This will add the main categories (including their children) to the source list. After
 * // having being added to be widget, any other item added to any of these items
 * // (or any other child item in a deeper level) will be automatically added too.
 * // There's no need to deal with the source list widget directly.
 *
 * var root = source_list.root;
 *
 * root.add (library_category);
 * root.add (store_category);
 * root.add (device_category);
 * }}}
 *
 * The steps mentioned above are enough for initializing the source list. Future changes to the items'
 * properties are ''automatically'' reflected by the widget.
 *
 * Final steps would involve connecting handlers to the source list events, being
 * {@link Granite.Widgets.SourceList.item_selected} the most important, as it indicates that
 * the selection was modified.
 *
 * Pack the source list into the GUI using the {@link Gtk.Paned} widget.
 * This is usually done as follows:
 * {{{
 * var pane = new Gtk.Paned (Gtk.Orientation.HORIZONTAL);
 * pane.pack1 (source_list, false, false);
 * pane.pack2 (content_area, true, false);
 * }}}
 *
 * @since 0.2
 * @see Gtk.Paned
 */
static GType
granite_widgets_source_list_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteWidgetsSourceListClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_widgets_source_list_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteWidgetsSourceList), 0, (GInstanceInitFunc) granite_widgets_source_list_instance_init, NULL };
	GType granite_widgets_source_list_type_id;
	granite_widgets_source_list_type_id = g_type_register_static (gtk_scrolled_window_get_type (), "GraniteWidgetsSourceList", &g_define_type_info, 0);
	GraniteWidgetsSourceList_private_offset = g_type_add_instance_private (granite_widgets_source_list_type_id, sizeof (GraniteWidgetsSourceListPrivate));
	return granite_widgets_source_list_type_id;
}

GType
granite_widgets_source_list_get_type (void)
{
	static volatile gsize granite_widgets_source_list_type_id__volatile = 0;
	if (g_once_init_enter (&granite_widgets_source_list_type_id__volatile)) {
		GType granite_widgets_source_list_type_id;
		granite_widgets_source_list_type_id = granite_widgets_source_list_get_type_once ();
		g_once_init_leave (&granite_widgets_source_list_type_id__volatile, granite_widgets_source_list_type_id);
	}
	return granite_widgets_source_list_type_id__volatile;
}

static void
_vala_granite_widgets_source_list_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec)
{
	GraniteWidgetsSourceList * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceList);
#line 234 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ROOT_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_get_root (self));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_SELECTED_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		g_value_set_object (value, granite_widgets_source_list_get_selected (self));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ELLIPSIZE_MODE_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		g_value_set_enum (value, granite_widgets_source_list_get_ellipsize_mode (self));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_EDITING_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		g_value_set_boolean (value, granite_widgets_source_list_get_editing (self));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 14143 "SourceList.c"
		default:
#line 234 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 14149 "SourceList.c"
	}
}

static void
_vala_granite_widgets_source_list_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec)
{
	GraniteWidgetsSourceList * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_WIDGETS_TYPE_SOURCE_LIST, GraniteWidgetsSourceList);
#line 234 "../lib/Widgets/SourceList.vala"
	switch (property_id) {
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ROOT_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_set_root (self, g_value_get_object (value));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_SELECTED_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_set_selected (self, g_value_get_object (value));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 234 "../lib/Widgets/SourceList.vala"
		case GRANITE_WIDGETS_SOURCE_LIST_ELLIPSIZE_MODE_PROPERTY:
#line 234 "../lib/Widgets/SourceList.vala"
		granite_widgets_source_list_set_ellipsize_mode (self, g_value_get_enum (value));
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 14181 "SourceList.c"
		default:
#line 234 "../lib/Widgets/SourceList.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 234 "../lib/Widgets/SourceList.vala"
		break;
#line 14187 "SourceList.c"
	}
}

