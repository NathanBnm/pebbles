/* BufferSurface.c generated by valac 0.48.14, the Vala compiler
 * generated from BufferSurface.vala, do not modify */

/*
 *  Copyright (C) 2019 elementary, Inc. (https://elementary.io)
 *                2011-2013 Robert Dyer,
 *                          Rico Tzschichholz <ricotz@ubuntu.com>
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <glib-object.h>
#include <cairo-gobject.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <gdk-pixbuf/gdk-pixbuf.h>
#include <string.h>

#define GRANITE_DRAWING_TYPE_BUFFER_SURFACE (granite_drawing_buffer_surface_get_type ())
#define GRANITE_DRAWING_BUFFER_SURFACE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_DRAWING_TYPE_BUFFER_SURFACE, GraniteDrawingBufferSurface))
#define GRANITE_DRAWING_BUFFER_SURFACE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_DRAWING_TYPE_BUFFER_SURFACE, GraniteDrawingBufferSurfaceClass))
#define GRANITE_DRAWING_IS_BUFFER_SURFACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_DRAWING_TYPE_BUFFER_SURFACE))
#define GRANITE_DRAWING_IS_BUFFER_SURFACE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_DRAWING_TYPE_BUFFER_SURFACE))
#define GRANITE_DRAWING_BUFFER_SURFACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_DRAWING_TYPE_BUFFER_SURFACE, GraniteDrawingBufferSurfaceClass))

typedef struct _GraniteDrawingBufferSurface GraniteDrawingBufferSurface;
typedef struct _GraniteDrawingBufferSurfaceClass GraniteDrawingBufferSurfaceClass;
typedef struct _GraniteDrawingBufferSurfacePrivate GraniteDrawingBufferSurfacePrivate;
enum  {
	GRANITE_DRAWING_BUFFER_SURFACE_0_PROPERTY,
	GRANITE_DRAWING_BUFFER_SURFACE_SURFACE_PROPERTY,
	GRANITE_DRAWING_BUFFER_SURFACE_WIDTH_PROPERTY,
	GRANITE_DRAWING_BUFFER_SURFACE_HEIGHT_PROPERTY,
	GRANITE_DRAWING_BUFFER_SURFACE_CONTEXT_PROPERTY,
	GRANITE_DRAWING_BUFFER_SURFACE_NUM_PROPERTIES
};
static GParamSpec* granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_NUM_PROPERTIES];
#define _cairo_surface_destroy0(var) ((var == NULL) ? NULL : (var = (cairo_surface_destroy (var), NULL)))
#define _cairo_destroy0(var) ((var == NULL) ? NULL : (var = (cairo_destroy (var), NULL)))

#define GRANITE_DRAWING_TYPE_COLOR (granite_drawing_color_get_type ())
#define GRANITE_DRAWING_COLOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_DRAWING_TYPE_COLOR, GraniteDrawingColor))
#define GRANITE_DRAWING_COLOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_DRAWING_TYPE_COLOR, GraniteDrawingColorClass))
#define GRANITE_DRAWING_IS_COLOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_DRAWING_TYPE_COLOR))
#define GRANITE_DRAWING_IS_COLOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_DRAWING_TYPE_COLOR))
#define GRANITE_DRAWING_COLOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_DRAWING_TYPE_COLOR, GraniteDrawingColorClass))

typedef struct _GraniteDrawingColor GraniteDrawingColor;
typedef struct _GraniteDrawingColorClass GraniteDrawingColorClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block1Data Block1Data;
#define _g_thread_unref0(var) ((var == NULL) ? NULL : (var = (g_thread_unref (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _Block2Data Block2Data;
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _GraniteDrawingBufferSurface {
	GObject parent_instance;
	GraniteDrawingBufferSurfacePrivate * priv;
};

struct _GraniteDrawingBufferSurfaceClass {
	GObjectClass parent_class;
};

struct _GraniteDrawingBufferSurfacePrivate {
	cairo_surface_t* _surface;
	gint _width;
	gint _height;
	cairo_t* _context;
};

struct _Block1Data {
	int _ref_count_;
	GraniteDrawingBufferSurface* self;
	gint alpha;
	gint height;
	gint width;
	guint8* pixels;
};

struct _Block2Data {
	int _ref_count_;
	GraniteDrawingBufferSurface* self;
	gint gauss_width;
	gdouble* kernel;
	gint kernel_length1;
	gint _kernel_size_;
	gint width;
	gint height;
	gdouble* buffer_a;
	gint buffer_a_length1;
	gint _buffer_a_size_;
	gdouble* buffer_b;
	gint buffer_b_length1;
	gint _buffer_b_size_;
	gint* shiftar;
	gint shiftar_length1;
	gint shiftar_length2;
	gint _shiftar_size_;
};

static gint GraniteDrawingBufferSurface_private_offset;
static gpointer granite_drawing_buffer_surface_parent_class = NULL;

GType granite_drawing_buffer_surface_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteDrawingBufferSurface, g_object_unref)
#define GRANITE_DRAWING_BUFFER_SURFACE_ALPHA_PRECISION 16
#define GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION 7
cairo_surface_t* granite_drawing_buffer_surface_get_surface (GraniteDrawingBufferSurface* self);
gint granite_drawing_buffer_surface_get_width (GraniteDrawingBufferSurface* self);
gint granite_drawing_buffer_surface_get_height (GraniteDrawingBufferSurface* self);
static void granite_drawing_buffer_surface_set_surface (GraniteDrawingBufferSurface* self,
                                                 cairo_surface_t* value);
static void granite_drawing_buffer_surface_set_width (GraniteDrawingBufferSurface* self,
                                               gint value);
static void granite_drawing_buffer_surface_set_height (GraniteDrawingBufferSurface* self,
                                                gint value);
cairo_t* granite_drawing_buffer_surface_get_context (GraniteDrawingBufferSurface* self);
GraniteDrawingBufferSurface* granite_drawing_buffer_surface_new (gint width,
                                                                 gint height);
GraniteDrawingBufferSurface* granite_drawing_buffer_surface_construct (GType object_type,
                                                                       gint width,
                                                                       gint height);
GraniteDrawingBufferSurface* granite_drawing_buffer_surface_new_with_surface (gint width,
                                                                              gint height,
                                                                              cairo_surface_t* model);
GraniteDrawingBufferSurface* granite_drawing_buffer_surface_construct_with_surface (GType object_type,
                                                                                    gint width,
                                                                                    gint height,
                                                                                    cairo_surface_t* model);
GraniteDrawingBufferSurface* granite_drawing_buffer_surface_new_with_buffer_surface (gint width,
                                                                                     gint height,
                                                                                     GraniteDrawingBufferSurface* model);
GraniteDrawingBufferSurface* granite_drawing_buffer_surface_construct_with_buffer_surface (GType object_type,
                                                                                           gint width,
                                                                                           gint height,
                                                                                           GraniteDrawingBufferSurface* model);
void granite_drawing_buffer_surface_clear (GraniteDrawingBufferSurface* self);
GdkPixbuf* granite_drawing_buffer_surface_load_to_pixbuf (GraniteDrawingBufferSurface* self);
GType granite_drawing_color_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteDrawingColor, g_object_unref)
GraniteDrawingColor* granite_drawing_buffer_surface_average_color (GraniteDrawingBufferSurface* self);
GraniteDrawingColor* granite_drawing_color_new (gdouble R,
                                                gdouble G,
                                                gdouble B,
                                                gdouble A);
GraniteDrawingColor* granite_drawing_color_construct (GType object_type,
                                                      gdouble R,
                                                      gdouble G,
                                                      gdouble B,
                                                      gdouble A);
GraniteDrawingColor* granite_drawing_color_set_val (GraniteDrawingColor* self,
                                                    gdouble val);
GraniteDrawingColor* granite_drawing_color_multiply_sat (GraniteDrawingColor* self,
                                                         gdouble amount);
void granite_drawing_buffer_surface_fast_blur (GraniteDrawingBufferSurface* self,
                                               gint radius,
                                               gint process_count);
void granite_drawing_buffer_surface_exponential_blur (GraniteDrawingBufferSurface* self,
                                                      gint radius);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
static void* ___lambda4_ (Block1Data* _data1_);
static void granite_drawing_buffer_surface_exponential_blur_rows (GraniteDrawingBufferSurface* self,
                                                           guint8* pixels,
                                                           gint width,
                                                           gint height,
                                                           gint start_row,
                                                           gint end_row,
                                                           gint start_x,
                                                           gint end_x,
                                                           gint alpha);
static gpointer ____lambda4__gthread_func (gpointer self);
static void* ___lambda5_ (Block1Data* _data1_);
static void granite_drawing_buffer_surface_exponential_blur_columns (GraniteDrawingBufferSurface* self,
                                                              guint8* pixels,
                                                              gint width,
                                                              gint height,
                                                              gint start_col,
                                                              gint end_col,
                                                              gint start_y,
                                                              gint end_y,
                                                              gint alpha);
static gpointer ____lambda5__gthread_func (gpointer self);
static inline void granite_drawing_buffer_surface_exponential_blur_inner (guint8* pixel,
                                                            gint* z_alpha,
                                                            gint* z_red,
                                                            gint* z_green,
                                                            gint* z_blue,
                                                            gint alpha);
void granite_drawing_buffer_surface_gaussian_blur (GraniteDrawingBufferSurface* self,
                                                   gint radius);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
static gdouble* granite_drawing_buffer_surface_build_gaussian_kernel (gint gauss_width,
                                                               gint* result_length1);
static void* ___lambda6_ (Block2Data* _data2_);
static void granite_drawing_buffer_surface_gaussian_blur_horizontal (GraniteDrawingBufferSurface* self,
                                                              gdouble* src,
                                                              gdouble* dest,
                                                              gdouble* kernel,
                                                              gint gauss_width,
                                                              gint width,
                                                              gint height,
                                                              gint start_row,
                                                              gint end_row,
                                                              gint* shift,
                                                              gint shift_length1,
                                                              gint shift_length2);
static gpointer ____lambda6__gthread_func (gpointer self);
static void* ___lambda7_ (Block2Data* _data2_);
static void granite_drawing_buffer_surface_gaussian_blur_vertical (GraniteDrawingBufferSurface* self,
                                                            gdouble* src,
                                                            gdouble* dest,
                                                            gdouble* kernel,
                                                            gint gauss_width,
                                                            gint width,
                                                            gint height,
                                                            gint start_col,
                                                            gint end_col,
                                                            gint* shift,
                                                            gint shift_length1,
                                                            gint shift_length2);
static gpointer ____lambda7__gthread_func (gpointer self);
static void granite_drawing_buffer_surface_finalize (GObject * obj);
static GType granite_drawing_buffer_surface_get_type_once (void);
static void _vala_granite_drawing_buffer_surface_get_property (GObject * object,
                                                        guint property_id,
                                                        GValue * value,
                                                        GParamSpec * pspec);
static void _vala_granite_drawing_buffer_surface_set_property (GObject * object,
                                                        guint property_id,
                                                        const GValue * value,
                                                        GParamSpec * pspec);

static inline gpointer
granite_drawing_buffer_surface_get_instance_private (GraniteDrawingBufferSurface* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteDrawingBufferSurface_private_offset);
}

cairo_surface_t*
granite_drawing_buffer_surface_get_surface (GraniteDrawingBufferSurface* self)
{
	cairo_surface_t* result;
	cairo_surface_t* _tmp0_;
	cairo_surface_t* _tmp4_;
#line 37 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 38 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = self->priv->_surface;
#line 38 "../lib/Drawing/BufferSurface.vala"
	if (_tmp0_ == NULL) {
#line 273 "BufferSurface.c"
		gint _tmp1_;
		gint _tmp2_;
		cairo_surface_t* _tmp3_;
#line 39 "../lib/Drawing/BufferSurface.vala"
		_tmp1_ = self->priv->_width;
#line 39 "../lib/Drawing/BufferSurface.vala"
		_tmp2_ = self->priv->_height;
#line 39 "../lib/Drawing/BufferSurface.vala"
		_tmp3_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, _tmp1_, _tmp2_);
#line 39 "../lib/Drawing/BufferSurface.vala"
		_cairo_surface_destroy0 (self->priv->_surface);
#line 39 "../lib/Drawing/BufferSurface.vala"
		self->priv->_surface = _tmp3_;
#line 287 "BufferSurface.c"
	}
#line 42 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = self->priv->_surface;
#line 42 "../lib/Drawing/BufferSurface.vala"
	result = _tmp4_;
#line 42 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 295 "BufferSurface.c"
}

static gpointer
_cairo_surface_reference0 (gpointer self)
{
#line 44 "../lib/Drawing/BufferSurface.vala"
	return self ? cairo_surface_reference (self) : NULL;
#line 303 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_set_surface (GraniteDrawingBufferSurface* self,
                                            cairo_surface_t* value)
{
	cairo_surface_t* _tmp0_;
#line 44 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 44 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = _cairo_surface_reference0 (value);
#line 44 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (self->priv->_surface);
#line 44 "../lib/Drawing/BufferSurface.vala"
	self->priv->_surface = _tmp0_;
#line 44 "../lib/Drawing/BufferSurface.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_SURFACE_PROPERTY]);
#line 321 "BufferSurface.c"
}

gint
granite_drawing_buffer_surface_get_width (GraniteDrawingBufferSurface* self)
{
	gint result;
#line 50 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 50 "../lib/Drawing/BufferSurface.vala"
	result = self->priv->_width;
#line 50 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 334 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_set_width (GraniteDrawingBufferSurface* self,
                                          gint value)
{
	gint old_value;
#line 50 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 50 "../lib/Drawing/BufferSurface.vala"
	old_value = granite_drawing_buffer_surface_get_width (self);
#line 50 "../lib/Drawing/BufferSurface.vala"
	if (old_value != value) {
#line 50 "../lib/Drawing/BufferSurface.vala"
		self->priv->_width = value;
#line 50 "../lib/Drawing/BufferSurface.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_WIDTH_PROPERTY]);
#line 352 "BufferSurface.c"
	}
}

gint
granite_drawing_buffer_surface_get_height (GraniteDrawingBufferSurface* self)
{
	gint result;
#line 54 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 54 "../lib/Drawing/BufferSurface.vala"
	result = self->priv->_height;
#line 54 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 366 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_set_height (GraniteDrawingBufferSurface* self,
                                           gint value)
{
	gint old_value;
#line 54 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 54 "../lib/Drawing/BufferSurface.vala"
	old_value = granite_drawing_buffer_surface_get_height (self);
#line 54 "../lib/Drawing/BufferSurface.vala"
	if (old_value != value) {
#line 54 "../lib/Drawing/BufferSurface.vala"
		self->priv->_height = value;
#line 54 "../lib/Drawing/BufferSurface.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_HEIGHT_PROPERTY]);
#line 384 "BufferSurface.c"
	}
}

cairo_t*
granite_drawing_buffer_surface_get_context (GraniteDrawingBufferSurface* self)
{
	cairo_t* result;
	cairo_t* _tmp0_;
	cairo_t* _tmp4_;
#line 62 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 63 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = self->priv->_context;
#line 63 "../lib/Drawing/BufferSurface.vala"
	if (_tmp0_ == NULL) {
#line 400 "BufferSurface.c"
		cairo_surface_t* _tmp1_;
		cairo_surface_t* _tmp2_;
		cairo_t* _tmp3_;
#line 64 "../lib/Drawing/BufferSurface.vala"
		_tmp1_ = granite_drawing_buffer_surface_get_surface (self);
#line 64 "../lib/Drawing/BufferSurface.vala"
		_tmp2_ = _tmp1_;
#line 64 "../lib/Drawing/BufferSurface.vala"
		_tmp3_ = cairo_create (_tmp2_);
#line 64 "../lib/Drawing/BufferSurface.vala"
		_cairo_destroy0 (self->priv->_context);
#line 64 "../lib/Drawing/BufferSurface.vala"
		self->priv->_context = _tmp3_;
#line 414 "BufferSurface.c"
	}
#line 67 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = self->priv->_context;
#line 67 "../lib/Drawing/BufferSurface.vala"
	result = _tmp4_;
#line 67 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 422 "BufferSurface.c"
}

/**
         * Constructs a new, empty {@link Granite.Drawing.BufferSurface} with the supplied dimensions.
         *
         * @param width the width of {@link Granite.Drawing.BufferSurface}, in pixels
         * @param height the height of the {@link Granite.Drawing.BufferSurface}, in pixels
         */
GraniteDrawingBufferSurface*
granite_drawing_buffer_surface_construct (GType object_type,
                                          gint width,
                                          gint height)
{
	GraniteDrawingBufferSurface * self = NULL;
#line 77 "../lib/Drawing/BufferSurface.vala"
	_vala_return_val_if_fail ((width >= 0) && (height >= 0), "width >= 0 && height >= 0", NULL);
#line 77 "../lib/Drawing/BufferSurface.vala"
	self = (GraniteDrawingBufferSurface*) g_object_new (object_type, NULL);
#line 78 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_set_width (self, width);
#line 79 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_set_height (self, height);
#line 77 "../lib/Drawing/BufferSurface.vala"
	return self;
#line 447 "BufferSurface.c"
}

GraniteDrawingBufferSurface*
granite_drawing_buffer_surface_new (gint width,
                                    gint height)
{
#line 77 "../lib/Drawing/BufferSurface.vala"
	return granite_drawing_buffer_surface_construct (GRANITE_DRAWING_TYPE_BUFFER_SURFACE, width, height);
#line 456 "BufferSurface.c"
}

/**
         * Constructs a new, empty {@link Granite.Drawing.BufferSurface} with the supplied dimensions, using
         * the supplied {@link Cairo.Surface} as a model.
         *
         * @param width the width of the new {@link Granite.Drawing.BufferSurface}, in pixels
         * @param height the height of the new {@link Granite.Drawing.BufferSurface}, in pixels
         * @param model the {@link Cairo.Surface} to use as a model for the internal {@link Cairo.Surface}
         */
GraniteDrawingBufferSurface*
granite_drawing_buffer_surface_construct_with_surface (GType object_type,
                                                       gint width,
                                                       gint height,
                                                       cairo_surface_t* model)
{
	GraniteDrawingBufferSurface * self = NULL;
	cairo_surface_t* _tmp0_;
	cairo_surface_t* _tmp1_;
#line 90 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (model != NULL, NULL);
#line 90 "../lib/Drawing/BufferSurface.vala"
	_vala_return_val_if_fail (model != NULL, "model != null", NULL);
#line 91 "../lib/Drawing/BufferSurface.vala"
	self = (GraniteDrawingBufferSurface*) granite_drawing_buffer_surface_construct (object_type, width, height);
#line 92 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = cairo_surface_create_similar (model, CAIRO_CONTENT_COLOR_ALPHA, width, height);
#line 92 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = _tmp0_;
#line 92 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_set_surface (self, _tmp1_);
#line 92 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (_tmp1_);
#line 90 "../lib/Drawing/BufferSurface.vala"
	return self;
#line 492 "BufferSurface.c"
}

GraniteDrawingBufferSurface*
granite_drawing_buffer_surface_new_with_surface (gint width,
                                                 gint height,
                                                 cairo_surface_t* model)
{
#line 90 "../lib/Drawing/BufferSurface.vala"
	return granite_drawing_buffer_surface_construct_with_surface (GRANITE_DRAWING_TYPE_BUFFER_SURFACE, width, height, model);
#line 502 "BufferSurface.c"
}

/**
         * Constructs a new, empty {@link Granite.Drawing.BufferSurface} with the supplied dimensions, using
         * the supplied {@link Granite.Drawing.BufferSurface} as a model.
         *
         * @param width the width of the new {@link Granite.Drawing.BufferSurface}, in pixels
         * @param height the height of the new {@link Granite.Drawing.BufferSurface}, in pixels
         * @param model the {@link Granite.Drawing.BufferSurface} to use as a model for the internal {@link Cairo.Surface}
         */
GraniteDrawingBufferSurface*
granite_drawing_buffer_surface_construct_with_buffer_surface (GType object_type,
                                                              gint width,
                                                              gint height,
                                                              GraniteDrawingBufferSurface* model)
{
	GraniteDrawingBufferSurface * self = NULL;
	cairo_surface_t* _tmp0_;
	cairo_surface_t* _tmp1_;
	cairo_surface_t* _tmp2_;
	cairo_surface_t* _tmp3_;
#line 103 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (model != NULL, NULL);
#line 103 "../lib/Drawing/BufferSurface.vala"
	_vala_return_val_if_fail (model != NULL, "model != null", NULL);
#line 104 "../lib/Drawing/BufferSurface.vala"
	self = (GraniteDrawingBufferSurface*) granite_drawing_buffer_surface_construct (object_type, width, height);
#line 105 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = granite_drawing_buffer_surface_get_surface (model);
#line 105 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = _tmp0_;
#line 105 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = cairo_surface_create_similar (_tmp1_, CAIRO_CONTENT_COLOR_ALPHA, width, height);
#line 105 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = _tmp2_;
#line 105 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_set_surface (self, _tmp3_);
#line 105 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (_tmp3_);
#line 103 "../lib/Drawing/BufferSurface.vala"
	return self;
#line 544 "BufferSurface.c"
}

GraniteDrawingBufferSurface*
granite_drawing_buffer_surface_new_with_buffer_surface (gint width,
                                                        gint height,
                                                        GraniteDrawingBufferSurface* model)
{
#line 103 "../lib/Drawing/BufferSurface.vala"
	return granite_drawing_buffer_surface_construct_with_buffer_surface (GRANITE_DRAWING_TYPE_BUFFER_SURFACE, width, height, model);
#line 554 "BufferSurface.c"
}

/**
         * Clears the internal {@link Cairo.Surface}, making all pixels fully transparent.
         */
void
granite_drawing_buffer_surface_clear (GraniteDrawingBufferSurface* self)
{
	cairo_t* _tmp0_;
	cairo_t* _tmp1_;
	cairo_t* _tmp2_;
	cairo_t* _tmp3_;
	cairo_t* _tmp4_;
	cairo_t* _tmp5_;
#line 111 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 112 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = granite_drawing_buffer_surface_get_context (self);
#line 112 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = _tmp0_;
#line 112 "../lib/Drawing/BufferSurface.vala"
	cairo_save (_tmp1_);
#line 114 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = self->priv->_context;
#line 114 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_rgba (_tmp2_, (gdouble) 0, (gdouble) 0, (gdouble) 0, (gdouble) 0);
#line 115 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = self->priv->_context;
#line 115 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp3_, CAIRO_OPERATOR_SOURCE);
#line 116 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = self->priv->_context;
#line 116 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp4_);
#line 118 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = self->priv->_context;
#line 118 "../lib/Drawing/BufferSurface.vala"
	cairo_restore (_tmp5_);
#line 593 "BufferSurface.c"
}

/**
         * Creates a {@link Gdk.Pixbuf} from internal {@link Cairo.Surface}.
         *
         * @return the {@link Gdk.Pixbuf}
         */
GdkPixbuf*
granite_drawing_buffer_surface_load_to_pixbuf (GraniteDrawingBufferSurface* self)
{
	cairo_surface_t* image_surface = NULL;
	gint _tmp0_;
	gint _tmp1_;
	cairo_surface_t* _tmp2_;
	cairo_t* cr = NULL;
	cairo_surface_t* _tmp3_;
	cairo_t* _tmp4_;
	cairo_t* _tmp5_;
	cairo_t* _tmp6_;
	cairo_surface_t* _tmp7_;
	cairo_surface_t* _tmp8_;
	cairo_t* _tmp9_;
	gint width = 0;
	cairo_surface_t* _tmp10_;
	gint height = 0;
	cairo_surface_t* _tmp11_;
	GdkPixbuf* pb = NULL;
	GdkPixbuf* _tmp12_;
	GdkPixbuf* _tmp13_;
	guint8* data = NULL;
	cairo_surface_t* _tmp14_;
	guchar* _tmp15_;
	guint8* pixels = NULL;
	GdkPixbuf* _tmp16_;
	guint8* _tmp17_;
	gint length = 0;
	cairo_surface_t* _tmp18_;
	GdkPixbuf* result = NULL;
#line 126 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 127 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = self->priv->_width;
#line 127 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = self->priv->_height;
#line 127 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, _tmp0_, _tmp1_);
#line 127 "../lib/Drawing/BufferSurface.vala"
	image_surface = _tmp2_;
#line 128 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = image_surface;
#line 128 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = cairo_create (_tmp3_);
#line 128 "../lib/Drawing/BufferSurface.vala"
	cr = _tmp4_;
#line 130 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = cr;
#line 130 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp5_, CAIRO_OPERATOR_SOURCE);
#line 131 "../lib/Drawing/BufferSurface.vala"
	_tmp6_ = cr;
#line 131 "../lib/Drawing/BufferSurface.vala"
	_tmp7_ = granite_drawing_buffer_surface_get_surface (self);
#line 131 "../lib/Drawing/BufferSurface.vala"
	_tmp8_ = _tmp7_;
#line 131 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp6_, _tmp8_, (gdouble) 0, (gdouble) 0);
#line 132 "../lib/Drawing/BufferSurface.vala"
	_tmp9_ = cr;
#line 132 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp9_);
#line 134 "../lib/Drawing/BufferSurface.vala"
	_tmp10_ = image_surface;
#line 134 "../lib/Drawing/BufferSurface.vala"
	width = cairo_image_surface_get_width (_tmp10_);
#line 135 "../lib/Drawing/BufferSurface.vala"
	_tmp11_ = image_surface;
#line 135 "../lib/Drawing/BufferSurface.vala"
	height = cairo_image_surface_get_height (_tmp11_);
#line 137 "../lib/Drawing/BufferSurface.vala"
	_tmp12_ = gdk_pixbuf_new (GDK_COLORSPACE_RGB, TRUE, 8, width, height);
#line 137 "../lib/Drawing/BufferSurface.vala"
	pb = _tmp12_;
#line 138 "../lib/Drawing/BufferSurface.vala"
	_tmp13_ = pb;
#line 138 "../lib/Drawing/BufferSurface.vala"
	gdk_pixbuf_fill (_tmp13_, (guint32) 0x00000000);
#line 140 "../lib/Drawing/BufferSurface.vala"
	_tmp14_ = image_surface;
#line 140 "../lib/Drawing/BufferSurface.vala"
	_tmp15_ = cairo_image_surface_get_data (_tmp14_);
#line 140 "../lib/Drawing/BufferSurface.vala"
	data = _tmp15_;
#line 141 "../lib/Drawing/BufferSurface.vala"
	_tmp16_ = pb;
#line 141 "../lib/Drawing/BufferSurface.vala"
	_tmp17_ = gdk_pixbuf_get_pixels (_tmp16_);
#line 141 "../lib/Drawing/BufferSurface.vala"
	pixels = _tmp17_;
#line 142 "../lib/Drawing/BufferSurface.vala"
	length = width * height;
#line 144 "../lib/Drawing/BufferSurface.vala"
	_tmp18_ = image_surface;
#line 144 "../lib/Drawing/BufferSurface.vala"
	if (cairo_image_surface_get_format (_tmp18_) == CAIRO_FORMAT_ARGB32) {
#line 698 "BufferSurface.c"
		{
			gint i = 0;
#line 145 "../lib/Drawing/BufferSurface.vala"
			i = 0;
#line 703 "BufferSurface.c"
			{
				gboolean _tmp19_ = FALSE;
#line 145 "../lib/Drawing/BufferSurface.vala"
				_tmp19_ = TRUE;
#line 145 "../lib/Drawing/BufferSurface.vala"
				while (TRUE) {
#line 710 "BufferSurface.c"
					guint8* _tmp21_;
					guint8 _tmp22_;
					guint8* _tmp41_;
					guint8* _tmp42_;
#line 145 "../lib/Drawing/BufferSurface.vala"
					if (!_tmp19_) {
#line 717 "BufferSurface.c"
						gint _tmp20_;
#line 145 "../lib/Drawing/BufferSurface.vala"
						_tmp20_ = i;
#line 145 "../lib/Drawing/BufferSurface.vala"
						i = _tmp20_ + 1;
#line 723 "BufferSurface.c"
					}
#line 145 "../lib/Drawing/BufferSurface.vala"
					_tmp19_ = FALSE;
#line 145 "../lib/Drawing/BufferSurface.vala"
					if (!(i < length)) {
#line 145 "../lib/Drawing/BufferSurface.vala"
						break;
#line 731 "BufferSurface.c"
					}
#line 147 "../lib/Drawing/BufferSurface.vala"
					_tmp21_ = data;
#line 147 "../lib/Drawing/BufferSurface.vala"
					_tmp22_ = _tmp21_[3];
#line 147 "../lib/Drawing/BufferSurface.vala"
					if (((gint) _tmp22_) > 0) {
#line 739 "BufferSurface.c"
						guint8* _tmp23_;
						guint8* _tmp24_;
						guint8 _tmp25_;
						guint8* _tmp26_;
						guint8 _tmp27_;
						guint8* _tmp28_;
						guint8* _tmp29_;
						guint8 _tmp30_;
						guint8* _tmp31_;
						guint8 _tmp32_;
						guint8* _tmp33_;
						guint8* _tmp34_;
						guint8 _tmp35_;
						guint8* _tmp36_;
						guint8 _tmp37_;
						guint8* _tmp38_;
						guint8* _tmp39_;
						guint8 _tmp40_;
#line 148 "../lib/Drawing/BufferSurface.vala"
						_tmp23_ = pixels;
#line 148 "../lib/Drawing/BufferSurface.vala"
						_tmp24_ = data;
#line 148 "../lib/Drawing/BufferSurface.vala"
						_tmp25_ = _tmp24_[2];
#line 148 "../lib/Drawing/BufferSurface.vala"
						_tmp26_ = data;
#line 148 "../lib/Drawing/BufferSurface.vala"
						_tmp27_ = _tmp26_[3];
#line 148 "../lib/Drawing/BufferSurface.vala"
						_tmp23_[0] = (guint8) ((_tmp25_ * 255) / _tmp27_);
#line 149 "../lib/Drawing/BufferSurface.vala"
						_tmp28_ = pixels;
#line 149 "../lib/Drawing/BufferSurface.vala"
						_tmp29_ = data;
#line 149 "../lib/Drawing/BufferSurface.vala"
						_tmp30_ = _tmp29_[1];
#line 149 "../lib/Drawing/BufferSurface.vala"
						_tmp31_ = data;
#line 149 "../lib/Drawing/BufferSurface.vala"
						_tmp32_ = _tmp31_[3];
#line 149 "../lib/Drawing/BufferSurface.vala"
						_tmp28_[1] = (guint8) ((_tmp30_ * 255) / _tmp32_);
#line 150 "../lib/Drawing/BufferSurface.vala"
						_tmp33_ = pixels;
#line 150 "../lib/Drawing/BufferSurface.vala"
						_tmp34_ = data;
#line 150 "../lib/Drawing/BufferSurface.vala"
						_tmp35_ = _tmp34_[0];
#line 150 "../lib/Drawing/BufferSurface.vala"
						_tmp36_ = data;
#line 150 "../lib/Drawing/BufferSurface.vala"
						_tmp37_ = _tmp36_[3];
#line 150 "../lib/Drawing/BufferSurface.vala"
						_tmp33_[2] = (guint8) ((_tmp35_ * 255) / _tmp37_);
#line 151 "../lib/Drawing/BufferSurface.vala"
						_tmp38_ = pixels;
#line 151 "../lib/Drawing/BufferSurface.vala"
						_tmp39_ = data;
#line 151 "../lib/Drawing/BufferSurface.vala"
						_tmp40_ = _tmp39_[3];
#line 151 "../lib/Drawing/BufferSurface.vala"
						_tmp38_[3] = _tmp40_;
#line 802 "BufferSurface.c"
					}
#line 154 "../lib/Drawing/BufferSurface.vala"
					_tmp41_ = pixels;
#line 154 "../lib/Drawing/BufferSurface.vala"
					pixels = _tmp41_ + 4;
#line 155 "../lib/Drawing/BufferSurface.vala"
					_tmp42_ = data;
#line 155 "../lib/Drawing/BufferSurface.vala"
					data = _tmp42_ + 4;
#line 812 "BufferSurface.c"
				}
			}
		}
	} else {
		cairo_surface_t* _tmp43_;
#line 157 "../lib/Drawing/BufferSurface.vala"
		_tmp43_ = image_surface;
#line 157 "../lib/Drawing/BufferSurface.vala"
		if (cairo_image_surface_get_format (_tmp43_) == CAIRO_FORMAT_RGB24) {
#line 822 "BufferSurface.c"
			{
				gint i = 0;
#line 158 "../lib/Drawing/BufferSurface.vala"
				i = 0;
#line 827 "BufferSurface.c"
				{
					gboolean _tmp44_ = FALSE;
#line 158 "../lib/Drawing/BufferSurface.vala"
					_tmp44_ = TRUE;
#line 158 "../lib/Drawing/BufferSurface.vala"
					while (TRUE) {
#line 834 "BufferSurface.c"
						guint8* _tmp46_;
						guint8* _tmp47_;
						guint8 _tmp48_;
						guint8* _tmp49_;
						guint8* _tmp50_;
						guint8 _tmp51_;
						guint8* _tmp52_;
						guint8* _tmp53_;
						guint8 _tmp54_;
						guint8* _tmp55_;
						guint8* _tmp56_;
						guint8 _tmp57_;
						guint8* _tmp58_;
						guint8* _tmp59_;
#line 158 "../lib/Drawing/BufferSurface.vala"
						if (!_tmp44_) {
#line 851 "BufferSurface.c"
							gint _tmp45_;
#line 158 "../lib/Drawing/BufferSurface.vala"
							_tmp45_ = i;
#line 158 "../lib/Drawing/BufferSurface.vala"
							i = _tmp45_ + 1;
#line 857 "BufferSurface.c"
						}
#line 158 "../lib/Drawing/BufferSurface.vala"
						_tmp44_ = FALSE;
#line 158 "../lib/Drawing/BufferSurface.vala"
						if (!(i < length)) {
#line 158 "../lib/Drawing/BufferSurface.vala"
							break;
#line 865 "BufferSurface.c"
						}
#line 159 "../lib/Drawing/BufferSurface.vala"
						_tmp46_ = pixels;
#line 159 "../lib/Drawing/BufferSurface.vala"
						_tmp47_ = data;
#line 159 "../lib/Drawing/BufferSurface.vala"
						_tmp48_ = _tmp47_[2];
#line 159 "../lib/Drawing/BufferSurface.vala"
						_tmp46_[0] = _tmp48_;
#line 160 "../lib/Drawing/BufferSurface.vala"
						_tmp49_ = pixels;
#line 160 "../lib/Drawing/BufferSurface.vala"
						_tmp50_ = data;
#line 160 "../lib/Drawing/BufferSurface.vala"
						_tmp51_ = _tmp50_[1];
#line 160 "../lib/Drawing/BufferSurface.vala"
						_tmp49_[1] = _tmp51_;
#line 161 "../lib/Drawing/BufferSurface.vala"
						_tmp52_ = pixels;
#line 161 "../lib/Drawing/BufferSurface.vala"
						_tmp53_ = data;
#line 161 "../lib/Drawing/BufferSurface.vala"
						_tmp54_ = _tmp53_[0];
#line 161 "../lib/Drawing/BufferSurface.vala"
						_tmp52_[2] = _tmp54_;
#line 162 "../lib/Drawing/BufferSurface.vala"
						_tmp55_ = pixels;
#line 162 "../lib/Drawing/BufferSurface.vala"
						_tmp56_ = data;
#line 162 "../lib/Drawing/BufferSurface.vala"
						_tmp57_ = _tmp56_[3];
#line 162 "../lib/Drawing/BufferSurface.vala"
						_tmp55_[3] = _tmp57_;
#line 164 "../lib/Drawing/BufferSurface.vala"
						_tmp58_ = pixels;
#line 164 "../lib/Drawing/BufferSurface.vala"
						pixels = _tmp58_ + 4;
#line 165 "../lib/Drawing/BufferSurface.vala"
						_tmp59_ = data;
#line 165 "../lib/Drawing/BufferSurface.vala"
						data = _tmp59_ + 4;
#line 907 "BufferSurface.c"
					}
				}
			}
		}
	}
#line 169 "../lib/Drawing/BufferSurface.vala"
	result = pb;
#line 169 "../lib/Drawing/BufferSurface.vala"
	_cairo_destroy0 (cr);
#line 169 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (image_surface);
#line 169 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 921 "BufferSurface.c"
}

/**
         * Averages all the colors in the internal {@link Cairo.Surface}.
         *
         * @return the {@link Granite.Drawing.Color} with the averaged color
         */
GraniteDrawingColor*
granite_drawing_buffer_surface_average_color (GraniteDrawingBufferSurface* self)
{
	gdouble b_total = 0.0;
	gdouble g_total = 0.0;
	gdouble r_total = 0.0;
	gint w = 0;
	gint _tmp0_;
	gint h = 0;
	gint _tmp1_;
	cairo_surface_t* original = NULL;
	cairo_surface_t* _tmp2_;
	cairo_t* cr = NULL;
	cairo_surface_t* _tmp3_;
	cairo_t* _tmp4_;
	cairo_t* _tmp5_;
	cairo_t* _tmp6_;
	cairo_surface_t* _tmp7_;
	cairo_surface_t* _tmp8_;
	cairo_t* _tmp9_;
	guint8* data = NULL;
	cairo_surface_t* _tmp10_;
	guchar* _tmp11_;
	gint length = 0;
	GraniteDrawingColor* _tmp22_;
	GraniteDrawingColor* _tmp23_;
	GraniteDrawingColor* _tmp24_;
	GraniteDrawingColor* _tmp25_;
	GraniteDrawingColor* _tmp26_;
	GraniteDrawingColor* _tmp27_;
	GraniteDrawingColor* result = NULL;
#line 177 "../lib/Drawing/BufferSurface.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 178 "../lib/Drawing/BufferSurface.vala"
	b_total = 0.0;
#line 179 "../lib/Drawing/BufferSurface.vala"
	g_total = 0.0;
#line 180 "../lib/Drawing/BufferSurface.vala"
	r_total = 0.0;
#line 182 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = self->priv->_width;
#line 182 "../lib/Drawing/BufferSurface.vala"
	w = _tmp0_;
#line 183 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = self->priv->_height;
#line 183 "../lib/Drawing/BufferSurface.vala"
	h = _tmp1_;
#line 185 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, w, h);
#line 185 "../lib/Drawing/BufferSurface.vala"
	original = _tmp2_;
#line 186 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = original;
#line 186 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = cairo_create (_tmp3_);
#line 186 "../lib/Drawing/BufferSurface.vala"
	cr = _tmp4_;
#line 188 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = cr;
#line 188 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp5_, CAIRO_OPERATOR_SOURCE);
#line 189 "../lib/Drawing/BufferSurface.vala"
	_tmp6_ = cr;
#line 189 "../lib/Drawing/BufferSurface.vala"
	_tmp7_ = granite_drawing_buffer_surface_get_surface (self);
#line 189 "../lib/Drawing/BufferSurface.vala"
	_tmp8_ = _tmp7_;
#line 189 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp6_, _tmp8_, (gdouble) 0, (gdouble) 0);
#line 190 "../lib/Drawing/BufferSurface.vala"
	_tmp9_ = cr;
#line 190 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp9_);
#line 192 "../lib/Drawing/BufferSurface.vala"
	_tmp10_ = original;
#line 192 "../lib/Drawing/BufferSurface.vala"
	_tmp11_ = cairo_image_surface_get_data (_tmp10_);
#line 192 "../lib/Drawing/BufferSurface.vala"
	data = _tmp11_;
#line 193 "../lib/Drawing/BufferSurface.vala"
	length = w * h;
#line 1010 "BufferSurface.c"
	{
		gint i = 0;
#line 195 "../lib/Drawing/BufferSurface.vala"
		i = 0;
#line 1015 "BufferSurface.c"
		{
			gboolean _tmp12_ = FALSE;
#line 195 "../lib/Drawing/BufferSurface.vala"
			_tmp12_ = TRUE;
#line 195 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 1022 "BufferSurface.c"
				guint8 b = 0U;
				guint8* _tmp14_;
				guint8 _tmp15_;
				guint8 g = 0U;
				guint8* _tmp16_;
				guint8 _tmp17_;
				guint8 r = 0U;
				guint8* _tmp18_;
				guint8 _tmp19_;
				guint8 max = 0U;
				guint8 min = 0U;
				gdouble delta = 0.0;
				gdouble _tmp20_ = 0.0;
				gdouble sat = 0.0;
				gdouble score = 0.0;
				guint8* _tmp21_;
#line 195 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp12_) {
#line 1041 "BufferSurface.c"
					gint _tmp13_;
#line 195 "../lib/Drawing/BufferSurface.vala"
					_tmp13_ = i;
#line 195 "../lib/Drawing/BufferSurface.vala"
					i = _tmp13_ + 1;
#line 1047 "BufferSurface.c"
				}
#line 195 "../lib/Drawing/BufferSurface.vala"
				_tmp12_ = FALSE;
#line 195 "../lib/Drawing/BufferSurface.vala"
				if (!(i < length)) {
#line 195 "../lib/Drawing/BufferSurface.vala"
					break;
#line 1055 "BufferSurface.c"
				}
#line 196 "../lib/Drawing/BufferSurface.vala"
				_tmp14_ = data;
#line 196 "../lib/Drawing/BufferSurface.vala"
				_tmp15_ = _tmp14_[0];
#line 196 "../lib/Drawing/BufferSurface.vala"
				b = _tmp15_;
#line 197 "../lib/Drawing/BufferSurface.vala"
				_tmp16_ = data;
#line 197 "../lib/Drawing/BufferSurface.vala"
				_tmp17_ = _tmp16_[1];
#line 197 "../lib/Drawing/BufferSurface.vala"
				g = _tmp17_;
#line 198 "../lib/Drawing/BufferSurface.vala"
				_tmp18_ = data;
#line 198 "../lib/Drawing/BufferSurface.vala"
				_tmp19_ = _tmp18_[2];
#line 198 "../lib/Drawing/BufferSurface.vala"
				r = _tmp19_;
#line 200 "../lib/Drawing/BufferSurface.vala"
				max = (guint8) MAX ((gdouble) r, MAX ((gdouble) g, (gdouble) b));
#line 201 "../lib/Drawing/BufferSurface.vala"
				min = (guint8) MIN ((gdouble) r, MIN ((gdouble) g, (gdouble) b));
#line 202 "../lib/Drawing/BufferSurface.vala"
				delta = (gdouble) (max - min);
#line 204 "../lib/Drawing/BufferSurface.vala"
				if (delta == ((gdouble) 0)) {
#line 204 "../lib/Drawing/BufferSurface.vala"
					_tmp20_ = 0.0;
#line 1085 "BufferSurface.c"
				} else {
#line 204 "../lib/Drawing/BufferSurface.vala"
					_tmp20_ = delta / max;
#line 1089 "BufferSurface.c"
				}
#line 204 "../lib/Drawing/BufferSurface.vala"
				sat = _tmp20_;
#line 205 "../lib/Drawing/BufferSurface.vala"
				score = 0.2 + (0.8 * sat);
#line 207 "../lib/Drawing/BufferSurface.vala"
				b_total += b * score;
#line 208 "../lib/Drawing/BufferSurface.vala"
				g_total += g * score;
#line 209 "../lib/Drawing/BufferSurface.vala"
				r_total += r * score;
#line 211 "../lib/Drawing/BufferSurface.vala"
				_tmp21_ = data;
#line 211 "../lib/Drawing/BufferSurface.vala"
				data = _tmp21_ + 4;
#line 1105 "BufferSurface.c"
			}
		}
	}
#line 214 "../lib/Drawing/BufferSurface.vala"
	_tmp22_ = granite_drawing_color_new ((r_total / G_MAXUINT8) / length, (g_total / G_MAXUINT8) / length, (b_total / G_MAXUINT8) / length, (gdouble) 1);
#line 214 "../lib/Drawing/BufferSurface.vala"
	_tmp23_ = _tmp22_;
#line 214 "../lib/Drawing/BufferSurface.vala"
	_tmp24_ = granite_drawing_color_set_val (_tmp23_, 0.8);
#line 214 "../lib/Drawing/BufferSurface.vala"
	_tmp25_ = _tmp24_;
#line 214 "../lib/Drawing/BufferSurface.vala"
	_tmp26_ = granite_drawing_color_multiply_sat (_tmp25_, 1.15);
#line 214 "../lib/Drawing/BufferSurface.vala"
	_tmp27_ = _tmp26_;
#line 214 "../lib/Drawing/BufferSurface.vala"
	_g_object_unref0 (_tmp25_);
#line 214 "../lib/Drawing/BufferSurface.vala"
	_g_object_unref0 (_tmp23_);
#line 214 "../lib/Drawing/BufferSurface.vala"
	result = _tmp27_;
#line 214 "../lib/Drawing/BufferSurface.vala"
	_cairo_destroy0 (cr);
#line 214 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (original);
#line 214 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 1133 "BufferSurface.c"
}

/**
         * Performs a blur operation on the internal {@link Cairo.Surface}, using the
         * fast-blur algorithm found here [[http://incubator.quasimondo.com/processing/superfastblur.pde]].
         *
         * @param radius the blur radius
         * @param process_count the number of times to perform the operation
         */
void
granite_drawing_buffer_surface_fast_blur (GraniteDrawingBufferSurface* self,
                                          gint radius,
                                          gint process_count)
{
	gboolean _tmp0_ = FALSE;
	gint w = 0;
	gint _tmp1_;
	gint h = 0;
	gint _tmp2_;
	gint channels = 0;
	gboolean _tmp3_ = FALSE;
	cairo_surface_t* original = NULL;
	cairo_surface_t* _tmp4_;
	cairo_t* cr = NULL;
	cairo_surface_t* _tmp5_;
	cairo_t* _tmp6_;
	cairo_t* _tmp7_;
	cairo_t* _tmp8_;
	cairo_surface_t* _tmp9_;
	cairo_surface_t* _tmp10_;
	cairo_t* _tmp11_;
	guint8* pixels = NULL;
	cairo_surface_t* _tmp12_;
	guchar* _tmp13_;
	guint8* buffer = NULL;
	guint8* _tmp14_;
	gint buffer_length1;
	gint _buffer_size_;
	gint* v_min = NULL;
	gint* _tmp15_;
	gint v_min_length1;
	gint _v_min_size_;
	gint* v_max = NULL;
	gint* _tmp16_;
	gint v_max_length1;
	gint _v_max_size_;
	gint div = 0;
	guint8* dv = NULL;
	guint8* _tmp17_;
	gint dv_length1;
	gint _dv_size_;
	cairo_surface_t* _tmp139_;
	cairo_t* _tmp140_;
	cairo_t* _tmp141_;
	cairo_t* _tmp142_;
	cairo_t* _tmp143_;
	cairo_surface_t* _tmp144_;
	cairo_t* _tmp145_;
	cairo_t* _tmp146_;
	cairo_t* _tmp147_;
	cairo_t* _tmp148_;
#line 229 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 230 "../lib/Drawing/BufferSurface.vala"
	if (radius < 1) {
#line 230 "../lib/Drawing/BufferSurface.vala"
		_tmp0_ = TRUE;
#line 1201 "BufferSurface.c"
	} else {
#line 230 "../lib/Drawing/BufferSurface.vala"
		_tmp0_ = process_count < 1;
#line 1205 "BufferSurface.c"
	}
#line 230 "../lib/Drawing/BufferSurface.vala"
	if (_tmp0_) {
#line 231 "../lib/Drawing/BufferSurface.vala"
		return;
#line 1211 "BufferSurface.c"
	}
#line 234 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = self->priv->_width;
#line 234 "../lib/Drawing/BufferSurface.vala"
	w = _tmp1_;
#line 235 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = self->priv->_height;
#line 235 "../lib/Drawing/BufferSurface.vala"
	h = _tmp2_;
#line 236 "../lib/Drawing/BufferSurface.vala"
	channels = 4;
#line 238 "../lib/Drawing/BufferSurface.vala"
	if (radius > (w - 1)) {
#line 238 "../lib/Drawing/BufferSurface.vala"
		_tmp3_ = TRUE;
#line 1227 "BufferSurface.c"
	} else {
#line 238 "../lib/Drawing/BufferSurface.vala"
		_tmp3_ = radius > (h - 1);
#line 1231 "BufferSurface.c"
	}
#line 238 "../lib/Drawing/BufferSurface.vala"
	if (_tmp3_) {
#line 239 "../lib/Drawing/BufferSurface.vala"
		return;
#line 1237 "BufferSurface.c"
	}
#line 242 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, w, h);
#line 242 "../lib/Drawing/BufferSurface.vala"
	original = _tmp4_;
#line 243 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = original;
#line 243 "../lib/Drawing/BufferSurface.vala"
	_tmp6_ = cairo_create (_tmp5_);
#line 243 "../lib/Drawing/BufferSurface.vala"
	cr = _tmp6_;
#line 245 "../lib/Drawing/BufferSurface.vala"
	_tmp7_ = cr;
#line 245 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp7_, CAIRO_OPERATOR_SOURCE);
#line 246 "../lib/Drawing/BufferSurface.vala"
	_tmp8_ = cr;
#line 246 "../lib/Drawing/BufferSurface.vala"
	_tmp9_ = granite_drawing_buffer_surface_get_surface (self);
#line 246 "../lib/Drawing/BufferSurface.vala"
	_tmp10_ = _tmp9_;
#line 246 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp8_, _tmp10_, (gdouble) 0, (gdouble) 0);
#line 247 "../lib/Drawing/BufferSurface.vala"
	_tmp11_ = cr;
#line 247 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp11_);
#line 249 "../lib/Drawing/BufferSurface.vala"
	_tmp12_ = original;
#line 249 "../lib/Drawing/BufferSurface.vala"
	_tmp13_ = cairo_image_surface_get_data (_tmp12_);
#line 249 "../lib/Drawing/BufferSurface.vala"
	pixels = _tmp13_;
#line 250 "../lib/Drawing/BufferSurface.vala"
	_tmp14_ = g_new0 (guint8, (w * h) * channels);
#line 250 "../lib/Drawing/BufferSurface.vala"
	buffer = _tmp14_;
#line 250 "../lib/Drawing/BufferSurface.vala"
	buffer_length1 = (w * h) * channels;
#line 250 "../lib/Drawing/BufferSurface.vala"
	_buffer_size_ = buffer_length1;
#line 252 "../lib/Drawing/BufferSurface.vala"
	_tmp15_ = g_new0 (gint, MAX (w, h));
#line 252 "../lib/Drawing/BufferSurface.vala"
	v_min = _tmp15_;
#line 252 "../lib/Drawing/BufferSurface.vala"
	v_min_length1 = MAX (w, h);
#line 252 "../lib/Drawing/BufferSurface.vala"
	_v_min_size_ = v_min_length1;
#line 253 "../lib/Drawing/BufferSurface.vala"
	_tmp16_ = g_new0 (gint, MAX (w, h));
#line 253 "../lib/Drawing/BufferSurface.vala"
	v_max = _tmp16_;
#line 253 "../lib/Drawing/BufferSurface.vala"
	v_max_length1 = MAX (w, h);
#line 253 "../lib/Drawing/BufferSurface.vala"
	_v_max_size_ = v_max_length1;
#line 255 "../lib/Drawing/BufferSurface.vala"
	div = (2 * radius) + 1;
#line 256 "../lib/Drawing/BufferSurface.vala"
	_tmp17_ = g_new0 (guint8, 256 * div);
#line 256 "../lib/Drawing/BufferSurface.vala"
	dv = _tmp17_;
#line 256 "../lib/Drawing/BufferSurface.vala"
	dv_length1 = 256 * div;
#line 256 "../lib/Drawing/BufferSurface.vala"
	_dv_size_ = dv_length1;
#line 1305 "BufferSurface.c"
	{
		gint i = 0;
#line 258 "../lib/Drawing/BufferSurface.vala"
		i = 0;
#line 1310 "BufferSurface.c"
		{
			gboolean _tmp18_ = FALSE;
#line 258 "../lib/Drawing/BufferSurface.vala"
			_tmp18_ = TRUE;
#line 258 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 1317 "BufferSurface.c"
				guint8* _tmp20_;
				gint _tmp20__length1;
				guint8* _tmp21_;
				gint _tmp21__length1;
#line 258 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp18_) {
#line 1324 "BufferSurface.c"
					gint _tmp19_;
#line 258 "../lib/Drawing/BufferSurface.vala"
					_tmp19_ = i;
#line 258 "../lib/Drawing/BufferSurface.vala"
					i = _tmp19_ + 1;
#line 1330 "BufferSurface.c"
				}
#line 258 "../lib/Drawing/BufferSurface.vala"
				_tmp18_ = FALSE;
#line 258 "../lib/Drawing/BufferSurface.vala"
				_tmp20_ = dv;
#line 258 "../lib/Drawing/BufferSurface.vala"
				_tmp20__length1 = dv_length1;
#line 258 "../lib/Drawing/BufferSurface.vala"
				if (!(i < _tmp20__length1)) {
#line 258 "../lib/Drawing/BufferSurface.vala"
					break;
#line 1342 "BufferSurface.c"
				}
#line 259 "../lib/Drawing/BufferSurface.vala"
				_tmp21_ = dv;
#line 259 "../lib/Drawing/BufferSurface.vala"
				_tmp21__length1 = dv_length1;
#line 259 "../lib/Drawing/BufferSurface.vala"
				_tmp21_[i] = (guint8) (i / div);
#line 1350 "BufferSurface.c"
			}
		}
	}
#line 262 "../lib/Drawing/BufferSurface.vala"
	while (TRUE) {
#line 1356 "BufferSurface.c"
		gint _tmp22_;
#line 262 "../lib/Drawing/BufferSurface.vala"
		_tmp22_ = process_count;
#line 262 "../lib/Drawing/BufferSurface.vala"
		process_count = _tmp22_ - 1;
#line 262 "../lib/Drawing/BufferSurface.vala"
		if (!(_tmp22_ > 0)) {
#line 262 "../lib/Drawing/BufferSurface.vala"
			break;
#line 1366 "BufferSurface.c"
		}
		{
			gint x = 0;
#line 263 "../lib/Drawing/BufferSurface.vala"
			x = 0;
#line 1372 "BufferSurface.c"
			{
				gboolean _tmp23_ = FALSE;
#line 263 "../lib/Drawing/BufferSurface.vala"
				_tmp23_ = TRUE;
#line 263 "../lib/Drawing/BufferSurface.vala"
				while (TRUE) {
#line 1379 "BufferSurface.c"
					gint* _tmp25_;
					gint _tmp25__length1;
					gint* _tmp26_;
					gint _tmp26__length1;
#line 263 "../lib/Drawing/BufferSurface.vala"
					if (!_tmp23_) {
#line 1386 "BufferSurface.c"
						gint _tmp24_;
#line 263 "../lib/Drawing/BufferSurface.vala"
						_tmp24_ = x;
#line 263 "../lib/Drawing/BufferSurface.vala"
						x = _tmp24_ + 1;
#line 1392 "BufferSurface.c"
					}
#line 263 "../lib/Drawing/BufferSurface.vala"
					_tmp23_ = FALSE;
#line 263 "../lib/Drawing/BufferSurface.vala"
					if (!(x < w)) {
#line 263 "../lib/Drawing/BufferSurface.vala"
						break;
#line 1400 "BufferSurface.c"
					}
#line 264 "../lib/Drawing/BufferSurface.vala"
					_tmp25_ = v_min;
#line 264 "../lib/Drawing/BufferSurface.vala"
					_tmp25__length1 = v_min_length1;
#line 264 "../lib/Drawing/BufferSurface.vala"
					_tmp25_[x] = MIN ((x + radius) + 1, w - 1);
#line 265 "../lib/Drawing/BufferSurface.vala"
					_tmp26_ = v_max;
#line 265 "../lib/Drawing/BufferSurface.vala"
					_tmp26__length1 = v_max_length1;
#line 265 "../lib/Drawing/BufferSurface.vala"
					_tmp26_[x] = MAX (x - radius, 0);
#line 1414 "BufferSurface.c"
				}
			}
		}
		{
			gint y = 0;
#line 268 "../lib/Drawing/BufferSurface.vala"
			y = 0;
#line 1422 "BufferSurface.c"
			{
				gboolean _tmp27_ = FALSE;
#line 268 "../lib/Drawing/BufferSurface.vala"
				_tmp27_ = TRUE;
#line 268 "../lib/Drawing/BufferSurface.vala"
				while (TRUE) {
#line 1429 "BufferSurface.c"
					gint a_sum = 0;
					gint r_sum = 0;
					gint g_sum = 0;
					gint b_sum = 0;
					guint32 cur_pixel = 0U;
					guint8* _tmp29_;
					guint8 _tmp30_;
					guint8* _tmp31_;
					guint8 _tmp32_;
					guint8* _tmp33_;
					guint8 _tmp34_;
					guint8* _tmp35_;
					guint8 _tmp36_;
#line 268 "../lib/Drawing/BufferSurface.vala"
					if (!_tmp27_) {
#line 1445 "BufferSurface.c"
						gint _tmp28_;
#line 268 "../lib/Drawing/BufferSurface.vala"
						_tmp28_ = y;
#line 268 "../lib/Drawing/BufferSurface.vala"
						y = _tmp28_ + 1;
#line 1451 "BufferSurface.c"
					}
#line 268 "../lib/Drawing/BufferSurface.vala"
					_tmp27_ = FALSE;
#line 268 "../lib/Drawing/BufferSurface.vala"
					if (!(y < h)) {
#line 268 "../lib/Drawing/BufferSurface.vala"
						break;
#line 1459 "BufferSurface.c"
					}
#line 269 "../lib/Drawing/BufferSurface.vala"
					a_sum = 0;
#line 269 "../lib/Drawing/BufferSurface.vala"
					r_sum = 0;
#line 269 "../lib/Drawing/BufferSurface.vala"
					g_sum = 0;
#line 269 "../lib/Drawing/BufferSurface.vala"
					b_sum = 0;
#line 271 "../lib/Drawing/BufferSurface.vala"
					cur_pixel = (guint32) ((y * w) * channels);
#line 273 "../lib/Drawing/BufferSurface.vala"
					_tmp29_ = pixels;
#line 273 "../lib/Drawing/BufferSurface.vala"
					_tmp30_ = _tmp29_[cur_pixel + 0];
#line 273 "../lib/Drawing/BufferSurface.vala"
					a_sum += radius * _tmp30_;
#line 274 "../lib/Drawing/BufferSurface.vala"
					_tmp31_ = pixels;
#line 274 "../lib/Drawing/BufferSurface.vala"
					_tmp32_ = _tmp31_[cur_pixel + 1];
#line 274 "../lib/Drawing/BufferSurface.vala"
					r_sum += radius * _tmp32_;
#line 275 "../lib/Drawing/BufferSurface.vala"
					_tmp33_ = pixels;
#line 275 "../lib/Drawing/BufferSurface.vala"
					_tmp34_ = _tmp33_[cur_pixel + 2];
#line 275 "../lib/Drawing/BufferSurface.vala"
					g_sum += radius * _tmp34_;
#line 276 "../lib/Drawing/BufferSurface.vala"
					_tmp35_ = pixels;
#line 276 "../lib/Drawing/BufferSurface.vala"
					_tmp36_ = _tmp35_[cur_pixel + 3];
#line 276 "../lib/Drawing/BufferSurface.vala"
					b_sum += radius * _tmp36_;
#line 1495 "BufferSurface.c"
					{
						gint i = 0;
#line 278 "../lib/Drawing/BufferSurface.vala"
						i = 0;
#line 1500 "BufferSurface.c"
						{
							gboolean _tmp37_ = FALSE;
#line 278 "../lib/Drawing/BufferSurface.vala"
							_tmp37_ = TRUE;
#line 278 "../lib/Drawing/BufferSurface.vala"
							while (TRUE) {
#line 1507 "BufferSurface.c"
								guint8* _tmp39_;
								guint8 _tmp40_;
								guint8* _tmp41_;
								guint8 _tmp42_;
								guint8* _tmp43_;
								guint8 _tmp44_;
								guint8* _tmp45_;
								guint8 _tmp46_;
#line 278 "../lib/Drawing/BufferSurface.vala"
								if (!_tmp37_) {
#line 1518 "BufferSurface.c"
									gint _tmp38_;
#line 278 "../lib/Drawing/BufferSurface.vala"
									_tmp38_ = i;
#line 278 "../lib/Drawing/BufferSurface.vala"
									i = _tmp38_ + 1;
#line 1524 "BufferSurface.c"
								}
#line 278 "../lib/Drawing/BufferSurface.vala"
								_tmp37_ = FALSE;
#line 278 "../lib/Drawing/BufferSurface.vala"
								if (!(i <= radius)) {
#line 278 "../lib/Drawing/BufferSurface.vala"
									break;
#line 1532 "BufferSurface.c"
								}
#line 279 "../lib/Drawing/BufferSurface.vala"
								_tmp39_ = pixels;
#line 279 "../lib/Drawing/BufferSurface.vala"
								_tmp40_ = _tmp39_[cur_pixel + 0];
#line 279 "../lib/Drawing/BufferSurface.vala"
								a_sum += (gint) _tmp40_;
#line 280 "../lib/Drawing/BufferSurface.vala"
								_tmp41_ = pixels;
#line 280 "../lib/Drawing/BufferSurface.vala"
								_tmp42_ = _tmp41_[cur_pixel + 1];
#line 280 "../lib/Drawing/BufferSurface.vala"
								r_sum += (gint) _tmp42_;
#line 281 "../lib/Drawing/BufferSurface.vala"
								_tmp43_ = pixels;
#line 281 "../lib/Drawing/BufferSurface.vala"
								_tmp44_ = _tmp43_[cur_pixel + 2];
#line 281 "../lib/Drawing/BufferSurface.vala"
								g_sum += (gint) _tmp44_;
#line 282 "../lib/Drawing/BufferSurface.vala"
								_tmp45_ = pixels;
#line 282 "../lib/Drawing/BufferSurface.vala"
								_tmp46_ = _tmp45_[cur_pixel + 3];
#line 282 "../lib/Drawing/BufferSurface.vala"
								b_sum += (gint) _tmp46_;
#line 284 "../lib/Drawing/BufferSurface.vala"
								cur_pixel += (guint32) channels;
#line 1560 "BufferSurface.c"
							}
						}
					}
#line 287 "../lib/Drawing/BufferSurface.vala"
					cur_pixel = (guint32) ((y * w) * channels);
#line 1566 "BufferSurface.c"
					{
						gint x = 0;
#line 289 "../lib/Drawing/BufferSurface.vala"
						x = 0;
#line 1571 "BufferSurface.c"
						{
							gboolean _tmp47_ = FALSE;
#line 289 "../lib/Drawing/BufferSurface.vala"
							_tmp47_ = TRUE;
#line 289 "../lib/Drawing/BufferSurface.vala"
							while (TRUE) {
#line 1578 "BufferSurface.c"
								guint32 p1 = 0U;
								gint* _tmp49_;
								gint _tmp49__length1;
								gint _tmp50_;
								guint32 p2 = 0U;
								gint* _tmp51_;
								gint _tmp51__length1;
								gint _tmp52_;
								guint8* _tmp53_;
								gint _tmp53__length1;
								guint8* _tmp54_;
								gint _tmp54__length1;
								guint8 _tmp55_;
								guint8* _tmp56_;
								gint _tmp56__length1;
								guint8* _tmp57_;
								gint _tmp57__length1;
								guint8 _tmp58_;
								guint8* _tmp59_;
								gint _tmp59__length1;
								guint8* _tmp60_;
								gint _tmp60__length1;
								guint8 _tmp61_;
								guint8* _tmp62_;
								gint _tmp62__length1;
								guint8* _tmp63_;
								gint _tmp63__length1;
								guint8 _tmp64_;
								guint8* _tmp65_;
								guint8 _tmp66_;
								guint8* _tmp67_;
								guint8 _tmp68_;
								guint8* _tmp69_;
								guint8 _tmp70_;
								guint8* _tmp71_;
								guint8 _tmp72_;
								guint8* _tmp73_;
								guint8 _tmp74_;
								guint8* _tmp75_;
								guint8 _tmp76_;
								guint8* _tmp77_;
								guint8 _tmp78_;
								guint8* _tmp79_;
								guint8 _tmp80_;
#line 289 "../lib/Drawing/BufferSurface.vala"
								if (!_tmp47_) {
#line 1625 "BufferSurface.c"
									gint _tmp48_;
#line 289 "../lib/Drawing/BufferSurface.vala"
									_tmp48_ = x;
#line 289 "../lib/Drawing/BufferSurface.vala"
									x = _tmp48_ + 1;
#line 1631 "BufferSurface.c"
								}
#line 289 "../lib/Drawing/BufferSurface.vala"
								_tmp47_ = FALSE;
#line 289 "../lib/Drawing/BufferSurface.vala"
								if (!(x < w)) {
#line 289 "../lib/Drawing/BufferSurface.vala"
									break;
#line 1639 "BufferSurface.c"
								}
#line 290 "../lib/Drawing/BufferSurface.vala"
								_tmp49_ = v_min;
#line 290 "../lib/Drawing/BufferSurface.vala"
								_tmp49__length1 = v_min_length1;
#line 290 "../lib/Drawing/BufferSurface.vala"
								_tmp50_ = _tmp49_[x];
#line 290 "../lib/Drawing/BufferSurface.vala"
								p1 = (guint32) (((y * w) + _tmp50_) * channels);
#line 291 "../lib/Drawing/BufferSurface.vala"
								_tmp51_ = v_max;
#line 291 "../lib/Drawing/BufferSurface.vala"
								_tmp51__length1 = v_max_length1;
#line 291 "../lib/Drawing/BufferSurface.vala"
								_tmp52_ = _tmp51_[x];
#line 291 "../lib/Drawing/BufferSurface.vala"
								p2 = (guint32) (((y * w) + _tmp52_) * channels);
#line 293 "../lib/Drawing/BufferSurface.vala"
								_tmp53_ = buffer;
#line 293 "../lib/Drawing/BufferSurface.vala"
								_tmp53__length1 = buffer_length1;
#line 293 "../lib/Drawing/BufferSurface.vala"
								_tmp54_ = dv;
#line 293 "../lib/Drawing/BufferSurface.vala"
								_tmp54__length1 = dv_length1;
#line 293 "../lib/Drawing/BufferSurface.vala"
								_tmp55_ = _tmp54_[a_sum];
#line 293 "../lib/Drawing/BufferSurface.vala"
								_tmp53_[cur_pixel + 0] = _tmp55_;
#line 294 "../lib/Drawing/BufferSurface.vala"
								_tmp56_ = buffer;
#line 294 "../lib/Drawing/BufferSurface.vala"
								_tmp56__length1 = buffer_length1;
#line 294 "../lib/Drawing/BufferSurface.vala"
								_tmp57_ = dv;
#line 294 "../lib/Drawing/BufferSurface.vala"
								_tmp57__length1 = dv_length1;
#line 294 "../lib/Drawing/BufferSurface.vala"
								_tmp58_ = _tmp57_[r_sum];
#line 294 "../lib/Drawing/BufferSurface.vala"
								_tmp56_[cur_pixel + 1] = _tmp58_;
#line 295 "../lib/Drawing/BufferSurface.vala"
								_tmp59_ = buffer;
#line 295 "../lib/Drawing/BufferSurface.vala"
								_tmp59__length1 = buffer_length1;
#line 295 "../lib/Drawing/BufferSurface.vala"
								_tmp60_ = dv;
#line 295 "../lib/Drawing/BufferSurface.vala"
								_tmp60__length1 = dv_length1;
#line 295 "../lib/Drawing/BufferSurface.vala"
								_tmp61_ = _tmp60_[g_sum];
#line 295 "../lib/Drawing/BufferSurface.vala"
								_tmp59_[cur_pixel + 2] = _tmp61_;
#line 296 "../lib/Drawing/BufferSurface.vala"
								_tmp62_ = buffer;
#line 296 "../lib/Drawing/BufferSurface.vala"
								_tmp62__length1 = buffer_length1;
#line 296 "../lib/Drawing/BufferSurface.vala"
								_tmp63_ = dv;
#line 296 "../lib/Drawing/BufferSurface.vala"
								_tmp63__length1 = dv_length1;
#line 296 "../lib/Drawing/BufferSurface.vala"
								_tmp64_ = _tmp63_[b_sum];
#line 296 "../lib/Drawing/BufferSurface.vala"
								_tmp62_[cur_pixel + 3] = _tmp64_;
#line 298 "../lib/Drawing/BufferSurface.vala"
								_tmp65_ = pixels;
#line 298 "../lib/Drawing/BufferSurface.vala"
								_tmp66_ = _tmp65_[p1 + 0];
#line 298 "../lib/Drawing/BufferSurface.vala"
								_tmp67_ = pixels;
#line 298 "../lib/Drawing/BufferSurface.vala"
								_tmp68_ = _tmp67_[p2 + 0];
#line 298 "../lib/Drawing/BufferSurface.vala"
								a_sum += (gint) (_tmp66_ - _tmp68_);
#line 299 "../lib/Drawing/BufferSurface.vala"
								_tmp69_ = pixels;
#line 299 "../lib/Drawing/BufferSurface.vala"
								_tmp70_ = _tmp69_[p1 + 1];
#line 299 "../lib/Drawing/BufferSurface.vala"
								_tmp71_ = pixels;
#line 299 "../lib/Drawing/BufferSurface.vala"
								_tmp72_ = _tmp71_[p2 + 1];
#line 299 "../lib/Drawing/BufferSurface.vala"
								r_sum += (gint) (_tmp70_ - _tmp72_);
#line 300 "../lib/Drawing/BufferSurface.vala"
								_tmp73_ = pixels;
#line 300 "../lib/Drawing/BufferSurface.vala"
								_tmp74_ = _tmp73_[p1 + 2];
#line 300 "../lib/Drawing/BufferSurface.vala"
								_tmp75_ = pixels;
#line 300 "../lib/Drawing/BufferSurface.vala"
								_tmp76_ = _tmp75_[p2 + 2];
#line 300 "../lib/Drawing/BufferSurface.vala"
								g_sum += (gint) (_tmp74_ - _tmp76_);
#line 301 "../lib/Drawing/BufferSurface.vala"
								_tmp77_ = pixels;
#line 301 "../lib/Drawing/BufferSurface.vala"
								_tmp78_ = _tmp77_[p1 + 3];
#line 301 "../lib/Drawing/BufferSurface.vala"
								_tmp79_ = pixels;
#line 301 "../lib/Drawing/BufferSurface.vala"
								_tmp80_ = _tmp79_[p2 + 3];
#line 301 "../lib/Drawing/BufferSurface.vala"
								b_sum += (gint) (_tmp78_ - _tmp80_);
#line 303 "../lib/Drawing/BufferSurface.vala"
								cur_pixel += (guint32) channels;
#line 1747 "BufferSurface.c"
							}
						}
					}
				}
			}
		}
		{
			gint y = 0;
#line 307 "../lib/Drawing/BufferSurface.vala"
			y = 0;
#line 1758 "BufferSurface.c"
			{
				gboolean _tmp81_ = FALSE;
#line 307 "../lib/Drawing/BufferSurface.vala"
				_tmp81_ = TRUE;
#line 307 "../lib/Drawing/BufferSurface.vala"
				while (TRUE) {
#line 1765 "BufferSurface.c"
					gint* _tmp83_;
					gint _tmp83__length1;
					gint* _tmp84_;
					gint _tmp84__length1;
#line 307 "../lib/Drawing/BufferSurface.vala"
					if (!_tmp81_) {
#line 1772 "BufferSurface.c"
						gint _tmp82_;
#line 307 "../lib/Drawing/BufferSurface.vala"
						_tmp82_ = y;
#line 307 "../lib/Drawing/BufferSurface.vala"
						y = _tmp82_ + 1;
#line 1778 "BufferSurface.c"
					}
#line 307 "../lib/Drawing/BufferSurface.vala"
					_tmp81_ = FALSE;
#line 307 "../lib/Drawing/BufferSurface.vala"
					if (!(y < h)) {
#line 307 "../lib/Drawing/BufferSurface.vala"
						break;
#line 1786 "BufferSurface.c"
					}
#line 308 "../lib/Drawing/BufferSurface.vala"
					_tmp83_ = v_min;
#line 308 "../lib/Drawing/BufferSurface.vala"
					_tmp83__length1 = v_min_length1;
#line 308 "../lib/Drawing/BufferSurface.vala"
					_tmp83_[y] = MIN ((y + radius) + 1, h - 1) * w;
#line 309 "../lib/Drawing/BufferSurface.vala"
					_tmp84_ = v_max;
#line 309 "../lib/Drawing/BufferSurface.vala"
					_tmp84__length1 = v_max_length1;
#line 309 "../lib/Drawing/BufferSurface.vala"
					_tmp84_[y] = MAX (y - radius, 0) * w;
#line 1800 "BufferSurface.c"
				}
			}
		}
		{
			gint x = 0;
#line 312 "../lib/Drawing/BufferSurface.vala"
			x = 0;
#line 1808 "BufferSurface.c"
			{
				gboolean _tmp85_ = FALSE;
#line 312 "../lib/Drawing/BufferSurface.vala"
				_tmp85_ = TRUE;
#line 312 "../lib/Drawing/BufferSurface.vala"
				while (TRUE) {
#line 1815 "BufferSurface.c"
					gint a_sum = 0;
					gint r_sum = 0;
					gint g_sum = 0;
					gint b_sum = 0;
					guint32 cur_pixel = 0U;
					guint8* _tmp87_;
					gint _tmp87__length1;
					guint8 _tmp88_;
					guint8* _tmp89_;
					gint _tmp89__length1;
					guint8 _tmp90_;
					guint8* _tmp91_;
					gint _tmp91__length1;
					guint8 _tmp92_;
					guint8* _tmp93_;
					gint _tmp93__length1;
					guint8 _tmp94_;
#line 312 "../lib/Drawing/BufferSurface.vala"
					if (!_tmp85_) {
#line 1835 "BufferSurface.c"
						gint _tmp86_;
#line 312 "../lib/Drawing/BufferSurface.vala"
						_tmp86_ = x;
#line 312 "../lib/Drawing/BufferSurface.vala"
						x = _tmp86_ + 1;
#line 1841 "BufferSurface.c"
					}
#line 312 "../lib/Drawing/BufferSurface.vala"
					_tmp85_ = FALSE;
#line 312 "../lib/Drawing/BufferSurface.vala"
					if (!(x < w)) {
#line 312 "../lib/Drawing/BufferSurface.vala"
						break;
#line 1849 "BufferSurface.c"
					}
#line 313 "../lib/Drawing/BufferSurface.vala"
					a_sum = 0;
#line 313 "../lib/Drawing/BufferSurface.vala"
					r_sum = 0;
#line 313 "../lib/Drawing/BufferSurface.vala"
					g_sum = 0;
#line 313 "../lib/Drawing/BufferSurface.vala"
					b_sum = 0;
#line 315 "../lib/Drawing/BufferSurface.vala"
					cur_pixel = (guint32) (x * channels);
#line 317 "../lib/Drawing/BufferSurface.vala"
					_tmp87_ = buffer;
#line 317 "../lib/Drawing/BufferSurface.vala"
					_tmp87__length1 = buffer_length1;
#line 317 "../lib/Drawing/BufferSurface.vala"
					_tmp88_ = _tmp87_[cur_pixel + 0];
#line 317 "../lib/Drawing/BufferSurface.vala"
					a_sum += radius * _tmp88_;
#line 318 "../lib/Drawing/BufferSurface.vala"
					_tmp89_ = buffer;
#line 318 "../lib/Drawing/BufferSurface.vala"
					_tmp89__length1 = buffer_length1;
#line 318 "../lib/Drawing/BufferSurface.vala"
					_tmp90_ = _tmp89_[cur_pixel + 1];
#line 318 "../lib/Drawing/BufferSurface.vala"
					r_sum += radius * _tmp90_;
#line 319 "../lib/Drawing/BufferSurface.vala"
					_tmp91_ = buffer;
#line 319 "../lib/Drawing/BufferSurface.vala"
					_tmp91__length1 = buffer_length1;
#line 319 "../lib/Drawing/BufferSurface.vala"
					_tmp92_ = _tmp91_[cur_pixel + 2];
#line 319 "../lib/Drawing/BufferSurface.vala"
					g_sum += radius * _tmp92_;
#line 320 "../lib/Drawing/BufferSurface.vala"
					_tmp93_ = buffer;
#line 320 "../lib/Drawing/BufferSurface.vala"
					_tmp93__length1 = buffer_length1;
#line 320 "../lib/Drawing/BufferSurface.vala"
					_tmp94_ = _tmp93_[cur_pixel + 3];
#line 320 "../lib/Drawing/BufferSurface.vala"
					b_sum += radius * _tmp94_;
#line 1893 "BufferSurface.c"
					{
						gint i = 0;
#line 322 "../lib/Drawing/BufferSurface.vala"
						i = 0;
#line 1898 "BufferSurface.c"
						{
							gboolean _tmp95_ = FALSE;
#line 322 "../lib/Drawing/BufferSurface.vala"
							_tmp95_ = TRUE;
#line 322 "../lib/Drawing/BufferSurface.vala"
							while (TRUE) {
#line 1905 "BufferSurface.c"
								guint8* _tmp97_;
								gint _tmp97__length1;
								guint8 _tmp98_;
								guint8* _tmp99_;
								gint _tmp99__length1;
								guint8 _tmp100_;
								guint8* _tmp101_;
								gint _tmp101__length1;
								guint8 _tmp102_;
								guint8* _tmp103_;
								gint _tmp103__length1;
								guint8 _tmp104_;
#line 322 "../lib/Drawing/BufferSurface.vala"
								if (!_tmp95_) {
#line 1920 "BufferSurface.c"
									gint _tmp96_;
#line 322 "../lib/Drawing/BufferSurface.vala"
									_tmp96_ = i;
#line 322 "../lib/Drawing/BufferSurface.vala"
									i = _tmp96_ + 1;
#line 1926 "BufferSurface.c"
								}
#line 322 "../lib/Drawing/BufferSurface.vala"
								_tmp95_ = FALSE;
#line 322 "../lib/Drawing/BufferSurface.vala"
								if (!(i <= radius)) {
#line 322 "../lib/Drawing/BufferSurface.vala"
									break;
#line 1934 "BufferSurface.c"
								}
#line 323 "../lib/Drawing/BufferSurface.vala"
								_tmp97_ = buffer;
#line 323 "../lib/Drawing/BufferSurface.vala"
								_tmp97__length1 = buffer_length1;
#line 323 "../lib/Drawing/BufferSurface.vala"
								_tmp98_ = _tmp97_[cur_pixel + 0];
#line 323 "../lib/Drawing/BufferSurface.vala"
								a_sum += (gint) _tmp98_;
#line 324 "../lib/Drawing/BufferSurface.vala"
								_tmp99_ = buffer;
#line 324 "../lib/Drawing/BufferSurface.vala"
								_tmp99__length1 = buffer_length1;
#line 324 "../lib/Drawing/BufferSurface.vala"
								_tmp100_ = _tmp99_[cur_pixel + 1];
#line 324 "../lib/Drawing/BufferSurface.vala"
								r_sum += (gint) _tmp100_;
#line 325 "../lib/Drawing/BufferSurface.vala"
								_tmp101_ = buffer;
#line 325 "../lib/Drawing/BufferSurface.vala"
								_tmp101__length1 = buffer_length1;
#line 325 "../lib/Drawing/BufferSurface.vala"
								_tmp102_ = _tmp101_[cur_pixel + 2];
#line 325 "../lib/Drawing/BufferSurface.vala"
								g_sum += (gint) _tmp102_;
#line 326 "../lib/Drawing/BufferSurface.vala"
								_tmp103_ = buffer;
#line 326 "../lib/Drawing/BufferSurface.vala"
								_tmp103__length1 = buffer_length1;
#line 326 "../lib/Drawing/BufferSurface.vala"
								_tmp104_ = _tmp103_[cur_pixel + 3];
#line 326 "../lib/Drawing/BufferSurface.vala"
								b_sum += (gint) _tmp104_;
#line 328 "../lib/Drawing/BufferSurface.vala"
								cur_pixel += (guint32) (w * channels);
#line 1970 "BufferSurface.c"
							}
						}
					}
#line 331 "../lib/Drawing/BufferSurface.vala"
					cur_pixel = (guint32) (x * channels);
#line 1976 "BufferSurface.c"
					{
						gint y = 0;
#line 333 "../lib/Drawing/BufferSurface.vala"
						y = 0;
#line 1981 "BufferSurface.c"
						{
							gboolean _tmp105_ = FALSE;
#line 333 "../lib/Drawing/BufferSurface.vala"
							_tmp105_ = TRUE;
#line 333 "../lib/Drawing/BufferSurface.vala"
							while (TRUE) {
#line 1988 "BufferSurface.c"
								guint32 p1 = 0U;
								gint* _tmp107_;
								gint _tmp107__length1;
								gint _tmp108_;
								guint32 p2 = 0U;
								gint* _tmp109_;
								gint _tmp109__length1;
								gint _tmp110_;
								guint8* _tmp111_;
								guint8* _tmp112_;
								gint _tmp112__length1;
								guint8 _tmp113_;
								guint8* _tmp114_;
								guint8* _tmp115_;
								gint _tmp115__length1;
								guint8 _tmp116_;
								guint8* _tmp117_;
								guint8* _tmp118_;
								gint _tmp118__length1;
								guint8 _tmp119_;
								guint8* _tmp120_;
								guint8* _tmp121_;
								gint _tmp121__length1;
								guint8 _tmp122_;
								guint8* _tmp123_;
								gint _tmp123__length1;
								guint8 _tmp124_;
								guint8* _tmp125_;
								gint _tmp125__length1;
								guint8 _tmp126_;
								guint8* _tmp127_;
								gint _tmp127__length1;
								guint8 _tmp128_;
								guint8* _tmp129_;
								gint _tmp129__length1;
								guint8 _tmp130_;
								guint8* _tmp131_;
								gint _tmp131__length1;
								guint8 _tmp132_;
								guint8* _tmp133_;
								gint _tmp133__length1;
								guint8 _tmp134_;
								guint8* _tmp135_;
								gint _tmp135__length1;
								guint8 _tmp136_;
								guint8* _tmp137_;
								gint _tmp137__length1;
								guint8 _tmp138_;
#line 333 "../lib/Drawing/BufferSurface.vala"
								if (!_tmp105_) {
#line 2039 "BufferSurface.c"
									gint _tmp106_;
#line 333 "../lib/Drawing/BufferSurface.vala"
									_tmp106_ = y;
#line 333 "../lib/Drawing/BufferSurface.vala"
									y = _tmp106_ + 1;
#line 2045 "BufferSurface.c"
								}
#line 333 "../lib/Drawing/BufferSurface.vala"
								_tmp105_ = FALSE;
#line 333 "../lib/Drawing/BufferSurface.vala"
								if (!(y < h)) {
#line 333 "../lib/Drawing/BufferSurface.vala"
									break;
#line 2053 "BufferSurface.c"
								}
#line 334 "../lib/Drawing/BufferSurface.vala"
								_tmp107_ = v_min;
#line 334 "../lib/Drawing/BufferSurface.vala"
								_tmp107__length1 = v_min_length1;
#line 334 "../lib/Drawing/BufferSurface.vala"
								_tmp108_ = _tmp107_[y];
#line 334 "../lib/Drawing/BufferSurface.vala"
								p1 = (guint32) ((x + _tmp108_) * channels);
#line 335 "../lib/Drawing/BufferSurface.vala"
								_tmp109_ = v_max;
#line 335 "../lib/Drawing/BufferSurface.vala"
								_tmp109__length1 = v_max_length1;
#line 335 "../lib/Drawing/BufferSurface.vala"
								_tmp110_ = _tmp109_[y];
#line 335 "../lib/Drawing/BufferSurface.vala"
								p2 = (guint32) ((x + _tmp110_) * channels);
#line 337 "../lib/Drawing/BufferSurface.vala"
								_tmp111_ = pixels;
#line 337 "../lib/Drawing/BufferSurface.vala"
								_tmp112_ = dv;
#line 337 "../lib/Drawing/BufferSurface.vala"
								_tmp112__length1 = dv_length1;
#line 337 "../lib/Drawing/BufferSurface.vala"
								_tmp113_ = _tmp112_[a_sum];
#line 337 "../lib/Drawing/BufferSurface.vala"
								_tmp111_[cur_pixel + 0] = _tmp113_;
#line 338 "../lib/Drawing/BufferSurface.vala"
								_tmp114_ = pixels;
#line 338 "../lib/Drawing/BufferSurface.vala"
								_tmp115_ = dv;
#line 338 "../lib/Drawing/BufferSurface.vala"
								_tmp115__length1 = dv_length1;
#line 338 "../lib/Drawing/BufferSurface.vala"
								_tmp116_ = _tmp115_[r_sum];
#line 338 "../lib/Drawing/BufferSurface.vala"
								_tmp114_[cur_pixel + 1] = _tmp116_;
#line 339 "../lib/Drawing/BufferSurface.vala"
								_tmp117_ = pixels;
#line 339 "../lib/Drawing/BufferSurface.vala"
								_tmp118_ = dv;
#line 339 "../lib/Drawing/BufferSurface.vala"
								_tmp118__length1 = dv_length1;
#line 339 "../lib/Drawing/BufferSurface.vala"
								_tmp119_ = _tmp118_[g_sum];
#line 339 "../lib/Drawing/BufferSurface.vala"
								_tmp117_[cur_pixel + 2] = _tmp119_;
#line 340 "../lib/Drawing/BufferSurface.vala"
								_tmp120_ = pixels;
#line 340 "../lib/Drawing/BufferSurface.vala"
								_tmp121_ = dv;
#line 340 "../lib/Drawing/BufferSurface.vala"
								_tmp121__length1 = dv_length1;
#line 340 "../lib/Drawing/BufferSurface.vala"
								_tmp122_ = _tmp121_[b_sum];
#line 340 "../lib/Drawing/BufferSurface.vala"
								_tmp120_[cur_pixel + 3] = _tmp122_;
#line 342 "../lib/Drawing/BufferSurface.vala"
								_tmp123_ = buffer;
#line 342 "../lib/Drawing/BufferSurface.vala"
								_tmp123__length1 = buffer_length1;
#line 342 "../lib/Drawing/BufferSurface.vala"
								_tmp124_ = _tmp123_[p1 + 0];
#line 342 "../lib/Drawing/BufferSurface.vala"
								_tmp125_ = buffer;
#line 342 "../lib/Drawing/BufferSurface.vala"
								_tmp125__length1 = buffer_length1;
#line 342 "../lib/Drawing/BufferSurface.vala"
								_tmp126_ = _tmp125_[p2 + 0];
#line 342 "../lib/Drawing/BufferSurface.vala"
								a_sum += (gint) (_tmp124_ - _tmp126_);
#line 343 "../lib/Drawing/BufferSurface.vala"
								_tmp127_ = buffer;
#line 343 "../lib/Drawing/BufferSurface.vala"
								_tmp127__length1 = buffer_length1;
#line 343 "../lib/Drawing/BufferSurface.vala"
								_tmp128_ = _tmp127_[p1 + 1];
#line 343 "../lib/Drawing/BufferSurface.vala"
								_tmp129_ = buffer;
#line 343 "../lib/Drawing/BufferSurface.vala"
								_tmp129__length1 = buffer_length1;
#line 343 "../lib/Drawing/BufferSurface.vala"
								_tmp130_ = _tmp129_[p2 + 1];
#line 343 "../lib/Drawing/BufferSurface.vala"
								r_sum += (gint) (_tmp128_ - _tmp130_);
#line 344 "../lib/Drawing/BufferSurface.vala"
								_tmp131_ = buffer;
#line 344 "../lib/Drawing/BufferSurface.vala"
								_tmp131__length1 = buffer_length1;
#line 344 "../lib/Drawing/BufferSurface.vala"
								_tmp132_ = _tmp131_[p1 + 2];
#line 344 "../lib/Drawing/BufferSurface.vala"
								_tmp133_ = buffer;
#line 344 "../lib/Drawing/BufferSurface.vala"
								_tmp133__length1 = buffer_length1;
#line 344 "../lib/Drawing/BufferSurface.vala"
								_tmp134_ = _tmp133_[p2 + 2];
#line 344 "../lib/Drawing/BufferSurface.vala"
								g_sum += (gint) (_tmp132_ - _tmp134_);
#line 345 "../lib/Drawing/BufferSurface.vala"
								_tmp135_ = buffer;
#line 345 "../lib/Drawing/BufferSurface.vala"
								_tmp135__length1 = buffer_length1;
#line 345 "../lib/Drawing/BufferSurface.vala"
								_tmp136_ = _tmp135_[p1 + 3];
#line 345 "../lib/Drawing/BufferSurface.vala"
								_tmp137_ = buffer;
#line 345 "../lib/Drawing/BufferSurface.vala"
								_tmp137__length1 = buffer_length1;
#line 345 "../lib/Drawing/BufferSurface.vala"
								_tmp138_ = _tmp137_[p2 + 3];
#line 345 "../lib/Drawing/BufferSurface.vala"
								b_sum += (gint) (_tmp136_ - _tmp138_);
#line 347 "../lib/Drawing/BufferSurface.vala"
								cur_pixel += (guint32) (w * channels);
#line 2169 "BufferSurface.c"
							}
						}
					}
				}
			}
		}
	}
#line 352 "../lib/Drawing/BufferSurface.vala"
	_tmp139_ = original;
#line 352 "../lib/Drawing/BufferSurface.vala"
	cairo_surface_mark_dirty (_tmp139_);
#line 354 "../lib/Drawing/BufferSurface.vala"
	_tmp140_ = granite_drawing_buffer_surface_get_context (self);
#line 354 "../lib/Drawing/BufferSurface.vala"
	_tmp141_ = _tmp140_;
#line 354 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp141_, CAIRO_OPERATOR_SOURCE);
#line 355 "../lib/Drawing/BufferSurface.vala"
	_tmp142_ = granite_drawing_buffer_surface_get_context (self);
#line 355 "../lib/Drawing/BufferSurface.vala"
	_tmp143_ = _tmp142_;
#line 355 "../lib/Drawing/BufferSurface.vala"
	_tmp144_ = original;
#line 355 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp143_, _tmp144_, (gdouble) 0, (gdouble) 0);
#line 356 "../lib/Drawing/BufferSurface.vala"
	_tmp145_ = granite_drawing_buffer_surface_get_context (self);
#line 356 "../lib/Drawing/BufferSurface.vala"
	_tmp146_ = _tmp145_;
#line 356 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp146_);
#line 357 "../lib/Drawing/BufferSurface.vala"
	_tmp147_ = granite_drawing_buffer_surface_get_context (self);
#line 357 "../lib/Drawing/BufferSurface.vala"
	_tmp148_ = _tmp147_;
#line 357 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp148_, CAIRO_OPERATOR_OVER);
#line 229 "../lib/Drawing/BufferSurface.vala"
	dv = (g_free (dv), NULL);
#line 229 "../lib/Drawing/BufferSurface.vala"
	v_max = (g_free (v_max), NULL);
#line 229 "../lib/Drawing/BufferSurface.vala"
	v_min = (g_free (v_min), NULL);
#line 229 "../lib/Drawing/BufferSurface.vala"
	buffer = (g_free (buffer), NULL);
#line 229 "../lib/Drawing/BufferSurface.vala"
	_cairo_destroy0 (cr);
#line 229 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (original);
#line 2219 "BufferSurface.c"
}

/**
         * Performs a blur operation on the internal {@link Cairo.Surface}, using an
         * exponential blurring algorithm. This method is usually the fastest
         * and produces good-looking results (though not quite as good as gaussian's).
         *
         * @param radius the blur radius
         */
static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
#line 370 "../lib/Drawing/BufferSurface.vala"
	g_atomic_int_inc (&_data1_->_ref_count_);
#line 370 "../lib/Drawing/BufferSurface.vala"
	return _data1_;
#line 2236 "BufferSurface.c"
}

static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
#line 370 "../lib/Drawing/BufferSurface.vala"
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
#line 2246 "BufferSurface.c"
		GraniteDrawingBufferSurface* self;
#line 370 "../lib/Drawing/BufferSurface.vala"
		self = _data1_->self;
#line 370 "../lib/Drawing/BufferSurface.vala"
		_g_object_unref0 (self);
#line 370 "../lib/Drawing/BufferSurface.vala"
		g_slice_free (Block1Data, _data1_);
#line 2254 "BufferSurface.c"
	}
}

static void*
___lambda4_ (Block1Data* _data1_)
{
	GraniteDrawingBufferSurface* self;
	guint8* _tmp0_;
	void* result = NULL;
#line 390 "../lib/Drawing/BufferSurface.vala"
	self = _data1_->self;
#line 391 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = _data1_->pixels;
#line 391 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_exponential_blur_rows (self, _tmp0_, _data1_->width, _data1_->height, 0, _data1_->height / 2, 0, _data1_->width, _data1_->alpha);
#line 392 "../lib/Drawing/BufferSurface.vala"
	result = NULL;
#line 392 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 2274 "BufferSurface.c"
}

static gpointer
____lambda4__gthread_func (gpointer self)
{
	gpointer result;
	result = ___lambda4_ (self);
#line 390 "../lib/Drawing/BufferSurface.vala"
	block1_data_unref (self);
#line 390 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 2286 "BufferSurface.c"
}

static void*
___lambda5_ (Block1Data* _data1_)
{
	GraniteDrawingBufferSurface* self;
	guint8* _tmp0_;
	void* result = NULL;
#line 399 "../lib/Drawing/BufferSurface.vala"
	self = _data1_->self;
#line 400 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = _data1_->pixels;
#line 400 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_exponential_blur_columns (self, _tmp0_, _data1_->width, _data1_->height, 0, _data1_->width / 2, 0, _data1_->height, _data1_->alpha);
#line 401 "../lib/Drawing/BufferSurface.vala"
	result = NULL;
#line 401 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 2305 "BufferSurface.c"
}

static gpointer
____lambda5__gthread_func (gpointer self)
{
	gpointer result;
	result = ___lambda5_ (self);
#line 399 "../lib/Drawing/BufferSurface.vala"
	block1_data_unref (self);
#line 399 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 2317 "BufferSurface.c"
}

void
granite_drawing_buffer_surface_exponential_blur (GraniteDrawingBufferSurface* self,
                                                 gint radius)
{
	Block1Data* _data1_;
	gint _tmp0_;
	gint _tmp1_;
	cairo_surface_t* original = NULL;
	cairo_surface_t* _tmp2_;
	cairo_t* cr = NULL;
	cairo_surface_t* _tmp3_;
	cairo_t* _tmp4_;
	cairo_t* _tmp5_;
	cairo_t* _tmp6_;
	cairo_surface_t* _tmp7_;
	cairo_surface_t* _tmp8_;
	cairo_t* _tmp9_;
	cairo_surface_t* _tmp10_;
	guchar* _tmp11_;
	cairo_surface_t* _tmp20_;
	cairo_t* _tmp21_;
	cairo_t* _tmp22_;
	cairo_t* _tmp23_;
	cairo_t* _tmp24_;
	cairo_surface_t* _tmp25_;
	cairo_t* _tmp26_;
	cairo_t* _tmp27_;
	cairo_t* _tmp28_;
	cairo_t* _tmp29_;
	GError* _inner_error0_ = NULL;
#line 370 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 370 "../lib/Drawing/BufferSurface.vala"
	_data1_ = g_slice_new0 (Block1Data);
#line 370 "../lib/Drawing/BufferSurface.vala"
	_data1_->_ref_count_ = 1;
#line 370 "../lib/Drawing/BufferSurface.vala"
	_data1_->self = g_object_ref (self);
#line 371 "../lib/Drawing/BufferSurface.vala"
	if (radius < 1) {
#line 372 "../lib/Drawing/BufferSurface.vala"
		block1_data_unref (_data1_);
#line 372 "../lib/Drawing/BufferSurface.vala"
		_data1_ = NULL;
#line 372 "../lib/Drawing/BufferSurface.vala"
		return;
#line 2366 "BufferSurface.c"
	}
#line 375 "../lib/Drawing/BufferSurface.vala"
	_data1_->alpha = (gint) ((1 << GRANITE_DRAWING_BUFFER_SURFACE_ALPHA_PRECISION) * (1.0 - exp ((-2.3) / (radius + 1.0))));
#line 376 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = self->priv->_height;
#line 376 "../lib/Drawing/BufferSurface.vala"
	_data1_->height = _tmp0_;
#line 377 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = self->priv->_width;
#line 377 "../lib/Drawing/BufferSurface.vala"
	_data1_->width = _tmp1_;
#line 379 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, _data1_->width, _data1_->height);
#line 379 "../lib/Drawing/BufferSurface.vala"
	original = _tmp2_;
#line 380 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = original;
#line 380 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = cairo_create (_tmp3_);
#line 380 "../lib/Drawing/BufferSurface.vala"
	cr = _tmp4_;
#line 382 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = cr;
#line 382 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp5_, CAIRO_OPERATOR_SOURCE);
#line 383 "../lib/Drawing/BufferSurface.vala"
	_tmp6_ = cr;
#line 383 "../lib/Drawing/BufferSurface.vala"
	_tmp7_ = granite_drawing_buffer_surface_get_surface (self);
#line 383 "../lib/Drawing/BufferSurface.vala"
	_tmp8_ = _tmp7_;
#line 383 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp6_, _tmp8_, (gdouble) 0, (gdouble) 0);
#line 384 "../lib/Drawing/BufferSurface.vala"
	_tmp9_ = cr;
#line 384 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp9_);
#line 386 "../lib/Drawing/BufferSurface.vala"
	_tmp10_ = original;
#line 386 "../lib/Drawing/BufferSurface.vala"
	_tmp11_ = cairo_image_surface_get_data (_tmp10_);
#line 386 "../lib/Drawing/BufferSurface.vala"
	_data1_->pixels = _tmp11_;
#line 2410 "BufferSurface.c"
	{
		GThread* th = NULL;
		GThread* _tmp12_;
		guint8* _tmp13_;
		GThread* _tmp14_;
		GThread* th2 = NULL;
		GThread* _tmp15_;
		guint8* _tmp16_;
		GThread* _tmp17_;
#line 390 "../lib/Drawing/BufferSurface.vala"
		_tmp12_ = g_thread_try_new (NULL, ____lambda4__gthread_func, block1_data_ref (_data1_), &_inner_error0_);
#line 390 "../lib/Drawing/BufferSurface.vala"
		th = _tmp12_;
#line 390 "../lib/Drawing/BufferSurface.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 2426 "BufferSurface.c"
			goto __catch0_g_error;
		}
#line 395 "../lib/Drawing/BufferSurface.vala"
		_tmp13_ = _data1_->pixels;
#line 395 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_exponential_blur_rows (self, _tmp13_, _data1_->width, _data1_->height, _data1_->height / 2, _data1_->height, 0, _data1_->width, _data1_->alpha);
#line 396 "../lib/Drawing/BufferSurface.vala"
		_tmp14_ = th;
#line 396 "../lib/Drawing/BufferSurface.vala"
		th = NULL;
#line 396 "../lib/Drawing/BufferSurface.vala"
		g_thread_join (_tmp14_);
#line 399 "../lib/Drawing/BufferSurface.vala"
		_tmp15_ = g_thread_try_new (NULL, ____lambda5__gthread_func, block1_data_ref (_data1_), &_inner_error0_);
#line 399 "../lib/Drawing/BufferSurface.vala"
		th2 = _tmp15_;
#line 399 "../lib/Drawing/BufferSurface.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 399 "../lib/Drawing/BufferSurface.vala"
			_g_thread_unref0 (th);
#line 2447 "BufferSurface.c"
			goto __catch0_g_error;
		}
#line 404 "../lib/Drawing/BufferSurface.vala"
		_tmp16_ = _data1_->pixels;
#line 404 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_exponential_blur_columns (self, _tmp16_, _data1_->width, _data1_->height, _data1_->width / 2, _data1_->width, 0, _data1_->height, _data1_->alpha);
#line 405 "../lib/Drawing/BufferSurface.vala"
		_tmp17_ = th2;
#line 405 "../lib/Drawing/BufferSurface.vala"
		th2 = NULL;
#line 405 "../lib/Drawing/BufferSurface.vala"
		g_thread_join (_tmp17_);
#line 388 "../lib/Drawing/BufferSurface.vala"
		_g_thread_unref0 (th2);
#line 388 "../lib/Drawing/BufferSurface.vala"
		_g_thread_unref0 (th);
#line 2464 "BufferSurface.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* err = NULL;
		GError* _tmp18_;
		const gchar* _tmp19_;
#line 388 "../lib/Drawing/BufferSurface.vala"
		err = _inner_error0_;
#line 388 "../lib/Drawing/BufferSurface.vala"
		_inner_error0_ = NULL;
#line 407 "../lib/Drawing/BufferSurface.vala"
		_tmp18_ = err;
#line 407 "../lib/Drawing/BufferSurface.vala"
		_tmp19_ = _tmp18_->message;
#line 407 "../lib/Drawing/BufferSurface.vala"
		g_warning ("BufferSurface.vala:407: %s", _tmp19_);
#line 388 "../lib/Drawing/BufferSurface.vala"
		_g_error_free0 (err);
#line 2484 "BufferSurface.c"
	}
	__finally0:
#line 388 "../lib/Drawing/BufferSurface.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 388 "../lib/Drawing/BufferSurface.vala"
		_cairo_destroy0 (cr);
#line 388 "../lib/Drawing/BufferSurface.vala"
		_cairo_surface_destroy0 (original);
#line 388 "../lib/Drawing/BufferSurface.vala"
		block1_data_unref (_data1_);
#line 388 "../lib/Drawing/BufferSurface.vala"
		_data1_ = NULL;
#line 388 "../lib/Drawing/BufferSurface.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 388 "../lib/Drawing/BufferSurface.vala"
		g_clear_error (&_inner_error0_);
#line 388 "../lib/Drawing/BufferSurface.vala"
		return;
#line 2503 "BufferSurface.c"
	}
#line 410 "../lib/Drawing/BufferSurface.vala"
	_tmp20_ = original;
#line 410 "../lib/Drawing/BufferSurface.vala"
	cairo_surface_mark_dirty (_tmp20_);
#line 412 "../lib/Drawing/BufferSurface.vala"
	_tmp21_ = granite_drawing_buffer_surface_get_context (self);
#line 412 "../lib/Drawing/BufferSurface.vala"
	_tmp22_ = _tmp21_;
#line 412 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp22_, CAIRO_OPERATOR_SOURCE);
#line 413 "../lib/Drawing/BufferSurface.vala"
	_tmp23_ = granite_drawing_buffer_surface_get_context (self);
#line 413 "../lib/Drawing/BufferSurface.vala"
	_tmp24_ = _tmp23_;
#line 413 "../lib/Drawing/BufferSurface.vala"
	_tmp25_ = original;
#line 413 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp24_, _tmp25_, (gdouble) 0, (gdouble) 0);
#line 414 "../lib/Drawing/BufferSurface.vala"
	_tmp26_ = granite_drawing_buffer_surface_get_context (self);
#line 414 "../lib/Drawing/BufferSurface.vala"
	_tmp27_ = _tmp26_;
#line 414 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp27_);
#line 415 "../lib/Drawing/BufferSurface.vala"
	_tmp28_ = granite_drawing_buffer_surface_get_context (self);
#line 415 "../lib/Drawing/BufferSurface.vala"
	_tmp29_ = _tmp28_;
#line 415 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp29_, CAIRO_OPERATOR_OVER);
#line 370 "../lib/Drawing/BufferSurface.vala"
	_cairo_destroy0 (cr);
#line 370 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (original);
#line 370 "../lib/Drawing/BufferSurface.vala"
	block1_data_unref (_data1_);
#line 370 "../lib/Drawing/BufferSurface.vala"
	_data1_ = NULL;
#line 2543 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_exponential_blur_columns (GraniteDrawingBufferSurface* self,
                                                         guint8* pixels,
                                                         gint width,
                                                         gint height,
                                                         gint start_col,
                                                         gint end_col,
                                                         gint start_y,
                                                         gint end_y,
                                                         gint alpha)
{
#line 418 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 2559 "BufferSurface.c"
	{
		gint column_index = 0;
#line 428 "../lib/Drawing/BufferSurface.vala"
		column_index = start_col;
#line 2564 "BufferSurface.c"
		{
			gboolean _tmp0_ = FALSE;
#line 428 "../lib/Drawing/BufferSurface.vala"
			_tmp0_ = TRUE;
#line 428 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 2571 "BufferSurface.c"
				guint8* column = NULL;
				gint z_alpha = 0;
				guint8* _tmp2_;
				guint8 _tmp3_;
				gint z_red = 0;
				guint8* _tmp4_;
				guint8 _tmp5_;
				gint z_green = 0;
				guint8* _tmp6_;
				guint8 _tmp7_;
				gint z_blue = 0;
				guint8* _tmp8_;
				guint8 _tmp9_;
#line 428 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp0_) {
#line 2587 "BufferSurface.c"
					gint _tmp1_;
#line 428 "../lib/Drawing/BufferSurface.vala"
					_tmp1_ = column_index;
#line 428 "../lib/Drawing/BufferSurface.vala"
					column_index = _tmp1_ + 1;
#line 2593 "BufferSurface.c"
				}
#line 428 "../lib/Drawing/BufferSurface.vala"
				_tmp0_ = FALSE;
#line 428 "../lib/Drawing/BufferSurface.vala"
				if (!(column_index < end_col)) {
#line 428 "../lib/Drawing/BufferSurface.vala"
					break;
#line 2601 "BufferSurface.c"
				}
#line 430 "../lib/Drawing/BufferSurface.vala"
				column = pixels + (column_index * 4);
#line 432 "../lib/Drawing/BufferSurface.vala"
				_tmp2_ = column;
#line 432 "../lib/Drawing/BufferSurface.vala"
				_tmp3_ = _tmp2_[0];
#line 432 "../lib/Drawing/BufferSurface.vala"
				z_alpha = _tmp3_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 433 "../lib/Drawing/BufferSurface.vala"
				_tmp4_ = column;
#line 433 "../lib/Drawing/BufferSurface.vala"
				_tmp5_ = _tmp4_[1];
#line 433 "../lib/Drawing/BufferSurface.vala"
				z_red = _tmp5_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 434 "../lib/Drawing/BufferSurface.vala"
				_tmp6_ = column;
#line 434 "../lib/Drawing/BufferSurface.vala"
				_tmp7_ = _tmp6_[2];
#line 434 "../lib/Drawing/BufferSurface.vala"
				z_green = _tmp7_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 435 "../lib/Drawing/BufferSurface.vala"
				_tmp8_ = column;
#line 435 "../lib/Drawing/BufferSurface.vala"
				_tmp9_ = _tmp8_[3];
#line 435 "../lib/Drawing/BufferSurface.vala"
				z_blue = _tmp9_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 2629 "BufferSurface.c"
				{
					gint index = 0;
#line 438 "../lib/Drawing/BufferSurface.vala"
					index = width * (start_y + 1);
#line 2634 "BufferSurface.c"
					{
						gboolean _tmp10_ = FALSE;
#line 438 "../lib/Drawing/BufferSurface.vala"
						_tmp10_ = TRUE;
#line 438 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 2641 "BufferSurface.c"
							guint8* _tmp11_;
#line 438 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp10_) {
#line 438 "../lib/Drawing/BufferSurface.vala"
								index += width;
#line 2647 "BufferSurface.c"
							}
#line 438 "../lib/Drawing/BufferSurface.vala"
							_tmp10_ = FALSE;
#line 438 "../lib/Drawing/BufferSurface.vala"
							if (!(index < ((end_y - 1) * width))) {
#line 438 "../lib/Drawing/BufferSurface.vala"
								break;
#line 2655 "BufferSurface.c"
							}
#line 439 "../lib/Drawing/BufferSurface.vala"
							_tmp11_ = column;
#line 439 "../lib/Drawing/BufferSurface.vala"
							granite_drawing_buffer_surface_exponential_blur_inner (&_tmp11_[index * 4], &z_alpha, &z_red, &z_green, &z_blue, alpha);
#line 2661 "BufferSurface.c"
						}
					}
				}
				{
					gint index = 0;
#line 443 "../lib/Drawing/BufferSurface.vala"
					index = (end_y - 2) * width;
#line 2669 "BufferSurface.c"
					{
						gboolean _tmp12_ = FALSE;
#line 443 "../lib/Drawing/BufferSurface.vala"
						_tmp12_ = TRUE;
#line 443 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 2676 "BufferSurface.c"
							guint8* _tmp13_;
#line 443 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp12_) {
#line 443 "../lib/Drawing/BufferSurface.vala"
								index -= width;
#line 2682 "BufferSurface.c"
							}
#line 443 "../lib/Drawing/BufferSurface.vala"
							_tmp12_ = FALSE;
#line 443 "../lib/Drawing/BufferSurface.vala"
							if (!(index >= start_y)) {
#line 443 "../lib/Drawing/BufferSurface.vala"
								break;
#line 2690 "BufferSurface.c"
							}
#line 444 "../lib/Drawing/BufferSurface.vala"
							_tmp13_ = column;
#line 444 "../lib/Drawing/BufferSurface.vala"
							granite_drawing_buffer_surface_exponential_blur_inner (&_tmp13_[index * 4], &z_alpha, &z_red, &z_green, &z_blue, alpha);
#line 2696 "BufferSurface.c"
						}
					}
				}
			}
		}
	}
}

static void
granite_drawing_buffer_surface_exponential_blur_rows (GraniteDrawingBufferSurface* self,
                                                      guint8* pixels,
                                                      gint width,
                                                      gint height,
                                                      gint start_row,
                                                      gint end_row,
                                                      gint start_x,
                                                      gint end_x,
                                                      gint alpha)
{
#line 449 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 2718 "BufferSurface.c"
	{
		gint row_index = 0;
#line 459 "../lib/Drawing/BufferSurface.vala"
		row_index = start_row;
#line 2723 "BufferSurface.c"
		{
			gboolean _tmp0_ = FALSE;
#line 459 "../lib/Drawing/BufferSurface.vala"
			_tmp0_ = TRUE;
#line 459 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 2730 "BufferSurface.c"
				guint8* row = NULL;
				gint z_alpha = 0;
				guint8* _tmp2_;
				guint8 _tmp3_;
				gint z_red = 0;
				guint8* _tmp4_;
				guint8 _tmp5_;
				gint z_green = 0;
				guint8* _tmp6_;
				guint8 _tmp7_;
				gint z_blue = 0;
				guint8* _tmp8_;
				guint8 _tmp9_;
#line 459 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp0_) {
#line 2746 "BufferSurface.c"
					gint _tmp1_;
#line 459 "../lib/Drawing/BufferSurface.vala"
					_tmp1_ = row_index;
#line 459 "../lib/Drawing/BufferSurface.vala"
					row_index = _tmp1_ + 1;
#line 2752 "BufferSurface.c"
				}
#line 459 "../lib/Drawing/BufferSurface.vala"
				_tmp0_ = FALSE;
#line 459 "../lib/Drawing/BufferSurface.vala"
				if (!(row_index < end_row)) {
#line 459 "../lib/Drawing/BufferSurface.vala"
					break;
#line 2760 "BufferSurface.c"
				}
#line 461 "../lib/Drawing/BufferSurface.vala"
				row = pixels + ((row_index * width) * 4);
#line 463 "../lib/Drawing/BufferSurface.vala"
				_tmp2_ = row;
#line 463 "../lib/Drawing/BufferSurface.vala"
				_tmp3_ = _tmp2_[start_x + 0];
#line 463 "../lib/Drawing/BufferSurface.vala"
				z_alpha = _tmp3_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 464 "../lib/Drawing/BufferSurface.vala"
				_tmp4_ = row;
#line 464 "../lib/Drawing/BufferSurface.vala"
				_tmp5_ = _tmp4_[start_x + 1];
#line 464 "../lib/Drawing/BufferSurface.vala"
				z_red = _tmp5_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 465 "../lib/Drawing/BufferSurface.vala"
				_tmp6_ = row;
#line 465 "../lib/Drawing/BufferSurface.vala"
				_tmp7_ = _tmp6_[start_x + 2];
#line 465 "../lib/Drawing/BufferSurface.vala"
				z_green = _tmp7_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 466 "../lib/Drawing/BufferSurface.vala"
				_tmp8_ = row;
#line 466 "../lib/Drawing/BufferSurface.vala"
				_tmp9_ = _tmp8_[start_x + 3];
#line 466 "../lib/Drawing/BufferSurface.vala"
				z_blue = _tmp9_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION;
#line 2788 "BufferSurface.c"
				{
					gint index = 0;
#line 469 "../lib/Drawing/BufferSurface.vala"
					index = start_x + 1;
#line 2793 "BufferSurface.c"
					{
						gboolean _tmp10_ = FALSE;
#line 469 "../lib/Drawing/BufferSurface.vala"
						_tmp10_ = TRUE;
#line 469 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 2800 "BufferSurface.c"
							guint8* _tmp12_;
#line 469 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp10_) {
#line 2804 "BufferSurface.c"
								gint _tmp11_;
#line 469 "../lib/Drawing/BufferSurface.vala"
								_tmp11_ = index;
#line 469 "../lib/Drawing/BufferSurface.vala"
								index = _tmp11_ + 1;
#line 2810 "BufferSurface.c"
							}
#line 469 "../lib/Drawing/BufferSurface.vala"
							_tmp10_ = FALSE;
#line 469 "../lib/Drawing/BufferSurface.vala"
							if (!(index < end_x)) {
#line 469 "../lib/Drawing/BufferSurface.vala"
								break;
#line 2818 "BufferSurface.c"
							}
#line 470 "../lib/Drawing/BufferSurface.vala"
							_tmp12_ = row;
#line 470 "../lib/Drawing/BufferSurface.vala"
							granite_drawing_buffer_surface_exponential_blur_inner (&_tmp12_[index * 4], &z_alpha, &z_red, &z_green, &z_blue, alpha);
#line 2824 "BufferSurface.c"
						}
					}
				}
				{
					gint index = 0;
#line 473 "../lib/Drawing/BufferSurface.vala"
					index = end_x - 2;
#line 2832 "BufferSurface.c"
					{
						gboolean _tmp13_ = FALSE;
#line 473 "../lib/Drawing/BufferSurface.vala"
						_tmp13_ = TRUE;
#line 473 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 2839 "BufferSurface.c"
							guint8* _tmp15_;
#line 473 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp13_) {
#line 2843 "BufferSurface.c"
								gint _tmp14_;
#line 473 "../lib/Drawing/BufferSurface.vala"
								_tmp14_ = index;
#line 473 "../lib/Drawing/BufferSurface.vala"
								index = _tmp14_ - 1;
#line 2849 "BufferSurface.c"
							}
#line 473 "../lib/Drawing/BufferSurface.vala"
							_tmp13_ = FALSE;
#line 473 "../lib/Drawing/BufferSurface.vala"
							if (!(index >= start_x)) {
#line 473 "../lib/Drawing/BufferSurface.vala"
								break;
#line 2857 "BufferSurface.c"
							}
#line 474 "../lib/Drawing/BufferSurface.vala"
							_tmp15_ = row;
#line 474 "../lib/Drawing/BufferSurface.vala"
							granite_drawing_buffer_surface_exponential_blur_inner (&_tmp15_[index * 4], &z_alpha, &z_red, &z_green, &z_blue, alpha);
#line 2863 "BufferSurface.c"
						}
					}
				}
			}
		}
	}
}

static inline void
granite_drawing_buffer_surface_exponential_blur_inner (guint8* pixel,
                                                       gint* z_alpha,
                                                       gint* z_red,
                                                       gint* z_green,
                                                       gint* z_blue,
                                                       gint alpha)
{
	guint8 _tmp0_;
	guint8 _tmp1_;
	guint8 _tmp2_;
	guint8 _tmp3_;
#line 486 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = pixel[0];
#line 486 "../lib/Drawing/BufferSurface.vala"
	*z_alpha = (*z_alpha) + ((alpha * ((_tmp0_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION) - (*z_alpha))) >> GRANITE_DRAWING_BUFFER_SURFACE_ALPHA_PRECISION);
#line 487 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = pixel[1];
#line 487 "../lib/Drawing/BufferSurface.vala"
	*z_red = (*z_red) + ((alpha * ((_tmp1_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION) - (*z_red))) >> GRANITE_DRAWING_BUFFER_SURFACE_ALPHA_PRECISION);
#line 488 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = pixel[2];
#line 488 "../lib/Drawing/BufferSurface.vala"
	*z_green = (*z_green) + ((alpha * ((_tmp2_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION) - (*z_green))) >> GRANITE_DRAWING_BUFFER_SURFACE_ALPHA_PRECISION);
#line 489 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = pixel[3];
#line 489 "../lib/Drawing/BufferSurface.vala"
	*z_blue = (*z_blue) + ((alpha * ((_tmp3_ << GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION) - (*z_blue))) >> GRANITE_DRAWING_BUFFER_SURFACE_ALPHA_PRECISION);
#line 491 "../lib/Drawing/BufferSurface.vala"
	pixel[0] = (guint8) ((*z_alpha) >> GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION);
#line 492 "../lib/Drawing/BufferSurface.vala"
	pixel[1] = (guint8) ((*z_red) >> GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION);
#line 493 "../lib/Drawing/BufferSurface.vala"
	pixel[2] = (guint8) ((*z_green) >> GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION);
#line 494 "../lib/Drawing/BufferSurface.vala"
	pixel[3] = (guint8) ((*z_blue) >> GRANITE_DRAWING_BUFFER_SURFACE_PARAM_PRECISION);
#line 2908 "BufferSurface.c"
}

/**
         * Performs a blur operation on the internal {@link Cairo.Surface}, using a
         * gaussian blurring algorithm. This method is very slow, albeit producing
         * debatably the best-looking results, and in most cases developers should
         * use the exponential blurring algorithm instead.
         *
         * @param radius the blur radius
         */
static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
#line 505 "../lib/Drawing/BufferSurface.vala"
	g_atomic_int_inc (&_data2_->_ref_count_);
#line 505 "../lib/Drawing/BufferSurface.vala"
	return _data2_;
#line 2926 "BufferSurface.c"
}

static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
#line 505 "../lib/Drawing/BufferSurface.vala"
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
#line 2936 "BufferSurface.c"
		GraniteDrawingBufferSurface* self;
#line 505 "../lib/Drawing/BufferSurface.vala"
		self = _data2_->self;
#line 505 "../lib/Drawing/BufferSurface.vala"
		_data2_->shiftar = (g_free (_data2_->shiftar), NULL);
#line 505 "../lib/Drawing/BufferSurface.vala"
		_data2_->buffer_b = (g_free (_data2_->buffer_b), NULL);
#line 505 "../lib/Drawing/BufferSurface.vala"
		_data2_->buffer_a = (g_free (_data2_->buffer_a), NULL);
#line 505 "../lib/Drawing/BufferSurface.vala"
		_data2_->kernel = (g_free (_data2_->kernel), NULL);
#line 505 "../lib/Drawing/BufferSurface.vala"
		_g_object_unref0 (self);
#line 505 "../lib/Drawing/BufferSurface.vala"
		g_slice_free (Block2Data, _data2_);
#line 2952 "BufferSurface.c"
	}
}

static void*
___lambda6_ (Block2Data* _data2_)
{
	GraniteDrawingBufferSurface* self;
	gdouble* _tmp0_;
	gint _tmp0__length1;
	gdouble* _tmp1_;
	gint _tmp1__length1;
	gdouble* _tmp2_;
	gint _tmp2__length1;
	gint* _tmp3_;
	gint _tmp3__length1;
	gint _tmp3__length2;
	void* result = NULL;
#line 544 "../lib/Drawing/BufferSurface.vala"
	self = _data2_->self;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = _data2_->buffer_a;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp0__length1 = _data2_->buffer_a_length1;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = _data2_->buffer_b;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp1__length1 = _data2_->buffer_b_length1;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = _data2_->kernel;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp2__length1 = _data2_->kernel_length1;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = _data2_->shiftar;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp3__length1 = _data2_->shiftar_length1;
#line 545 "../lib/Drawing/BufferSurface.vala"
	_tmp3__length2 = _data2_->shiftar_length2;
#line 545 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_gaussian_blur_horizontal (self, _tmp0_, _tmp1_, _tmp2_, _data2_->gauss_width, _data2_->width, _data2_->height, 0, _data2_->height / 2, _tmp3_, (gint) _tmp3__length1, (gint) _tmp3__length2);
#line 556 "../lib/Drawing/BufferSurface.vala"
	result = NULL;
#line 556 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 2996 "BufferSurface.c"
}

static gpointer
____lambda6__gthread_func (gpointer self)
{
	gpointer result;
	result = ___lambda6_ (self);
#line 544 "../lib/Drawing/BufferSurface.vala"
	block2_data_unref (self);
#line 544 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 3008 "BufferSurface.c"
}

static void*
___lambda7_ (Block2Data* _data2_)
{
	GraniteDrawingBufferSurface* self;
	gdouble* _tmp0_;
	gint _tmp0__length1;
	gdouble* _tmp1_;
	gint _tmp1__length1;
	gdouble* _tmp2_;
	gint _tmp2__length1;
	gint* _tmp3_;
	gint _tmp3__length1;
	gint _tmp3__length2;
	void* result = NULL;
#line 587 "../lib/Drawing/BufferSurface.vala"
	self = _data2_->self;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = _data2_->buffer_b;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp0__length1 = _data2_->buffer_b_length1;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = _data2_->buffer_a;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp1__length1 = _data2_->buffer_a_length1;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = _data2_->kernel;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp2__length1 = _data2_->kernel_length1;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = _data2_->shiftar;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp3__length1 = _data2_->shiftar_length1;
#line 588 "../lib/Drawing/BufferSurface.vala"
	_tmp3__length2 = _data2_->shiftar_length2;
#line 588 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_gaussian_blur_vertical (self, _tmp0_, _tmp1_, _tmp2_, _data2_->gauss_width, _data2_->width, _data2_->height, 0, _data2_->width / 2, _tmp3_, (gint) _tmp3__length1, (gint) _tmp3__length2);
#line 599 "../lib/Drawing/BufferSurface.vala"
	result = NULL;
#line 599 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 3051 "BufferSurface.c"
}

static gpointer
____lambda7__gthread_func (gpointer self)
{
	gpointer result;
	result = ___lambda7_ (self);
#line 587 "../lib/Drawing/BufferSurface.vala"
	block2_data_unref (self);
#line 587 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 3063 "BufferSurface.c"
}

void
granite_drawing_buffer_surface_gaussian_blur (GraniteDrawingBufferSurface* self,
                                              gint radius)
{
	Block2Data* _data2_;
	gint _tmp0_ = 0;
	gdouble* _tmp1_;
	gint _tmp2_;
	gint _tmp3_;
	cairo_surface_t* original = NULL;
	cairo_surface_t* _tmp4_;
	cairo_t* cr = NULL;
	cairo_surface_t* _tmp5_;
	cairo_t* _tmp6_;
	cairo_t* _tmp7_;
	cairo_t* _tmp8_;
	cairo_surface_t* _tmp9_;
	cairo_surface_t* _tmp10_;
	cairo_t* _tmp11_;
	guint8* src = NULL;
	cairo_surface_t* _tmp12_;
	guchar* _tmp13_;
	gint size = 0;
	cairo_surface_t* _tmp14_;
	gdouble* _tmp15_;
	gdouble* _tmp16_;
	gint* _tmp22_;
	cairo_surface_t* _tmp58_;
	cairo_t* _tmp59_;
	cairo_t* _tmp60_;
	cairo_t* _tmp61_;
	cairo_t* _tmp62_;
	cairo_surface_t* _tmp63_;
	cairo_t* _tmp64_;
	cairo_t* _tmp65_;
	cairo_t* _tmp66_;
	cairo_t* _tmp67_;
	GError* _inner_error0_ = NULL;
#line 505 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 505 "../lib/Drawing/BufferSurface.vala"
	_data2_ = g_slice_new0 (Block2Data);
#line 505 "../lib/Drawing/BufferSurface.vala"
	_data2_->_ref_count_ = 1;
#line 505 "../lib/Drawing/BufferSurface.vala"
	_data2_->self = g_object_ref (self);
#line 506 "../lib/Drawing/BufferSurface.vala"
	_data2_->gauss_width = (radius * 2) + 1;
#line 507 "../lib/Drawing/BufferSurface.vala"
	_tmp1_ = granite_drawing_buffer_surface_build_gaussian_kernel (_data2_->gauss_width, &_tmp0_);
#line 507 "../lib/Drawing/BufferSurface.vala"
	_data2_->kernel = _tmp1_;
#line 507 "../lib/Drawing/BufferSurface.vala"
	_data2_->kernel_length1 = _tmp0_;
#line 507 "../lib/Drawing/BufferSurface.vala"
	_data2_->_kernel_size_ = _data2_->kernel_length1;
#line 509 "../lib/Drawing/BufferSurface.vala"
	_tmp2_ = self->priv->_width;
#line 509 "../lib/Drawing/BufferSurface.vala"
	_data2_->width = _tmp2_;
#line 510 "../lib/Drawing/BufferSurface.vala"
	_tmp3_ = self->priv->_height;
#line 510 "../lib/Drawing/BufferSurface.vala"
	_data2_->height = _tmp3_;
#line 512 "../lib/Drawing/BufferSurface.vala"
	_tmp4_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, _data2_->width, _data2_->height);
#line 512 "../lib/Drawing/BufferSurface.vala"
	original = _tmp4_;
#line 513 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = original;
#line 513 "../lib/Drawing/BufferSurface.vala"
	_tmp6_ = cairo_create (_tmp5_);
#line 513 "../lib/Drawing/BufferSurface.vala"
	cr = _tmp6_;
#line 515 "../lib/Drawing/BufferSurface.vala"
	_tmp7_ = cr;
#line 515 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp7_, CAIRO_OPERATOR_SOURCE);
#line 516 "../lib/Drawing/BufferSurface.vala"
	_tmp8_ = cr;
#line 516 "../lib/Drawing/BufferSurface.vala"
	_tmp9_ = granite_drawing_buffer_surface_get_surface (self);
#line 516 "../lib/Drawing/BufferSurface.vala"
	_tmp10_ = _tmp9_;
#line 516 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp8_, _tmp10_, (gdouble) 0, (gdouble) 0);
#line 517 "../lib/Drawing/BufferSurface.vala"
	_tmp11_ = cr;
#line 517 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp11_);
#line 519 "../lib/Drawing/BufferSurface.vala"
	_tmp12_ = original;
#line 519 "../lib/Drawing/BufferSurface.vala"
	_tmp13_ = cairo_image_surface_get_data (_tmp12_);
#line 519 "../lib/Drawing/BufferSurface.vala"
	src = _tmp13_;
#line 521 "../lib/Drawing/BufferSurface.vala"
	_tmp14_ = original;
#line 521 "../lib/Drawing/BufferSurface.vala"
	size = _data2_->height * cairo_image_surface_get_stride (_tmp14_);
#line 523 "../lib/Drawing/BufferSurface.vala"
	_tmp15_ = g_new0 (gdouble, size);
#line 523 "../lib/Drawing/BufferSurface.vala"
	_data2_->buffer_a = _tmp15_;
#line 523 "../lib/Drawing/BufferSurface.vala"
	_data2_->buffer_a_length1 = size;
#line 523 "../lib/Drawing/BufferSurface.vala"
	_data2_->_buffer_a_size_ = _data2_->buffer_a_length1;
#line 524 "../lib/Drawing/BufferSurface.vala"
	_tmp16_ = g_new0 (gdouble, size);
#line 524 "../lib/Drawing/BufferSurface.vala"
	_data2_->buffer_b = _tmp16_;
#line 524 "../lib/Drawing/BufferSurface.vala"
	_data2_->buffer_b_length1 = size;
#line 524 "../lib/Drawing/BufferSurface.vala"
	_data2_->_buffer_b_size_ = _data2_->buffer_b_length1;
#line 3182 "BufferSurface.c"
	{
		gint i = 0;
#line 527 "../lib/Drawing/BufferSurface.vala"
		i = 0;
#line 3187 "BufferSurface.c"
		{
			gboolean _tmp17_ = FALSE;
#line 527 "../lib/Drawing/BufferSurface.vala"
			_tmp17_ = TRUE;
#line 527 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 3194 "BufferSurface.c"
				gdouble* _tmp19_;
				gint _tmp19__length1;
				guint8* _tmp20_;
				guint8 _tmp21_;
#line 527 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp17_) {
#line 3201 "BufferSurface.c"
					gint _tmp18_;
#line 527 "../lib/Drawing/BufferSurface.vala"
					_tmp18_ = i;
#line 527 "../lib/Drawing/BufferSurface.vala"
					i = _tmp18_ + 1;
#line 3207 "BufferSurface.c"
				}
#line 527 "../lib/Drawing/BufferSurface.vala"
				_tmp17_ = FALSE;
#line 527 "../lib/Drawing/BufferSurface.vala"
				if (!(i < size)) {
#line 527 "../lib/Drawing/BufferSurface.vala"
					break;
#line 3215 "BufferSurface.c"
				}
#line 528 "../lib/Drawing/BufferSurface.vala"
				_tmp19_ = _data2_->buffer_a;
#line 528 "../lib/Drawing/BufferSurface.vala"
				_tmp19__length1 = _data2_->buffer_a_length1;
#line 528 "../lib/Drawing/BufferSurface.vala"
				_tmp20_ = src;
#line 528 "../lib/Drawing/BufferSurface.vala"
				_tmp21_ = _tmp20_[i];
#line 528 "../lib/Drawing/BufferSurface.vala"
				_tmp19_[i] = (gdouble) _tmp21_;
#line 3227 "BufferSurface.c"
			}
		}
	}
#line 532 "../lib/Drawing/BufferSurface.vala"
	_tmp22_ = g_new0 (gint, MAX (_data2_->width, _data2_->height) * _data2_->gauss_width);
#line 532 "../lib/Drawing/BufferSurface.vala"
	_data2_->shiftar = _tmp22_;
#line 532 "../lib/Drawing/BufferSurface.vala"
	_data2_->shiftar_length1 = MAX (_data2_->width, _data2_->height);
#line 532 "../lib/Drawing/BufferSurface.vala"
	_data2_->shiftar_length2 = _data2_->gauss_width;
#line 3239 "BufferSurface.c"
	{
		gint x = 0;
#line 533 "../lib/Drawing/BufferSurface.vala"
		x = 0;
#line 3244 "BufferSurface.c"
		{
			gboolean _tmp23_ = FALSE;
#line 533 "../lib/Drawing/BufferSurface.vala"
			_tmp23_ = TRUE;
#line 533 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 533 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp23_) {
#line 3253 "BufferSurface.c"
					gint _tmp24_;
#line 533 "../lib/Drawing/BufferSurface.vala"
					_tmp24_ = x;
#line 533 "../lib/Drawing/BufferSurface.vala"
					x = _tmp24_ + 1;
#line 3259 "BufferSurface.c"
				}
#line 533 "../lib/Drawing/BufferSurface.vala"
				_tmp23_ = FALSE;
#line 533 "../lib/Drawing/BufferSurface.vala"
				if (!(x < _data2_->width)) {
#line 533 "../lib/Drawing/BufferSurface.vala"
					break;
#line 3267 "BufferSurface.c"
				}
				{
					gint k = 0;
#line 534 "../lib/Drawing/BufferSurface.vala"
					k = 0;
#line 3273 "BufferSurface.c"
					{
						gboolean _tmp25_ = FALSE;
#line 534 "../lib/Drawing/BufferSurface.vala"
						_tmp25_ = TRUE;
#line 534 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 3280 "BufferSurface.c"
							gint shift = 0;
							gboolean _tmp27_ = FALSE;
#line 534 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp25_) {
#line 3285 "BufferSurface.c"
								gint _tmp26_;
#line 534 "../lib/Drawing/BufferSurface.vala"
								_tmp26_ = k;
#line 534 "../lib/Drawing/BufferSurface.vala"
								k = _tmp26_ + 1;
#line 3291 "BufferSurface.c"
							}
#line 534 "../lib/Drawing/BufferSurface.vala"
							_tmp25_ = FALSE;
#line 534 "../lib/Drawing/BufferSurface.vala"
							if (!(k < _data2_->gauss_width)) {
#line 534 "../lib/Drawing/BufferSurface.vala"
								break;
#line 3299 "BufferSurface.c"
							}
#line 535 "../lib/Drawing/BufferSurface.vala"
							shift = k - radius;
#line 536 "../lib/Drawing/BufferSurface.vala"
							if ((x + shift) <= 0) {
#line 536 "../lib/Drawing/BufferSurface.vala"
								_tmp27_ = TRUE;
#line 3307 "BufferSurface.c"
							} else {
#line 536 "../lib/Drawing/BufferSurface.vala"
								_tmp27_ = (x + shift) >= _data2_->width;
#line 3311 "BufferSurface.c"
							}
#line 536 "../lib/Drawing/BufferSurface.vala"
							if (_tmp27_) {
#line 3315 "BufferSurface.c"
								gint* _tmp28_;
								gint _tmp28__length1;
								gint _tmp28__length2;
#line 537 "../lib/Drawing/BufferSurface.vala"
								_tmp28_ = _data2_->shiftar;
#line 537 "../lib/Drawing/BufferSurface.vala"
								_tmp28__length1 = _data2_->shiftar_length1;
#line 537 "../lib/Drawing/BufferSurface.vala"
								_tmp28__length2 = _data2_->shiftar_length2;
#line 537 "../lib/Drawing/BufferSurface.vala"
								_tmp28_[(x * _tmp28__length2) + k] = 0;
#line 3327 "BufferSurface.c"
							} else {
								gint* _tmp29_;
								gint _tmp29__length1;
								gint _tmp29__length2;
#line 539 "../lib/Drawing/BufferSurface.vala"
								_tmp29_ = _data2_->shiftar;
#line 539 "../lib/Drawing/BufferSurface.vala"
								_tmp29__length1 = _data2_->shiftar_length1;
#line 539 "../lib/Drawing/BufferSurface.vala"
								_tmp29__length2 = _data2_->shiftar_length2;
#line 539 "../lib/Drawing/BufferSurface.vala"
								_tmp29_[(x * _tmp29__length2) + k] = shift * 4;
#line 3340 "BufferSurface.c"
							}
						}
					}
				}
			}
		}
	}
	{
		GThread* th = NULL;
		GThread* _tmp30_;
		gdouble* _tmp31_;
		gint _tmp31__length1;
		gdouble* _tmp32_;
		gint _tmp32__length1;
		gdouble* _tmp33_;
		gint _tmp33__length1;
		gint* _tmp34_;
		gint _tmp34__length1;
		gint _tmp34__length2;
		GThread* _tmp35_;
		gdouble* _tmp36_;
		gint _tmp36__length1;
		gint* _tmp37_;
		GThread* th2 = NULL;
		GThread* _tmp45_;
		gdouble* _tmp46_;
		gint _tmp46__length1;
		gdouble* _tmp47_;
		gint _tmp47__length1;
		gdouble* _tmp48_;
		gint _tmp48__length1;
		gint* _tmp49_;
		gint _tmp49__length1;
		gint _tmp49__length2;
		GThread* _tmp50_;
#line 544 "../lib/Drawing/BufferSurface.vala"
		_tmp30_ = g_thread_try_new (NULL, ____lambda6__gthread_func, block2_data_ref (_data2_), &_inner_error0_);
#line 544 "../lib/Drawing/BufferSurface.vala"
		th = _tmp30_;
#line 544 "../lib/Drawing/BufferSurface.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 3382 "BufferSurface.c"
			goto __catch0_g_error;
		}
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp31_ = _data2_->buffer_a;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp31__length1 = _data2_->buffer_a_length1;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp32_ = _data2_->buffer_b;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp32__length1 = _data2_->buffer_b_length1;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp33_ = _data2_->kernel;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp33__length1 = _data2_->kernel_length1;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp34_ = _data2_->shiftar;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp34__length1 = _data2_->shiftar_length1;
#line 559 "../lib/Drawing/BufferSurface.vala"
		_tmp34__length2 = _data2_->shiftar_length2;
#line 559 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_gaussian_blur_horizontal (self, _tmp31_, _tmp32_, _tmp33_, _data2_->gauss_width, _data2_->width, _data2_->height, _data2_->height / 2, _data2_->height, _tmp34_, (gint) _tmp34__length1, (gint) _tmp34__length2);
#line 570 "../lib/Drawing/BufferSurface.vala"
		_tmp35_ = th;
#line 570 "../lib/Drawing/BufferSurface.vala"
		th = NULL;
#line 570 "../lib/Drawing/BufferSurface.vala"
		g_thread_join (_tmp35_);
#line 573 "../lib/Drawing/BufferSurface.vala"
		_tmp36_ = _data2_->buffer_a;
#line 573 "../lib/Drawing/BufferSurface.vala"
		_tmp36__length1 = _data2_->buffer_a_length1;
#line 573 "../lib/Drawing/BufferSurface.vala"
		memset (_tmp36_, 0, (gsize) (sizeof (gdouble) * size));
#line 576 "../lib/Drawing/BufferSurface.vala"
		_tmp37_ = g_new0 (gint, MAX (_data2_->width, _data2_->height) * _data2_->gauss_width);
#line 576 "../lib/Drawing/BufferSurface.vala"
		_data2_->shiftar = (g_free (_data2_->shiftar), NULL);
#line 576 "../lib/Drawing/BufferSurface.vala"
		_data2_->shiftar = _tmp37_;
#line 576 "../lib/Drawing/BufferSurface.vala"
		_data2_->shiftar_length1 = MAX (_data2_->width, _data2_->height);
#line 576 "../lib/Drawing/BufferSurface.vala"
		_data2_->shiftar_length2 = _data2_->gauss_width;
#line 3427 "BufferSurface.c"
		{
			gint y = 0;
#line 577 "../lib/Drawing/BufferSurface.vala"
			y = 0;
#line 3432 "BufferSurface.c"
			{
				gboolean _tmp38_ = FALSE;
#line 577 "../lib/Drawing/BufferSurface.vala"
				_tmp38_ = TRUE;
#line 577 "../lib/Drawing/BufferSurface.vala"
				while (TRUE) {
#line 577 "../lib/Drawing/BufferSurface.vala"
					if (!_tmp38_) {
#line 3441 "BufferSurface.c"
						gint _tmp39_;
#line 577 "../lib/Drawing/BufferSurface.vala"
						_tmp39_ = y;
#line 577 "../lib/Drawing/BufferSurface.vala"
						y = _tmp39_ + 1;
#line 3447 "BufferSurface.c"
					}
#line 577 "../lib/Drawing/BufferSurface.vala"
					_tmp38_ = FALSE;
#line 577 "../lib/Drawing/BufferSurface.vala"
					if (!(y < _data2_->height)) {
#line 577 "../lib/Drawing/BufferSurface.vala"
						break;
#line 3455 "BufferSurface.c"
					}
					{
						gint k = 0;
#line 578 "../lib/Drawing/BufferSurface.vala"
						k = 0;
#line 3461 "BufferSurface.c"
						{
							gboolean _tmp40_ = FALSE;
#line 578 "../lib/Drawing/BufferSurface.vala"
							_tmp40_ = TRUE;
#line 578 "../lib/Drawing/BufferSurface.vala"
							while (TRUE) {
#line 3468 "BufferSurface.c"
								gint shift = 0;
								gboolean _tmp42_ = FALSE;
#line 578 "../lib/Drawing/BufferSurface.vala"
								if (!_tmp40_) {
#line 3473 "BufferSurface.c"
									gint _tmp41_;
#line 578 "../lib/Drawing/BufferSurface.vala"
									_tmp41_ = k;
#line 578 "../lib/Drawing/BufferSurface.vala"
									k = _tmp41_ + 1;
#line 3479 "BufferSurface.c"
								}
#line 578 "../lib/Drawing/BufferSurface.vala"
								_tmp40_ = FALSE;
#line 578 "../lib/Drawing/BufferSurface.vala"
								if (!(k < _data2_->gauss_width)) {
#line 578 "../lib/Drawing/BufferSurface.vala"
									break;
#line 3487 "BufferSurface.c"
								}
#line 579 "../lib/Drawing/BufferSurface.vala"
								shift = k - radius;
#line 580 "../lib/Drawing/BufferSurface.vala"
								if ((y + shift) <= 0) {
#line 580 "../lib/Drawing/BufferSurface.vala"
									_tmp42_ = TRUE;
#line 3495 "BufferSurface.c"
								} else {
#line 580 "../lib/Drawing/BufferSurface.vala"
									_tmp42_ = (y + shift) >= _data2_->height;
#line 3499 "BufferSurface.c"
								}
#line 580 "../lib/Drawing/BufferSurface.vala"
								if (_tmp42_) {
#line 3503 "BufferSurface.c"
									gint* _tmp43_;
									gint _tmp43__length1;
									gint _tmp43__length2;
#line 581 "../lib/Drawing/BufferSurface.vala"
									_tmp43_ = _data2_->shiftar;
#line 581 "../lib/Drawing/BufferSurface.vala"
									_tmp43__length1 = _data2_->shiftar_length1;
#line 581 "../lib/Drawing/BufferSurface.vala"
									_tmp43__length2 = _data2_->shiftar_length2;
#line 581 "../lib/Drawing/BufferSurface.vala"
									_tmp43_[(y * _tmp43__length2) + k] = 0;
#line 3515 "BufferSurface.c"
								} else {
									gint* _tmp44_;
									gint _tmp44__length1;
									gint _tmp44__length2;
#line 583 "../lib/Drawing/BufferSurface.vala"
									_tmp44_ = _data2_->shiftar;
#line 583 "../lib/Drawing/BufferSurface.vala"
									_tmp44__length1 = _data2_->shiftar_length1;
#line 583 "../lib/Drawing/BufferSurface.vala"
									_tmp44__length2 = _data2_->shiftar_length2;
#line 583 "../lib/Drawing/BufferSurface.vala"
									_tmp44_[(y * _tmp44__length2) + k] = (shift * _data2_->width) * 4;
#line 3528 "BufferSurface.c"
								}
							}
						}
					}
				}
			}
		}
#line 587 "../lib/Drawing/BufferSurface.vala"
		_tmp45_ = g_thread_try_new (NULL, ____lambda7__gthread_func, block2_data_ref (_data2_), &_inner_error0_);
#line 587 "../lib/Drawing/BufferSurface.vala"
		th2 = _tmp45_;
#line 587 "../lib/Drawing/BufferSurface.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 587 "../lib/Drawing/BufferSurface.vala"
			_g_thread_unref0 (th);
#line 3544 "BufferSurface.c"
			goto __catch0_g_error;
		}
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp46_ = _data2_->buffer_b;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp46__length1 = _data2_->buffer_b_length1;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp47_ = _data2_->buffer_a;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp47__length1 = _data2_->buffer_a_length1;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp48_ = _data2_->kernel;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp48__length1 = _data2_->kernel_length1;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp49_ = _data2_->shiftar;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp49__length1 = _data2_->shiftar_length1;
#line 602 "../lib/Drawing/BufferSurface.vala"
		_tmp49__length2 = _data2_->shiftar_length2;
#line 602 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_gaussian_blur_vertical (self, _tmp46_, _tmp47_, _tmp48_, _data2_->gauss_width, _data2_->width, _data2_->height, _data2_->width / 2, _data2_->width, _tmp49_, (gint) _tmp49__length1, (gint) _tmp49__length2);
#line 613 "../lib/Drawing/BufferSurface.vala"
		_tmp50_ = th2;
#line 613 "../lib/Drawing/BufferSurface.vala"
		th2 = NULL;
#line 613 "../lib/Drawing/BufferSurface.vala"
		g_thread_join (_tmp50_);
#line 542 "../lib/Drawing/BufferSurface.vala"
		_g_thread_unref0 (th2);
#line 542 "../lib/Drawing/BufferSurface.vala"
		_g_thread_unref0 (th);
#line 3577 "BufferSurface.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* err = NULL;
		GError* _tmp51_;
		const gchar* _tmp52_;
#line 542 "../lib/Drawing/BufferSurface.vala"
		err = _inner_error0_;
#line 542 "../lib/Drawing/BufferSurface.vala"
		_inner_error0_ = NULL;
#line 615 "../lib/Drawing/BufferSurface.vala"
		_tmp51_ = err;
#line 615 "../lib/Drawing/BufferSurface.vala"
		_tmp52_ = _tmp51_->message;
#line 615 "../lib/Drawing/BufferSurface.vala"
		g_message ("BufferSurface.vala:615: %s", _tmp52_);
#line 542 "../lib/Drawing/BufferSurface.vala"
		_g_error_free0 (err);
#line 3597 "BufferSurface.c"
	}
	__finally0:
#line 542 "../lib/Drawing/BufferSurface.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 542 "../lib/Drawing/BufferSurface.vala"
		_cairo_destroy0 (cr);
#line 542 "../lib/Drawing/BufferSurface.vala"
		_cairo_surface_destroy0 (original);
#line 542 "../lib/Drawing/BufferSurface.vala"
		block2_data_unref (_data2_);
#line 542 "../lib/Drawing/BufferSurface.vala"
		_data2_ = NULL;
#line 542 "../lib/Drawing/BufferSurface.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 542 "../lib/Drawing/BufferSurface.vala"
		g_clear_error (&_inner_error0_);
#line 542 "../lib/Drawing/BufferSurface.vala"
		return;
#line 3616 "BufferSurface.c"
	}
	{
		gint i = 0;
#line 619 "../lib/Drawing/BufferSurface.vala"
		i = 0;
#line 3622 "BufferSurface.c"
		{
			gboolean _tmp53_ = FALSE;
#line 619 "../lib/Drawing/BufferSurface.vala"
			_tmp53_ = TRUE;
#line 619 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 3629 "BufferSurface.c"
				guint8* _tmp55_;
				gdouble* _tmp56_;
				gint _tmp56__length1;
				gdouble _tmp57_;
#line 619 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp53_) {
#line 3636 "BufferSurface.c"
					gint _tmp54_;
#line 619 "../lib/Drawing/BufferSurface.vala"
					_tmp54_ = i;
#line 619 "../lib/Drawing/BufferSurface.vala"
					i = _tmp54_ + 1;
#line 3642 "BufferSurface.c"
				}
#line 619 "../lib/Drawing/BufferSurface.vala"
				_tmp53_ = FALSE;
#line 619 "../lib/Drawing/BufferSurface.vala"
				if (!(i < size)) {
#line 619 "../lib/Drawing/BufferSurface.vala"
					break;
#line 3650 "BufferSurface.c"
				}
#line 620 "../lib/Drawing/BufferSurface.vala"
				_tmp55_ = src;
#line 620 "../lib/Drawing/BufferSurface.vala"
				_tmp56_ = _data2_->buffer_a;
#line 620 "../lib/Drawing/BufferSurface.vala"
				_tmp56__length1 = _data2_->buffer_a_length1;
#line 620 "../lib/Drawing/BufferSurface.vala"
				_tmp57_ = _tmp56_[i];
#line 620 "../lib/Drawing/BufferSurface.vala"
				_tmp55_[i] = (guint8) _tmp57_;
#line 3662 "BufferSurface.c"
			}
		}
	}
#line 623 "../lib/Drawing/BufferSurface.vala"
	_tmp58_ = original;
#line 623 "../lib/Drawing/BufferSurface.vala"
	cairo_surface_mark_dirty (_tmp58_);
#line 625 "../lib/Drawing/BufferSurface.vala"
	_tmp59_ = granite_drawing_buffer_surface_get_context (self);
#line 625 "../lib/Drawing/BufferSurface.vala"
	_tmp60_ = _tmp59_;
#line 625 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp60_, CAIRO_OPERATOR_SOURCE);
#line 626 "../lib/Drawing/BufferSurface.vala"
	_tmp61_ = granite_drawing_buffer_surface_get_context (self);
#line 626 "../lib/Drawing/BufferSurface.vala"
	_tmp62_ = _tmp61_;
#line 626 "../lib/Drawing/BufferSurface.vala"
	_tmp63_ = original;
#line 626 "../lib/Drawing/BufferSurface.vala"
	cairo_set_source_surface (_tmp62_, _tmp63_, (gdouble) 0, (gdouble) 0);
#line 627 "../lib/Drawing/BufferSurface.vala"
	_tmp64_ = granite_drawing_buffer_surface_get_context (self);
#line 627 "../lib/Drawing/BufferSurface.vala"
	_tmp65_ = _tmp64_;
#line 627 "../lib/Drawing/BufferSurface.vala"
	cairo_paint (_tmp65_);
#line 628 "../lib/Drawing/BufferSurface.vala"
	_tmp66_ = granite_drawing_buffer_surface_get_context (self);
#line 628 "../lib/Drawing/BufferSurface.vala"
	_tmp67_ = _tmp66_;
#line 628 "../lib/Drawing/BufferSurface.vala"
	cairo_set_operator (_tmp67_, CAIRO_OPERATOR_OVER);
#line 505 "../lib/Drawing/BufferSurface.vala"
	_cairo_destroy0 (cr);
#line 505 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (original);
#line 505 "../lib/Drawing/BufferSurface.vala"
	block2_data_unref (_data2_);
#line 505 "../lib/Drawing/BufferSurface.vala"
	_data2_ = NULL;
#line 3704 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_gaussian_blur_horizontal (GraniteDrawingBufferSurface* self,
                                                         gdouble* src,
                                                         gdouble* dest,
                                                         gdouble* kernel,
                                                         gint gauss_width,
                                                         gint width,
                                                         gint height,
                                                         gint start_row,
                                                         gint end_row,
                                                         gint* shift,
                                                         gint shift_length1,
                                                         gint shift_length2)
{
	guint32 cur_pixel = 0U;
#line 631 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 642 "../lib/Drawing/BufferSurface.vala"
	cur_pixel = (guint32) ((start_row * width) * 4);
#line 3726 "BufferSurface.c"
	{
		gint y = 0;
#line 644 "../lib/Drawing/BufferSurface.vala"
		y = start_row;
#line 3731 "BufferSurface.c"
		{
			gboolean _tmp0_ = FALSE;
#line 644 "../lib/Drawing/BufferSurface.vala"
			_tmp0_ = TRUE;
#line 644 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 644 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp0_) {
#line 3740 "BufferSurface.c"
					gint _tmp1_;
#line 644 "../lib/Drawing/BufferSurface.vala"
					_tmp1_ = y;
#line 644 "../lib/Drawing/BufferSurface.vala"
					y = _tmp1_ + 1;
#line 3746 "BufferSurface.c"
				}
#line 644 "../lib/Drawing/BufferSurface.vala"
				_tmp0_ = FALSE;
#line 644 "../lib/Drawing/BufferSurface.vala"
				if (!(y < end_row)) {
#line 644 "../lib/Drawing/BufferSurface.vala"
					break;
#line 3754 "BufferSurface.c"
				}
				{
					gint x = 0;
#line 645 "../lib/Drawing/BufferSurface.vala"
					x = 0;
#line 3760 "BufferSurface.c"
					{
						gboolean _tmp2_ = FALSE;
#line 645 "../lib/Drawing/BufferSurface.vala"
						_tmp2_ = TRUE;
#line 645 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 645 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp2_) {
#line 3769 "BufferSurface.c"
								gint _tmp3_;
#line 645 "../lib/Drawing/BufferSurface.vala"
								_tmp3_ = x;
#line 645 "../lib/Drawing/BufferSurface.vala"
								x = _tmp3_ + 1;
#line 3775 "BufferSurface.c"
							}
#line 645 "../lib/Drawing/BufferSurface.vala"
							_tmp2_ = FALSE;
#line 645 "../lib/Drawing/BufferSurface.vala"
							if (!(x < width)) {
#line 645 "../lib/Drawing/BufferSurface.vala"
								break;
#line 3783 "BufferSurface.c"
							}
							{
								gint k = 0;
#line 646 "../lib/Drawing/BufferSurface.vala"
								k = 0;
#line 3789 "BufferSurface.c"
								{
									gboolean _tmp4_ = FALSE;
#line 646 "../lib/Drawing/BufferSurface.vala"
									_tmp4_ = TRUE;
#line 646 "../lib/Drawing/BufferSurface.vala"
									while (TRUE) {
#line 3796 "BufferSurface.c"
										guint32 source = 0U;
										gint _tmp6_;
										gdouble _tmp7_;
										gdouble _tmp8_;
										gdouble _tmp9_;
										gdouble _tmp10_;
										gdouble _tmp11_;
										gdouble _tmp12_;
										gdouble _tmp13_;
										gdouble _tmp14_;
#line 646 "../lib/Drawing/BufferSurface.vala"
										if (!_tmp4_) {
#line 3809 "BufferSurface.c"
											gint _tmp5_;
#line 646 "../lib/Drawing/BufferSurface.vala"
											_tmp5_ = k;
#line 646 "../lib/Drawing/BufferSurface.vala"
											k = _tmp5_ + 1;
#line 3815 "BufferSurface.c"
										}
#line 646 "../lib/Drawing/BufferSurface.vala"
										_tmp4_ = FALSE;
#line 646 "../lib/Drawing/BufferSurface.vala"
										if (!(k < gauss_width)) {
#line 646 "../lib/Drawing/BufferSurface.vala"
											break;
#line 3823 "BufferSurface.c"
										}
#line 647 "../lib/Drawing/BufferSurface.vala"
										_tmp6_ = shift[(x * shift_length2) + k];
#line 647 "../lib/Drawing/BufferSurface.vala"
										source = cur_pixel + _tmp6_;
#line 649 "../lib/Drawing/BufferSurface.vala"
										_tmp7_ = src[source + 0];
#line 649 "../lib/Drawing/BufferSurface.vala"
										_tmp8_ = kernel[k];
#line 649 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 0] += _tmp7_ * _tmp8_;
#line 650 "../lib/Drawing/BufferSurface.vala"
										_tmp9_ = src[source + 1];
#line 650 "../lib/Drawing/BufferSurface.vala"
										_tmp10_ = kernel[k];
#line 650 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 1] += _tmp9_ * _tmp10_;
#line 651 "../lib/Drawing/BufferSurface.vala"
										_tmp11_ = src[source + 2];
#line 651 "../lib/Drawing/BufferSurface.vala"
										_tmp12_ = kernel[k];
#line 651 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 2] += _tmp11_ * _tmp12_;
#line 652 "../lib/Drawing/BufferSurface.vala"
										_tmp13_ = src[source + 3];
#line 652 "../lib/Drawing/BufferSurface.vala"
										_tmp14_ = kernel[k];
#line 652 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 3] += _tmp13_ * _tmp14_;
#line 3853 "BufferSurface.c"
									}
								}
							}
#line 655 "../lib/Drawing/BufferSurface.vala"
							cur_pixel += (guint32) 4;
#line 3859 "BufferSurface.c"
						}
					}
				}
			}
		}
	}
}

static void
granite_drawing_buffer_surface_gaussian_blur_vertical (GraniteDrawingBufferSurface* self,
                                                       gdouble* src,
                                                       gdouble* dest,
                                                       gdouble* kernel,
                                                       gint gauss_width,
                                                       gint width,
                                                       gint height,
                                                       gint start_col,
                                                       gint end_col,
                                                       gint* shift,
                                                       gint shift_length1,
                                                       gint shift_length2)
{
	guint32 cur_pixel = 0U;
#line 660 "../lib/Drawing/BufferSurface.vala"
	g_return_if_fail (self != NULL);
#line 671 "../lib/Drawing/BufferSurface.vala"
	cur_pixel = (guint32) (start_col * 4);
#line 3887 "BufferSurface.c"
	{
		gint y = 0;
#line 673 "../lib/Drawing/BufferSurface.vala"
		y = 0;
#line 3892 "BufferSurface.c"
		{
			gboolean _tmp0_ = FALSE;
#line 673 "../lib/Drawing/BufferSurface.vala"
			_tmp0_ = TRUE;
#line 673 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 673 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp0_) {
#line 3901 "BufferSurface.c"
					gint _tmp1_;
#line 673 "../lib/Drawing/BufferSurface.vala"
					_tmp1_ = y;
#line 673 "../lib/Drawing/BufferSurface.vala"
					y = _tmp1_ + 1;
#line 3907 "BufferSurface.c"
				}
#line 673 "../lib/Drawing/BufferSurface.vala"
				_tmp0_ = FALSE;
#line 673 "../lib/Drawing/BufferSurface.vala"
				if (!(y < height)) {
#line 673 "../lib/Drawing/BufferSurface.vala"
					break;
#line 3915 "BufferSurface.c"
				}
				{
					gint x = 0;
#line 674 "../lib/Drawing/BufferSurface.vala"
					x = start_col;
#line 3921 "BufferSurface.c"
					{
						gboolean _tmp2_ = FALSE;
#line 674 "../lib/Drawing/BufferSurface.vala"
						_tmp2_ = TRUE;
#line 674 "../lib/Drawing/BufferSurface.vala"
						while (TRUE) {
#line 674 "../lib/Drawing/BufferSurface.vala"
							if (!_tmp2_) {
#line 3930 "BufferSurface.c"
								gint _tmp3_;
#line 674 "../lib/Drawing/BufferSurface.vala"
								_tmp3_ = x;
#line 674 "../lib/Drawing/BufferSurface.vala"
								x = _tmp3_ + 1;
#line 3936 "BufferSurface.c"
							}
#line 674 "../lib/Drawing/BufferSurface.vala"
							_tmp2_ = FALSE;
#line 674 "../lib/Drawing/BufferSurface.vala"
							if (!(x < end_col)) {
#line 674 "../lib/Drawing/BufferSurface.vala"
								break;
#line 3944 "BufferSurface.c"
							}
							{
								gint k = 0;
#line 675 "../lib/Drawing/BufferSurface.vala"
								k = 0;
#line 3950 "BufferSurface.c"
								{
									gboolean _tmp4_ = FALSE;
#line 675 "../lib/Drawing/BufferSurface.vala"
									_tmp4_ = TRUE;
#line 675 "../lib/Drawing/BufferSurface.vala"
									while (TRUE) {
#line 3957 "BufferSurface.c"
										guint32 source = 0U;
										gint _tmp6_;
										gdouble _tmp7_;
										gdouble _tmp8_;
										gdouble _tmp9_;
										gdouble _tmp10_;
										gdouble _tmp11_;
										gdouble _tmp12_;
										gdouble _tmp13_;
										gdouble _tmp14_;
#line 675 "../lib/Drawing/BufferSurface.vala"
										if (!_tmp4_) {
#line 3970 "BufferSurface.c"
											gint _tmp5_;
#line 675 "../lib/Drawing/BufferSurface.vala"
											_tmp5_ = k;
#line 675 "../lib/Drawing/BufferSurface.vala"
											k = _tmp5_ + 1;
#line 3976 "BufferSurface.c"
										}
#line 675 "../lib/Drawing/BufferSurface.vala"
										_tmp4_ = FALSE;
#line 675 "../lib/Drawing/BufferSurface.vala"
										if (!(k < gauss_width)) {
#line 675 "../lib/Drawing/BufferSurface.vala"
											break;
#line 3984 "BufferSurface.c"
										}
#line 676 "../lib/Drawing/BufferSurface.vala"
										_tmp6_ = shift[(y * shift_length2) + k];
#line 676 "../lib/Drawing/BufferSurface.vala"
										source = cur_pixel + _tmp6_;
#line 678 "../lib/Drawing/BufferSurface.vala"
										_tmp7_ = src[source + 0];
#line 678 "../lib/Drawing/BufferSurface.vala"
										_tmp8_ = kernel[k];
#line 678 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 0] += _tmp7_ * _tmp8_;
#line 679 "../lib/Drawing/BufferSurface.vala"
										_tmp9_ = src[source + 1];
#line 679 "../lib/Drawing/BufferSurface.vala"
										_tmp10_ = kernel[k];
#line 679 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 1] += _tmp9_ * _tmp10_;
#line 680 "../lib/Drawing/BufferSurface.vala"
										_tmp11_ = src[source + 2];
#line 680 "../lib/Drawing/BufferSurface.vala"
										_tmp12_ = kernel[k];
#line 680 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 2] += _tmp11_ * _tmp12_;
#line 681 "../lib/Drawing/BufferSurface.vala"
										_tmp13_ = src[source + 3];
#line 681 "../lib/Drawing/BufferSurface.vala"
										_tmp14_ = kernel[k];
#line 681 "../lib/Drawing/BufferSurface.vala"
										dest[cur_pixel + 3] += _tmp13_ * _tmp14_;
#line 4014 "BufferSurface.c"
									}
								}
							}
#line 684 "../lib/Drawing/BufferSurface.vala"
							cur_pixel += (guint32) 4;
#line 4020 "BufferSurface.c"
						}
					}
				}
#line 686 "../lib/Drawing/BufferSurface.vala"
				cur_pixel += (guint32) (((width - end_col) + start_col) * 4);
#line 4026 "BufferSurface.c"
			}
		}
	}
}

static gdouble*
granite_drawing_buffer_surface_build_gaussian_kernel (gint gauss_width,
                                                      gint* result_length1)
{
	gdouble* kernel = NULL;
	gdouble* _tmp0_;
	gint kernel_length1;
	gint _kernel_size_;
	gdouble sd = 0.0;
	gint range = 0;
	gdouble mean = 0.0;
	gdouble gauss_sum = 0.0;
	gdouble* _tmp5_;
	gint _tmp5__length1;
	gdouble* _tmp12_;
	gint _tmp12__length1;
	gdouble* result = NULL;
#line 690 "../lib/Drawing/BufferSurface.vala"
	_vala_return_val_if_fail ((gauss_width % 2) == 1, "gauss_width % 2 == 1", NULL);
#line 691 "../lib/Drawing/BufferSurface.vala"
	_tmp0_ = g_new0 (gdouble, gauss_width);
#line 691 "../lib/Drawing/BufferSurface.vala"
	kernel = _tmp0_;
#line 691 "../lib/Drawing/BufferSurface.vala"
	kernel_length1 = gauss_width;
#line 691 "../lib/Drawing/BufferSurface.vala"
	_kernel_size_ = kernel_length1;
#line 694 "../lib/Drawing/BufferSurface.vala"
	sd = 255.0;
#line 697 "../lib/Drawing/BufferSurface.vala"
	range = gauss_width;
#line 700 "../lib/Drawing/BufferSurface.vala"
	mean = range / sd;
#line 4065 "BufferSurface.c"
	{
		gint i = 0;
#line 702 "../lib/Drawing/BufferSurface.vala"
		i = 0;
#line 4070 "BufferSurface.c"
		{
			gboolean _tmp1_ = FALSE;
#line 702 "../lib/Drawing/BufferSurface.vala"
			_tmp1_ = TRUE;
#line 702 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 4077 "BufferSurface.c"
				gdouble* _tmp3_;
				gint _tmp3__length1;
				gdouble* _tmp4_;
				gint _tmp4__length1;
#line 702 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp1_) {
#line 4084 "BufferSurface.c"
					gint _tmp2_;
#line 702 "../lib/Drawing/BufferSurface.vala"
					_tmp2_ = i;
#line 702 "../lib/Drawing/BufferSurface.vala"
					i = _tmp2_ + 1;
#line 4090 "BufferSurface.c"
				}
#line 702 "../lib/Drawing/BufferSurface.vala"
				_tmp1_ = FALSE;
#line 702 "../lib/Drawing/BufferSurface.vala"
				if (!(i < ((gauss_width / 2) + 1))) {
#line 702 "../lib/Drawing/BufferSurface.vala"
					break;
#line 4098 "BufferSurface.c"
				}
#line 703 "../lib/Drawing/BufferSurface.vala"
				_tmp3_ = kernel;
#line 703 "../lib/Drawing/BufferSurface.vala"
				_tmp3__length1 = kernel_length1;
#line 703 "../lib/Drawing/BufferSurface.vala"
				_tmp4_ = kernel;
#line 703 "../lib/Drawing/BufferSurface.vala"
				_tmp4__length1 = kernel_length1;
#line 703 "../lib/Drawing/BufferSurface.vala"
				_tmp4_[i] = pow (sin ((((i + 1) * (G_PI / 2)) - mean) / range), (gdouble) 2) * sd;
#line 703 "../lib/Drawing/BufferSurface.vala"
				_tmp3_[(gauss_width - i) - 1] = _tmp4_[i];
#line 4112 "BufferSurface.c"
			}
		}
	}
#line 709 "../lib/Drawing/BufferSurface.vala"
	gauss_sum = 0.0;
#line 711 "../lib/Drawing/BufferSurface.vala"
	_tmp5_ = kernel;
#line 711 "../lib/Drawing/BufferSurface.vala"
	_tmp5__length1 = kernel_length1;
#line 4122 "BufferSurface.c"
	{
		gdouble* d_collection = NULL;
		gint d_collection_length1 = 0;
		gint _d_collection_size_ = 0;
		gint d_it = 0;
#line 711 "../lib/Drawing/BufferSurface.vala"
		d_collection = _tmp5_;
#line 711 "../lib/Drawing/BufferSurface.vala"
		d_collection_length1 = _tmp5__length1;
#line 711 "../lib/Drawing/BufferSurface.vala"
		for (d_it = 0; d_it < d_collection_length1; d_it = d_it + 1) {
#line 4134 "BufferSurface.c"
			gdouble d = 0.0;
#line 711 "../lib/Drawing/BufferSurface.vala"
			d = d_collection[d_it];
#line 4138 "BufferSurface.c"
			{
#line 712 "../lib/Drawing/BufferSurface.vala"
				gauss_sum += d;
#line 4142 "BufferSurface.c"
			}
		}
	}
	{
		gint i = 0;
#line 715 "../lib/Drawing/BufferSurface.vala"
		i = 0;
#line 4150 "BufferSurface.c"
		{
			gboolean _tmp6_ = FALSE;
#line 715 "../lib/Drawing/BufferSurface.vala"
			_tmp6_ = TRUE;
#line 715 "../lib/Drawing/BufferSurface.vala"
			while (TRUE) {
#line 4157 "BufferSurface.c"
				gdouble* _tmp8_;
				gint _tmp8__length1;
				gdouble* _tmp9_;
				gint _tmp9__length1;
				gdouble* _tmp10_;
				gint _tmp10__length1;
				gdouble _tmp11_;
#line 715 "../lib/Drawing/BufferSurface.vala"
				if (!_tmp6_) {
#line 4167 "BufferSurface.c"
					gint _tmp7_;
#line 715 "../lib/Drawing/BufferSurface.vala"
					_tmp7_ = i;
#line 715 "../lib/Drawing/BufferSurface.vala"
					i = _tmp7_ + 1;
#line 4173 "BufferSurface.c"
				}
#line 715 "../lib/Drawing/BufferSurface.vala"
				_tmp6_ = FALSE;
#line 715 "../lib/Drawing/BufferSurface.vala"
				_tmp8_ = kernel;
#line 715 "../lib/Drawing/BufferSurface.vala"
				_tmp8__length1 = kernel_length1;
#line 715 "../lib/Drawing/BufferSurface.vala"
				if (!(i < _tmp8__length1)) {
#line 715 "../lib/Drawing/BufferSurface.vala"
					break;
#line 4185 "BufferSurface.c"
				}
#line 716 "../lib/Drawing/BufferSurface.vala"
				_tmp9_ = kernel;
#line 716 "../lib/Drawing/BufferSurface.vala"
				_tmp9__length1 = kernel_length1;
#line 716 "../lib/Drawing/BufferSurface.vala"
				_tmp10_ = kernel;
#line 716 "../lib/Drawing/BufferSurface.vala"
				_tmp10__length1 = kernel_length1;
#line 716 "../lib/Drawing/BufferSurface.vala"
				_tmp11_ = _tmp10_[i];
#line 716 "../lib/Drawing/BufferSurface.vala"
				_tmp9_[i] = _tmp11_ / gauss_sum;
#line 4199 "BufferSurface.c"
			}
		}
	}
#line 719 "../lib/Drawing/BufferSurface.vala"
	_tmp12_ = kernel;
#line 719 "../lib/Drawing/BufferSurface.vala"
	_tmp12__length1 = kernel_length1;
#line 719 "../lib/Drawing/BufferSurface.vala"
	if (result_length1) {
#line 719 "../lib/Drawing/BufferSurface.vala"
		*result_length1 = _tmp12__length1;
#line 4211 "BufferSurface.c"
	}
#line 719 "../lib/Drawing/BufferSurface.vala"
	result = _tmp12_;
#line 719 "../lib/Drawing/BufferSurface.vala"
	return result;
#line 4217 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_class_init (GraniteDrawingBufferSurfaceClass * klass,
                                           gpointer klass_data)
{
#line 30 "../lib/Drawing/BufferSurface.vala"
	granite_drawing_buffer_surface_parent_class = g_type_class_peek_parent (klass);
#line 30 "../lib/Drawing/BufferSurface.vala"
	g_type_class_adjust_private_offset (klass, &GraniteDrawingBufferSurface_private_offset);
#line 30 "../lib/Drawing/BufferSurface.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_drawing_buffer_surface_get_property;
#line 30 "../lib/Drawing/BufferSurface.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_drawing_buffer_surface_set_property;
#line 30 "../lib/Drawing/BufferSurface.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_drawing_buffer_surface_finalize;
#line 4234 "BufferSurface.c"
	/**
	         * The {@link Cairo.Surface} which will store the results of all drawing operations
	         * made with {@link Granite.Drawing.BufferSurface.context}.
	         */
#line 30 "../lib/Drawing/BufferSurface.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_DRAWING_BUFFER_SURFACE_SURFACE_PROPERTY, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_SURFACE_PROPERTY] = g_param_spec_boxed ("surface", "surface", "surface", cairo_gobject_surface_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 4241 "BufferSurface.c"
	/**
	         * The width of the {@link Granite.Drawing.BufferSurface}, in pixels.
	         */
#line 30 "../lib/Drawing/BufferSurface.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_DRAWING_BUFFER_SURFACE_WIDTH_PROPERTY, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_WIDTH_PROPERTY] = g_param_spec_int ("width", "width", "width", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 4247 "BufferSurface.c"
	/**
	         * The height of the BufferSurface, in pixels.
	         */
#line 30 "../lib/Drawing/BufferSurface.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_DRAWING_BUFFER_SURFACE_HEIGHT_PROPERTY, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_HEIGHT_PROPERTY] = g_param_spec_int ("height", "height", "height", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 4253 "BufferSurface.c"
	/**
	         * The {@link Cairo.Context} for the internal surface. All drawing operations done on this
	         * {@link Granite.Drawing.BufferSurface} should use this context.
	         */
#line 30 "../lib/Drawing/BufferSurface.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_DRAWING_BUFFER_SURFACE_CONTEXT_PROPERTY, granite_drawing_buffer_surface_properties[GRANITE_DRAWING_BUFFER_SURFACE_CONTEXT_PROPERTY] = g_param_spec_boxed ("context", "context", "context", cairo_gobject_context_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 4260 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_instance_init (GraniteDrawingBufferSurface * self,
                                              gpointer klass)
{
#line 30 "../lib/Drawing/BufferSurface.vala"
	self->priv = granite_drawing_buffer_surface_get_instance_private (self);
#line 4269 "BufferSurface.c"
}

static void
granite_drawing_buffer_surface_finalize (GObject * obj)
{
	GraniteDrawingBufferSurface * self;
#line 30 "../lib/Drawing/BufferSurface.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_DRAWING_TYPE_BUFFER_SURFACE, GraniteDrawingBufferSurface);
#line 31 "../lib/Drawing/BufferSurface.vala"
	_cairo_surface_destroy0 (self->priv->_surface);
#line 56 "../lib/Drawing/BufferSurface.vala"
	_cairo_destroy0 (self->priv->_context);
#line 30 "../lib/Drawing/BufferSurface.vala"
	G_OBJECT_CLASS (granite_drawing_buffer_surface_parent_class)->finalize (obj);
#line 4284 "BufferSurface.c"
}

/**
     * A buffer containing an internal Cairo-usable surface and context, designed
     * for usage with large, rarely updated draw operations.
     */
static GType
granite_drawing_buffer_surface_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteDrawingBufferSurfaceClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_drawing_buffer_surface_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteDrawingBufferSurface), 0, (GInstanceInitFunc) granite_drawing_buffer_surface_instance_init, NULL };
	GType granite_drawing_buffer_surface_type_id;
	granite_drawing_buffer_surface_type_id = g_type_register_static (G_TYPE_OBJECT, "GraniteDrawingBufferSurface", &g_define_type_info, 0);
	GraniteDrawingBufferSurface_private_offset = g_type_add_instance_private (granite_drawing_buffer_surface_type_id, sizeof (GraniteDrawingBufferSurfacePrivate));
	return granite_drawing_buffer_surface_type_id;
}

GType
granite_drawing_buffer_surface_get_type (void)
{
	static volatile gsize granite_drawing_buffer_surface_type_id__volatile = 0;
	if (g_once_init_enter (&granite_drawing_buffer_surface_type_id__volatile)) {
		GType granite_drawing_buffer_surface_type_id;
		granite_drawing_buffer_surface_type_id = granite_drawing_buffer_surface_get_type_once ();
		g_once_init_leave (&granite_drawing_buffer_surface_type_id__volatile, granite_drawing_buffer_surface_type_id);
	}
	return granite_drawing_buffer_surface_type_id__volatile;
}

static void
_vala_granite_drawing_buffer_surface_get_property (GObject * object,
                                                   guint property_id,
                                                   GValue * value,
                                                   GParamSpec * pspec)
{
	GraniteDrawingBufferSurface * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_DRAWING_TYPE_BUFFER_SURFACE, GraniteDrawingBufferSurface);
#line 30 "../lib/Drawing/BufferSurface.vala"
	switch (property_id) {
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_SURFACE_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		g_value_set_boxed (value, granite_drawing_buffer_surface_get_surface (self));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_WIDTH_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		g_value_set_int (value, granite_drawing_buffer_surface_get_width (self));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_HEIGHT_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		g_value_set_int (value, granite_drawing_buffer_surface_get_height (self));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_CONTEXT_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		g_value_set_boxed (value, granite_drawing_buffer_surface_get_context (self));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 4347 "BufferSurface.c"
		default:
#line 30 "../lib/Drawing/BufferSurface.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 4353 "BufferSurface.c"
	}
}

static void
_vala_granite_drawing_buffer_surface_set_property (GObject * object,
                                                   guint property_id,
                                                   const GValue * value,
                                                   GParamSpec * pspec)
{
	GraniteDrawingBufferSurface * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_DRAWING_TYPE_BUFFER_SURFACE, GraniteDrawingBufferSurface);
#line 30 "../lib/Drawing/BufferSurface.vala"
	switch (property_id) {
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_SURFACE_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_set_surface (self, g_value_get_boxed (value));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_WIDTH_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_set_width (self, g_value_get_int (value));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 30 "../lib/Drawing/BufferSurface.vala"
		case GRANITE_DRAWING_BUFFER_SURFACE_HEIGHT_PROPERTY:
#line 30 "../lib/Drawing/BufferSurface.vala"
		granite_drawing_buffer_surface_set_height (self, g_value_get_int (value));
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 4385 "BufferSurface.c"
		default:
#line 30 "../lib/Drawing/BufferSurface.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 30 "../lib/Drawing/BufferSurface.vala"
		break;
#line 4391 "BufferSurface.c"
	}
}

