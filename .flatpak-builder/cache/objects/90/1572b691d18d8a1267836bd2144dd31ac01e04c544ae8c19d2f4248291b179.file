/* AlertViewView.c generated by valac 0.48.14, the Vala compiler
 * generated from AlertViewView.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2017 elementary LLC. (https://elementary.io)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 *
 * Authored by: Lucas Baudin <xapantu@gmail.com>
 *              Jaap Broekhuizen <jaapz.b@gmail.com>
 *              Victor Eduardo <victoreduardm@gmal.com>
 *              Tom Beckmann <tom@elementary.io>
 *              Corentin NoÃ«l <corentin@elementary.io>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include "granite.h"

#define TYPE_ALERT_VIEW_VIEW (alert_view_view_get_type ())
#define ALERT_VIEW_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ALERT_VIEW_VIEW, AlertViewView))
#define ALERT_VIEW_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_ALERT_VIEW_VIEW, AlertViewViewClass))
#define IS_ALERT_VIEW_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ALERT_VIEW_VIEW))
#define IS_ALERT_VIEW_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_ALERT_VIEW_VIEW))
#define ALERT_VIEW_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ALERT_VIEW_VIEW, AlertViewViewClass))

typedef struct _AlertViewView AlertViewView;
typedef struct _AlertViewViewClass AlertViewViewClass;
typedef struct _AlertViewViewPrivate AlertViewViewPrivate;
enum  {
	ALERT_VIEW_VIEW_0_PROPERTY,
	ALERT_VIEW_VIEW_NUM_PROPERTIES
};
static GParamSpec* alert_view_view_properties[ALERT_VIEW_VIEW_NUM_PROPERTIES];
typedef struct _Block2Data Block2Data;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _AlertViewView {
	GtkGrid parent_instance;
	AlertViewViewPrivate * priv;
};

struct _AlertViewViewClass {
	GtkGridClass parent_class;
};

struct _Block2Data {
	int _ref_count_;
	AlertViewView* self;
	GraniteWidgetsAlertView* alert;
};

static gpointer alert_view_view_parent_class = NULL;

GType alert_view_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (AlertViewView, g_object_unref)
AlertViewView* alert_view_view_new (void);
AlertViewView* alert_view_view_construct (GType object_type);
static GObject * alert_view_view_constructor (GType type,
                                       guint n_construct_properties,
                                       GObjectConstructParam * construct_properties);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
static void _alert_view_view___lambda4_ (Block2Data* _data2_);
static void __alert_view_view___lambda4__granite_widgets_alert_view_action_activated (GraniteWidgetsAlertView* _sender,
                                                                               gpointer self);
static GType alert_view_view_get_type_once (void);

AlertViewView*
alert_view_view_construct (GType object_type)
{
	AlertViewView * self = NULL;
#line 27 "../demo/Views/AlertViewView.vala"
	self = (AlertViewView*) g_object_new (object_type, NULL);
#line 27 "../demo/Views/AlertViewView.vala"
	return self;
#line 92 "AlertViewView.c"
}

AlertViewView*
alert_view_view_new (void)
{
#line 27 "../demo/Views/AlertViewView.vala"
	return alert_view_view_construct (TYPE_ALERT_VIEW_VIEW);
#line 100 "AlertViewView.c"
}

static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
#line 28 "../demo/Views/AlertViewView.vala"
	g_atomic_int_inc (&_data2_->_ref_count_);
#line 28 "../demo/Views/AlertViewView.vala"
	return _data2_;
#line 110 "AlertViewView.c"
}

static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
#line 28 "../demo/Views/AlertViewView.vala"
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
#line 120 "AlertViewView.c"
		AlertViewView* self;
#line 28 "../demo/Views/AlertViewView.vala"
		self = _data2_->self;
#line 28 "../demo/Views/AlertViewView.vala"
		_g_object_unref0 (_data2_->alert);
#line 28 "../demo/Views/AlertViewView.vala"
		_g_object_unref0 (self);
#line 28 "../demo/Views/AlertViewView.vala"
		g_slice_free (Block2Data, _data2_);
#line 130 "AlertViewView.c"
	}
}

static void
_alert_view_view___lambda4_ (Block2Data* _data2_)
{
	AlertViewView* self;
	GraniteWidgetsAlertView* _tmp0_;
#line 36 "../demo/Views/AlertViewView.vala"
	self = _data2_->self;
#line 37 "../demo/Views/AlertViewView.vala"
	_tmp0_ = _data2_->alert;
#line 37 "../demo/Views/AlertViewView.vala"
	granite_widgets_alert_view_hide_action (_tmp0_);
#line 145 "AlertViewView.c"
}

static void
__alert_view_view___lambda4__granite_widgets_alert_view_action_activated (GraniteWidgetsAlertView* _sender,
                                                                          gpointer self)
{
#line 36 "../demo/Views/AlertViewView.vala"
	_alert_view_view___lambda4_ (self);
#line 154 "AlertViewView.c"
}

static GObject *
alert_view_view_constructor (GType type,
                             guint n_construct_properties,
                             GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	AlertViewView * self;
	Block2Data* _data2_;
	GraniteWidgetsAlertView* _tmp0_;
	GraniteWidgetsAlertView* _tmp1_;
	GraniteWidgetsAlertView* _tmp2_;
	GraniteWidgetsAlertView* _tmp3_;
#line 28 "../demo/Views/AlertViewView.vala"
	parent_class = G_OBJECT_CLASS (alert_view_view_parent_class);
#line 28 "../demo/Views/AlertViewView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 28 "../demo/Views/AlertViewView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_ALERT_VIEW_VIEW, AlertViewView);
#line 28 "../demo/Views/AlertViewView.vala"
	_data2_ = g_slice_new0 (Block2Data);
#line 28 "../demo/Views/AlertViewView.vala"
	_data2_->_ref_count_ = 1;
#line 28 "../demo/Views/AlertViewView.vala"
	_data2_->self = g_object_ref (self);
#line 29 "../demo/Views/AlertViewView.vala"
	_tmp0_ = granite_widgets_alert_view_new ("Nothing here", "Maybe you can enable <b>something</b> to hide it but <i>otherwise</i> " \
"it will stay here", "dialog-warning");
#line 29 "../demo/Views/AlertViewView.vala"
	g_object_ref_sink (_tmp0_);
#line 29 "../demo/Views/AlertViewView.vala"
	_data2_->alert = _tmp0_;
#line 34 "../demo/Views/AlertViewView.vala"
	_tmp1_ = _data2_->alert;
#line 34 "../demo/Views/AlertViewView.vala"
	granite_widgets_alert_view_show_action (_tmp1_, "Hide this button");
#line 36 "../demo/Views/AlertViewView.vala"
	_tmp2_ = _data2_->alert;
#line 36 "../demo/Views/AlertViewView.vala"
	g_signal_connect_data (_tmp2_, "action-activated", (GCallback) __alert_view_view___lambda4__granite_widgets_alert_view_action_activated, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 40 "../demo/Views/AlertViewView.vala"
	_tmp3_ = _data2_->alert;
#line 40 "../demo/Views/AlertViewView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp3_);
#line 28 "../demo/Views/AlertViewView.vala"
	block2_data_unref (_data2_);
#line 28 "../demo/Views/AlertViewView.vala"
	_data2_ = NULL;
#line 28 "../demo/Views/AlertViewView.vala"
	return obj;
#line 206 "AlertViewView.c"
}

static void
alert_view_view_class_init (AlertViewViewClass * klass,
                            gpointer klass_data)
{
#line 27 "../demo/Views/AlertViewView.vala"
	alert_view_view_parent_class = g_type_class_peek_parent (klass);
#line 27 "../demo/Views/AlertViewView.vala"
	G_OBJECT_CLASS (klass)->constructor = alert_view_view_constructor;
#line 217 "AlertViewView.c"
}

static void
alert_view_view_instance_init (AlertViewView * self,
                               gpointer klass)
{
}

static GType
alert_view_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (AlertViewViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) alert_view_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (AlertViewView), 0, (GInstanceInitFunc) alert_view_view_instance_init, NULL };
	GType alert_view_view_type_id;
	alert_view_view_type_id = g_type_register_static (gtk_grid_get_type (), "AlertViewView", &g_define_type_info, 0);
	return alert_view_view_type_id;
}

GType
alert_view_view_get_type (void)
{
	static volatile gsize alert_view_view_type_id__volatile = 0;
	if (g_once_init_enter (&alert_view_view_type_id__volatile)) {
		GType alert_view_view_type_id;
		alert_view_view_type_id = alert_view_view_get_type_once ();
		g_once_init_leave (&alert_view_view_type_id__volatile, alert_view_view_type_id);
	}
	return alert_view_view_type_id__volatile;
}

