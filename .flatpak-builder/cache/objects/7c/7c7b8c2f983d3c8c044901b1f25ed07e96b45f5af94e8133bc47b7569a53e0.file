/* System.c generated by valac 0.48.14, the Vala compiler
 * generated from System.vala, do not modify */

/*
 *  Copyright (C) 2011-2013 Robert Dyer
 *
 *  This program or library is free software; you can redistribute it
 *  and/or modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General
 *  Public License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA 02110-1301 USA.
 */

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gio/gio.h>
#include <gio/gdesktopappinfo.h>

#define GRANITE_SERVICES_TYPE_SYSTEM (granite_services_system_get_type ())
#define GRANITE_SERVICES_SYSTEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_SERVICES_TYPE_SYSTEM, GraniteServicesSystem))
#define GRANITE_SERVICES_SYSTEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_SERVICES_TYPE_SYSTEM, GraniteServicesSystemClass))
#define GRANITE_SERVICES_IS_SYSTEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_SERVICES_TYPE_SYSTEM))
#define GRANITE_SERVICES_IS_SYSTEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_SERVICES_TYPE_SYSTEM))
#define GRANITE_SERVICES_SYSTEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_SERVICES_TYPE_SYSTEM, GraniteServicesSystemClass))

typedef struct _GraniteServicesSystem GraniteServicesSystem;
typedef struct _GraniteServicesSystemClass GraniteServicesSystemClass;
typedef struct _GraniteServicesSystemPrivate GraniteServicesSystemPrivate;
enum  {
	GRANITE_SERVICES_SYSTEM_0_PROPERTY,
	GRANITE_SERVICES_SYSTEM_NUM_PROPERTIES
};
static GParamSpec* granite_services_system_properties[GRANITE_SERVICES_SYSTEM_NUM_PROPERTIES];
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_settings_schema_unref0(var) ((var == NULL) ? NULL : (var = (g_settings_schema_unref (var), NULL)))

struct _GraniteServicesSystem {
	GObject parent_instance;
	GraniteServicesSystemPrivate * priv;
};

struct _GraniteServicesSystemClass {
	GObjectClass parent_class;
};

static gpointer granite_services_system_parent_class = NULL;
static GSettingsSchema* granite_services_system_privacy_settings_schema;
static GSettingsSchema* granite_services_system_privacy_settings_schema = NULL;
static GSettings* granite_services_system_privacy_settings;
static GSettings* granite_services_system_privacy_settings = NULL;

GType granite_services_system_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteServicesSystem, g_object_unref)
void granite_services_system_open_uri (const gchar* uri) G_GNUC_DEPRECATED;
void granite_services_system_open (GFile* file) G_GNUC_DEPRECATED;
void granite_services_system_open_files (GFile** files,
                                         gint files_length1) G_GNUC_DEPRECATED;
void granite_services_system_launch (GFile* app) G_GNUC_DEPRECATED;
void granite_services_system_launch_with_files (GFile* app,
                                                GFile** files,
                                                gint files_length1) G_GNUC_DEPRECATED;
gboolean granite_services_system_execute_command (const gchar* command) G_GNUC_DEPRECATED;
static gboolean granite_services_system_path_is_mounted (const gchar* path);
static void _g_object_unref0_ (gpointer var);
static inline void _g_list_free__g_object_unref0_ (GList* self);
static void granite_services_system_internal_launch (GFile* app,
                                              GList* files);
static void _g_free0_ (gpointer var);
static inline void _g_list_free__g_free0_ (GList* self);
gboolean granite_services_system_history_is_enabled (void);
GraniteServicesSystem* granite_services_system_new (void);
GraniteServicesSystem* granite_services_system_construct (GType object_type);
static void granite_services_system_finalize (GObject * obj);
static GType granite_services_system_get_type_once (void);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);

/**
         * Opens the specified URI with the default application.  This can be used for opening websites
         * with the default browser, etc.
         *
         * @param uri the URI to open
         */
void
granite_services_system_open_uri (const gchar* uri)
{
	GError* _inner_error0_ = NULL;
#line 34 "../lib/Services/System.vala"
	g_return_if_fail (uri != NULL);
#line 108 "System.c"
	{
#line 36 "../lib/Services/System.vala"
		g_app_info_launch_default_for_uri (uri, NULL, &_inner_error0_);
#line 36 "../lib/Services/System.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 114 "System.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp0_;
		const gchar* _tmp1_;
#line 35 "../lib/Services/System.vala"
		e = _inner_error0_;
#line 35 "../lib/Services/System.vala"
		_inner_error0_ = NULL;
#line 38 "../lib/Services/System.vala"
		_tmp0_ = e;
#line 38 "../lib/Services/System.vala"
		_tmp1_ = _tmp0_->message;
#line 38 "../lib/Services/System.vala"
		g_critical ("System.vala:38: Failed to open uri: %s", _tmp1_);
#line 35 "../lib/Services/System.vala"
		_g_error_free0 (e);
#line 136 "System.c"
	}
	__finally0:
#line 35 "../lib/Services/System.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 35 "../lib/Services/System.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 35 "../lib/Services/System.vala"
		g_clear_error (&_inner_error0_);
#line 35 "../lib/Services/System.vala"
		return;
#line 147 "System.c"
	}
}

/**
         * Opens the specified file with the default application.
         *
         * @param file the {@link GLib.File} to open
         */
void
granite_services_system_open (GFile* file)
{
	GError* _inner_error0_ = NULL;
#line 48 "../lib/Services/System.vala"
	g_return_if_fail (file != NULL);
#line 162 "System.c"
	{
		gchar* _tmp0_;
		gchar* _tmp1_;
#line 50 "../lib/Services/System.vala"
		_tmp0_ = g_file_get_uri (file);
#line 50 "../lib/Services/System.vala"
		_tmp1_ = _tmp0_;
#line 50 "../lib/Services/System.vala"
		g_app_info_launch_default_for_uri (_tmp1_, NULL, &_inner_error0_);
#line 50 "../lib/Services/System.vala"
		_g_free0 (_tmp1_);
#line 50 "../lib/Services/System.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 176 "System.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp2_;
		const gchar* _tmp3_;
#line 49 "../lib/Services/System.vala"
		e = _inner_error0_;
#line 49 "../lib/Services/System.vala"
		_inner_error0_ = NULL;
#line 52 "../lib/Services/System.vala"
		_tmp2_ = e;
#line 52 "../lib/Services/System.vala"
		_tmp3_ = _tmp2_->message;
#line 52 "../lib/Services/System.vala"
		g_critical ("System.vala:52: Failed to open file: %s", _tmp3_);
#line 49 "../lib/Services/System.vala"
		_g_error_free0 (e);
#line 198 "System.c"
	}
	__finally0:
#line 49 "../lib/Services/System.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 49 "../lib/Services/System.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 49 "../lib/Services/System.vala"
		g_clear_error (&_inner_error0_);
#line 49 "../lib/Services/System.vala"
		return;
#line 209 "System.c"
	}
}

/**
         * Opens the specified files with the default application.
         *
         * @param files an array of {@link GLib.File} to open
         */
void
granite_services_system_open_files (GFile** files,
                                    gint files_length1)
{
	GError* _inner_error0_ = NULL;
	{
		GFile** file_collection = NULL;
		gint file_collection_length1 = 0;
		gint _file_collection_size_ = 0;
		gint file_it = 0;
#line 63 "../lib/Services/System.vala"
		file_collection = files;
#line 63 "../lib/Services/System.vala"
		file_collection_length1 = files_length1;
#line 63 "../lib/Services/System.vala"
		for (file_it = 0; file_it < file_collection_length1; file_it = file_it + 1) {
#line 234 "System.c"
			GFile* file = NULL;
#line 63 "../lib/Services/System.vala"
			file = file_collection[file_it];
#line 238 "System.c"
			{
				{
					GFile* _tmp0_;
					gchar* _tmp1_;
					gchar* _tmp2_;
#line 65 "../lib/Services/System.vala"
					_tmp0_ = file;
#line 65 "../lib/Services/System.vala"
					_tmp1_ = g_file_get_uri (_tmp0_);
#line 65 "../lib/Services/System.vala"
					_tmp2_ = _tmp1_;
#line 65 "../lib/Services/System.vala"
					g_app_info_launch_default_for_uri (_tmp2_, NULL, &_inner_error0_);
#line 65 "../lib/Services/System.vala"
					_g_free0 (_tmp2_);
#line 65 "../lib/Services/System.vala"
					if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 256 "System.c"
						goto __catch0_g_error;
					}
				}
				goto __finally0;
				__catch0_g_error:
				{
					GError* e = NULL;
					GError* _tmp3_;
					const gchar* _tmp4_;
#line 64 "../lib/Services/System.vala"
					e = _inner_error0_;
#line 64 "../lib/Services/System.vala"
					_inner_error0_ = NULL;
#line 67 "../lib/Services/System.vala"
					_tmp3_ = e;
#line 67 "../lib/Services/System.vala"
					_tmp4_ = _tmp3_->message;
#line 67 "../lib/Services/System.vala"
					g_critical ("System.vala:67: Failed to open file: %s", _tmp4_);
#line 64 "../lib/Services/System.vala"
					_g_error_free0 (e);
#line 278 "System.c"
				}
				__finally0:
#line 64 "../lib/Services/System.vala"
				if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 64 "../lib/Services/System.vala"
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 64 "../lib/Services/System.vala"
					g_clear_error (&_inner_error0_);
#line 64 "../lib/Services/System.vala"
					return;
#line 289 "System.c"
				}
			}
		}
	}
}

/**
         * Launches the specified application.
         *
         * @param app the {@link GLib.File} representing the application to launch
         */
void
granite_services_system_launch (GFile* app)
{
	GFile** _tmp0_;
	GFile** _tmp1_;
	gint _tmp1__length1;
#line 78 "../lib/Services/System.vala"
	g_return_if_fail (app != NULL);
#line 79 "../lib/Services/System.vala"
	_tmp0_ = g_new0 (GFile*, 0 + 1);
#line 79 "../lib/Services/System.vala"
	_tmp1_ = _tmp0_;
#line 79 "../lib/Services/System.vala"
	_tmp1__length1 = 0;
#line 79 "../lib/Services/System.vala"
	granite_services_system_launch_with_files (app, _tmp1_, (gint) 0);
#line 79 "../lib/Services/System.vala"
	_tmp1_ = (_vala_array_free (_tmp1_, _tmp1__length1, (GDestroyNotify) g_object_unref), NULL);
#line 319 "System.c"
}

/**
         * Executes the specified command.
         *
         * @param command the command to execute
         */
gboolean
granite_services_system_execute_command (const gchar* command)
{
	GError* _inner_error0_ = NULL;
	gboolean result = FALSE;
#line 88 "../lib/Services/System.vala"
	g_return_val_if_fail (command != NULL, FALSE);
#line 334 "System.c"
	{
		GAppInfo* info = NULL;
		GAppInfo* _tmp0_;
		gboolean _tmp1_ = FALSE;
		GAppInfo* _tmp2_;
#line 90 "../lib/Services/System.vala"
		_tmp0_ = g_app_info_create_from_commandline (command, "", 0, &_inner_error0_);
#line 90 "../lib/Services/System.vala"
		info = _tmp0_;
#line 90 "../lib/Services/System.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 346 "System.c"
			goto __catch0_g_error;
		}
#line 91 "../lib/Services/System.vala"
		_tmp2_ = info;
#line 91 "../lib/Services/System.vala"
		_tmp1_ = g_app_info_launch (_tmp2_, NULL, NULL, &_inner_error0_);
#line 91 "../lib/Services/System.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 91 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 357 "System.c"
			goto __catch0_g_error;
		}
#line 91 "../lib/Services/System.vala"
		if (_tmp1_) {
#line 92 "../lib/Services/System.vala"
			result = TRUE;
#line 92 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 92 "../lib/Services/System.vala"
			return result;
#line 368 "System.c"
		}
#line 89 "../lib/Services/System.vala"
		_g_object_unref0 (info);
#line 372 "System.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
#line 89 "../lib/Services/System.vala"
		g_clear_error (&_inner_error0_);
#line 94 "../lib/Services/System.vala"
		g_warning ("System.vala:94: Failed to execute external '%s' command", command);
#line 381 "System.c"
	}
	__finally0:
#line 89 "../lib/Services/System.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 386 "System.c"
		gboolean _tmp3_ = FALSE;
#line 89 "../lib/Services/System.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 89 "../lib/Services/System.vala"
		g_clear_error (&_inner_error0_);
#line 89 "../lib/Services/System.vala"
		return _tmp3_;
#line 394 "System.c"
	}
#line 97 "../lib/Services/System.vala"
	result = TRUE;
#line 97 "../lib/Services/System.vala"
	return result;
#line 400 "System.c"
}

/**
         * Launches the supplied files with the specified application.
         *
         * @param app the {@link GLib.File} representing the application to launch
         * @param files an array of {@link GLib.File} to open
         */
static gpointer
_g_object_ref0 (gpointer self)
{
#line 116 "../lib/Services/System.vala"
	return self ? g_object_ref (self) : NULL;
#line 414 "System.c"
}

static void
_g_object_unref0_ (gpointer var)
{
#line 122 "../lib/Services/System.vala"
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
#line 422 "System.c"
}

static inline void
_g_list_free__g_object_unref0_ (GList* self)
{
#line 122 "../lib/Services/System.vala"
	g_list_free_full (self, (GDestroyNotify) _g_object_unref0_);
#line 430 "System.c"
}

void
granite_services_system_launch_with_files (GFile* app,
                                           GFile** files,
                                           gint files_length1)
{
	gboolean _tmp0_ = FALSE;
	GList* mounted_files = NULL;
	gboolean _tmp26_ = FALSE;
	GList* _tmp27_;
	GError* _inner_error0_ = NULL;
#line 108 "../lib/Services/System.vala"
	if (app != NULL) {
#line 108 "../lib/Services/System.vala"
		_tmp0_ = !g_file_query_exists (app, NULL);
#line 447 "System.c"
	} else {
#line 108 "../lib/Services/System.vala"
		_tmp0_ = FALSE;
#line 451 "System.c"
	}
#line 108 "../lib/Services/System.vala"
	if (_tmp0_) {
#line 455 "System.c"
		gchar* _tmp1_;
		gchar* _tmp2_;
#line 109 "../lib/Services/System.vala"
		_tmp1_ = g_file_get_path (app);
#line 109 "../lib/Services/System.vala"
		_tmp2_ = _tmp1_;
#line 109 "../lib/Services/System.vala"
		g_warning ("System.vala:109: Application '%s' doesn't exist", _tmp2_);
#line 109 "../lib/Services/System.vala"
		_g_free0 (_tmp2_);
#line 110 "../lib/Services/System.vala"
		return;
#line 468 "System.c"
	}
#line 113 "../lib/Services/System.vala"
	mounted_files = NULL;
#line 472 "System.c"
	{
		GFile** f_collection = NULL;
		gint f_collection_length1 = 0;
		gint _f_collection_size_ = 0;
		gint f_it = 0;
#line 116 "../lib/Services/System.vala"
		f_collection = files;
#line 116 "../lib/Services/System.vala"
		f_collection_length1 = files_length1;
#line 116 "../lib/Services/System.vala"
		for (f_it = 0; f_it < f_collection_length1; f_it = f_it + 1) {
#line 484 "System.c"
			GFile* _tmp3_;
			GFile* f = NULL;
#line 116 "../lib/Services/System.vala"
			_tmp3_ = _g_object_ref0 (f_collection[f_it]);
#line 116 "../lib/Services/System.vala"
			f = _tmp3_;
#line 491 "System.c"
			{
				gboolean _tmp4_ = FALSE;
				gboolean _tmp5_ = FALSE;
				GFile* _tmp6_;
				gchar* _tmp7_;
				gchar* _tmp8_;
				gboolean _tmp9_;
#line 117 "../lib/Services/System.vala"
				_tmp6_ = f;
#line 117 "../lib/Services/System.vala"
				_tmp7_ = g_file_get_path (_tmp6_);
#line 117 "../lib/Services/System.vala"
				_tmp8_ = _tmp7_;
#line 117 "../lib/Services/System.vala"
				_tmp9_ = _tmp8_ != NULL;
#line 117 "../lib/Services/System.vala"
				_g_free0 (_tmp8_);
#line 117 "../lib/Services/System.vala"
				if (_tmp9_) {
#line 511 "System.c"
					GFile* _tmp10_;
					gchar* _tmp11_;
					gchar* _tmp12_;
#line 117 "../lib/Services/System.vala"
					_tmp10_ = f;
#line 117 "../lib/Services/System.vala"
					_tmp11_ = g_file_get_path (_tmp10_);
#line 117 "../lib/Services/System.vala"
					_tmp12_ = _tmp11_;
#line 117 "../lib/Services/System.vala"
					_tmp5_ = g_strcmp0 (_tmp12_, "") != 0;
#line 117 "../lib/Services/System.vala"
					_g_free0 (_tmp12_);
#line 525 "System.c"
				} else {
#line 117 "../lib/Services/System.vala"
					_tmp5_ = FALSE;
#line 529 "System.c"
				}
#line 117 "../lib/Services/System.vala"
				if (_tmp5_) {
#line 533 "System.c"
					gboolean _tmp13_ = FALSE;
					GFile* _tmp14_;
#line 117 "../lib/Services/System.vala"
					_tmp14_ = f;
#line 117 "../lib/Services/System.vala"
					if (g_file_is_native (_tmp14_)) {
#line 117 "../lib/Services/System.vala"
						_tmp13_ = TRUE;
#line 542 "System.c"
					} else {
						GFile* _tmp15_;
						gchar* _tmp16_;
						gchar* _tmp17_;
#line 117 "../lib/Services/System.vala"
						_tmp15_ = f;
#line 117 "../lib/Services/System.vala"
						_tmp16_ = g_file_get_path (_tmp15_);
#line 117 "../lib/Services/System.vala"
						_tmp17_ = _tmp16_;
#line 117 "../lib/Services/System.vala"
						_tmp13_ = granite_services_system_path_is_mounted (_tmp17_);
#line 117 "../lib/Services/System.vala"
						_g_free0 (_tmp17_);
#line 557 "System.c"
					}
#line 117 "../lib/Services/System.vala"
					_tmp4_ = _tmp13_;
#line 561 "System.c"
				} else {
#line 117 "../lib/Services/System.vala"
					_tmp4_ = FALSE;
#line 565 "System.c"
				}
#line 117 "../lib/Services/System.vala"
				if (_tmp4_) {
#line 569 "System.c"
					GFile* _tmp18_;
					GFile* _tmp19_;
#line 118 "../lib/Services/System.vala"
					_tmp18_ = f;
#line 118 "../lib/Services/System.vala"
					_tmp19_ = _g_object_ref0 (_tmp18_);
#line 118 "../lib/Services/System.vala"
					mounted_files = g_list_append (mounted_files, _tmp19_);
#line 119 "../lib/Services/System.vala"
					_g_object_unref0 (f);
#line 119 "../lib/Services/System.vala"
					continue;
#line 582 "System.c"
				}
				{
					GFile* _tmp20_;
					gchar* _tmp21_;
					gchar* _tmp22_;
#line 123 "../lib/Services/System.vala"
					_tmp20_ = f;
#line 123 "../lib/Services/System.vala"
					_tmp21_ = g_file_get_uri (_tmp20_);
#line 123 "../lib/Services/System.vala"
					_tmp22_ = _tmp21_;
#line 123 "../lib/Services/System.vala"
					g_app_info_launch_default_for_uri (_tmp22_, NULL, &_inner_error0_);
#line 123 "../lib/Services/System.vala"
					_g_free0 (_tmp22_);
#line 123 "../lib/Services/System.vala"
					if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 600 "System.c"
						goto __catch0_g_error;
					}
				}
				goto __finally0;
				__catch0_g_error:
				{
					GFile* _tmp23_;
					GFile* _tmp24_;
					GFile* _tmp25_;
#line 122 "../lib/Services/System.vala"
					g_clear_error (&_inner_error0_);
#line 125 "../lib/Services/System.vala"
					_tmp23_ = f;
#line 125 "../lib/Services/System.vala"
					g_file_mount_enclosing_volume (_tmp23_, 0, NULL, NULL, NULL, NULL);
#line 126 "../lib/Services/System.vala"
					_tmp24_ = f;
#line 126 "../lib/Services/System.vala"
					_tmp25_ = _g_object_ref0 (_tmp24_);
#line 126 "../lib/Services/System.vala"
					mounted_files = g_list_append (mounted_files, _tmp25_);
#line 622 "System.c"
				}
				__finally0:
#line 122 "../lib/Services/System.vala"
				if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 122 "../lib/Services/System.vala"
					_g_object_unref0 (f);
#line 122 "../lib/Services/System.vala"
					(mounted_files == NULL) ? NULL : (mounted_files = (_g_list_free__g_object_unref0_ (mounted_files), NULL));
#line 122 "../lib/Services/System.vala"
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 122 "../lib/Services/System.vala"
					g_clear_error (&_inner_error0_);
#line 122 "../lib/Services/System.vala"
					return;
#line 637 "System.c"
				}
#line 116 "../lib/Services/System.vala"
				_g_object_unref0 (f);
#line 641 "System.c"
			}
		}
	}
#line 130 "../lib/Services/System.vala"
	_tmp27_ = mounted_files;
#line 130 "../lib/Services/System.vala"
	if (g_list_length (_tmp27_) > ((guint) 0)) {
#line 130 "../lib/Services/System.vala"
		_tmp26_ = TRUE;
#line 651 "System.c"
	} else {
#line 130 "../lib/Services/System.vala"
		_tmp26_ = files_length1 == 0;
#line 655 "System.c"
	}
#line 130 "../lib/Services/System.vala"
	if (_tmp26_) {
#line 659 "System.c"
		GList* _tmp28_;
#line 131 "../lib/Services/System.vala"
		_tmp28_ = mounted_files;
#line 131 "../lib/Services/System.vala"
		granite_services_system_internal_launch (app, _tmp28_);
#line 665 "System.c"
	}
#line 107 "../lib/Services/System.vala"
	(mounted_files == NULL) ? NULL : (mounted_files = (_g_list_free__g_object_unref0_ (mounted_files), NULL));
#line 669 "System.c"
}

static gboolean
string_contains (const gchar* self,
                 const gchar* needle)
{
	gchar* _tmp0_;
	gboolean result = FALSE;
#line 1530 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1530 "glib-2.0.vapi"
	g_return_val_if_fail (needle != NULL, FALSE);
#line 1531 "glib-2.0.vapi"
	_tmp0_ = strstr ((gchar*) self, (gchar*) needle);
#line 1531 "glib-2.0.vapi"
	result = _tmp0_ != NULL;
#line 1531 "glib-2.0.vapi"
	return result;
#line 688 "System.c"
}

static gboolean
granite_services_system_path_is_mounted (const gchar* path)
{
	GVolumeMonitor* _tmp0_;
	GVolumeMonitor* _tmp1_;
	GList* _tmp2_;
	GList* _tmp3_;
	gboolean result = FALSE;
#line 134 "../lib/Services/System.vala"
	g_return_val_if_fail (path != NULL, FALSE);
#line 135 "../lib/Services/System.vala"
	_tmp0_ = g_volume_monitor_get ();
#line 135 "../lib/Services/System.vala"
	_tmp1_ = _tmp0_;
#line 135 "../lib/Services/System.vala"
	_tmp2_ = g_volume_monitor_get_mounts (_tmp1_);
#line 135 "../lib/Services/System.vala"
	_tmp3_ = _tmp2_;
#line 135 "../lib/Services/System.vala"
	_g_object_unref0 (_tmp1_);
#line 711 "System.c"
	{
		GList* m_collection = NULL;
		GList* m_it = NULL;
#line 135 "../lib/Services/System.vala"
		m_collection = _tmp3_;
#line 135 "../lib/Services/System.vala"
		for (m_it = m_collection; m_it != NULL; m_it = m_it->next) {
#line 719 "System.c"
			GMount* _tmp4_;
			GMount* m = NULL;
#line 135 "../lib/Services/System.vala"
			_tmp4_ = _g_object_ref0 ((GMount*) m_it->data);
#line 135 "../lib/Services/System.vala"
			m = _tmp4_;
#line 726 "System.c"
			{
				gboolean _tmp5_ = FALSE;
				gboolean _tmp6_ = FALSE;
				GMount* _tmp7_;
				GFile* _tmp8_;
				GFile* _tmp9_;
				gboolean _tmp10_;
#line 136 "../lib/Services/System.vala"
				_tmp7_ = m;
#line 136 "../lib/Services/System.vala"
				_tmp8_ = g_mount_get_root (_tmp7_);
#line 136 "../lib/Services/System.vala"
				_tmp9_ = _tmp8_;
#line 136 "../lib/Services/System.vala"
				_tmp10_ = _tmp9_ != NULL;
#line 136 "../lib/Services/System.vala"
				_g_object_unref0 (_tmp9_);
#line 136 "../lib/Services/System.vala"
				if (_tmp10_) {
#line 746 "System.c"
					GMount* _tmp11_;
					GFile* _tmp12_;
					GFile* _tmp13_;
					gchar* _tmp14_;
					gchar* _tmp15_;
#line 136 "../lib/Services/System.vala"
					_tmp11_ = m;
#line 136 "../lib/Services/System.vala"
					_tmp12_ = g_mount_get_root (_tmp11_);
#line 136 "../lib/Services/System.vala"
					_tmp13_ = _tmp12_;
#line 136 "../lib/Services/System.vala"
					_tmp14_ = g_file_get_path (_tmp13_);
#line 136 "../lib/Services/System.vala"
					_tmp15_ = _tmp14_;
#line 136 "../lib/Services/System.vala"
					_tmp6_ = _tmp15_ != NULL;
#line 136 "../lib/Services/System.vala"
					_g_free0 (_tmp15_);
#line 136 "../lib/Services/System.vala"
					_g_object_unref0 (_tmp13_);
#line 768 "System.c"
				} else {
#line 136 "../lib/Services/System.vala"
					_tmp6_ = FALSE;
#line 772 "System.c"
				}
#line 136 "../lib/Services/System.vala"
				if (_tmp6_) {
#line 776 "System.c"
					GMount* _tmp16_;
					GFile* _tmp17_;
					GFile* _tmp18_;
					gchar* _tmp19_;
					gchar* _tmp20_;
#line 136 "../lib/Services/System.vala"
					_tmp16_ = m;
#line 136 "../lib/Services/System.vala"
					_tmp17_ = g_mount_get_root (_tmp16_);
#line 136 "../lib/Services/System.vala"
					_tmp18_ = _tmp17_;
#line 136 "../lib/Services/System.vala"
					_tmp19_ = g_file_get_path (_tmp18_);
#line 136 "../lib/Services/System.vala"
					_tmp20_ = _tmp19_;
#line 136 "../lib/Services/System.vala"
					_tmp5_ = string_contains (path, _tmp20_);
#line 136 "../lib/Services/System.vala"
					_g_free0 (_tmp20_);
#line 136 "../lib/Services/System.vala"
					_g_object_unref0 (_tmp18_);
#line 798 "System.c"
				} else {
#line 136 "../lib/Services/System.vala"
					_tmp5_ = FALSE;
#line 802 "System.c"
				}
#line 136 "../lib/Services/System.vala"
				if (_tmp5_) {
#line 137 "../lib/Services/System.vala"
					result = TRUE;
#line 137 "../lib/Services/System.vala"
					_g_object_unref0 (m);
#line 137 "../lib/Services/System.vala"
					(m_collection == NULL) ? NULL : (m_collection = (_g_list_free__g_object_unref0_ (m_collection), NULL));
#line 137 "../lib/Services/System.vala"
					return result;
#line 814 "System.c"
				}
#line 135 "../lib/Services/System.vala"
				_g_object_unref0 (m);
#line 818 "System.c"
			}
		}
#line 135 "../lib/Services/System.vala"
		(m_collection == NULL) ? NULL : (m_collection = (_g_list_free__g_object_unref0_ (m_collection), NULL));
#line 823 "System.c"
	}
#line 139 "../lib/Services/System.vala"
	result = FALSE;
#line 139 "../lib/Services/System.vala"
	return result;
#line 829 "System.c"
}

static void
_g_free0_ (gpointer var)
{
#line 171 "../lib/Services/System.vala"
	var = (g_free (var), NULL);
#line 837 "System.c"
}

static inline void
_g_list_free__g_free0_ (GList* self)
{
#line 171 "../lib/Services/System.vala"
	g_list_free_full (self, (GDestroyNotify) _g_free0_);
#line 845 "System.c"
}

static void
granite_services_system_internal_launch (GFile* app,
                                         GList* files)
{
	gboolean _tmp0_ = FALSE;
	GAppInfo* info = NULL;
	GError* _inner_error0_ = NULL;
#line 143 "../lib/Services/System.vala"
	if (app == NULL) {
#line 143 "../lib/Services/System.vala"
		_tmp0_ = g_list_length (files) == ((guint) 0);
#line 859 "System.c"
	} else {
#line 143 "../lib/Services/System.vala"
		_tmp0_ = FALSE;
#line 863 "System.c"
	}
#line 143 "../lib/Services/System.vala"
	if (_tmp0_) {
#line 144 "../lib/Services/System.vala"
		return;
#line 869 "System.c"
	}
#line 147 "../lib/Services/System.vala"
	if (app != NULL) {
#line 873 "System.c"
		gchar* _tmp1_;
		gchar* _tmp2_;
		GDesktopAppInfo* _tmp3_;
#line 148 "../lib/Services/System.vala"
		_tmp1_ = g_file_get_path (app);
#line 148 "../lib/Services/System.vala"
		_tmp2_ = _tmp1_;
#line 148 "../lib/Services/System.vala"
		_tmp3_ = g_desktop_app_info_new_from_filename (_tmp2_);
#line 148 "../lib/Services/System.vala"
		_g_object_unref0 (info);
#line 148 "../lib/Services/System.vala"
		info = (GAppInfo*) _tmp3_;
#line 148 "../lib/Services/System.vala"
		_g_free0 (_tmp2_);
#line 889 "System.c"
	} else {
		{
			GAppInfo* _tmp4_ = NULL;
			GList* _tmp5_;
			gconstpointer _tmp6_;
			GAppInfo* _tmp7_;
			GAppInfo* _tmp8_;
#line 151 "../lib/Services/System.vala"
			_tmp5_ = g_list_first (files);
#line 151 "../lib/Services/System.vala"
			_tmp6_ = _tmp5_->data;
#line 151 "../lib/Services/System.vala"
			_tmp7_ = g_file_query_default_handler ((GFile*) _tmp6_, NULL, &_inner_error0_);
#line 151 "../lib/Services/System.vala"
			_tmp4_ = _tmp7_;
#line 151 "../lib/Services/System.vala"
			if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 907 "System.c"
				goto __catch0_g_error;
			}
#line 151 "../lib/Services/System.vala"
			_tmp8_ = _tmp4_;
#line 151 "../lib/Services/System.vala"
			_tmp4_ = NULL;
#line 151 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 151 "../lib/Services/System.vala"
			info = _tmp8_;
#line 150 "../lib/Services/System.vala"
			_g_object_unref0 (_tmp4_);
#line 920 "System.c"
		}
		goto __finally0;
		__catch0_g_error:
		{
#line 150 "../lib/Services/System.vala"
			g_clear_error (&_inner_error0_);
#line 153 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 153 "../lib/Services/System.vala"
			return;
#line 931 "System.c"
		}
		__finally0:
#line 150 "../lib/Services/System.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 150 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 150 "../lib/Services/System.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 150 "../lib/Services/System.vala"
			g_clear_error (&_inner_error0_);
#line 150 "../lib/Services/System.vala"
			return;
#line 944 "System.c"
		}
	}
	{
		GAppInfo* _tmp10_;
		GAppInfo* _tmp12_;
#line 157 "../lib/Services/System.vala"
		if (g_list_length (files) == ((guint) 0)) {
#line 952 "System.c"
			GAppInfo* _tmp9_;
#line 158 "../lib/Services/System.vala"
			_tmp9_ = info;
#line 158 "../lib/Services/System.vala"
			g_app_info_launch (_tmp9_, NULL, NULL, &_inner_error0_);
#line 158 "../lib/Services/System.vala"
			if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 960 "System.c"
				goto __catch1_g_error;
			}
#line 159 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 159 "../lib/Services/System.vala"
			return;
#line 967 "System.c"
		}
#line 162 "../lib/Services/System.vala"
		_tmp10_ = info;
#line 162 "../lib/Services/System.vala"
		if (g_app_info_supports_files (_tmp10_)) {
#line 973 "System.c"
			GAppInfo* _tmp11_;
#line 163 "../lib/Services/System.vala"
			_tmp11_ = info;
#line 163 "../lib/Services/System.vala"
			g_app_info_launch (_tmp11_, files, NULL, &_inner_error0_);
#line 163 "../lib/Services/System.vala"
			if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 981 "System.c"
				goto __catch1_g_error;
			}
#line 164 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 164 "../lib/Services/System.vala"
			return;
#line 988 "System.c"
		}
#line 167 "../lib/Services/System.vala"
		_tmp12_ = info;
#line 167 "../lib/Services/System.vala"
		if (g_app_info_supports_uris (_tmp12_)) {
#line 994 "System.c"
			GList* uris = NULL;
			GAppInfo* _tmp16_;
			GList* _tmp17_;
			GAppLaunchContext* _tmp18_;
			GAppLaunchContext* _tmp19_;
#line 168 "../lib/Services/System.vala"
			uris = NULL;
#line 1002 "System.c"
			{
				GList* f_collection = NULL;
				GList* f_it = NULL;
#line 169 "../lib/Services/System.vala"
				f_collection = files;
#line 169 "../lib/Services/System.vala"
				for (f_it = f_collection; f_it != NULL; f_it = f_it->next) {
#line 1010 "System.c"
					GFile* _tmp13_;
					GFile* f = NULL;
#line 169 "../lib/Services/System.vala"
					_tmp13_ = _g_object_ref0 ((GFile*) f_it->data);
#line 169 "../lib/Services/System.vala"
					f = _tmp13_;
#line 1017 "System.c"
					{
						GFile* _tmp14_;
						gchar* _tmp15_;
#line 170 "../lib/Services/System.vala"
						_tmp14_ = f;
#line 170 "../lib/Services/System.vala"
						_tmp15_ = g_file_get_uri (_tmp14_);
#line 170 "../lib/Services/System.vala"
						uris = g_list_append (uris, _tmp15_);
#line 169 "../lib/Services/System.vala"
						_g_object_unref0 (f);
#line 1029 "System.c"
					}
				}
			}
#line 171 "../lib/Services/System.vala"
			_tmp16_ = info;
#line 171 "../lib/Services/System.vala"
			_tmp17_ = uris;
#line 171 "../lib/Services/System.vala"
			_tmp18_ = g_app_launch_context_new ();
#line 171 "../lib/Services/System.vala"
			_tmp19_ = _tmp18_;
#line 171 "../lib/Services/System.vala"
			g_app_info_launch_uris (_tmp16_, _tmp17_, _tmp19_, &_inner_error0_);
#line 171 "../lib/Services/System.vala"
			_g_object_unref0 (_tmp19_);
#line 171 "../lib/Services/System.vala"
			if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 171 "../lib/Services/System.vala"
				(uris == NULL) ? NULL : (uris = (_g_list_free__g_free0_ (uris), NULL));
#line 1049 "System.c"
				goto __catch1_g_error;
			}
#line 172 "../lib/Services/System.vala"
			(uris == NULL) ? NULL : (uris = (_g_list_free__g_free0_ (uris), NULL));
#line 172 "../lib/Services/System.vala"
			_g_object_unref0 (info);
#line 172 "../lib/Services/System.vala"
			return;
#line 1058 "System.c"
		}
#line 175 "../lib/Services/System.vala"
		g_error ("System.vala:175: Error opening files. The application doesn't support " \
"files/URIs or wasn't found.");
#line 1062 "System.c"
	}
	goto __finally1;
	__catch1_g_error:
	{
		GError* e = NULL;
		const gchar* _tmp20_;
		gchar* _tmp21_;
		gchar* _tmp22_;
		const gchar* _tmp23_;
#line 156 "../lib/Services/System.vala"
		e = _inner_error0_;
#line 156 "../lib/Services/System.vala"
		_inner_error0_ = NULL;
#line 177 "../lib/Services/System.vala"
		_tmp20_ = g_quark_to_string (e->domain);
#line 177 "../lib/Services/System.vala"
		_tmp21_ = g_strconcat ("Error: ", _tmp20_, NULL);
#line 177 "../lib/Services/System.vala"
		_tmp22_ = _tmp21_;
#line 177 "../lib/Services/System.vala"
		g_debug ("System.vala:177: %s", _tmp22_);
#line 177 "../lib/Services/System.vala"
		_g_free0 (_tmp22_);
#line 178 "../lib/Services/System.vala"
		_tmp23_ = e->message;
#line 178 "../lib/Services/System.vala"
		g_error ("System.vala:178: %s", _tmp23_);
#line 156 "../lib/Services/System.vala"
		_g_error_free0 (e);
#line 1092 "System.c"
	}
	__finally1:
#line 156 "../lib/Services/System.vala"
	_g_object_unref0 (info);
#line 156 "../lib/Services/System.vala"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 156 "../lib/Services/System.vala"
	g_clear_error (&_inner_error0_);
#line 156 "../lib/Services/System.vala"
	return;
#line 1103 "System.c"
}

/**
         * Returns whether history is enabled within the Security and Privacy system settings or not. A value of true
         * means that you should store information such as the last opened file or a history within the app.
         *
         * Checks the "remember_recent_files" key in "org.gnome.desktop.privacy", returning true if the schema does not exist.
         */
gboolean
granite_services_system_history_is_enabled (void)
{
	GSettingsSchema* _tmp0_;
	gboolean _tmp3_ = FALSE;
	GSettingsSchema* _tmp4_;
	gboolean result = FALSE;
#line 192 "../lib/Services/System.vala"
	_tmp0_ = granite_services_system_privacy_settings_schema;
#line 192 "../lib/Services/System.vala"
	if (_tmp0_ == NULL) {
#line 1123 "System.c"
		GSettingsSchemaSource* _tmp1_;
		GSettingsSchema* _tmp2_;
#line 193 "../lib/Services/System.vala"
		_tmp1_ = g_settings_schema_source_get_default ();
#line 193 "../lib/Services/System.vala"
		_tmp2_ = g_settings_schema_source_lookup (_tmp1_, "org.gnome.desktop.privacy", TRUE);
#line 193 "../lib/Services/System.vala"
		_g_settings_schema_unref0 (granite_services_system_privacy_settings_schema);
#line 193 "../lib/Services/System.vala"
		granite_services_system_privacy_settings_schema = _tmp2_;
#line 1134 "System.c"
	}
#line 196 "../lib/Services/System.vala"
	_tmp4_ = granite_services_system_privacy_settings_schema;
#line 196 "../lib/Services/System.vala"
	if (_tmp4_ != NULL) {
#line 1140 "System.c"
		GSettingsSchema* _tmp5_;
#line 196 "../lib/Services/System.vala"
		_tmp5_ = granite_services_system_privacy_settings_schema;
#line 196 "../lib/Services/System.vala"
		_tmp3_ = g_settings_schema_has_key (_tmp5_, "remember-recent-files");
#line 1146 "System.c"
	} else {
#line 196 "../lib/Services/System.vala"
		_tmp3_ = FALSE;
#line 1150 "System.c"
	}
#line 196 "../lib/Services/System.vala"
	if (_tmp3_) {
#line 1154 "System.c"
		GSettings* _tmp6_;
		GSettings* _tmp8_;
#line 197 "../lib/Services/System.vala"
		_tmp6_ = granite_services_system_privacy_settings;
#line 197 "../lib/Services/System.vala"
		if (_tmp6_ == NULL) {
#line 1161 "System.c"
			GSettings* _tmp7_;
#line 198 "../lib/Services/System.vala"
			_tmp7_ = g_settings_new ("org.gnome.desktop.privacy");
#line 198 "../lib/Services/System.vala"
			_g_object_unref0 (granite_services_system_privacy_settings);
#line 198 "../lib/Services/System.vala"
			granite_services_system_privacy_settings = _tmp7_;
#line 1169 "System.c"
		}
#line 201 "../lib/Services/System.vala"
		_tmp8_ = granite_services_system_privacy_settings;
#line 201 "../lib/Services/System.vala"
		result = g_settings_get_boolean (_tmp8_, "remember-recent-files");
#line 201 "../lib/Services/System.vala"
		return result;
#line 1177 "System.c"
	}
#line 204 "../lib/Services/System.vala"
	result = TRUE;
#line 204 "../lib/Services/System.vala"
	return result;
#line 1183 "System.c"
}

GraniteServicesSystem*
granite_services_system_construct (GType object_type)
{
	GraniteServicesSystem * self = NULL;
#line 25 "../lib/Services/System.vala"
	self = (GraniteServicesSystem*) g_object_new (object_type, NULL);
#line 25 "../lib/Services/System.vala"
	return self;
#line 1194 "System.c"
}

GraniteServicesSystem*
granite_services_system_new (void)
{
#line 25 "../lib/Services/System.vala"
	return granite_services_system_construct (GRANITE_SERVICES_TYPE_SYSTEM);
#line 1202 "System.c"
}

static void
granite_services_system_class_init (GraniteServicesSystemClass * klass,
                                    gpointer klass_data)
{
#line 25 "../lib/Services/System.vala"
	granite_services_system_parent_class = g_type_class_peek_parent (klass);
#line 25 "../lib/Services/System.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_services_system_finalize;
#line 1213 "System.c"
}

static void
granite_services_system_instance_init (GraniteServicesSystem * self,
                                       gpointer klass)
{
}

static void
granite_services_system_finalize (GObject * obj)
{
	GraniteServicesSystem * self;
#line 25 "../lib/Services/System.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_SERVICES_TYPE_SYSTEM, GraniteServicesSystem);
#line 25 "../lib/Services/System.vala"
	G_OBJECT_CLASS (granite_services_system_parent_class)->finalize (obj);
#line 1230 "System.c"
}

/**
     * Utility class for frequently-used system-related functions, such as opening files, launching
     * applications, or executing terminal commands.
     */
static GType
granite_services_system_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteServicesSystemClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_services_system_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteServicesSystem), 0, (GInstanceInitFunc) granite_services_system_instance_init, NULL };
	GType granite_services_system_type_id;
	granite_services_system_type_id = g_type_register_static (G_TYPE_OBJECT, "GraniteServicesSystem", &g_define_type_info, 0);
	return granite_services_system_type_id;
}

GType
granite_services_system_get_type (void)
{
	static volatile gsize granite_services_system_type_id__volatile = 0;
	if (g_once_init_enter (&granite_services_system_type_id__volatile)) {
		GType granite_services_system_type_id;
		granite_services_system_type_id = granite_services_system_get_type_once ();
		g_once_init_leave (&granite_services_system_type_id__volatile, granite_services_system_type_id);
	}
	return granite_services_system_type_id__volatile;
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

