/* SeekBar.c generated by valac 0.48.14, the Vala compiler
 * generated from SeekBar.vala, do not modify */

/*-
 * Copyright (c) 2017 elementary LLC. (https://elementary.io)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the Lesser GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <gdk/gdk.h>

#define GRANITE_TYPE_SEEK_BAR (granite_seek_bar_get_type ())
#define GRANITE_SEEK_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GRANITE_TYPE_SEEK_BAR, GraniteSeekBar))
#define GRANITE_SEEK_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GRANITE_TYPE_SEEK_BAR, GraniteSeekBarClass))
#define GRANITE_IS_SEEK_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GRANITE_TYPE_SEEK_BAR))
#define GRANITE_IS_SEEK_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GRANITE_TYPE_SEEK_BAR))
#define GRANITE_SEEK_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GRANITE_TYPE_SEEK_BAR, GraniteSeekBarClass))

typedef struct _GraniteSeekBar GraniteSeekBar;
typedef struct _GraniteSeekBarClass GraniteSeekBarClass;
typedef struct _GraniteSeekBarPrivate GraniteSeekBarPrivate;
enum  {
	GRANITE_SEEK_BAR_0_PROPERTY,
	GRANITE_SEEK_BAR_PLAYBACK_DURATION_PROPERTY,
	GRANITE_SEEK_BAR_PLAYBACK_PROGRESS_PROPERTY,
	GRANITE_SEEK_BAR_IS_GRABBING_PROPERTY,
	GRANITE_SEEK_BAR_IS_HOVERING_PROPERTY,
	GRANITE_SEEK_BAR_PROGRESSION_LABEL_PROPERTY,
	GRANITE_SEEK_BAR_DURATION_LABEL_PROPERTY,
	GRANITE_SEEK_BAR_SCALE_PROPERTY,
	GRANITE_SEEK_BAR_NUM_PROPERTIES
};
static GParamSpec* granite_seek_bar_properties[GRANITE_SEEK_BAR_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _GraniteSeekBar {
	GtkGrid parent_instance;
	GraniteSeekBarPrivate * priv;
};

struct _GraniteSeekBarClass {
	GtkGridClass parent_class;
};

struct _GraniteSeekBarPrivate {
	gdouble _playback_duration;
	gdouble _playback_progress;
	gboolean _is_grabbing;
	gboolean _is_hovering;
	GtkLabel* _progression_label;
	GtkLabel* _duration_label;
	GtkScale* _scale;
};

static gint GraniteSeekBar_private_offset;
static gpointer granite_seek_bar_parent_class = NULL;

GType granite_seek_bar_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GraniteSeekBar, g_object_unref)
gdouble granite_seek_bar_get_playback_duration (GraniteSeekBar* self);
void granite_seek_bar_set_playback_duration (GraniteSeekBar* self,
                                             gdouble value);
GtkLabel* granite_seek_bar_get_duration_label (GraniteSeekBar* self);
gchar* granite_date_time_seconds_to_time (gint seconds);
gdouble granite_seek_bar_get_playback_progress (GraniteSeekBar* self);
void granite_seek_bar_set_playback_progress (GraniteSeekBar* self,
                                             gdouble value);
GtkScale* granite_seek_bar_get_scale (GraniteSeekBar* self);
GtkLabel* granite_seek_bar_get_progression_label (GraniteSeekBar* self);
gboolean granite_seek_bar_get_is_grabbing (GraniteSeekBar* self);
static void granite_seek_bar_set_is_grabbing (GraniteSeekBar* self,
                                       gboolean value);
gboolean granite_seek_bar_get_is_hovering (GraniteSeekBar* self);
static void granite_seek_bar_set_is_hovering (GraniteSeekBar* self,
                                       gboolean value);
void granite_seek_bar_set_progression_label (GraniteSeekBar* self,
                                             GtkLabel* value);
void granite_seek_bar_set_duration_label (GraniteSeekBar* self,
                                          GtkLabel* value);
void granite_seek_bar_set_scale (GraniteSeekBar* self,
                                 GtkScale* value);
GraniteSeekBar* granite_seek_bar_new (gdouble playback_duration);
GraniteSeekBar* granite_seek_bar_construct (GType object_type,
                                            gdouble playback_duration);
static void granite_seek_bar_real_get_preferred_width (GtkWidget* base,
                                                gint* minimum_width,
                                                gint* natural_width);
static GObject * granite_seek_bar_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
#define GRANITE_STYLE_CLASS_SEEKBAR "seek-bar"
static gboolean _granite_seek_bar___lambda65_ (GraniteSeekBar* self);
static gboolean __granite_seek_bar___lambda65__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                       GdkEventButton* event,
                                                                       gpointer self);
static gboolean _granite_seek_bar___lambda66_ (GraniteSeekBar* self);
static gboolean __granite_seek_bar___lambda66__gtk_widget_button_release_event (GtkWidget* _sender,
                                                                         GdkEventButton* event,
                                                                         gpointer self);
static gboolean _granite_seek_bar___lambda67_ (GraniteSeekBar* self);
static gboolean __granite_seek_bar___lambda67__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                       GdkEventCrossing* event,
                                                                       gpointer self);
static gboolean _granite_seek_bar___lambda68_ (GraniteSeekBar* self);
static gboolean __granite_seek_bar___lambda68__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                                       GdkEventCrossing* event,
                                                                       gpointer self);
static gboolean _granite_seek_bar___lambda69_ (GraniteSeekBar* self);
static gboolean __granite_seek_bar___lambda69__gtk_widget_motion_notify_event (GtkWidget* _sender,
                                                                        GdkEventMotion* event,
                                                                        gpointer self);
static void granite_seek_bar_finalize (GObject * obj);
static GType granite_seek_bar_get_type_once (void);
static void _vala_granite_seek_bar_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec);
static void _vala_granite_seek_bar_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec);

static inline gpointer
granite_seek_bar_get_instance_private (GraniteSeekBar* self)
{
	return G_STRUCT_MEMBER_P (self, GraniteSeekBar_private_offset);
}

gdouble
granite_seek_bar_get_playback_duration (GraniteSeekBar* self)
{
	gdouble result;
#line 137 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, 0.0);
#line 138 "../lib/Widgets/SeekBar.vala"
	result = self->priv->_playback_duration;
#line 138 "../lib/Widgets/SeekBar.vala"
	return result;
#line 159 "SeekBar.c"
}

void
granite_seek_bar_set_playback_duration (GraniteSeekBar* self,
                                        gdouble value)
{
	gdouble duration = 0.0;
	GtkLabel* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
#line 140 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 141 "../lib/Widgets/SeekBar.vala"
	duration = value;
#line 142 "../lib/Widgets/SeekBar.vala"
	if (duration < 0.0) {
#line 143 "../lib/Widgets/SeekBar.vala"
		g_debug ("SeekBar.vala:143: Duration value less than zero, duration set to 0.0");
#line 144 "../lib/Widgets/SeekBar.vala"
		duration = 0.0;
#line 180 "SeekBar.c"
	}
#line 147 "../lib/Widgets/SeekBar.vala"
	self->priv->_playback_duration = duration;
#line 148 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_duration_label;
#line 148 "../lib/Widgets/SeekBar.vala"
	_tmp1_ = granite_date_time_seconds_to_time ((gint) duration);
#line 148 "../lib/Widgets/SeekBar.vala"
	_tmp2_ = _tmp1_;
#line 148 "../lib/Widgets/SeekBar.vala"
	gtk_label_set_label (_tmp0_, _tmp2_);
#line 148 "../lib/Widgets/SeekBar.vala"
	_g_free0 (_tmp2_);
#line 140 "../lib/Widgets/SeekBar.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_PLAYBACK_DURATION_PROPERTY]);
#line 196 "SeekBar.c"
}

gdouble
granite_seek_bar_get_playback_progress (GraniteSeekBar* self)
{
	gdouble result;
#line 156 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, 0.0);
#line 157 "../lib/Widgets/SeekBar.vala"
	result = self->priv->_playback_progress;
#line 157 "../lib/Widgets/SeekBar.vala"
	return result;
#line 209 "SeekBar.c"
}

void
granite_seek_bar_set_playback_progress (GraniteSeekBar* self,
                                        gdouble value)
{
	gdouble progress = 0.0;
	GtkScale* _tmp0_;
	GtkLabel* _tmp1_;
	gdouble _tmp2_;
	gdouble _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
#line 159 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 160 "../lib/Widgets/SeekBar.vala"
	progress = value;
#line 161 "../lib/Widgets/SeekBar.vala"
	if (progress < 0.0) {
#line 162 "../lib/Widgets/SeekBar.vala"
		g_debug ("SeekBar.vala:162: Progress value less than 0.0, progress set to 0.0");
#line 163 "../lib/Widgets/SeekBar.vala"
		progress = 0.0;
#line 233 "SeekBar.c"
	} else {
#line 164 "../lib/Widgets/SeekBar.vala"
		if (progress > 1.0) {
#line 165 "../lib/Widgets/SeekBar.vala"
			g_debug ("SeekBar.vala:165: Progress value greater than 1.0, progress set to 1.0");
#line 166 "../lib/Widgets/SeekBar.vala"
			progress = 1.0;
#line 241 "SeekBar.c"
		}
	}
#line 169 "../lib/Widgets/SeekBar.vala"
	self->priv->_playback_progress = progress;
#line 170 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_scale;
#line 170 "../lib/Widgets/SeekBar.vala"
	gtk_range_set_value ((GtkRange*) _tmp0_, progress);
#line 171 "../lib/Widgets/SeekBar.vala"
	_tmp1_ = self->priv->_progression_label;
#line 171 "../lib/Widgets/SeekBar.vala"
	_tmp2_ = granite_seek_bar_get_playback_duration (self);
#line 171 "../lib/Widgets/SeekBar.vala"
	_tmp3_ = _tmp2_;
#line 171 "../lib/Widgets/SeekBar.vala"
	_tmp4_ = granite_date_time_seconds_to_time ((gint) (progress * _tmp3_));
#line 171 "../lib/Widgets/SeekBar.vala"
	_tmp5_ = _tmp4_;
#line 171 "../lib/Widgets/SeekBar.vala"
	gtk_label_set_label (_tmp1_, _tmp5_);
#line 171 "../lib/Widgets/SeekBar.vala"
	_g_free0 (_tmp5_);
#line 159 "../lib/Widgets/SeekBar.vala"
	g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_PLAYBACK_PROGRESS_PROPERTY]);
#line 266 "SeekBar.c"
}

gboolean
granite_seek_bar_get_is_grabbing (GraniteSeekBar* self)
{
	gboolean result;
#line 178 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 178 "../lib/Widgets/SeekBar.vala"
	result = self->priv->_is_grabbing;
#line 178 "../lib/Widgets/SeekBar.vala"
	return result;
#line 279 "SeekBar.c"
}

static void
granite_seek_bar_set_is_grabbing (GraniteSeekBar* self,
                                  gboolean value)
{
	gboolean old_value;
#line 178 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 178 "../lib/Widgets/SeekBar.vala"
	old_value = granite_seek_bar_get_is_grabbing (self);
#line 178 "../lib/Widgets/SeekBar.vala"
	if (old_value != value) {
#line 178 "../lib/Widgets/SeekBar.vala"
		self->priv->_is_grabbing = value;
#line 178 "../lib/Widgets/SeekBar.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_IS_GRABBING_PROPERTY]);
#line 297 "SeekBar.c"
	}
}

gboolean
granite_seek_bar_get_is_hovering (GraniteSeekBar* self)
{
	gboolean result;
#line 183 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 183 "../lib/Widgets/SeekBar.vala"
	result = self->priv->_is_hovering;
#line 183 "../lib/Widgets/SeekBar.vala"
	return result;
#line 311 "SeekBar.c"
}

static void
granite_seek_bar_set_is_hovering (GraniteSeekBar* self,
                                  gboolean value)
{
	gboolean old_value;
#line 183 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 183 "../lib/Widgets/SeekBar.vala"
	old_value = granite_seek_bar_get_is_hovering (self);
#line 183 "../lib/Widgets/SeekBar.vala"
	if (old_value != value) {
#line 183 "../lib/Widgets/SeekBar.vala"
		self->priv->_is_hovering = value;
#line 183 "../lib/Widgets/SeekBar.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_IS_HOVERING_PROPERTY]);
#line 329 "SeekBar.c"
	}
}

GtkLabel*
granite_seek_bar_get_progression_label (GraniteSeekBar* self)
{
	GtkLabel* result;
	GtkLabel* _tmp0_;
#line 188 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 188 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_progression_label;
#line 188 "../lib/Widgets/SeekBar.vala"
	result = _tmp0_;
#line 188 "../lib/Widgets/SeekBar.vala"
	return result;
#line 346 "SeekBar.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 188 "../lib/Widgets/SeekBar.vala"
	return self ? g_object_ref (self) : NULL;
#line 354 "SeekBar.c"
}

void
granite_seek_bar_set_progression_label (GraniteSeekBar* self,
                                        GtkLabel* value)
{
	GtkLabel* old_value;
#line 188 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 188 "../lib/Widgets/SeekBar.vala"
	old_value = granite_seek_bar_get_progression_label (self);
#line 188 "../lib/Widgets/SeekBar.vala"
	if (old_value != value) {
#line 368 "SeekBar.c"
		GtkLabel* _tmp0_;
#line 188 "../lib/Widgets/SeekBar.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 188 "../lib/Widgets/SeekBar.vala"
		_g_object_unref0 (self->priv->_progression_label);
#line 188 "../lib/Widgets/SeekBar.vala"
		self->priv->_progression_label = _tmp0_;
#line 188 "../lib/Widgets/SeekBar.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_PROGRESSION_LABEL_PROPERTY]);
#line 378 "SeekBar.c"
	}
}

GtkLabel*
granite_seek_bar_get_duration_label (GraniteSeekBar* self)
{
	GtkLabel* result;
	GtkLabel* _tmp0_;
#line 193 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 193 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_duration_label;
#line 193 "../lib/Widgets/SeekBar.vala"
	result = _tmp0_;
#line 193 "../lib/Widgets/SeekBar.vala"
	return result;
#line 395 "SeekBar.c"
}

void
granite_seek_bar_set_duration_label (GraniteSeekBar* self,
                                     GtkLabel* value)
{
	GtkLabel* old_value;
#line 193 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 193 "../lib/Widgets/SeekBar.vala"
	old_value = granite_seek_bar_get_duration_label (self);
#line 193 "../lib/Widgets/SeekBar.vala"
	if (old_value != value) {
#line 409 "SeekBar.c"
		GtkLabel* _tmp0_;
#line 193 "../lib/Widgets/SeekBar.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 193 "../lib/Widgets/SeekBar.vala"
		_g_object_unref0 (self->priv->_duration_label);
#line 193 "../lib/Widgets/SeekBar.vala"
		self->priv->_duration_label = _tmp0_;
#line 193 "../lib/Widgets/SeekBar.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_DURATION_LABEL_PROPERTY]);
#line 419 "SeekBar.c"
	}
}

GtkScale*
granite_seek_bar_get_scale (GraniteSeekBar* self)
{
	GtkScale* result;
	GtkScale* _tmp0_;
#line 198 "../lib/Widgets/SeekBar.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 198 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_scale;
#line 198 "../lib/Widgets/SeekBar.vala"
	result = _tmp0_;
#line 198 "../lib/Widgets/SeekBar.vala"
	return result;
#line 436 "SeekBar.c"
}

void
granite_seek_bar_set_scale (GraniteSeekBar* self,
                            GtkScale* value)
{
	GtkScale* old_value;
#line 198 "../lib/Widgets/SeekBar.vala"
	g_return_if_fail (self != NULL);
#line 198 "../lib/Widgets/SeekBar.vala"
	old_value = granite_seek_bar_get_scale (self);
#line 198 "../lib/Widgets/SeekBar.vala"
	if (old_value != value) {
#line 450 "SeekBar.c"
		GtkScale* _tmp0_;
#line 198 "../lib/Widgets/SeekBar.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 198 "../lib/Widgets/SeekBar.vala"
		_g_object_unref0 (self->priv->_scale);
#line 198 "../lib/Widgets/SeekBar.vala"
		self->priv->_scale = _tmp0_;
#line 198 "../lib/Widgets/SeekBar.vala"
		g_object_notify_by_pspec ((GObject *) self, granite_seek_bar_properties[GRANITE_SEEK_BAR_SCALE_PROPERTY]);
#line 460 "SeekBar.c"
	}
}

GraniteSeekBar*
granite_seek_bar_construct (GType object_type,
                            gdouble playback_duration)
{
	GraniteSeekBar * self = NULL;
#line 204 "../lib/Widgets/SeekBar.vala"
	self = (GraniteSeekBar*) g_object_new (object_type, "playback-duration", playback_duration, NULL);
#line 203 "../lib/Widgets/SeekBar.vala"
	return self;
#line 473 "SeekBar.c"
}

GraniteSeekBar*
granite_seek_bar_new (gdouble playback_duration)
{
#line 203 "../lib/Widgets/SeekBar.vala"
	return granite_seek_bar_construct (GRANITE_TYPE_SEEK_BAR, playback_duration);
#line 481 "SeekBar.c"
}

static void
granite_seek_bar_real_get_preferred_width (GtkWidget* base,
                                           gint* minimum_width,
                                           gint* natural_width)
{
	GraniteSeekBar * self;
	gint _vala_minimum_width = 0;
	gint _vala_natural_width = 0;
	gint _tmp0_ = 0;
	gint _tmp1_ = 0;
	GtkContainer* _tmp2_;
	GtkContainer* _tmp3_;
	GdkWindow* window = NULL;
	GtkContainer* _tmp4_;
	GtkContainer* _tmp5_;
	GdkWindow* _tmp6_;
	GdkWindow* _tmp7_;
	GdkWindow* _tmp8_;
	gint width = 0;
	GtkContainer* _tmp9_;
	GtkContainer* _tmp10_;
	GdkWindow* _tmp11_;
	gboolean _tmp12_ = FALSE;
#line 257 "../lib/Widgets/SeekBar.vala"
	self = (GraniteSeekBar*) base;
#line 258 "../lib/Widgets/SeekBar.vala"
	GTK_WIDGET_CLASS (granite_seek_bar_parent_class)->get_preferred_width ((GtkWidget*) G_TYPE_CHECK_INSTANCE_CAST (self, gtk_grid_get_type (), GtkGrid), &_tmp0_, &_tmp1_);
#line 258 "../lib/Widgets/SeekBar.vala"
	_vala_minimum_width = _tmp0_;
#line 258 "../lib/Widgets/SeekBar.vala"
	_vala_natural_width = _tmp1_;
#line 260 "../lib/Widgets/SeekBar.vala"
	_tmp2_ = gtk_widget_get_parent ((GtkWidget*) self);
#line 260 "../lib/Widgets/SeekBar.vala"
	_tmp3_ = _tmp2_;
#line 260 "../lib/Widgets/SeekBar.vala"
	if (_tmp3_ == NULL) {
#line 261 "../lib/Widgets/SeekBar.vala"
		if (minimum_width) {
#line 261 "../lib/Widgets/SeekBar.vala"
			*minimum_width = _vala_minimum_width;
#line 525 "SeekBar.c"
		}
#line 261 "../lib/Widgets/SeekBar.vala"
		if (natural_width) {
#line 261 "../lib/Widgets/SeekBar.vala"
			*natural_width = _vala_natural_width;
#line 531 "SeekBar.c"
		}
#line 261 "../lib/Widgets/SeekBar.vala"
		return;
#line 535 "SeekBar.c"
	}
#line 264 "../lib/Widgets/SeekBar.vala"
	_tmp4_ = gtk_widget_get_parent ((GtkWidget*) self);
#line 264 "../lib/Widgets/SeekBar.vala"
	_tmp5_ = _tmp4_;
#line 264 "../lib/Widgets/SeekBar.vala"
	_tmp6_ = gtk_widget_get_window ((GtkWidget*) _tmp5_);
#line 264 "../lib/Widgets/SeekBar.vala"
	_tmp7_ = _g_object_ref0 (_tmp6_);
#line 264 "../lib/Widgets/SeekBar.vala"
	window = _tmp7_;
#line 265 "../lib/Widgets/SeekBar.vala"
	_tmp8_ = window;
#line 265 "../lib/Widgets/SeekBar.vala"
	if (_tmp8_ == NULL) {
#line 266 "../lib/Widgets/SeekBar.vala"
		_g_object_unref0 (window);
#line 266 "../lib/Widgets/SeekBar.vala"
		if (minimum_width) {
#line 266 "../lib/Widgets/SeekBar.vala"
			*minimum_width = _vala_minimum_width;
#line 557 "SeekBar.c"
		}
#line 266 "../lib/Widgets/SeekBar.vala"
		if (natural_width) {
#line 266 "../lib/Widgets/SeekBar.vala"
			*natural_width = _vala_natural_width;
#line 563 "SeekBar.c"
		}
#line 266 "../lib/Widgets/SeekBar.vala"
		return;
#line 567 "SeekBar.c"
	}
#line 269 "../lib/Widgets/SeekBar.vala"
	_tmp9_ = gtk_widget_get_parent ((GtkWidget*) self);
#line 269 "../lib/Widgets/SeekBar.vala"
	_tmp10_ = _tmp9_;
#line 269 "../lib/Widgets/SeekBar.vala"
	_tmp11_ = gtk_widget_get_window ((GtkWidget*) _tmp10_);
#line 269 "../lib/Widgets/SeekBar.vala"
	width = gdk_window_get_width (_tmp11_);
#line 270 "../lib/Widgets/SeekBar.vala"
	if (width > 0) {
#line 270 "../lib/Widgets/SeekBar.vala"
		_tmp12_ = width >= _vala_minimum_width;
#line 581 "SeekBar.c"
	} else {
#line 270 "../lib/Widgets/SeekBar.vala"
		_tmp12_ = FALSE;
#line 585 "SeekBar.c"
	}
#line 270 "../lib/Widgets/SeekBar.vala"
	if (_tmp12_) {
#line 271 "../lib/Widgets/SeekBar.vala"
		_vala_natural_width = width;
#line 591 "SeekBar.c"
	}
#line 257 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (window);
#line 257 "../lib/Widgets/SeekBar.vala"
	if (minimum_width) {
#line 257 "../lib/Widgets/SeekBar.vala"
		*minimum_width = _vala_minimum_width;
#line 599 "SeekBar.c"
	}
#line 257 "../lib/Widgets/SeekBar.vala"
	if (natural_width) {
#line 257 "../lib/Widgets/SeekBar.vala"
		*natural_width = _vala_natural_width;
#line 605 "SeekBar.c"
	}
}

static gboolean
_granite_seek_bar___lambda65_ (GraniteSeekBar* self)
{
	gboolean result = FALSE;
#line 225 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_is_grabbing (self, TRUE);
#line 226 "../lib/Widgets/SeekBar.vala"
	result = FALSE;
#line 226 "../lib/Widgets/SeekBar.vala"
	return result;
#line 619 "SeekBar.c"
}

static gboolean
__granite_seek_bar___lambda65__gtk_widget_button_press_event (GtkWidget* _sender,
                                                              GdkEventButton* event,
                                                              gpointer self)
{
	gboolean result;
	result = _granite_seek_bar___lambda65_ ((GraniteSeekBar*) self);
#line 224 "../lib/Widgets/SeekBar.vala"
	return result;
#line 631 "SeekBar.c"
}

static gboolean
_granite_seek_bar___lambda66_ (GraniteSeekBar* self)
{
	GtkScale* _tmp0_;
	gboolean result = FALSE;
#line 230 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_is_grabbing (self, FALSE);
#line 231 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_scale;
#line 231 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_playback_progress (self, gtk_range_get_value ((GtkRange*) _tmp0_));
#line 232 "../lib/Widgets/SeekBar.vala"
	result = FALSE;
#line 232 "../lib/Widgets/SeekBar.vala"
	return result;
#line 649 "SeekBar.c"
}

static gboolean
__granite_seek_bar___lambda66__gtk_widget_button_release_event (GtkWidget* _sender,
                                                                GdkEventButton* event,
                                                                gpointer self)
{
	gboolean result;
	result = _granite_seek_bar___lambda66_ ((GraniteSeekBar*) self);
#line 229 "../lib/Widgets/SeekBar.vala"
	return result;
#line 661 "SeekBar.c"
}

static gboolean
_granite_seek_bar___lambda67_ (GraniteSeekBar* self)
{
	gboolean result = FALSE;
#line 236 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_is_hovering (self, TRUE);
#line 237 "../lib/Widgets/SeekBar.vala"
	result = FALSE;
#line 237 "../lib/Widgets/SeekBar.vala"
	return result;
#line 674 "SeekBar.c"
}

static gboolean
__granite_seek_bar___lambda67__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                              GdkEventCrossing* event,
                                                              gpointer self)
{
	gboolean result;
	result = _granite_seek_bar___lambda67_ ((GraniteSeekBar*) self);
#line 235 "../lib/Widgets/SeekBar.vala"
	return result;
#line 686 "SeekBar.c"
}

static gboolean
_granite_seek_bar___lambda68_ (GraniteSeekBar* self)
{
	gboolean result = FALSE;
#line 241 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_is_hovering (self, FALSE);
#line 242 "../lib/Widgets/SeekBar.vala"
	result = FALSE;
#line 242 "../lib/Widgets/SeekBar.vala"
	return result;
#line 699 "SeekBar.c"
}

static gboolean
__granite_seek_bar___lambda68__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                              GdkEventCrossing* event,
                                                              gpointer self)
{
	gboolean result;
	result = _granite_seek_bar___lambda68_ ((GraniteSeekBar*) self);
#line 240 "../lib/Widgets/SeekBar.vala"
	return result;
#line 711 "SeekBar.c"
}

static gboolean
_granite_seek_bar___lambda69_ (GraniteSeekBar* self)
{
	GtkScale* _tmp0_;
	gboolean result = FALSE;
#line 246 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = self->priv->_scale;
#line 246 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_playback_progress (self, gtk_range_get_value ((GtkRange*) _tmp0_));
#line 247 "../lib/Widgets/SeekBar.vala"
	result = FALSE;
#line 247 "../lib/Widgets/SeekBar.vala"
	return result;
#line 727 "SeekBar.c"
}

static gboolean
__granite_seek_bar___lambda69__gtk_widget_motion_notify_event (GtkWidget* _sender,
                                                               GdkEventMotion* event,
                                                               gpointer self)
{
	gboolean result;
	result = _granite_seek_bar___lambda69_ ((GraniteSeekBar*) self);
#line 245 "../lib/Widgets/SeekBar.vala"
	return result;
#line 739 "SeekBar.c"
}

static GObject *
granite_seek_bar_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	GraniteSeekBar * self;
	GtkStyleContext* _tmp0_;
	GtkLabel* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkLabel* _tmp5_;
	GtkLabel* _tmp6_;
	GtkScale* _tmp7_;
	GtkScale* _tmp8_;
	GtkScale* _tmp9_;
	GtkScale* _tmp10_;
	GtkScale* _tmp11_;
	GtkScale* _tmp12_;
	GtkScale* _tmp13_;
	GdkEventMask _tmp14_;
	GdkEventMask _tmp15_;
	GtkScale* _tmp16_;
	GtkScale* _tmp17_;
	GdkEventMask _tmp18_;
	GdkEventMask _tmp19_;
	GtkScale* _tmp20_;
	GtkScale* _tmp21_;
	GdkEventMask _tmp22_;
	GdkEventMask _tmp23_;
	GtkScale* _tmp24_;
	GtkScale* _tmp25_;
	GtkScale* _tmp26_;
	GtkScale* _tmp27_;
	GtkScale* _tmp28_;
	GtkLabel* _tmp29_;
	GtkScale* _tmp30_;
	GtkLabel* _tmp31_;
#line 207 "../lib/Widgets/SeekBar.vala"
	parent_class = G_OBJECT_CLASS (granite_seek_bar_parent_class);
#line 207 "../lib/Widgets/SeekBar.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 207 "../lib/Widgets/SeekBar.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_TYPE_SEEK_BAR, GraniteSeekBar);
#line 208 "../lib/Widgets/SeekBar.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 6);
#line 209 "../lib/Widgets/SeekBar.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 209 "../lib/Widgets/SeekBar.vala"
	gtk_style_context_add_class (_tmp0_, GRANITE_STYLE_CLASS_SEEKBAR);
#line 211 "../lib/Widgets/SeekBar.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new (NULL);
#line 211 "../lib/Widgets/SeekBar.vala"
	g_object_ref_sink (_tmp1_);
#line 211 "../lib/Widgets/SeekBar.vala"
	_tmp2_ = _tmp1_;
#line 211 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_progression_label (self, _tmp2_);
#line 211 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (_tmp2_);
#line 212 "../lib/Widgets/SeekBar.vala"
	_tmp3_ = (GtkLabel*) gtk_label_new (NULL);
#line 212 "../lib/Widgets/SeekBar.vala"
	g_object_ref_sink (_tmp3_);
#line 212 "../lib/Widgets/SeekBar.vala"
	_tmp4_ = _tmp3_;
#line 212 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_duration_label (self, _tmp4_);
#line 212 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (_tmp4_);
#line 213 "../lib/Widgets/SeekBar.vala"
	_tmp5_ = self->priv->_progression_label;
#line 213 "../lib/Widgets/SeekBar.vala"
	_tmp6_ = self->priv->_duration_label;
#line 213 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp6_, 3);
#line 213 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp5_, 3);
#line 215 "../lib/Widgets/SeekBar.vala"
	_tmp7_ = (GtkScale*) gtk_scale_new_with_range (GTK_ORIENTATION_HORIZONTAL, (gdouble) 0, (gdouble) 1, 0.1);
#line 215 "../lib/Widgets/SeekBar.vala"
	g_object_ref_sink (_tmp7_);
#line 215 "../lib/Widgets/SeekBar.vala"
	_tmp8_ = _tmp7_;
#line 215 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_scale (self, _tmp8_);
#line 215 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (_tmp8_);
#line 216 "../lib/Widgets/SeekBar.vala"
	_tmp9_ = self->priv->_scale;
#line 216 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp9_, TRUE);
#line 217 "../lib/Widgets/SeekBar.vala"
	_tmp10_ = self->priv->_scale;
#line 217 "../lib/Widgets/SeekBar.vala"
	gtk_scale_set_draw_value (_tmp10_, FALSE);
#line 218 "../lib/Widgets/SeekBar.vala"
	_tmp11_ = self->priv->_scale;
#line 218 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp11_, FALSE);
#line 219 "../lib/Widgets/SeekBar.vala"
	_tmp12_ = self->priv->_scale;
#line 219 "../lib/Widgets/SeekBar.vala"
	_tmp13_ = self->priv->_scale;
#line 219 "../lib/Widgets/SeekBar.vala"
	_tmp14_ = gtk_widget_get_events ((GtkWidget*) _tmp13_);
#line 219 "../lib/Widgets/SeekBar.vala"
	_tmp15_ = _tmp14_;
#line 219 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_events ((GtkWidget*) _tmp13_, _tmp15_ | GDK_POINTER_MOTION_MASK);
#line 220 "../lib/Widgets/SeekBar.vala"
	_tmp16_ = self->priv->_scale;
#line 220 "../lib/Widgets/SeekBar.vala"
	_tmp17_ = self->priv->_scale;
#line 220 "../lib/Widgets/SeekBar.vala"
	_tmp18_ = gtk_widget_get_events ((GtkWidget*) _tmp17_);
#line 220 "../lib/Widgets/SeekBar.vala"
	_tmp19_ = _tmp18_;
#line 220 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_events ((GtkWidget*) _tmp17_, _tmp19_ | GDK_LEAVE_NOTIFY_MASK);
#line 221 "../lib/Widgets/SeekBar.vala"
	_tmp20_ = self->priv->_scale;
#line 221 "../lib/Widgets/SeekBar.vala"
	_tmp21_ = self->priv->_scale;
#line 221 "../lib/Widgets/SeekBar.vala"
	_tmp22_ = gtk_widget_get_events ((GtkWidget*) _tmp21_);
#line 221 "../lib/Widgets/SeekBar.vala"
	_tmp23_ = _tmp22_;
#line 221 "../lib/Widgets/SeekBar.vala"
	gtk_widget_set_events ((GtkWidget*) _tmp21_, _tmp23_ | GDK_ENTER_NOTIFY_MASK);
#line 224 "../lib/Widgets/SeekBar.vala"
	_tmp24_ = self->priv->_scale;
#line 224 "../lib/Widgets/SeekBar.vala"
	g_signal_connect_object ((GtkWidget*) _tmp24_, "button-press-event", (GCallback) __granite_seek_bar___lambda65__gtk_widget_button_press_event, self, 0);
#line 229 "../lib/Widgets/SeekBar.vala"
	_tmp25_ = self->priv->_scale;
#line 229 "../lib/Widgets/SeekBar.vala"
	g_signal_connect_object ((GtkWidget*) _tmp25_, "button-release-event", (GCallback) __granite_seek_bar___lambda66__gtk_widget_button_release_event, self, 0);
#line 235 "../lib/Widgets/SeekBar.vala"
	_tmp26_ = self->priv->_scale;
#line 235 "../lib/Widgets/SeekBar.vala"
	g_signal_connect_object ((GtkWidget*) _tmp26_, "enter-notify-event", (GCallback) __granite_seek_bar___lambda67__gtk_widget_enter_notify_event, self, 0);
#line 240 "../lib/Widgets/SeekBar.vala"
	_tmp27_ = self->priv->_scale;
#line 240 "../lib/Widgets/SeekBar.vala"
	g_signal_connect_object ((GtkWidget*) _tmp27_, "leave-notify-event", (GCallback) __granite_seek_bar___lambda68__gtk_widget_leave_notify_event, self, 0);
#line 245 "../lib/Widgets/SeekBar.vala"
	_tmp28_ = self->priv->_scale;
#line 245 "../lib/Widgets/SeekBar.vala"
	g_signal_connect_object ((GtkWidget*) _tmp28_, "motion-notify-event", (GCallback) __granite_seek_bar___lambda69__gtk_widget_motion_notify_event, self, 0);
#line 250 "../lib/Widgets/SeekBar.vala"
	_tmp29_ = self->priv->_progression_label;
#line 250 "../lib/Widgets/SeekBar.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp29_);
#line 251 "../lib/Widgets/SeekBar.vala"
	_tmp30_ = self->priv->_scale;
#line 251 "../lib/Widgets/SeekBar.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp30_);
#line 252 "../lib/Widgets/SeekBar.vala"
	_tmp31_ = self->priv->_duration_label;
#line 252 "../lib/Widgets/SeekBar.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp31_);
#line 254 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_set_playback_progress (self, 0.0);
#line 207 "../lib/Widgets/SeekBar.vala"
	return obj;
#line 910 "SeekBar.c"
}

static void
granite_seek_bar_class_init (GraniteSeekBarClass * klass,
                             gpointer klass_data)
{
#line 129 "../lib/Widgets/SeekBar.vala"
	granite_seek_bar_parent_class = g_type_class_peek_parent (klass);
#line 129 "../lib/Widgets/SeekBar.vala"
	g_type_class_adjust_private_offset (klass, &GraniteSeekBar_private_offset);
#line 129 "../lib/Widgets/SeekBar.vala"
	((GtkWidgetClass *) klass)->get_preferred_width = (void (*) (GtkWidget*, gint*, gint*)) granite_seek_bar_real_get_preferred_width;
#line 129 "../lib/Widgets/SeekBar.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_granite_seek_bar_get_property;
#line 129 "../lib/Widgets/SeekBar.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_granite_seek_bar_set_property;
#line 129 "../lib/Widgets/SeekBar.vala"
	G_OBJECT_CLASS (klass)->constructor = granite_seek_bar_constructor;
#line 129 "../lib/Widgets/SeekBar.vala"
	G_OBJECT_CLASS (klass)->finalize = granite_seek_bar_finalize;
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_PLAYBACK_DURATION_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_PLAYBACK_DURATION_PROPERTY] = g_param_spec_double ("playback-duration", "playback-duration", "playback-duration", -G_MAXDOUBLE, G_MAXDOUBLE, 0.0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_PLAYBACK_PROGRESS_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_PLAYBACK_PROGRESS_PROPERTY] = g_param_spec_double ("playback-progress", "playback-progress", "playback-progress", -G_MAXDOUBLE, G_MAXDOUBLE, 0.0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_IS_GRABBING_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_IS_GRABBING_PROPERTY] = g_param_spec_boolean ("is-grabbing", "is-grabbing", "is-grabbing", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_IS_HOVERING_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_IS_HOVERING_PROPERTY] = g_param_spec_boolean ("is-hovering", "is-hovering", "is-hovering", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_PROGRESSION_LABEL_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_PROGRESSION_LABEL_PROPERTY] = g_param_spec_object ("progression-label", "progression-label", "progression-label", gtk_label_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_DURATION_LABEL_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_DURATION_LABEL_PROPERTY] = g_param_spec_object ("duration-label", "duration-label", "duration-label", gtk_label_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 129 "../lib/Widgets/SeekBar.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), GRANITE_SEEK_BAR_SCALE_PROPERTY, granite_seek_bar_properties[GRANITE_SEEK_BAR_SCALE_PROPERTY] = g_param_spec_object ("scale", "scale", "scale", gtk_scale_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 945 "SeekBar.c"
}

static void
granite_seek_bar_instance_init (GraniteSeekBar * self,
                                gpointer klass)
{
#line 129 "../lib/Widgets/SeekBar.vala"
	self->priv = granite_seek_bar_get_instance_private (self);
#line 178 "../lib/Widgets/SeekBar.vala"
	self->priv->_is_grabbing = FALSE;
#line 183 "../lib/Widgets/SeekBar.vala"
	self->priv->_is_hovering = FALSE;
#line 958 "SeekBar.c"
}

static void
granite_seek_bar_finalize (GObject * obj)
{
	GraniteSeekBar * self;
#line 129 "../lib/Widgets/SeekBar.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GRANITE_TYPE_SEEK_BAR, GraniteSeekBar);
#line 188 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (self->priv->_progression_label);
#line 193 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (self->priv->_duration_label);
#line 198 "../lib/Widgets/SeekBar.vala"
	_g_object_unref0 (self->priv->_scale);
#line 129 "../lib/Widgets/SeekBar.vala"
	G_OBJECT_CLASS (granite_seek_bar_parent_class)->finalize (obj);
#line 975 "SeekBar.c"
}

/**
 * This widget is a playback statusbar that contains a Gtk.Scale widget and
 * two labels displaying the current progression and the total duration.
 *
 * Granite.SeekBar will get the style class .seek-bar
 *
 * {{../doc/images/SeekBar.png}}
 *
 * ''Example''<<BR>>
 * {{{
 * public class SeekBarView : Gtk.Grid {
 *     private Gtk.Popover preview_popover;
 *     private Gtk.Label preview_label;
 *
 *     public SeekBarView () {
 *         Object (valign: Gtk.Align.CENTER,
 *                 margin: 24);
 *     }
 *
 *     construct {
 *         preview_popover = new Gtk.Popover (this);
 *         preview_popover.can_focus = false;
 *         preview_popover.sensitive = false;
 *         preview_popover.modal = false;
 *         preview_popover.valign = Gtk.Align.CENTER;
 *
 *         preview_label = new Gtk.Label ("");
 *         preview_label.margin = 5;
 *         preview_popover.add (preview_label);
 *         preview_popover.show_all ();
 *         preview_popover.set_visible (false);
 *
 *         var seek_bar = new Granite.SeekBar (100);
 *
 *         preview_popover.relative_to = seek_bar.scale;
 *
 *         seek_bar.scale.motion_notify_event.connect ((event) => {
 *             update_pointing ((int) event.x);
 *             if (!seek_bar.is_grabbing) {
 *                 var duration_decimal = (event.x / ((double) event.window.get_width ()));
 *                 var duration_mins = Granite.DateTime.seconds_to_time ((int) (duration_decimal * seek_bar.playback_duration));
 *                 preview_label.label = duration_mins.to_string ();
 *             }
 *             return false;
 *         });
 *
 *         seek_bar.scale.enter_notify_event.connect (() => {
 *             preview_popover.set_visible (true);
 *             return false;
 *         });
 *
 *         seek_bar.scale.leave_notify_event.connect (() => {
 *             preview_popover.set_visible (false);
 *             return false;
 *         });
 *
 *         seek_bar.scale.button_press_event.connect (() => {
 *             preview_label.margin = 10;
 *             return false;
 *         });
 *
 *         seek_bar.scale.button_release_event.connect (() => {
 *             preview_label.margin = 5;
 *             return false;
 *         });
 *
 *         seek_bar.scale.change_value.connect ((scroll, new_value) => {
 *             if (new_value >= 0.0 && new_value <= 1.0) {
 *                 var duration_mins = Granite.DateTime.seconds_to_time ((int) (new_value * seek_bar.playback_duration));
 *                 preview_label.label = duration_mins.to_string ();
 *             }
 *             return false;
 *         });
 *
 *         add (seek_bar);
 *
 *         int progress = 0;
 *         Timeout.add (500, () => {
 *             if (seek_bar.is_grabbing) {
 *                 return true;
 *             }
 *
 *             if (progress >= 10) {
 *                 progress = 0;
 *                 seek_bar.playback_progress = 0.0;
 *             } else {
 *                 progress += 1;
 *                 seek_bar.playback_progress = progress / 10.0;
 *             }
 *             return true;
 *         });
 *     }
 *
 *     private void update_pointing (int x) {
 *         var pointing = preview_popover.pointing_to;
 *         pointing.x = x;
 *
 *         // changing the width properly updates arrow position when popover hits the edge
 *         if (pointing.width == 0) {
 *             pointing.width = 2;
 *             pointing.x -= 1;
 *         } else {
 *             pointing.width = 0;
 *         }
 *
 *         preview_popover.set_pointing_to (pointing);
 *     }
 * }
 * }}}
 */
static GType
granite_seek_bar_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (GraniteSeekBarClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) granite_seek_bar_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GraniteSeekBar), 0, (GInstanceInitFunc) granite_seek_bar_instance_init, NULL };
	GType granite_seek_bar_type_id;
	granite_seek_bar_type_id = g_type_register_static (gtk_grid_get_type (), "GraniteSeekBar", &g_define_type_info, 0);
	GraniteSeekBar_private_offset = g_type_add_instance_private (granite_seek_bar_type_id, sizeof (GraniteSeekBarPrivate));
	return granite_seek_bar_type_id;
}

GType
granite_seek_bar_get_type (void)
{
	static volatile gsize granite_seek_bar_type_id__volatile = 0;
	if (g_once_init_enter (&granite_seek_bar_type_id__volatile)) {
		GType granite_seek_bar_type_id;
		granite_seek_bar_type_id = granite_seek_bar_get_type_once ();
		g_once_init_leave (&granite_seek_bar_type_id__volatile, granite_seek_bar_type_id);
	}
	return granite_seek_bar_type_id__volatile;
}

static void
_vala_granite_seek_bar_get_property (GObject * object,
                                     guint property_id,
                                     GValue * value,
                                     GParamSpec * pspec)
{
	GraniteSeekBar * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_TYPE_SEEK_BAR, GraniteSeekBar);
#line 129 "../lib/Widgets/SeekBar.vala"
	switch (property_id) {
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_PLAYBACK_DURATION_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_double (value, granite_seek_bar_get_playback_duration (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_PLAYBACK_PROGRESS_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_double (value, granite_seek_bar_get_playback_progress (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_IS_GRABBING_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_boolean (value, granite_seek_bar_get_is_grabbing (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_IS_HOVERING_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_boolean (value, granite_seek_bar_get_is_hovering (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_PROGRESSION_LABEL_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_object (value, granite_seek_bar_get_progression_label (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_DURATION_LABEL_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_object (value, granite_seek_bar_get_duration_label (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_SCALE_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		g_value_set_object (value, granite_seek_bar_get_scale (self));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 1162 "SeekBar.c"
		default:
#line 129 "../lib/Widgets/SeekBar.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 1168 "SeekBar.c"
	}
}

static void
_vala_granite_seek_bar_set_property (GObject * object,
                                     guint property_id,
                                     const GValue * value,
                                     GParamSpec * pspec)
{
	GraniteSeekBar * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, GRANITE_TYPE_SEEK_BAR, GraniteSeekBar);
#line 129 "../lib/Widgets/SeekBar.vala"
	switch (property_id) {
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_PLAYBACK_DURATION_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_playback_duration (self, g_value_get_double (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_PLAYBACK_PROGRESS_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_playback_progress (self, g_value_get_double (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_IS_GRABBING_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_is_grabbing (self, g_value_get_boolean (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_IS_HOVERING_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_is_hovering (self, g_value_get_boolean (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_PROGRESSION_LABEL_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_progression_label (self, g_value_get_object (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_DURATION_LABEL_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_duration_label (self, g_value_get_object (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 129 "../lib/Widgets/SeekBar.vala"
		case GRANITE_SEEK_BAR_SCALE_PROPERTY:
#line 129 "../lib/Widgets/SeekBar.vala"
		granite_seek_bar_set_scale (self, g_value_get_object (value));
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 1224 "SeekBar.c"
		default:
#line 129 "../lib/Widgets/SeekBar.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 129 "../lib/Widgets/SeekBar.vala"
		break;
#line 1230 "SeekBar.c"
	}
}

