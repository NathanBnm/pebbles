/* CalculusDisplay.c generated by valac 0.48.14, the Vala compiler
 * generated from CalculusDisplay.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <granite.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>

#define PEBBLES_TYPE_CALCULUS_DISPLAY (pebbles_calculus_display_get_type ())
#define PEBBLES_CALCULUS_DISPLAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_CALCULUS_DISPLAY, PebblesCalculusDisplay))
#define PEBBLES_CALCULUS_DISPLAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_CALCULUS_DISPLAY, PebblesCalculusDisplayClass))
#define PEBBLES_IS_CALCULUS_DISPLAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_CALCULUS_DISPLAY))
#define PEBBLES_IS_CALCULUS_DISPLAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_CALCULUS_DISPLAY))
#define PEBBLES_CALCULUS_DISPLAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_CALCULUS_DISPLAY, PebblesCalculusDisplayClass))

typedef struct _PebblesCalculusDisplay PebblesCalculusDisplay;
typedef struct _PebblesCalculusDisplayClass PebblesCalculusDisplayClass;
typedef struct _PebblesCalculusDisplayPrivate PebblesCalculusDisplayPrivate;
typedef enum  {
	PEBBLES_GLOBAL_ANGLE_UNIT_DEG = 0,
	PEBBLES_GLOBAL_ANGLE_UNIT_RAD = 1,
	PEBBLES_GLOBAL_ANGLE_UNIT_GRAD = 2
} PebblesGlobalAngleUnit;

#define PEBBLES_TYPE_GLOBAL_ANGLE_UNIT (pebbles_global_angle_unit_get_type ())

#define PEBBLES_TYPE_CALCULUS_VIEW (pebbles_calculus_view_get_type ())
#define PEBBLES_CALCULUS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_CALCULUS_VIEW, PebblesCalculusView))
#define PEBBLES_CALCULUS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_CALCULUS_VIEW, PebblesCalculusViewClass))
#define PEBBLES_IS_CALCULUS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_CALCULUS_VIEW))
#define PEBBLES_IS_CALCULUS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_CALCULUS_VIEW))
#define PEBBLES_CALCULUS_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_CALCULUS_VIEW, PebblesCalculusViewClass))

typedef struct _PebblesCalculusView PebblesCalculusView;
typedef struct _PebblesCalculusViewClass PebblesCalculusViewClass;
enum  {
	PEBBLES_CALCULUS_DISPLAY_0_PROPERTY,
	PEBBLES_CALCULUS_DISPLAY_NUM_PROPERTIES
};
static GParamSpec* pebbles_calculus_display_properties[PEBBLES_CALCULUS_DISPLAY_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define PEBBLES_TYPE_SETTINGS (pebbles_settings_get_type ())
#define PEBBLES_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettings))
#define PEBBLES_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))
#define PEBBLES_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))

typedef struct _PebblesSettings PebblesSettings;
typedef struct _PebblesSettingsClass PebblesSettingsClass;
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _PebblesCalculusViewPrivate PebblesCalculusViewPrivate;

#define PEBBLES_TYPE_MAIN_WINDOW (pebbles_main_window_get_type ())
#define PEBBLES_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_MAIN_WINDOW, PebblesMainWindow))
#define PEBBLES_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_MAIN_WINDOW, PebblesMainWindowClass))
#define PEBBLES_IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_MAIN_WINDOW))
#define PEBBLES_IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_MAIN_WINDOW))
#define PEBBLES_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_MAIN_WINDOW, PebblesMainWindowClass))

typedef struct _PebblesMainWindow PebblesMainWindow;
typedef struct _PebblesMainWindowClass PebblesMainWindowClass;

#define PEBBLES_TYPE_STYLED_BUTTON (pebbles_styled_button_get_type ())
#define PEBBLES_STYLED_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_STYLED_BUTTON, PebblesStyledButton))
#define PEBBLES_STYLED_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_STYLED_BUTTON, PebblesStyledButtonClass))
#define PEBBLES_IS_STYLED_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_STYLED_BUTTON))
#define PEBBLES_IS_STYLED_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_STYLED_BUTTON))
#define PEBBLES_STYLED_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_STYLED_BUTTON, PebblesStyledButtonClass))

typedef struct _PebblesStyledButton PebblesStyledButton;
typedef struct _PebblesStyledButtonClass PebblesStyledButtonClass;
typedef struct _PebblesMainWindowPrivate PebblesMainWindowPrivate;

#define PEBBLES_TYPE_HISTORY_MANAGER (pebbles_history_manager_get_type ())
#define PEBBLES_HISTORY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManager))
#define PEBBLES_HISTORY_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManagerClass))
#define PEBBLES_IS_HISTORY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_HISTORY_MANAGER))
#define PEBBLES_IS_HISTORY_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_HISTORY_MANAGER))
#define PEBBLES_HISTORY_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManagerClass))

typedef struct _PebblesHistoryManager PebblesHistoryManager;
typedef struct _PebblesHistoryManagerClass PebblesHistoryManagerClass;
typedef enum  {
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_SCIF,
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC,
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_PROG
} PebblesEvaluationResultResultSource;

#define PEBBLES_EVALUATION_RESULT_TYPE_RESULT_SOURCE (pebbles_evaluation_result_result_source_get_type ())

#define PEBBLES_TYPE_EVALUATION_RESULT (pebbles_evaluation_result_get_type ())
#define PEBBLES_EVALUATION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResult))
#define PEBBLES_EVALUATION_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResultClass))
#define PEBBLES_IS_EVALUATION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_EVALUATION_RESULT))
#define PEBBLES_IS_EVALUATION_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_EVALUATION_RESULT))
#define PEBBLES_EVALUATION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResultClass))

typedef struct _PebblesEvaluationResult PebblesEvaluationResult;
typedef struct _PebblesEvaluationResultClass PebblesEvaluationResultClass;
#define _pebbles_evaluation_result_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_evaluation_result_unref (var), NULL)))
#define _g_regex_unref0(var) ((var == NULL) ? NULL : (var = (g_regex_unref (var), NULL)))
typedef enum  {
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_NONE,
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_INT,
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_DER
} PebblesEvaluationResultCalculusResultMode;

#define PEBBLES_EVALUATION_RESULT_TYPE_CALCULUS_RESULT_MODE (pebbles_evaluation_result_calculus_result_mode_get_type ())

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN (pebbles_programmer_calculator_token_get_type ())
typedef struct _PebblesProgrammerCalculatorToken PebblesProgrammerCalculatorToken;
typedef enum  {
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS
} PebblesProgrammerCalculatorTokenType;

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN_TYPE (pebbles_programmer_calculator_token_type_get_type ())
typedef enum  {
	PEBBLES_NUMBER_SYSTEM_BINARY,
	PEBBLES_NUMBER_SYSTEM_OCTAL,
	PEBBLES_NUMBER_SYSTEM_DECIMAL,
	PEBBLES_NUMBER_SYSTEM_HEXADECIMAL
} PebblesNumberSystem;

#define PEBBLES_TYPE_NUMBER_SYSTEM (pebbles_number_system_get_type ())
typedef enum  {
	PEBBLES_GLOBAL_WORD_LENGTH_QWD = 0,
	PEBBLES_GLOBAL_WORD_LENGTH_DWD = 1,
	PEBBLES_GLOBAL_WORD_LENGTH_WRD = 2,
	PEBBLES_GLOBAL_WORD_LENGTH_BYT = 3
} PebblesGlobalWordLength;

#define PEBBLES_TYPE_GLOBAL_WORD_LENGTH (pebbles_global_word_length_get_type ())

struct _PebblesCalculusDisplay {
	GtkGrid parent_instance;
	PebblesCalculusDisplayPrivate * priv;
	GtkLabel* answer_label;
	GtkEntry* input_entry;
};

struct _PebblesCalculusDisplayClass {
	GtkGridClass parent_class;
};

struct _PebblesCalculusDisplayPrivate {
	GtkGrid* lcd_status_bar;
	GtkLabel* deg_label;
	GtkLabel* rad_label;
	GtkLabel* grad_label;
	GtkLabel* memory_label;
	GtkLabel* shift_label;
	PebblesGlobalAngleUnit angle_mode;
	PebblesCalculusView* cal_view;
};

struct _PebblesCalculusView {
	GtkGrid parent_instance;
	PebblesCalculusViewPrivate * priv;
	PebblesMainWindow* window;
	PebblesCalculusDisplay* display_unit;
	PebblesStyledButton* last_answer_button;
};

struct _PebblesCalculusViewClass {
	GtkGridClass parent_class;
};

struct _PebblesMainWindow {
	GtkWindow parent_instance;
	PebblesMainWindowPrivate * priv;
	GtkStack* header_switcher;
	GtkSwitch* shift_switch;
	GtkSwitch* diff_mode_switch;
	GtkSwitch* add_mode_switch;
	GtkStack* date_mode_stack;
	GtkGrid* date_diff_grid;
	GtkGrid* date_add_grid;
	GtkSwitch* shift_switch_prog;
	GtkButton* update_button;
	PebblesHistoryManager* history_manager;
};

struct _PebblesMainWindowClass {
	GtkWindowClass parent_class;
};

struct _PebblesProgrammerCalculatorToken {
	gchar* token;
	PebblesProgrammerCalculatorTokenType type;
	PebblesNumberSystem number_system;
};

static gint PebblesCalculusDisplay_private_offset;
static gpointer pebbles_calculus_display_parent_class = NULL;

GType pebbles_calculus_display_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesCalculusDisplay, g_object_unref)
GType pebbles_global_angle_unit_get_type (void) G_GNUC_CONST;
GType pebbles_calculus_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesCalculusView, g_object_unref)
PebblesCalculusDisplay* pebbles_calculus_display_new (PebblesCalculusView* view);
PebblesCalculusDisplay* pebbles_calculus_display_construct (GType object_type,
                                                            PebblesCalculusView* view);
static void pebbles_calculus_display_calc_make_display_ui (PebblesCalculusDisplay* self);
GType pebbles_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesSettings, g_object_unref)
PebblesSettings* pebbles_settings_get_default (void);
const gchar* pebbles_settings_get_cal_output_text (PebblesSettings* self);
const gchar* pebbles_settings_get_cal_input_text (PebblesSettings* self);
static void __lambda121_ (PebblesCalculusDisplay* self);
static void ___lambda121__gtk_editable_changed (GtkEditable* _sender,
                                         gpointer self);
void pebbles_calculus_display_set_shift_enable (PebblesCalculusDisplay* self,
                                                gboolean s_on);
void pebbles_calculus_display_set_angle_status (PebblesCalculusDisplay* self,
                                                gint state);
void pebbles_calculus_display_set_memory_status (PebblesCalculusDisplay* self,
                                                 gboolean state);
void pebbles_calculus_display_get_answer_evaluate_derivative (PebblesCalculusDisplay* self,
                                                              gdouble dx);
GType pebbles_main_window_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesMainWindow, g_object_unref)
GType pebbles_styled_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesStyledButton, g_object_unref)
gpointer pebbles_history_manager_ref (gpointer instance);
void pebbles_history_manager_unref (gpointer instance);
GParamSpec* pebbles_param_spec_history_manager (const gchar* name,
                                                const gchar* nick,
                                                const gchar* blurb,
                                                GType object_type,
                                                GParamFlags flags);
void pebbles_value_set_history_manager (GValue* value,
                                        gpointer v_object);
void pebbles_value_take_history_manager (GValue* value,
                                         gpointer v_object);
gpointer pebbles_value_get_history_manager (const GValue* value);
GType pebbles_history_manager_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesHistoryManager, pebbles_history_manager_unref)
GType pebbles_evaluation_result_result_source_get_type (void) G_GNUC_CONST;
gboolean pebbles_history_manager_is_empty (PebblesHistoryManager* self,
                                           PebblesEvaluationResultResultSource* mode);
gpointer pebbles_evaluation_result_ref (gpointer instance);
void pebbles_evaluation_result_unref (gpointer instance);
GParamSpec* pebbles_param_spec_evaluation_result (const gchar* name,
                                                  const gchar* nick,
                                                  const gchar* blurb,
                                                  GType object_type,
                                                  GParamFlags flags);
void pebbles_value_set_evaluation_result (GValue* value,
                                          gpointer v_object);
void pebbles_value_take_evaluation_result (GValue* value,
                                           gpointer v_object);
gpointer pebbles_value_get_evaluation_result (const GValue* value);
GType pebbles_evaluation_result_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesEvaluationResult, pebbles_evaluation_result_unref)
PebblesEvaluationResult* pebbles_history_manager_get_last_evaluation_result (PebblesHistoryManager* self,
                                                                             PebblesEvaluationResultResultSource* mode);
const gchar* pebbles_evaluation_result_get_result (PebblesEvaluationResult* self);
gchar* pebbles_calculus_get_derivative (const gchar* exp,
                                        PebblesGlobalAngleUnit angle_mode_in,
                                        gdouble val);
gchar* pebbles_utils_format_result (const gchar* _result_);
void pebbles_settings_set_cal_output_text (PebblesSettings* self,
                                           const gchar* value);
void pebbles_settings_set_cal_input_text (PebblesSettings* self,
                                          const gchar* value);
static void pebbles_calculus_display_shake (PebblesCalculusDisplay* self);
GType pebbles_evaluation_result_calculus_result_mode_get_type (void) G_GNUC_CONST;
GType pebbles_programmer_calculator_token_get_type (void) G_GNUC_CONST;
GType pebbles_programmer_calculator_token_type_get_type (void) G_GNUC_CONST;
GType pebbles_number_system_get_type (void) G_GNUC_CONST;
PebblesProgrammerCalculatorToken* pebbles_programmer_calculator_token_dup (const PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_free (PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_copy (const PebblesProgrammerCalculatorToken* self,
                                               PebblesProgrammerCalculatorToken* dest);
void pebbles_programmer_calculator_token_destroy (PebblesProgrammerCalculatorToken* self);
GType pebbles_global_word_length_get_type (void) G_GNUC_CONST;
void pebbles_history_manager_append_from_strings (PebblesHistoryManager* self,
                                                  PebblesEvaluationResultResultSource result_source,
                                                  const gchar* problem_expression,
                                                  const gchar* _result_,
                                                  PebblesGlobalAngleUnit* angle_mode,
                                                  PebblesEvaluationResultCalculusResultMode* calc_mode,
                                                  gdouble* int_limit_a,
                                                  gdouble* int_limit_b,
                                                  gdouble* derivative_point,
                                                  PebblesProgrammerCalculatorToken* token_list,
                                                  gint token_list_length1,
                                                  gboolean* output,
                                                  gint output_length1,
                                                  PebblesGlobalWordLength* output_word_length);
gchar* pebbles_utils_get_local_separator_symbol (void);
void pebbles_calculus_display_get_answer_evaluate_integral (PebblesCalculusDisplay* self,
                                                            gdouble l,
                                                            gdouble u);
gchar* pebbles_calculus_get_definite_integral (const gchar* exp,
                                               PebblesGlobalAngleUnit angle_mode_in,
                                               gdouble lower_limit,
                                               gdouble upper_limit);
static gboolean __lambda122_ (PebblesCalculusDisplay* self);
static gboolean ___lambda122__gsource_func (gpointer self);
void pebbles_calculus_display_display_off (PebblesCalculusDisplay* self);
void pebbles_calculus_display_display_on (PebblesCalculusDisplay* self);
void pebbles_calculus_display_send_backspace (PebblesCalculusDisplay* self);
void pebbles_calculus_display_insert_text (PebblesCalculusDisplay* self,
                                           const gchar* text);
void pebbles_calculus_display_set_evaluation (PebblesCalculusDisplay* self,
                                              PebblesEvaluationResult* _result_);
const gchar* pebbles_evaluation_result_get_problem_expression (PebblesEvaluationResult* self);
void pebbles_calculus_display_write_answer_to_clipboard (PebblesCalculusDisplay* self);
static GObject * pebbles_calculus_display_constructor (GType type,
                                                guint n_construct_properties,
                                                GObjectConstructParam * construct_properties);
static void pebbles_calculus_display_finalize (GObject * obj);
static GType pebbles_calculus_display_get_type_once (void);

static inline gpointer
pebbles_calculus_display_get_instance_private (PebblesCalculusDisplay* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesCalculusDisplay_private_offset);
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 46 "../src/Views/Displays/CalculusDisplay.vala"
	return self ? g_object_ref (self) : NULL;
#line 358 "CalculusDisplay.c"
}

PebblesCalculusDisplay*
pebbles_calculus_display_construct (GType object_type,
                                    PebblesCalculusView* view)
{
	PebblesCalculusDisplay * self = NULL;
	PebblesCalculusView* _tmp0_;
#line 45 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_val_if_fail (view != NULL, NULL);
#line 45 "../src/Views/Displays/CalculusDisplay.vala"
	self = (PebblesCalculusDisplay*) g_object_new (object_type, NULL);
#line 46 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = _g_object_ref0 (view);
#line 46 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->cal_view);
#line 46 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->cal_view = _tmp0_;
#line 45 "../src/Views/Displays/CalculusDisplay.vala"
	return self;
#line 379 "CalculusDisplay.c"
}

PebblesCalculusDisplay*
pebbles_calculus_display_new (PebblesCalculusView* view)
{
#line 45 "../src/Views/Displays/CalculusDisplay.vala"
	return pebbles_calculus_display_construct (PEBBLES_TYPE_CALCULUS_DISPLAY, view);
#line 387 "CalculusDisplay.c"
}

static gchar*
string_slice (const gchar* self,
              glong start,
              glong end)
{
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 1480 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1481 "glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1481 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1481 "glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1482 "glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 1483 "glib-2.0.vapi"
		start = string_length + start;
#line 414 "CalculusDisplay.c"
	}
#line 1485 "glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 1486 "glib-2.0.vapi"
		end = string_length + end;
#line 420 "CalculusDisplay.c"
	}
#line 1488 "glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = start <= string_length;
#line 426 "CalculusDisplay.c"
	} else {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = FALSE;
#line 430 "CalculusDisplay.c"
	}
#line 1488 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp2_, NULL);
#line 1489 "glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = end <= string_length;
#line 438 "CalculusDisplay.c"
	} else {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = FALSE;
#line 442 "CalculusDisplay.c"
	}
#line 1489 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp3_, NULL);
#line 1490 "glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1491 "glib-2.0.vapi"
	_tmp4_ = g_strndup (((gchar*) self) + start, (gsize) (end - start));
#line 1491 "glib-2.0.vapi"
	result = _tmp4_;
#line 1491 "glib-2.0.vapi"
	return result;
#line 454 "CalculusDisplay.c"
}

static void
__lambda121_ (PebblesCalculusDisplay* self)
{
	gboolean _tmp0_ = FALSE;
	GtkEntry* _tmp1_;
	const gchar* _tmp2_;
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = self->input_entry;
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
	if (g_str_has_prefix (_tmp2_, "0")) {
#line 469 "CalculusDisplay.c"
		GtkEntry* _tmp3_;
		const gchar* _tmp4_;
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp3_ = self->input_entry;
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp4_ = gtk_entry_get_text (_tmp3_);
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp0_ = _tmp4_ != NULL;
#line 478 "CalculusDisplay.c"
	} else {
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp0_ = FALSE;
#line 482 "CalculusDisplay.c"
	}
#line 105 "../src/Views/Displays/CalculusDisplay.vala"
	if (_tmp0_) {
#line 486 "CalculusDisplay.c"
		GtkEntry* _tmp5_;
		const gchar* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
#line 106 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp5_ = self->input_entry;
#line 106 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp6_ = gtk_entry_get_text (_tmp5_);
#line 106 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp7_ = strlen (_tmp6_);
#line 106 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp8_ = _tmp7_;
#line 106 "../src/Views/Displays/CalculusDisplay.vala"
		if (_tmp8_ != 1) {
#line 501 "CalculusDisplay.c"
			GtkEntry* _tmp9_;
			GtkEntry* _tmp10_;
			const gchar* _tmp11_;
			GtkEntry* _tmp12_;
			const gchar* _tmp13_;
			gint _tmp14_;
			gint _tmp15_;
			gchar* _tmp16_;
			gchar* _tmp17_;
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp9_ = self->input_entry;
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp10_ = self->input_entry;
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp11_ = gtk_entry_get_text (_tmp10_);
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp12_ = self->input_entry;
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp13_ = gtk_entry_get_text (_tmp12_);
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp14_ = strlen (_tmp13_);
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp15_ = _tmp14_;
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp16_ = string_slice (_tmp11_, (glong) 1, (glong) _tmp15_);
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp17_ = _tmp16_;
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_entry_set_text (_tmp9_, _tmp17_);
#line 107 "../src/Views/Displays/CalculusDisplay.vala"
			_g_free0 (_tmp17_);
#line 533 "CalculusDisplay.c"
		}
	}
}

static void
___lambda121__gtk_editable_changed (GtkEditable* _sender,
                                    gpointer self)
{
#line 104 "../src/Views/Displays/CalculusDisplay.vala"
	__lambda121_ ((PebblesCalculusDisplay*) self);
#line 544 "CalculusDisplay.c"
}

static void
pebbles_calculus_display_calc_make_display_ui (PebblesCalculusDisplay* self)
{
	PebblesSettings* settings = NULL;
	PebblesSettings* _tmp0_;
	GtkStyleContext* _tmp1_;
	GtkGrid* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkLabel* _tmp6_;
	GtkLabel* _tmp7_;
	GtkStyleContext* _tmp8_;
	GtkLabel* _tmp9_;
	GtkLabel* _tmp10_;
	GtkStyleContext* _tmp11_;
	GtkLabel* _tmp12_;
	GtkLabel* _tmp13_;
	GtkStyleContext* _tmp14_;
	GtkLabel* _tmp15_;
	GtkLabel* _tmp16_;
	GtkLabel* _tmp17_;
	GtkStyleContext* _tmp18_;
	GtkLabel* _tmp19_;
	GtkGrid* angle_mode_display = NULL;
	GtkGrid* _tmp20_;
	GtkLabel* _tmp21_;
	GtkLabel* _tmp22_;
	GtkLabel* _tmp23_;
	GtkGrid* _tmp24_;
	GtkGrid* _tmp25_;
	GtkLabel* _tmp26_;
	GtkGrid* _tmp27_;
	GtkLabel* _tmp28_;
	GtkGrid* _tmp29_;
	GtkGrid* _tmp30_;
	GtkGrid* _tmp31_;
	const gchar* _tmp32_;
	const gchar* _tmp33_;
	GtkLabel* _tmp34_;
	GtkLabel* _tmp35_;
	GtkLabel* _tmp36_;
	GtkStyleContext* _tmp37_;
	GtkScrolledWindow* scrollable = NULL;
	GtkScrolledWindow* _tmp38_;
	GtkLabel* _tmp39_;
	GtkStyleContext* _tmp40_;
	GtkEntry* _tmp41_;
	GtkEntry* _tmp42_;
	GtkEntry* _tmp43_;
	const gchar* _tmp44_;
	const gchar* _tmp45_;
	GtkEntry* _tmp46_;
	GtkStyleContext* _tmp47_;
	GtkEntry* _tmp48_;
	GtkEntry* _tmp49_;
	GtkEntry* _tmp50_;
	GtkEntry* _tmp51_;
	GtkSeparator* lcd_separator = NULL;
	GtkSeparator* _tmp52_;
	GtkGrid* _tmp53_;
	GtkEntry* _tmp54_;
#line 49 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 50 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = pebbles_settings_get_default ();
#line 50 "../src/Views/Displays/CalculusDisplay.vala"
	settings = _tmp0_;
#line 53 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 53 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp1_, "Pebbles_Display_Unit_Bg");
#line 56 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = (GtkGrid*) gtk_grid_new ();
#line 56 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp2_);
#line 56 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->lcd_status_bar);
#line 56 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->lcd_status_bar = _tmp2_;
#line 57 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp3_ = (GtkLabel*) gtk_label_new ("DEG");
#line 57 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp3_);
#line 57 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->deg_label);
#line 57 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->deg_label = _tmp3_;
#line 58 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp4_ = self->priv->deg_label;
#line 58 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 58 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp5_, "pebbles_h4");
#line 59 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp6_ = (GtkLabel*) gtk_label_new ("RAD");
#line 59 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp6_);
#line 59 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->rad_label);
#line 59 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->rad_label = _tmp6_;
#line 60 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp7_ = self->priv->rad_label;
#line 60 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 60 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp8_, "pebbles_h4");
#line 61 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp9_ = (GtkLabel*) gtk_label_new ("GRA");
#line 61 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp9_);
#line 61 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->grad_label);
#line 61 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->grad_label = _tmp9_;
#line 62 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp10_ = self->priv->grad_label;
#line 62 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp11_ = gtk_widget_get_style_context ((GtkWidget*) _tmp10_);
#line 62 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp11_, "pebbles_h4");
#line 63 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp12_ = (GtkLabel*) gtk_label_new ("M");
#line 63 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp12_);
#line 63 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->memory_label);
#line 63 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->memory_label = _tmp12_;
#line 64 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp13_ = self->priv->memory_label;
#line 64 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp14_ = gtk_widget_get_style_context ((GtkWidget*) _tmp13_);
#line 64 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp14_, "pebbles_h4");
#line 65 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp15_ = self->priv->memory_label;
#line 65 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp15_, 0.2);
#line 66 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp16_ = (GtkLabel*) gtk_label_new ("SHIFT");
#line 66 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp16_);
#line 66 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->shift_label);
#line 66 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv->shift_label = _tmp16_;
#line 67 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp17_ = self->priv->shift_label;
#line 67 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp18_ = gtk_widget_get_style_context ((GtkWidget*) _tmp17_);
#line 67 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp18_, "pebbles_h4");
#line 68 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp19_ = self->priv->shift_label;
#line 68 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp19_, 0.2);
#line 70 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp20_ = (GtkGrid*) gtk_grid_new ();
#line 70 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp20_);
#line 70 "../src/Views/Displays/CalculusDisplay.vala"
	angle_mode_display = _tmp20_;
#line 71 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp21_ = self->priv->deg_label;
#line 71 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach (angle_mode_display, (GtkWidget*) _tmp21_, 0, 0, 1, 1);
#line 72 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp22_ = self->priv->rad_label;
#line 72 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach (angle_mode_display, (GtkWidget*) _tmp22_, 1, 0, 1, 1);
#line 73 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp23_ = self->priv->grad_label;
#line 73 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach (angle_mode_display, (GtkWidget*) _tmp23_, 2, 0, 1, 1);
#line 74 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_set_column_spacing (angle_mode_display, 10);
#line 76 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp24_ = self->priv->lcd_status_bar;
#line 76 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach (_tmp24_, (GtkWidget*) angle_mode_display, 0, 0, 1, 1);
#line 77 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp25_ = self->priv->lcd_status_bar;
#line 77 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp26_ = self->priv->memory_label;
#line 77 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach (_tmp25_, (GtkWidget*) _tmp26_, 1, 0, 1, 1);
#line 78 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp27_ = self->priv->lcd_status_bar;
#line 78 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp28_ = self->priv->shift_label;
#line 78 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach (_tmp27_, (GtkWidget*) _tmp28_, 2, 0, 1, 1);
#line 79 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp29_ = self->priv->lcd_status_bar;
#line 79 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_set_column_spacing (_tmp29_, 205);
#line 80 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp30_ = self->priv->lcd_status_bar;
#line 80 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_set ((GtkWidget*) _tmp30_, "width-request", 530, NULL);
#line 81 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp31_ = self->priv->lcd_status_bar;
#line 81 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp31_, GTK_ALIGN_END);
#line 84 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp32_ = pebbles_settings_get_cal_output_text (settings);
#line 84 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp33_ = _tmp32_;
#line 84 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp34_ = (GtkLabel*) gtk_label_new (_tmp33_);
#line 84 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp34_);
#line 84 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->answer_label);
#line 84 "../src/Views/Displays/CalculusDisplay.vala"
	self->answer_label = _tmp34_;
#line 85 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp35_ = self->answer_label;
#line 85 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp35_, GTK_ALIGN_END);
#line 86 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp36_ = self->answer_label;
#line 86 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp37_ = gtk_widget_get_style_context ((GtkWidget*) _tmp36_);
#line 86 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp37_, "pebbles_h1");
#line 87 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp38_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 87 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp38_);
#line 87 "../src/Views/Displays/CalculusDisplay.vala"
	scrollable = _tmp38_;
#line 88 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp39_ = self->answer_label;
#line 88 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_container_add ((GtkContainer*) scrollable, (GtkWidget*) _tmp39_);
#line 89 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_scrolled_window_set_propagate_natural_height (scrollable, TRUE);
#line 90 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_scrolled_window_set_shadow_type (scrollable, GTK_SHADOW_NONE);
#line 91 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp40_ = gtk_widget_get_style_context ((GtkWidget*) scrollable);
#line 91 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp40_, "pebbles_h1");
#line 94 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp41_ = (GtkEntry*) gtk_entry_new ();
#line 94 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp41_);
#line 94 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->input_entry);
#line 94 "../src/Views/Displays/CalculusDisplay.vala"
	self->input_entry = _tmp41_;
#line 96 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp42_ = self->input_entry;
#line 96 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_entry_set_has_frame (_tmp42_, FALSE);
#line 97 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp43_ = self->input_entry;
#line 97 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp44_ = pebbles_settings_get_cal_input_text (settings);
#line 97 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp45_ = _tmp44_;
#line 97 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_entry_set_text (_tmp43_, _tmp45_);
#line 98 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp46_ = self->input_entry;
#line 98 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp47_ = gtk_widget_get_style_context ((GtkWidget*) _tmp46_);
#line 98 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp47_, "pebbles_h2");
#line 99 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp48_ = self->input_entry;
#line 99 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp48_, GTK_ALIGN_START);
#line 100 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp49_ = self->input_entry;
#line 100 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_set ((GtkWidget*) _tmp49_, "width-request", 530, NULL);
#line 101 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp50_ = self->input_entry;
#line 101 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_entry_set_max_width_chars (_tmp50_, 39);
#line 104 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp51_ = self->input_entry;
#line 104 "../src/Views/Displays/CalculusDisplay.vala"
	g_signal_connect_object ((GtkEditable*) _tmp51_, "changed", (GCallback) ___lambda121__gtk_editable_changed, self, 0);
#line 113 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp52_ = (GtkSeparator*) gtk_separator_new (GTK_ORIENTATION_HORIZONTAL);
#line 113 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_ref_sink (_tmp52_);
#line 113 "../src/Views/Displays/CalculusDisplay.vala"
	lcd_separator = _tmp52_;
#line 114 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) lcd_separator, 0.6);
#line 117 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp53_ = self->priv->lcd_status_bar;
#line 117 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp53_, 0, 0, 1, 1);
#line 118 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) scrollable, 0, 1, 1, 1);
#line 119 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) lcd_separator, 0, 2, 1, 1);
#line 120 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp54_ = self->input_entry;
#line 120 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp54_, 0, 3, 1, 1);
#line 122 "../src/Views/Displays/CalculusDisplay.vala"
	g_object_set ((GtkWidget*) self, "width-request", 530, NULL);
#line 49 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (lcd_separator);
#line 49 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (scrollable);
#line 49 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (angle_mode_display);
#line 49 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (settings);
#line 865 "CalculusDisplay.c"
}

void
pebbles_calculus_display_set_shift_enable (PebblesCalculusDisplay* self,
                                           gboolean s_on)
{
#line 125 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 126 "../src/Views/Displays/CalculusDisplay.vala"
	if (s_on) {
#line 876 "CalculusDisplay.c"
		GtkLabel* _tmp0_;
#line 127 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp0_ = self->priv->shift_label;
#line 127 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp0_, (gdouble) 1);
#line 882 "CalculusDisplay.c"
	} else {
		GtkLabel* _tmp1_;
#line 130 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp1_ = self->priv->shift_label;
#line 130 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp1_, 0.2);
#line 889 "CalculusDisplay.c"
	}
#line 132 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_queue_draw ((GtkWidget*) self);
#line 893 "CalculusDisplay.c"
}

void
pebbles_calculus_display_set_angle_status (PebblesCalculusDisplay* self,
                                           gint state)
{
#line 135 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 136 "../src/Views/Displays/CalculusDisplay.vala"
	switch (state) {
#line 136 "../src/Views/Displays/CalculusDisplay.vala"
		case 1:
#line 906 "CalculusDisplay.c"
		{
			GtkLabel* _tmp0_;
			GtkLabel* _tmp1_;
			GtkLabel* _tmp2_;
#line 138 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp0_ = self->priv->deg_label;
#line 138 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp0_, 0.2);
#line 139 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp1_ = self->priv->rad_label;
#line 139 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp1_, (gdouble) 1);
#line 140 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp2_ = self->priv->grad_label;
#line 140 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp2_, 0.2);
#line 141 "../src/Views/Displays/CalculusDisplay.vala"
			self->priv->angle_mode = PEBBLES_GLOBAL_ANGLE_UNIT_RAD;
#line 142 "../src/Views/Displays/CalculusDisplay.vala"
			break;
#line 927 "CalculusDisplay.c"
		}
#line 136 "../src/Views/Displays/CalculusDisplay.vala"
		case 2:
#line 931 "CalculusDisplay.c"
		{
			GtkLabel* _tmp3_;
			GtkLabel* _tmp4_;
			GtkLabel* _tmp5_;
#line 144 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp3_ = self->priv->deg_label;
#line 144 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp3_, 0.2);
#line 145 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp4_ = self->priv->rad_label;
#line 145 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp4_, 0.2);
#line 146 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp5_ = self->priv->grad_label;
#line 146 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp5_, (gdouble) 1);
#line 147 "../src/Views/Displays/CalculusDisplay.vala"
			self->priv->angle_mode = PEBBLES_GLOBAL_ANGLE_UNIT_GRAD;
#line 148 "../src/Views/Displays/CalculusDisplay.vala"
			break;
#line 952 "CalculusDisplay.c"
		}
		default:
		{
			GtkLabel* _tmp6_;
			GtkLabel* _tmp7_;
			GtkLabel* _tmp8_;
#line 150 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp6_ = self->priv->deg_label;
#line 150 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp6_, (gdouble) 1);
#line 151 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp7_ = self->priv->rad_label;
#line 151 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp7_, 0.2);
#line 152 "../src/Views/Displays/CalculusDisplay.vala"
			_tmp8_ = self->priv->grad_label;
#line 152 "../src/Views/Displays/CalculusDisplay.vala"
			gtk_widget_set_opacity ((GtkWidget*) _tmp8_, 0.2);
#line 153 "../src/Views/Displays/CalculusDisplay.vala"
			self->priv->angle_mode = PEBBLES_GLOBAL_ANGLE_UNIT_DEG;
#line 154 "../src/Views/Displays/CalculusDisplay.vala"
			break;
#line 975 "CalculusDisplay.c"
		}
	}
#line 156 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_queue_draw ((GtkWidget*) self);
#line 980 "CalculusDisplay.c"
}

void
pebbles_calculus_display_set_memory_status (PebblesCalculusDisplay* self,
                                            gboolean state)
{
#line 159 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 160 "../src/Views/Displays/CalculusDisplay.vala"
	if (state) {
#line 991 "CalculusDisplay.c"
		GtkLabel* _tmp0_;
#line 161 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp0_ = self->priv->memory_label;
#line 161 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp0_, (gdouble) 1);
#line 997 "CalculusDisplay.c"
	} else {
		GtkLabel* _tmp1_;
#line 164 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp1_ = self->priv->memory_label;
#line 164 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_widget_set_opacity ((GtkWidget*) _tmp1_, 0.2);
#line 1004 "CalculusDisplay.c"
	}
}

static gchar*
string_replace (const gchar* self,
                const gchar* old,
                const gchar* replacement)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (old != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (replacement != NULL, NULL);
#line 1535 "glib-2.0.vapi"
	if ((*((gchar*) self)) == '\0') {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = TRUE;
#line 1027 "CalculusDisplay.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = (*((gchar*) old)) == '\0';
#line 1031 "CalculusDisplay.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp1_) {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = TRUE;
#line 1037 "CalculusDisplay.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = g_strcmp0 (old, replacement) == 0;
#line 1041 "CalculusDisplay.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp0_) {
#line 1045 "CalculusDisplay.c"
		gchar* _tmp2_;
#line 1536 "glib-2.0.vapi"
		_tmp2_ = g_strdup (self);
#line 1536 "glib-2.0.vapi"
		result = _tmp2_;
#line 1536 "glib-2.0.vapi"
		return result;
#line 1053 "CalculusDisplay.c"
	}
	{
		GRegex* regex = NULL;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GRegex* _tmp5_;
		GRegex* _tmp6_;
		gchar* _tmp7_ = NULL;
		GRegex* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 1539 "glib-2.0.vapi"
		_tmp3_ = g_regex_escape_string (old, -1);
#line 1539 "glib-2.0.vapi"
		_tmp4_ = _tmp3_;
#line 1539 "glib-2.0.vapi"
		_tmp5_ = g_regex_new (_tmp4_, 0, 0, &_inner_error0_);
#line 1539 "glib-2.0.vapi"
		_tmp6_ = _tmp5_;
#line 1539 "glib-2.0.vapi"
		_g_free0 (_tmp4_);
#line 1539 "glib-2.0.vapi"
		regex = _tmp6_;
#line 1539 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1539 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1539 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1539 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 1085 "CalculusDisplay.c"
				goto __catch0_g_regex_error;
			}
#line 1539 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1539 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1539 "glib-2.0.vapi"
			return NULL;
#line 1094 "CalculusDisplay.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp8_ = regex;
#line 1540 "glib-2.0.vapi"
		_tmp9_ = g_regex_replace_literal (_tmp8_, self, (gssize) -1, 0, replacement, 0, &_inner_error0_);
#line 1540 "glib-2.0.vapi"
		_tmp7_ = _tmp9_;
#line 1540 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1540 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 1110 "CalculusDisplay.c"
				goto __catch0_g_regex_error;
			}
#line 1540 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1540 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1540 "glib-2.0.vapi"
			return NULL;
#line 1119 "CalculusDisplay.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp10_ = _tmp7_;
#line 1540 "glib-2.0.vapi"
		_tmp7_ = NULL;
#line 1540 "glib-2.0.vapi"
		result = _tmp10_;
#line 1540 "glib-2.0.vapi"
		_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
		_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
		return result;
#line 1133 "CalculusDisplay.c"
	}
	goto __finally0;
	__catch0_g_regex_error:
	{
#line 1538 "glib-2.0.vapi"
		g_clear_error (&_inner_error0_);
#line 1542 "glib-2.0.vapi"
		g_assert_not_reached ();
#line 1142 "CalculusDisplay.c"
	}
	__finally0:
#line 1538 "glib-2.0.vapi"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1538 "glib-2.0.vapi"
	g_clear_error (&_inner_error0_);
#line 1538 "glib-2.0.vapi"
	return NULL;
#line 1151 "CalculusDisplay.c"
}

void
pebbles_calculus_display_get_answer_evaluate_derivative (PebblesCalculusDisplay* self,
                                                         gdouble dx)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	PebblesCalculusView* _tmp1_;
	PebblesMainWindow* _tmp2_;
	PebblesHistoryManager* _tmp3_;
	PebblesEvaluationResultResultSource _tmp4_;
	GtkLabel* _tmp26_;
	const gchar* _tmp27_;
	gchar* _tmp28_;
	gchar* _tmp29_;
	PebblesSettings* settings = NULL;
	PebblesSettings* _tmp30_;
	PebblesSettings* _tmp31_;
	const gchar* _tmp32_;
	PebblesSettings* _tmp33_;
	GtkEntry* _tmp34_;
	const gchar* _tmp35_;
	const gchar* _tmp36_;
#line 168 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 169 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = g_strdup ("");
#line 169 "../src/Views/Displays/CalculusDisplay.vala"
	_result_ = _tmp0_;
#line 170 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = self->priv->cal_view;
#line 170 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = _tmp1_->window;
#line 170 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp3_ = _tmp2_->history_manager;
#line 170 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp4_ = PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC;
#line 170 "../src/Views/Displays/CalculusDisplay.vala"
	if (!pebbles_history_manager_is_empty (_tmp3_, &_tmp4_)) {
#line 1192 "CalculusDisplay.c"
		gchar* last_answer = NULL;
		PebblesCalculusView* _tmp5_;
		PebblesMainWindow* _tmp6_;
		PebblesHistoryManager* _tmp7_;
		PebblesEvaluationResultResultSource _tmp8_;
		PebblesEvaluationResult* _tmp9_;
		PebblesEvaluationResult* _tmp10_;
		const gchar* _tmp11_;
		const gchar* _tmp12_;
		gchar* _tmp13_;
		gchar* _tmp14_;
		GtkEntry* _tmp15_;
		const gchar* _tmp16_;
		const gchar* _tmp17_;
		gchar* _tmp18_;
		gchar* _tmp19_;
		PebblesGlobalAngleUnit _tmp20_;
		gchar* _tmp21_;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp5_ = self->priv->cal_view;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp6_ = _tmp5_->window;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp7_ = _tmp6_->history_manager;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp8_ = PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp9_ = pebbles_history_manager_get_last_evaluation_result (_tmp7_, &_tmp8_);
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp10_ = _tmp9_;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp11_ = pebbles_evaluation_result_get_result (_tmp10_);
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp12_ = _tmp11_;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp13_ = g_strdup (_tmp12_);
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp14_ = _tmp13_;
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		_pebbles_evaluation_result_unref0 (_tmp10_);
#line 171 "../src/Views/Displays/CalculusDisplay.vala"
		last_answer = _tmp14_;
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp15_ = self->input_entry;
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp16_ = gtk_entry_get_text (_tmp15_);
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp17_ = last_answer;
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp18_ = string_replace (_tmp16_, "ans", _tmp17_);
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp19_ = _tmp18_;
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp20_ = self->priv->angle_mode;
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp21_ = pebbles_calculus_get_derivative (_tmp19_, _tmp20_, dx);
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_result_);
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_result_ = _tmp21_;
#line 172 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_tmp19_);
#line 170 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (last_answer);
#line 1257 "CalculusDisplay.c"
	} else {
		GtkEntry* _tmp22_;
		const gchar* _tmp23_;
		PebblesGlobalAngleUnit _tmp24_;
		gchar* _tmp25_;
#line 175 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp22_ = self->input_entry;
#line 175 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp23_ = gtk_entry_get_text (_tmp22_);
#line 175 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp24_ = self->priv->angle_mode;
#line 175 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp25_ = pebbles_calculus_get_derivative (_tmp23_, _tmp24_, dx);
#line 175 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_result_);
#line 175 "../src/Views/Displays/CalculusDisplay.vala"
		_result_ = _tmp25_;
#line 1275 "CalculusDisplay.c"
	}
#line 177 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp26_ = self->answer_label;
#line 177 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp27_ = _result_;
#line 177 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp28_ = pebbles_utils_format_result (_tmp27_);
#line 177 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp29_ = _tmp28_;
#line 177 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_label_set_text (_tmp26_, _tmp29_);
#line 177 "../src/Views/Displays/CalculusDisplay.vala"
	_g_free0 (_tmp29_);
#line 178 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp30_ = pebbles_settings_get_default ();
#line 178 "../src/Views/Displays/CalculusDisplay.vala"
	settings = _tmp30_;
#line 179 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp31_ = settings;
#line 179 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp32_ = _result_;
#line 179 "../src/Views/Displays/CalculusDisplay.vala"
	pebbles_settings_set_cal_output_text (_tmp31_, _tmp32_);
#line 180 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp33_ = settings;
#line 180 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp34_ = self->input_entry;
#line 180 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp35_ = gtk_entry_get_text (_tmp34_);
#line 180 "../src/Views/Displays/CalculusDisplay.vala"
	pebbles_settings_set_cal_input_text (_tmp33_, _tmp35_);
#line 181 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp36_ = _result_;
#line 181 "../src/Views/Displays/CalculusDisplay.vala"
	if (g_strcmp0 (_tmp36_, "E") == 0) {
#line 182 "../src/Views/Displays/CalculusDisplay.vala"
		pebbles_calculus_display_shake (self);
#line 1313 "CalculusDisplay.c"
	} else {
		PebblesCalculusView* _tmp37_;
		PebblesMainWindow* _tmp38_;
		PebblesHistoryManager* _tmp39_;
		GtkEntry* _tmp40_;
		const gchar* _tmp41_;
		const gchar* _tmp42_;
		gchar* _tmp43_;
		gchar* _tmp44_;
		gchar* _tmp45_;
		gchar* _tmp46_;
		PebblesGlobalAngleUnit _tmp47_;
		PebblesEvaluationResultCalculusResultMode _tmp48_;
		gdouble _tmp49_;
		gdouble _tmp50_;
		PebblesGlobalWordLength _tmp51_;
		PebblesCalculusView* _tmp52_;
		PebblesStyledButton* _tmp53_;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp37_ = self->priv->cal_view;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp38_ = _tmp37_->window;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp39_ = _tmp38_->history_manager;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp40_ = self->input_entry;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp41_ = gtk_entry_get_text (_tmp40_);
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp42_ = _result_;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp43_ = pebbles_utils_get_local_separator_symbol ();
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp44_ = _tmp43_;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp45_ = string_replace (_tmp42_, _tmp44_, "");
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp46_ = _tmp45_;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp47_ = self->priv->angle_mode;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp48_ = PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_DER;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp49_ = (gdouble) 0;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp50_ = (gdouble) 0;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp51_ = PEBBLES_GLOBAL_WORD_LENGTH_BYT;
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		pebbles_history_manager_append_from_strings (_tmp39_, PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC, _tmp41_, _tmp46_, &_tmp47_, &_tmp48_, &_tmp49_, &_tmp50_, &dx, NULL, (gint) 0, NULL, (gint) 0, &_tmp51_);
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_tmp46_);
#line 185 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_tmp44_);
#line 193 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp52_ = self->priv->cal_view;
#line 193 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp53_ = _tmp52_->last_answer_button;
#line 193 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_widget_set_sensitive ((GtkWidget*) _tmp53_, TRUE);
#line 1374 "CalculusDisplay.c"
	}
#line 168 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (settings);
#line 168 "../src/Views/Displays/CalculusDisplay.vala"
	_g_free0 (_result_);
#line 1380 "CalculusDisplay.c"
}

void
pebbles_calculus_display_get_answer_evaluate_integral (PebblesCalculusDisplay* self,
                                                       gdouble l,
                                                       gdouble u)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	PebblesCalculusView* _tmp1_;
	PebblesMainWindow* _tmp2_;
	PebblesHistoryManager* _tmp3_;
	PebblesEvaluationResultResultSource _tmp4_;
	GtkLabel* _tmp26_;
	const gchar* _tmp27_;
	gchar* _tmp28_;
	gchar* _tmp29_;
	PebblesSettings* settings = NULL;
	PebblesSettings* _tmp30_;
	PebblesSettings* _tmp31_;
	const gchar* _tmp32_;
	PebblesSettings* _tmp33_;
	GtkEntry* _tmp34_;
	const gchar* _tmp35_;
	const gchar* _tmp36_;
#line 196 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 197 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = g_strdup ("");
#line 197 "../src/Views/Displays/CalculusDisplay.vala"
	_result_ = _tmp0_;
#line 198 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = self->priv->cal_view;
#line 198 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = _tmp1_->window;
#line 198 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp3_ = _tmp2_->history_manager;
#line 198 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp4_ = PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC;
#line 198 "../src/Views/Displays/CalculusDisplay.vala"
	if (!pebbles_history_manager_is_empty (_tmp3_, &_tmp4_)) {
#line 1422 "CalculusDisplay.c"
		gchar* last_answer = NULL;
		PebblesCalculusView* _tmp5_;
		PebblesMainWindow* _tmp6_;
		PebblesHistoryManager* _tmp7_;
		PebblesEvaluationResultResultSource _tmp8_;
		PebblesEvaluationResult* _tmp9_;
		PebblesEvaluationResult* _tmp10_;
		const gchar* _tmp11_;
		const gchar* _tmp12_;
		gchar* _tmp13_;
		gchar* _tmp14_;
		GtkEntry* _tmp15_;
		const gchar* _tmp16_;
		const gchar* _tmp17_;
		gchar* _tmp18_;
		gchar* _tmp19_;
		PebblesGlobalAngleUnit _tmp20_;
		gchar* _tmp21_;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp5_ = self->priv->cal_view;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp6_ = _tmp5_->window;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp7_ = _tmp6_->history_manager;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp8_ = PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp9_ = pebbles_history_manager_get_last_evaluation_result (_tmp7_, &_tmp8_);
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp10_ = _tmp9_;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp11_ = pebbles_evaluation_result_get_result (_tmp10_);
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp12_ = _tmp11_;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp13_ = g_strdup (_tmp12_);
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp14_ = _tmp13_;
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		_pebbles_evaluation_result_unref0 (_tmp10_);
#line 199 "../src/Views/Displays/CalculusDisplay.vala"
		last_answer = _tmp14_;
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp15_ = self->input_entry;
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp16_ = gtk_entry_get_text (_tmp15_);
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp17_ = last_answer;
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp18_ = string_replace (_tmp16_, "ans", _tmp17_);
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp19_ = _tmp18_;
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp20_ = self->priv->angle_mode;
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp21_ = pebbles_calculus_get_definite_integral (_tmp19_, _tmp20_, l, u);
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_result_);
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_result_ = _tmp21_;
#line 200 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_tmp19_);
#line 198 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (last_answer);
#line 1487 "CalculusDisplay.c"
	} else {
		GtkEntry* _tmp22_;
		const gchar* _tmp23_;
		PebblesGlobalAngleUnit _tmp24_;
		gchar* _tmp25_;
#line 203 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp22_ = self->input_entry;
#line 203 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp23_ = gtk_entry_get_text (_tmp22_);
#line 203 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp24_ = self->priv->angle_mode;
#line 203 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp25_ = pebbles_calculus_get_definite_integral (_tmp23_, _tmp24_, l, u);
#line 203 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_result_);
#line 203 "../src/Views/Displays/CalculusDisplay.vala"
		_result_ = _tmp25_;
#line 1505 "CalculusDisplay.c"
	}
#line 205 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp26_ = self->answer_label;
#line 205 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp27_ = _result_;
#line 205 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp28_ = pebbles_utils_format_result (_tmp27_);
#line 205 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp29_ = _tmp28_;
#line 205 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_label_set_text (_tmp26_, _tmp29_);
#line 205 "../src/Views/Displays/CalculusDisplay.vala"
	_g_free0 (_tmp29_);
#line 206 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp30_ = pebbles_settings_get_default ();
#line 206 "../src/Views/Displays/CalculusDisplay.vala"
	settings = _tmp30_;
#line 207 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp31_ = settings;
#line 207 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp32_ = _result_;
#line 207 "../src/Views/Displays/CalculusDisplay.vala"
	pebbles_settings_set_cal_output_text (_tmp31_, _tmp32_);
#line 208 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp33_ = settings;
#line 208 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp34_ = self->input_entry;
#line 208 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp35_ = gtk_entry_get_text (_tmp34_);
#line 208 "../src/Views/Displays/CalculusDisplay.vala"
	pebbles_settings_set_cal_input_text (_tmp33_, _tmp35_);
#line 209 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp36_ = _result_;
#line 209 "../src/Views/Displays/CalculusDisplay.vala"
	if (g_strcmp0 (_tmp36_, "E") == 0) {
#line 210 "../src/Views/Displays/CalculusDisplay.vala"
		pebbles_calculus_display_shake (self);
#line 1543 "CalculusDisplay.c"
	} else {
		PebblesCalculusView* _tmp37_;
		PebblesMainWindow* _tmp38_;
		PebblesHistoryManager* _tmp39_;
		GtkEntry* _tmp40_;
		const gchar* _tmp41_;
		const gchar* _tmp42_;
		gchar* _tmp43_;
		gchar* _tmp44_;
		gchar* _tmp45_;
		gchar* _tmp46_;
		PebblesGlobalAngleUnit _tmp47_;
		PebblesEvaluationResultCalculusResultMode _tmp48_;
		gdouble _tmp49_;
		PebblesGlobalWordLength _tmp50_;
		PebblesCalculusView* _tmp51_;
		PebblesStyledButton* _tmp52_;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp37_ = self->priv->cal_view;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp38_ = _tmp37_->window;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp39_ = _tmp38_->history_manager;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp40_ = self->input_entry;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp41_ = gtk_entry_get_text (_tmp40_);
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp42_ = _result_;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp43_ = pebbles_utils_get_local_separator_symbol ();
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp44_ = _tmp43_;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp45_ = string_replace (_tmp42_, _tmp44_, "");
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp46_ = _tmp45_;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp47_ = self->priv->angle_mode;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp48_ = PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_INT;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp49_ = (gdouble) 0;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp50_ = PEBBLES_GLOBAL_WORD_LENGTH_BYT;
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		pebbles_history_manager_append_from_strings (_tmp39_, PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC, _tmp41_, _tmp46_, &_tmp47_, &_tmp48_, &u, &l, &_tmp49_, NULL, (gint) 0, NULL, (gint) 0, &_tmp50_);
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_tmp46_);
#line 213 "../src/Views/Displays/CalculusDisplay.vala"
		_g_free0 (_tmp44_);
#line 222 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp51_ = self->priv->cal_view;
#line 222 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp52_ = _tmp51_->last_answer_button;
#line 222 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_widget_set_sensitive ((GtkWidget*) _tmp52_, TRUE);
#line 1601 "CalculusDisplay.c"
	}
#line 196 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (settings);
#line 196 "../src/Views/Displays/CalculusDisplay.vala"
	_g_free0 (_result_);
#line 1607 "CalculusDisplay.c"
}

static gboolean
__lambda122_ (PebblesCalculusDisplay* self)
{
	GtkStyleContext* _tmp0_;
	gboolean result = FALSE;
#line 228 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 228 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_remove_class (_tmp0_, "pebbles_shake");
#line 229 "../src/Views/Displays/CalculusDisplay.vala"
	result = FALSE;
#line 229 "../src/Views/Displays/CalculusDisplay.vala"
	return result;
#line 1623 "CalculusDisplay.c"
}

static gboolean
___lambda122__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda122_ ((PebblesCalculusDisplay*) self);
#line 227 "../src/Views/Displays/CalculusDisplay.vala"
	return result;
#line 1633 "CalculusDisplay.c"
}

static void
pebbles_calculus_display_shake (PebblesCalculusDisplay* self)
{
	GtkStyleContext* _tmp0_;
#line 225 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 226 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 226 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_style_context_add_class (_tmp0_, "pebbles_shake");
#line 227 "../src/Views/Displays/CalculusDisplay.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 450, ___lambda122__gsource_func, g_object_ref (self), g_object_unref);
#line 1648 "CalculusDisplay.c"
}

void
pebbles_calculus_display_display_off (PebblesCalculusDisplay* self)
{
	GtkLabel* _tmp0_;
	GtkEntry* _tmp1_;
	GtkGrid* _tmp2_;
#line 233 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 234 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = self->answer_label;
#line 234 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, 0.1);
#line 235 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = self->input_entry;
#line 235 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp1_, 0.1);
#line 236 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = self->priv->lcd_status_bar;
#line 236 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp2_, 0.1);
#line 1671 "CalculusDisplay.c"
}

void
pebbles_calculus_display_display_on (PebblesCalculusDisplay* self)
{
	GtkLabel* _tmp0_;
	GtkEntry* _tmp1_;
	GtkGrid* _tmp2_;
#line 239 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 240 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = self->answer_label;
#line 240 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, (gdouble) 1);
#line 241 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = self->input_entry;
#line 241 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp1_, (gdouble) 1);
#line 242 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = self->priv->lcd_status_bar;
#line 242 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp2_, (gdouble) 1);
#line 1694 "CalculusDisplay.c"
}

void
pebbles_calculus_display_send_backspace (PebblesCalculusDisplay* self)
{
	GtkEntry* _tmp0_;
	GtkEntry* _tmp1_;
	const gchar* _tmp2_;
#line 245 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 246 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = self->input_entry;
#line 246 "../src/Views/Displays/CalculusDisplay.vala"
	g_signal_emit_by_name (_tmp0_, "backspace");
#line 247 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = self->input_entry;
#line 247 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = gtk_entry_get_text (_tmp1_);
#line 247 "../src/Views/Displays/CalculusDisplay.vala"
	if (g_strcmp0 (_tmp2_, "") == 0) {
#line 1715 "CalculusDisplay.c"
		GtkEntry* _tmp3_;
		GtkEntry* _tmp4_;
#line 248 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp3_ = self->input_entry;
#line 248 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_entry_set_text (_tmp3_, "0");
#line 249 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp4_ = self->input_entry;
#line 249 "../src/Views/Displays/CalculusDisplay.vala"
		g_signal_emit_by_name (_tmp4_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 1726 "CalculusDisplay.c"
	}
}

void
pebbles_calculus_display_insert_text (PebblesCalculusDisplay* self,
                                      const gchar* text)
{
	GtkEntry* _tmp0_;
	const gchar* _tmp1_;
	GtkEntry* _tmp3_;
	GtkEntry* _tmp4_;
#line 253 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 253 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (text != NULL);
#line 254 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = self->input_entry;
#line 254 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = gtk_entry_get_text (_tmp0_);
#line 254 "../src/Views/Displays/CalculusDisplay.vala"
	if (g_strcmp0 (_tmp1_, "0") == 0) {
#line 1748 "CalculusDisplay.c"
		GtkEntry* _tmp2_;
#line 255 "../src/Views/Displays/CalculusDisplay.vala"
		_tmp2_ = self->input_entry;
#line 255 "../src/Views/Displays/CalculusDisplay.vala"
		gtk_entry_set_text (_tmp2_, "");
#line 1754 "CalculusDisplay.c"
	}
#line 257 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp3_ = self->input_entry;
#line 257 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_entry_grab_focus_without_selecting (_tmp3_);
#line 258 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp4_ = self->input_entry;
#line 258 "../src/Views/Displays/CalculusDisplay.vala"
	g_signal_emit_by_name (_tmp4_, "insert-at-cursor", text);
#line 1764 "CalculusDisplay.c"
}

void
pebbles_calculus_display_set_evaluation (PebblesCalculusDisplay* self,
                                         PebblesEvaluationResult* _result_)
{
	GtkEntry* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	GtkEntry* _tmp3_;
	GtkLabel* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
#line 261 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 261 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (_result_ != NULL);
#line 262 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = self->input_entry;
#line 262 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = pebbles_evaluation_result_get_problem_expression (_result_);
#line 262 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = _tmp1_;
#line 262 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_entry_set_text (_tmp0_, _tmp2_);
#line 263 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp3_ = self->input_entry;
#line 263 "../src/Views/Displays/CalculusDisplay.vala"
	g_signal_emit_by_name (_tmp3_, "move-cursor", GTK_MOVEMENT_DISPLAY_LINE_ENDS, 0, FALSE);
#line 265 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp4_ = self->answer_label;
#line 265 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp5_ = pebbles_evaluation_result_get_result (_result_);
#line 265 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp6_ = _tmp5_;
#line 265 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_label_set_text (_tmp4_, _tmp6_);
#line 1802 "CalculusDisplay.c"
}

void
pebbles_calculus_display_write_answer_to_clipboard (PebblesCalculusDisplay* self)
{
	GdkDisplay* display = NULL;
	GdkDisplay* _tmp0_;
	GdkDisplay* _tmp1_;
	GtkClipboard* clipboard = NULL;
	GtkClipboard* _tmp2_;
	GtkClipboard* _tmp3_;
	gchar* last_answer = NULL;
	GtkLabel* _tmp4_;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
#line 268 "../src/Views/Displays/CalculusDisplay.vala"
	g_return_if_fail (self != NULL);
#line 269 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp0_ = gtk_widget_get_display ((GtkWidget*) self);
#line 269 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp1_ = _g_object_ref0 (_tmp0_);
#line 269 "../src/Views/Displays/CalculusDisplay.vala"
	display = _tmp1_;
#line 270 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp2_ = gtk_clipboard_get_for_display (display, GDK_SELECTION_CLIPBOARD);
#line 270 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp3_ = _g_object_ref0 (_tmp2_);
#line 270 "../src/Views/Displays/CalculusDisplay.vala"
	clipboard = _tmp3_;
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp4_ = self->answer_label;
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp5_ = gtk_label_get_text (_tmp4_);
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp6_ = pebbles_utils_get_local_separator_symbol ();
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp7_ = _tmp6_;
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp8_ = string_replace (_tmp5_, _tmp7_, "");
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_tmp9_ = _tmp8_;
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	_g_free0 (_tmp7_);
#line 271 "../src/Views/Displays/CalculusDisplay.vala"
	last_answer = _tmp9_;
#line 272 "../src/Views/Displays/CalculusDisplay.vala"
	gtk_clipboard_set_text (clipboard, last_answer, -1);
#line 268 "../src/Views/Displays/CalculusDisplay.vala"
	_g_free0 (last_answer);
#line 268 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (clipboard);
#line 268 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (display);
#line 1859 "CalculusDisplay.c"
}

static GObject *
pebbles_calculus_display_constructor (GType type,
                                      guint n_construct_properties,
                                      GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	PebblesCalculusDisplay * self;
#line 40 "../src/Views/Displays/CalculusDisplay.vala"
	parent_class = G_OBJECT_CLASS (pebbles_calculus_display_parent_class);
#line 40 "../src/Views/Displays/CalculusDisplay.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 40 "../src/Views/Displays/CalculusDisplay.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_CALCULUS_DISPLAY, PebblesCalculusDisplay);
#line 41 "../src/Views/Displays/CalculusDisplay.vala"
	pebbles_calculus_display_calc_make_display_ui (self);
#line 40 "../src/Views/Displays/CalculusDisplay.vala"
	return obj;
#line 1880 "CalculusDisplay.c"
}

static void
pebbles_calculus_display_class_init (PebblesCalculusDisplayClass * klass,
                                     gpointer klass_data)
{
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	pebbles_calculus_display_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	g_type_class_adjust_private_offset (klass, &PebblesCalculusDisplay_private_offset);
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	G_OBJECT_CLASS (klass)->constructor = pebbles_calculus_display_constructor;
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	G_OBJECT_CLASS (klass)->finalize = pebbles_calculus_display_finalize;
#line 1895 "CalculusDisplay.c"
}

static void
pebbles_calculus_display_instance_init (PebblesCalculusDisplay * self,
                                        gpointer klass)
{
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	self->priv = pebbles_calculus_display_get_instance_private (self);
#line 1904 "CalculusDisplay.c"
}

static void
pebbles_calculus_display_finalize (GObject * obj)
{
	PebblesCalculusDisplay * self;
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_CALCULUS_DISPLAY, PebblesCalculusDisplay);
#line 24 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->lcd_status_bar);
#line 25 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->deg_label);
#line 26 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->rad_label);
#line 27 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->grad_label);
#line 28 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->memory_label);
#line 29 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->shift_label);
#line 32 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->answer_label);
#line 35 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->input_entry);
#line 44 "../src/Views/Displays/CalculusDisplay.vala"
	_g_object_unref0 (self->priv->cal_view);
#line 22 "../src/Views/Displays/CalculusDisplay.vala"
	G_OBJECT_CLASS (pebbles_calculus_display_parent_class)->finalize (obj);
#line 1933 "CalculusDisplay.c"
}

static GType
pebbles_calculus_display_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesCalculusDisplayClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_calculus_display_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesCalculusDisplay), 0, (GInstanceInitFunc) pebbles_calculus_display_instance_init, NULL };
	GType pebbles_calculus_display_type_id;
	pebbles_calculus_display_type_id = g_type_register_static (gtk_grid_get_type (), "PebblesCalculusDisplay", &g_define_type_info, 0);
	PebblesCalculusDisplay_private_offset = g_type_add_instance_private (pebbles_calculus_display_type_id, sizeof (PebblesCalculusDisplayPrivate));
	return pebbles_calculus_display_type_id;
}

GType
pebbles_calculus_display_get_type (void)
{
	static volatile gsize pebbles_calculus_display_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_calculus_display_type_id__volatile)) {
		GType pebbles_calculus_display_type_id;
		pebbles_calculus_display_type_id = pebbles_calculus_display_get_type_once ();
		g_once_init_leave (&pebbles_calculus_display_type_id__volatile, pebbles_calculus_display_type_id);
	}
	return pebbles_calculus_display_type_id__volatile;
}

