/* Statistics.c generated by valac 0.48.14, the Vala compiler
 * generated from Statistics.vala, do not modify */

/*
* Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
* Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Saunak Biswas <saunakbis97@gmail.com>
*/

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <gsl/gsl_sort_double.h>
#include <gobject/gvaluecollector.h>

#define PEBBLES_TYPE_STATISTICS (pebbles_statistics_get_type ())
#define PEBBLES_STATISTICS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_STATISTICS, PebblesStatistics))
#define PEBBLES_STATISTICS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_STATISTICS, PebblesStatisticsClass))
#define PEBBLES_IS_STATISTICS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_STATISTICS))
#define PEBBLES_IS_STATISTICS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_STATISTICS))
#define PEBBLES_STATISTICS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_STATISTICS, PebblesStatisticsClass))

typedef struct _PebblesStatistics PebblesStatistics;
typedef struct _PebblesStatisticsClass PebblesStatisticsClass;
typedef struct _PebblesStatisticsPrivate PebblesStatisticsPrivate;
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _PebblesParamSpecStatistics PebblesParamSpecStatistics;

struct _PebblesStatistics {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PebblesStatisticsPrivate * priv;
};

struct _PebblesStatisticsClass {
	GTypeClass parent_class;
	void (*finalize) (PebblesStatistics *self);
};

struct _PebblesStatisticsPrivate {
	gchar** tokens;
	gint tokens_length1;
	gint _tokens_size_;
	gdouble* x;
	gint x_length1;
	gint _x_size_;
	gint decimal_places;
};

struct _PebblesParamSpecStatistics {
	GParamSpec parent_instance;
};

static gint PebblesStatistics_private_offset;
static gpointer pebbles_statistics_parent_class = NULL;

gpointer pebbles_statistics_ref (gpointer instance);
void pebbles_statistics_unref (gpointer instance);
GParamSpec* pebbles_param_spec_statistics (const gchar* name,
                                           const gchar* nick,
                                           const gchar* blurb,
                                           GType object_type,
                                           GParamFlags flags);
void pebbles_value_set_statistics (GValue* value,
                                   gpointer v_object);
void pebbles_value_take_statistics (GValue* value,
                                    gpointer v_object);
gpointer pebbles_value_get_statistics (const GValue* value);
GType pebbles_statistics_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesStatistics, pebbles_statistics_unref)
PebblesStatistics* pebbles_statistics_new (gint decimal_places);
PebblesStatistics* pebbles_statistics_construct (GType object_type,
                                                 gint decimal_places);
static void pebbles_statistics_string_splitter (PebblesStatistics* self,
                                         const gchar* input_vals);
static gchar* pebbles_statistics_output_to_string (PebblesStatistics* self,
                                            gdouble values);
gchar* pebbles_utils_manage_decimal_places (gdouble _result_,
                                            gint accuracy);
gchar* pebbles_statistics_summation_x (PebblesStatistics* self,
                                       const gchar* input_vals);
gchar* pebbles_statistics_summation_x_square (PebblesStatistics* self,
                                              const gchar* input_vals);
gchar* pebbles_statistics_mean_x (PebblesStatistics* self,
                                  const gchar* input_vals);
gchar* pebbles_statistics_mean_x_square (PebblesStatistics* self,
                                         const gchar* input_vals);
gchar* pebbles_statistics_median (PebblesStatistics* self,
                                  const gchar* input_vals);
gchar* pebbles_statistics_mode (PebblesStatistics* self,
                                const gchar* input_vals);
gchar* pebbles_statistics_geometric_mean (PebblesStatistics* self,
                                          const gchar* input_vals);
static gchar* pebbles_statistics_summation_x_minus_mean_whole_square (PebblesStatistics* self,
                                                               const gchar* input_vals);
gchar* pebbles_statistics_sample_variance (PebblesStatistics* self,
                                           const gchar* input_vals);
gchar* pebbles_statistics_sample_standard_deviation (PebblesStatistics* self,
                                                     const gchar* input_vals);
gchar* pebbles_statistics_population_variance (PebblesStatistics* self,
                                               const gchar* input_vals);
gchar* pebbles_statistics_population_standard_deviation (PebblesStatistics* self,
                                                         const gchar* input_vals);
static void pebbles_statistics_finalize (PebblesStatistics * obj);
static GType pebbles_statistics_get_type_once (void);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);

static inline gpointer
pebbles_statistics_get_instance_private (PebblesStatistics* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesStatistics_private_offset);
}

PebblesStatistics*
pebbles_statistics_construct (GType object_type,
                              gint decimal_places)
{
	PebblesStatistics* self = NULL;
#line 30 "../src/Core/Statistics.vala"
	self = (PebblesStatistics*) g_type_create_instance (object_type);
#line 31 "../src/Core/Statistics.vala"
	self->priv->decimal_places = decimal_places;
#line 30 "../src/Core/Statistics.vala"
	return self;
#line 151 "Statistics.c"
}

PebblesStatistics*
pebbles_statistics_new (gint decimal_places)
{
#line 30 "../src/Core/Statistics.vala"
	return pebbles_statistics_construct (PEBBLES_TYPE_STATISTICS, decimal_places);
#line 159 "Statistics.c"
}

static gdouble
double_parse (const gchar* str)
{
	gdouble result = 0.0;
#line 995 "glib-2.0.vapi"
	g_return_val_if_fail (str != NULL, 0.0);
#line 996 "glib-2.0.vapi"
	result = g_ascii_strtod (str, NULL);
#line 996 "glib-2.0.vapi"
	return result;
#line 172 "Statistics.c"
}

static void
pebbles_statistics_string_splitter (PebblesStatistics* self,
                                    const gchar* input_vals)
{
	gchar** _tmp0_;
	gchar** _tmp1_;
	gchar** _tmp2_;
	gint _tmp2__length1;
	gdouble* _tmp3_;
#line 34 "../src/Core/Statistics.vala"
	g_return_if_fail (self != NULL);
#line 34 "../src/Core/Statistics.vala"
	g_return_if_fail (input_vals != NULL);
#line 35 "../src/Core/Statistics.vala"
	_tmp1_ = _tmp0_ = g_strsplit (input_vals, "[&&]", 0);
#line 35 "../src/Core/Statistics.vala"
	self->priv->tokens = (_vala_array_free (self->priv->tokens, self->priv->tokens_length1, (GDestroyNotify) g_free), NULL);
#line 35 "../src/Core/Statistics.vala"
	self->priv->tokens = _tmp1_;
#line 35 "../src/Core/Statistics.vala"
	self->priv->tokens_length1 = _vala_array_length (_tmp0_);
#line 35 "../src/Core/Statistics.vala"
	self->priv->_tokens_size_ = self->priv->tokens_length1;
#line 36 "../src/Core/Statistics.vala"
	_tmp2_ = self->priv->tokens;
#line 36 "../src/Core/Statistics.vala"
	_tmp2__length1 = self->priv->tokens_length1;
#line 36 "../src/Core/Statistics.vala"
	_tmp3_ = g_new0 (gdouble, _tmp2__length1);
#line 36 "../src/Core/Statistics.vala"
	self->priv->x = (g_free (self->priv->x), NULL);
#line 36 "../src/Core/Statistics.vala"
	self->priv->x = _tmp3_;
#line 36 "../src/Core/Statistics.vala"
	self->priv->x_length1 = _tmp2__length1;
#line 36 "../src/Core/Statistics.vala"
	self->priv->_x_size_ = self->priv->x_length1;
#line 212 "Statistics.c"
	{
		gint i = 0;
#line 37 "../src/Core/Statistics.vala"
		i = 0;
#line 217 "Statistics.c"
		{
			gboolean _tmp4_ = FALSE;
#line 37 "../src/Core/Statistics.vala"
			_tmp4_ = TRUE;
#line 37 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 224 "Statistics.c"
				gchar** _tmp6_;
				gint _tmp6__length1;
				gdouble* _tmp7_;
				gint _tmp7__length1;
				gchar** _tmp8_;
				gint _tmp8__length1;
				const gchar* _tmp9_;
#line 37 "../src/Core/Statistics.vala"
				if (!_tmp4_) {
#line 234 "Statistics.c"
					gint _tmp5_;
#line 37 "../src/Core/Statistics.vala"
					_tmp5_ = i;
#line 37 "../src/Core/Statistics.vala"
					i = _tmp5_ + 1;
#line 240 "Statistics.c"
				}
#line 37 "../src/Core/Statistics.vala"
				_tmp4_ = FALSE;
#line 37 "../src/Core/Statistics.vala"
				_tmp6_ = self->priv->tokens;
#line 37 "../src/Core/Statistics.vala"
				_tmp6__length1 = self->priv->tokens_length1;
#line 37 "../src/Core/Statistics.vala"
				if (!(i < _tmp6__length1)) {
#line 37 "../src/Core/Statistics.vala"
					break;
#line 252 "Statistics.c"
				}
#line 38 "../src/Core/Statistics.vala"
				_tmp7_ = self->priv->x;
#line 38 "../src/Core/Statistics.vala"
				_tmp7__length1 = self->priv->x_length1;
#line 38 "../src/Core/Statistics.vala"
				_tmp8_ = self->priv->tokens;
#line 38 "../src/Core/Statistics.vala"
				_tmp8__length1 = self->priv->tokens_length1;
#line 38 "../src/Core/Statistics.vala"
				_tmp9_ = _tmp8_[i];
#line 38 "../src/Core/Statistics.vala"
				_tmp7_[i] = double_parse (_tmp9_);
#line 266 "Statistics.c"
			}
		}
	}
}

static gchar*
string_slice (const gchar* self,
              glong start,
              glong end)
{
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 1480 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1481 "glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1481 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1481 "glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1482 "glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 1483 "glib-2.0.vapi"
		start = string_length + start;
#line 296 "Statistics.c"
	}
#line 1485 "glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 1486 "glib-2.0.vapi"
		end = string_length + end;
#line 302 "Statistics.c"
	}
#line 1488 "glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = start <= string_length;
#line 308 "Statistics.c"
	} else {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = FALSE;
#line 312 "Statistics.c"
	}
#line 1488 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp2_, NULL);
#line 1489 "glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = end <= string_length;
#line 320 "Statistics.c"
	} else {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = FALSE;
#line 324 "Statistics.c"
	}
#line 1489 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp3_, NULL);
#line 1490 "glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1491 "glib-2.0.vapi"
	_tmp4_ = g_strndup (((gchar*) self) + start, (gsize) (end - start));
#line 1491 "glib-2.0.vapi"
	result = _tmp4_;
#line 1491 "glib-2.0.vapi"
	return result;
#line 336 "Statistics.c"
}

static gchar*
pebbles_statistics_output_to_string (PebblesStatistics* self,
                                     gdouble values)
{
	gchar* output = NULL;
	gchar* _tmp0_;
	const gchar* _tmp4_;
	gchar* result = NULL;
#line 42 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 44 "../src/Core/Statistics.vala"
	_tmp0_ = pebbles_utils_manage_decimal_places (values, self->priv->decimal_places);
#line 44 "../src/Core/Statistics.vala"
	output = _tmp0_;
#line 47 "../src/Core/Statistics.vala"
	while (TRUE) {
#line 355 "Statistics.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
		gchar* _tmp3_;
#line 47 "../src/Core/Statistics.vala"
		_tmp1_ = output;
#line 47 "../src/Core/Statistics.vala"
		if (!g_str_has_suffix (_tmp1_, "0")) {
#line 47 "../src/Core/Statistics.vala"
			break;
#line 365 "Statistics.c"
		}
#line 48 "../src/Core/Statistics.vala"
		_tmp2_ = output;
#line 48 "../src/Core/Statistics.vala"
		_tmp3_ = string_slice (_tmp2_, (glong) 0, (glong) -1);
#line 48 "../src/Core/Statistics.vala"
		_g_free0 (output);
#line 48 "../src/Core/Statistics.vala"
		output = _tmp3_;
#line 375 "Statistics.c"
	}
#line 50 "../src/Core/Statistics.vala"
	_tmp4_ = output;
#line 50 "../src/Core/Statistics.vala"
	if (g_str_has_suffix (_tmp4_, ".")) {
#line 381 "Statistics.c"
		const gchar* _tmp5_;
		gchar* _tmp6_;
#line 51 "../src/Core/Statistics.vala"
		_tmp5_ = output;
#line 51 "../src/Core/Statistics.vala"
		_tmp6_ = string_slice (_tmp5_, (glong) 0, (glong) -1);
#line 51 "../src/Core/Statistics.vala"
		_g_free0 (output);
#line 51 "../src/Core/Statistics.vala"
		output = _tmp6_;
#line 392 "Statistics.c"
	}
#line 53 "../src/Core/Statistics.vala"
	result = output;
#line 53 "../src/Core/Statistics.vala"
	return result;
#line 398 "Statistics.c"
}

gchar*
pebbles_statistics_summation_x (PebblesStatistics* self,
                                const gchar* input_vals)
{
	gdouble sum_x = 0.0;
	gchar* _tmp5_;
	gchar* result = NULL;
#line 56 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 56 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 57 "../src/Core/Statistics.vala"
	sum_x = 0.0;
#line 58 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 416 "Statistics.c"
	{
		gint i = 0;
#line 59 "../src/Core/Statistics.vala"
		i = 0;
#line 421 "Statistics.c"
		{
			gboolean _tmp0_ = FALSE;
#line 59 "../src/Core/Statistics.vala"
			_tmp0_ = TRUE;
#line 59 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 428 "Statistics.c"
				gdouble* _tmp2_;
				gint _tmp2__length1;
				gdouble* _tmp3_;
				gint _tmp3__length1;
				gdouble _tmp4_;
#line 59 "../src/Core/Statistics.vala"
				if (!_tmp0_) {
#line 436 "Statistics.c"
					gint _tmp1_;
#line 59 "../src/Core/Statistics.vala"
					_tmp1_ = i;
#line 59 "../src/Core/Statistics.vala"
					i = _tmp1_ + 1;
#line 442 "Statistics.c"
				}
#line 59 "../src/Core/Statistics.vala"
				_tmp0_ = FALSE;
#line 59 "../src/Core/Statistics.vala"
				_tmp2_ = self->priv->x;
#line 59 "../src/Core/Statistics.vala"
				_tmp2__length1 = self->priv->x_length1;
#line 59 "../src/Core/Statistics.vala"
				if (!(i < _tmp2__length1)) {
#line 59 "../src/Core/Statistics.vala"
					break;
#line 454 "Statistics.c"
				}
#line 60 "../src/Core/Statistics.vala"
				_tmp3_ = self->priv->x;
#line 60 "../src/Core/Statistics.vala"
				_tmp3__length1 = self->priv->x_length1;
#line 60 "../src/Core/Statistics.vala"
				_tmp4_ = _tmp3_[i];
#line 60 "../src/Core/Statistics.vala"
				sum_x = sum_x + _tmp4_;
#line 464 "Statistics.c"
			}
		}
	}
#line 63 "../src/Core/Statistics.vala"
	_tmp5_ = pebbles_statistics_output_to_string (self, sum_x);
#line 63 "../src/Core/Statistics.vala"
	result = _tmp5_;
#line 63 "../src/Core/Statistics.vala"
	return result;
#line 474 "Statistics.c"
}

gchar*
pebbles_statistics_summation_x_square (PebblesStatistics* self,
                                       const gchar* input_vals)
{
	gdouble sum_x_square = 0.0;
	gchar* _tmp5_;
	gchar* result = NULL;
#line 66 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 66 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 67 "../src/Core/Statistics.vala"
	sum_x_square = 0.0;
#line 68 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 492 "Statistics.c"
	{
		gint i = 0;
#line 69 "../src/Core/Statistics.vala"
		i = 0;
#line 497 "Statistics.c"
		{
			gboolean _tmp0_ = FALSE;
#line 69 "../src/Core/Statistics.vala"
			_tmp0_ = TRUE;
#line 69 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 504 "Statistics.c"
				gdouble* _tmp2_;
				gint _tmp2__length1;
				gdouble* _tmp3_;
				gint _tmp3__length1;
				gdouble _tmp4_;
#line 69 "../src/Core/Statistics.vala"
				if (!_tmp0_) {
#line 512 "Statistics.c"
					gint _tmp1_;
#line 69 "../src/Core/Statistics.vala"
					_tmp1_ = i;
#line 69 "../src/Core/Statistics.vala"
					i = _tmp1_ + 1;
#line 518 "Statistics.c"
				}
#line 69 "../src/Core/Statistics.vala"
				_tmp0_ = FALSE;
#line 69 "../src/Core/Statistics.vala"
				_tmp2_ = self->priv->x;
#line 69 "../src/Core/Statistics.vala"
				_tmp2__length1 = self->priv->x_length1;
#line 69 "../src/Core/Statistics.vala"
				if (!(i < _tmp2__length1)) {
#line 69 "../src/Core/Statistics.vala"
					break;
#line 530 "Statistics.c"
				}
#line 70 "../src/Core/Statistics.vala"
				_tmp3_ = self->priv->x;
#line 70 "../src/Core/Statistics.vala"
				_tmp3__length1 = self->priv->x_length1;
#line 70 "../src/Core/Statistics.vala"
				_tmp4_ = _tmp3_[i];
#line 70 "../src/Core/Statistics.vala"
				sum_x_square = sum_x_square + pow (_tmp4_, (gdouble) 2);
#line 540 "Statistics.c"
			}
		}
	}
#line 73 "../src/Core/Statistics.vala"
	_tmp5_ = pebbles_statistics_output_to_string (self, sum_x_square);
#line 73 "../src/Core/Statistics.vala"
	result = _tmp5_;
#line 73 "../src/Core/Statistics.vala"
	return result;
#line 550 "Statistics.c"
}

gchar*
pebbles_statistics_mean_x (PebblesStatistics* self,
                           const gchar* input_vals)
{
	gdouble avg_x = 0.0;
	gdouble* _tmp5_;
	gint _tmp5__length1;
	gchar* _tmp6_;
	gchar* result = NULL;
#line 76 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 76 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 77 "../src/Core/Statistics.vala"
	avg_x = 0.0;
#line 78 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 570 "Statistics.c"
	{
		gint i = 0;
#line 79 "../src/Core/Statistics.vala"
		i = 0;
#line 575 "Statistics.c"
		{
			gboolean _tmp0_ = FALSE;
#line 79 "../src/Core/Statistics.vala"
			_tmp0_ = TRUE;
#line 79 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 582 "Statistics.c"
				gdouble* _tmp2_;
				gint _tmp2__length1;
				gdouble* _tmp3_;
				gint _tmp3__length1;
				gdouble _tmp4_;
#line 79 "../src/Core/Statistics.vala"
				if (!_tmp0_) {
#line 590 "Statistics.c"
					gint _tmp1_;
#line 79 "../src/Core/Statistics.vala"
					_tmp1_ = i;
#line 79 "../src/Core/Statistics.vala"
					i = _tmp1_ + 1;
#line 596 "Statistics.c"
				}
#line 79 "../src/Core/Statistics.vala"
				_tmp0_ = FALSE;
#line 79 "../src/Core/Statistics.vala"
				_tmp2_ = self->priv->x;
#line 79 "../src/Core/Statistics.vala"
				_tmp2__length1 = self->priv->x_length1;
#line 79 "../src/Core/Statistics.vala"
				if (!(i < _tmp2__length1)) {
#line 79 "../src/Core/Statistics.vala"
					break;
#line 608 "Statistics.c"
				}
#line 80 "../src/Core/Statistics.vala"
				_tmp3_ = self->priv->x;
#line 80 "../src/Core/Statistics.vala"
				_tmp3__length1 = self->priv->x_length1;
#line 80 "../src/Core/Statistics.vala"
				_tmp4_ = _tmp3_[i];
#line 80 "../src/Core/Statistics.vala"
				avg_x = avg_x + _tmp4_;
#line 618 "Statistics.c"
			}
		}
	}
#line 82 "../src/Core/Statistics.vala"
	_tmp5_ = self->priv->x;
#line 82 "../src/Core/Statistics.vala"
	_tmp5__length1 = self->priv->x_length1;
#line 82 "../src/Core/Statistics.vala"
	_tmp6_ = pebbles_statistics_output_to_string (self, avg_x / _tmp5__length1);
#line 82 "../src/Core/Statistics.vala"
	result = _tmp6_;
#line 82 "../src/Core/Statistics.vala"
	return result;
#line 632 "Statistics.c"
}

gchar*
pebbles_statistics_mean_x_square (PebblesStatistics* self,
                                  const gchar* input_vals)
{
	gdouble avg_x_square = 0.0;
	gdouble* _tmp5_;
	gint _tmp5__length1;
	gchar* _tmp6_;
	gchar* result = NULL;
#line 85 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 85 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 86 "../src/Core/Statistics.vala"
	avg_x_square = 0.0;
#line 87 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 652 "Statistics.c"
	{
		gint i = 0;
#line 88 "../src/Core/Statistics.vala"
		i = 0;
#line 657 "Statistics.c"
		{
			gboolean _tmp0_ = FALSE;
#line 88 "../src/Core/Statistics.vala"
			_tmp0_ = TRUE;
#line 88 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 664 "Statistics.c"
				gdouble* _tmp2_;
				gint _tmp2__length1;
				gdouble* _tmp3_;
				gint _tmp3__length1;
				gdouble _tmp4_;
#line 88 "../src/Core/Statistics.vala"
				if (!_tmp0_) {
#line 672 "Statistics.c"
					gint _tmp1_;
#line 88 "../src/Core/Statistics.vala"
					_tmp1_ = i;
#line 88 "../src/Core/Statistics.vala"
					i = _tmp1_ + 1;
#line 678 "Statistics.c"
				}
#line 88 "../src/Core/Statistics.vala"
				_tmp0_ = FALSE;
#line 88 "../src/Core/Statistics.vala"
				_tmp2_ = self->priv->x;
#line 88 "../src/Core/Statistics.vala"
				_tmp2__length1 = self->priv->x_length1;
#line 88 "../src/Core/Statistics.vala"
				if (!(i < _tmp2__length1)) {
#line 88 "../src/Core/Statistics.vala"
					break;
#line 690 "Statistics.c"
				}
#line 89 "../src/Core/Statistics.vala"
				_tmp3_ = self->priv->x;
#line 89 "../src/Core/Statistics.vala"
				_tmp3__length1 = self->priv->x_length1;
#line 89 "../src/Core/Statistics.vala"
				_tmp4_ = _tmp3_[i];
#line 89 "../src/Core/Statistics.vala"
				avg_x_square = avg_x_square + pow (_tmp4_, (gdouble) 2);
#line 700 "Statistics.c"
			}
		}
	}
#line 91 "../src/Core/Statistics.vala"
	_tmp5_ = self->priv->x;
#line 91 "../src/Core/Statistics.vala"
	_tmp5__length1 = self->priv->x_length1;
#line 91 "../src/Core/Statistics.vala"
	_tmp6_ = pebbles_statistics_output_to_string (self, avg_x_square / _tmp5__length1);
#line 91 "../src/Core/Statistics.vala"
	result = _tmp6_;
#line 91 "../src/Core/Statistics.vala"
	return result;
#line 714 "Statistics.c"
}

gchar*
pebbles_statistics_median (PebblesStatistics* self,
                           const gchar* input_vals)
{
	gdouble* _tmp0_;
	gint _tmp0__length1;
	gdouble* _tmp1_;
	gint _tmp1__length1;
	gdouble* _tmp2_;
	gint _tmp2__length1;
	gchar* result = NULL;
#line 94 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 94 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 95 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 96 "../src/Core/Statistics.vala"
	_tmp0_ = self->priv->x;
#line 96 "../src/Core/Statistics.vala"
	_tmp0__length1 = self->priv->x_length1;
#line 96 "../src/Core/Statistics.vala"
	_tmp1_ = self->priv->x;
#line 96 "../src/Core/Statistics.vala"
	_tmp1__length1 = self->priv->x_length1;
#line 96 "../src/Core/Statistics.vala"
	gsl_sort (_tmp0_, (gsize) 1, (gsize) _tmp1__length1);
#line 97 "../src/Core/Statistics.vala"
	_tmp2_ = self->priv->x;
#line 97 "../src/Core/Statistics.vala"
	_tmp2__length1 = self->priv->x_length1;
#line 97 "../src/Core/Statistics.vala"
	if ((_tmp2__length1 % 2) == 0) {
#line 750 "Statistics.c"
		gdouble* _tmp3_;
		gint _tmp3__length1;
		gdouble* _tmp4_;
		gint _tmp4__length1;
		gdouble _tmp5_;
		gchar* _tmp6_;
		gchar* _tmp7_;
		gchar* _tmp8_;
		gchar* _tmp9_;
		gdouble* _tmp10_;
		gint _tmp10__length1;
		gdouble* _tmp11_;
		gint _tmp11__length1;
		gdouble _tmp12_;
		gchar* _tmp13_;
		gchar* _tmp14_;
		gchar* _tmp15_;
		gchar* _tmp16_;
#line 98 "../src/Core/Statistics.vala"
		_tmp3_ = self->priv->x;
#line 98 "../src/Core/Statistics.vala"
		_tmp3__length1 = self->priv->x_length1;
#line 98 "../src/Core/Statistics.vala"
		_tmp4_ = self->priv->x;
#line 98 "../src/Core/Statistics.vala"
		_tmp4__length1 = self->priv->x_length1;
#line 98 "../src/Core/Statistics.vala"
		_tmp5_ = _tmp3_[(_tmp4__length1 / 2) - 1];
#line 98 "../src/Core/Statistics.vala"
		_tmp6_ = pebbles_statistics_output_to_string (self, _tmp5_);
#line 98 "../src/Core/Statistics.vala"
		_tmp7_ = _tmp6_;
#line 98 "../src/Core/Statistics.vala"
		_tmp8_ = g_strconcat (_tmp7_, ", ", NULL);
#line 98 "../src/Core/Statistics.vala"
		_tmp9_ = _tmp8_;
#line 98 "../src/Core/Statistics.vala"
		_tmp10_ = self->priv->x;
#line 98 "../src/Core/Statistics.vala"
		_tmp10__length1 = self->priv->x_length1;
#line 98 "../src/Core/Statistics.vala"
		_tmp11_ = self->priv->x;
#line 98 "../src/Core/Statistics.vala"
		_tmp11__length1 = self->priv->x_length1;
#line 98 "../src/Core/Statistics.vala"
		_tmp12_ = _tmp10_[_tmp11__length1 / 2];
#line 98 "../src/Core/Statistics.vala"
		_tmp13_ = pebbles_statistics_output_to_string (self, _tmp12_);
#line 98 "../src/Core/Statistics.vala"
		_tmp14_ = _tmp13_;
#line 98 "../src/Core/Statistics.vala"
		_tmp15_ = g_strconcat (_tmp9_, _tmp14_, NULL);
#line 98 "../src/Core/Statistics.vala"
		_tmp16_ = _tmp15_;
#line 98 "../src/Core/Statistics.vala"
		_g_free0 (_tmp14_);
#line 98 "../src/Core/Statistics.vala"
		_g_free0 (_tmp9_);
#line 98 "../src/Core/Statistics.vala"
		_g_free0 (_tmp7_);
#line 98 "../src/Core/Statistics.vala"
		result = _tmp16_;
#line 98 "../src/Core/Statistics.vala"
		return result;
#line 815 "Statistics.c"
	} else {
		gdouble* _tmp17_;
		gint _tmp17__length1;
		gdouble* _tmp18_;
		gint _tmp18__length1;
		gdouble _tmp19_;
		gchar* _tmp20_;
#line 101 "../src/Core/Statistics.vala"
		_tmp17_ = self->priv->x;
#line 101 "../src/Core/Statistics.vala"
		_tmp17__length1 = self->priv->x_length1;
#line 101 "../src/Core/Statistics.vala"
		_tmp18_ = self->priv->x;
#line 101 "../src/Core/Statistics.vala"
		_tmp18__length1 = self->priv->x_length1;
#line 101 "../src/Core/Statistics.vala"
		_tmp19_ = _tmp17_[_tmp18__length1 / 2];
#line 101 "../src/Core/Statistics.vala"
		_tmp20_ = pebbles_statistics_output_to_string (self, _tmp19_);
#line 101 "../src/Core/Statistics.vala"
		result = _tmp20_;
#line 101 "../src/Core/Statistics.vala"
		return result;
#line 839 "Statistics.c"
	}
}

gchar*
pebbles_statistics_mode (PebblesStatistics* self,
                         const gchar* input_vals)
{
	gboolean _tmp0_ = FALSE;
	gdouble* element = NULL;
	gdouble* _tmp2_;
	gint _tmp2__length1;
	gdouble* _tmp3_;
	gint element_length1;
	gint _element_size_;
	gint no_of_elements = 0;
	gint max_frequency = 0;
	gchar* mode_elements = NULL;
	gdouble* _tmp19_;
	gint _tmp19__length1;
	gdouble _tmp20_;
	gchar* _tmp21_;
	gint flag = 0;
	gchar* result = NULL;
#line 105 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 105 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 106 "../src/Core/Statistics.vala"
	if (g_strcmp0 (input_vals, " ") == 0) {
#line 106 "../src/Core/Statistics.vala"
		_tmp0_ = TRUE;
#line 871 "Statistics.c"
	} else {
#line 106 "../src/Core/Statistics.vala"
		_tmp0_ = input_vals == NULL;
#line 875 "Statistics.c"
	}
#line 106 "../src/Core/Statistics.vala"
	if (_tmp0_) {
#line 879 "Statistics.c"
		gchar* _tmp1_;
#line 107 "../src/Core/Statistics.vala"
		_tmp1_ = g_strdup ("0");
#line 107 "../src/Core/Statistics.vala"
		result = _tmp1_;
#line 107 "../src/Core/Statistics.vala"
		return result;
#line 887 "Statistics.c"
	}
#line 109 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 110 "../src/Core/Statistics.vala"
	_tmp2_ = self->priv->x;
#line 110 "../src/Core/Statistics.vala"
	_tmp2__length1 = self->priv->x_length1;
#line 110 "../src/Core/Statistics.vala"
	_tmp3_ = g_new0 (gdouble, _tmp2__length1);
#line 110 "../src/Core/Statistics.vala"
	element = _tmp3_;
#line 110 "../src/Core/Statistics.vala"
	element_length1 = _tmp2__length1;
#line 110 "../src/Core/Statistics.vala"
	_element_size_ = element_length1;
#line 111 "../src/Core/Statistics.vala"
	no_of_elements = 1;
#line 112 "../src/Core/Statistics.vala"
	max_frequency = 0;
#line 907 "Statistics.c"
	{
		gint i = 0;
#line 113 "../src/Core/Statistics.vala"
		i = 0;
#line 912 "Statistics.c"
		{
			gboolean _tmp4_ = FALSE;
#line 113 "../src/Core/Statistics.vala"
			_tmp4_ = TRUE;
#line 113 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 919 "Statistics.c"
				gdouble* _tmp6_;
				gint _tmp6__length1;
				gdouble temp_element = 0.0;
				gdouble* _tmp7_;
				gint _tmp7__length1;
				gdouble _tmp8_;
				gint temp_frequency = 0;
#line 113 "../src/Core/Statistics.vala"
				if (!_tmp4_) {
#line 929 "Statistics.c"
					gint _tmp5_;
#line 113 "../src/Core/Statistics.vala"
					_tmp5_ = i;
#line 113 "../src/Core/Statistics.vala"
					i = _tmp5_ + 1;
#line 935 "Statistics.c"
				}
#line 113 "../src/Core/Statistics.vala"
				_tmp4_ = FALSE;
#line 113 "../src/Core/Statistics.vala"
				_tmp6_ = self->priv->x;
#line 113 "../src/Core/Statistics.vala"
				_tmp6__length1 = self->priv->x_length1;
#line 113 "../src/Core/Statistics.vala"
				if (!(i < _tmp6__length1)) {
#line 113 "../src/Core/Statistics.vala"
					break;
#line 947 "Statistics.c"
				}
#line 114 "../src/Core/Statistics.vala"
				_tmp7_ = self->priv->x;
#line 114 "../src/Core/Statistics.vala"
				_tmp7__length1 = self->priv->x_length1;
#line 114 "../src/Core/Statistics.vala"
				_tmp8_ = _tmp7_[i];
#line 114 "../src/Core/Statistics.vala"
				temp_element = _tmp8_;
#line 115 "../src/Core/Statistics.vala"
				temp_frequency = 0;
#line 959 "Statistics.c"
				{
					gint j = 0;
#line 116 "../src/Core/Statistics.vala"
					j = 0;
#line 964 "Statistics.c"
					{
						gboolean _tmp9_ = FALSE;
#line 116 "../src/Core/Statistics.vala"
						_tmp9_ = TRUE;
#line 116 "../src/Core/Statistics.vala"
						while (TRUE) {
#line 971 "Statistics.c"
							gdouble* _tmp11_;
							gint _tmp11__length1;
							gdouble* _tmp12_;
							gint _tmp12__length1;
							gdouble _tmp13_;
#line 116 "../src/Core/Statistics.vala"
							if (!_tmp9_) {
#line 979 "Statistics.c"
								gint _tmp10_;
#line 116 "../src/Core/Statistics.vala"
								_tmp10_ = j;
#line 116 "../src/Core/Statistics.vala"
								j = _tmp10_ + 1;
#line 985 "Statistics.c"
							}
#line 116 "../src/Core/Statistics.vala"
							_tmp9_ = FALSE;
#line 116 "../src/Core/Statistics.vala"
							_tmp11_ = self->priv->x;
#line 116 "../src/Core/Statistics.vala"
							_tmp11__length1 = self->priv->x_length1;
#line 116 "../src/Core/Statistics.vala"
							if (!(j < _tmp11__length1)) {
#line 116 "../src/Core/Statistics.vala"
								break;
#line 997 "Statistics.c"
							}
#line 117 "../src/Core/Statistics.vala"
							_tmp12_ = self->priv->x;
#line 117 "../src/Core/Statistics.vala"
							_tmp12__length1 = self->priv->x_length1;
#line 117 "../src/Core/Statistics.vala"
							_tmp13_ = _tmp12_[j];
#line 117 "../src/Core/Statistics.vala"
							if (temp_element == _tmp13_) {
#line 118 "../src/Core/Statistics.vala"
								temp_frequency = temp_frequency + 1;
#line 1009 "Statistics.c"
							}
						}
					}
				}
#line 121 "../src/Core/Statistics.vala"
				if (temp_frequency == max_frequency) {
#line 1016 "Statistics.c"
					gdouble* _tmp14_;
					gint _tmp14__length1;
#line 122 "../src/Core/Statistics.vala"
					no_of_elements = no_of_elements + 1;
#line 123 "../src/Core/Statistics.vala"
					_tmp14_ = element;
#line 123 "../src/Core/Statistics.vala"
					_tmp14__length1 = element_length1;
#line 123 "../src/Core/Statistics.vala"
					_tmp14_[no_of_elements - 1] = temp_element;
#line 1027 "Statistics.c"
				}
#line 125 "../src/Core/Statistics.vala"
				if (temp_frequency > max_frequency) {
#line 1031 "Statistics.c"
					gdouble* _tmp15_;
					gint _tmp15__length1;
#line 126 "../src/Core/Statistics.vala"
					_tmp15_ = element;
#line 126 "../src/Core/Statistics.vala"
					_tmp15__length1 = element_length1;
#line 126 "../src/Core/Statistics.vala"
					_tmp15_[0] = temp_element;
#line 1040 "Statistics.c"
					{
						gint j = 0;
#line 127 "../src/Core/Statistics.vala"
						j = 1;
#line 1045 "Statistics.c"
						{
							gboolean _tmp16_ = FALSE;
#line 127 "../src/Core/Statistics.vala"
							_tmp16_ = TRUE;
#line 127 "../src/Core/Statistics.vala"
							while (TRUE) {
#line 1052 "Statistics.c"
								gdouble* _tmp18_;
								gint _tmp18__length1;
#line 127 "../src/Core/Statistics.vala"
								if (!_tmp16_) {
#line 1057 "Statistics.c"
									gint _tmp17_;
#line 127 "../src/Core/Statistics.vala"
									_tmp17_ = j;
#line 127 "../src/Core/Statistics.vala"
									j = _tmp17_ + 1;
#line 1063 "Statistics.c"
								}
#line 127 "../src/Core/Statistics.vala"
								_tmp16_ = FALSE;
#line 127 "../src/Core/Statistics.vala"
								if (!(j < no_of_elements)) {
#line 127 "../src/Core/Statistics.vala"
									break;
#line 1071 "Statistics.c"
								}
#line 128 "../src/Core/Statistics.vala"
								_tmp18_ = element;
#line 128 "../src/Core/Statistics.vala"
								_tmp18__length1 = element_length1;
#line 128 "../src/Core/Statistics.vala"
								_tmp18_[j] = (gdouble) 0;
#line 1079 "Statistics.c"
							}
						}
					}
#line 130 "../src/Core/Statistics.vala"
					no_of_elements = 1;
#line 131 "../src/Core/Statistics.vala"
					max_frequency = temp_frequency;
#line 1087 "Statistics.c"
				}
			}
		}
	}
#line 135 "../src/Core/Statistics.vala"
	_tmp19_ = element;
#line 135 "../src/Core/Statistics.vala"
	_tmp19__length1 = element_length1;
#line 135 "../src/Core/Statistics.vala"
	_tmp20_ = _tmp19_[0];
#line 135 "../src/Core/Statistics.vala"
	_tmp21_ = pebbles_statistics_output_to_string (self, _tmp20_);
#line 135 "../src/Core/Statistics.vala"
	mode_elements = _tmp21_;
#line 136 "../src/Core/Statistics.vala"
	flag = 0;
#line 1104 "Statistics.c"
	{
		gint i = 0;
#line 137 "../src/Core/Statistics.vala"
		i = 1;
#line 1109 "Statistics.c"
		{
			gboolean _tmp22_ = FALSE;
#line 137 "../src/Core/Statistics.vala"
			_tmp22_ = TRUE;
#line 137 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 137 "../src/Core/Statistics.vala"
				if (!_tmp22_) {
#line 1118 "Statistics.c"
					gint _tmp23_;
#line 137 "../src/Core/Statistics.vala"
					_tmp23_ = i;
#line 137 "../src/Core/Statistics.vala"
					i = _tmp23_ + 1;
#line 1124 "Statistics.c"
				}
#line 137 "../src/Core/Statistics.vala"
				_tmp22_ = FALSE;
#line 137 "../src/Core/Statistics.vala"
				if (!(i < no_of_elements)) {
#line 137 "../src/Core/Statistics.vala"
					break;
#line 1132 "Statistics.c"
				}
#line 138 "../src/Core/Statistics.vala"
				flag = 0;
#line 1136 "Statistics.c"
				{
					gint j = 0;
#line 139 "../src/Core/Statistics.vala"
					j = 0;
#line 1141 "Statistics.c"
					{
						gboolean _tmp24_ = FALSE;
#line 139 "../src/Core/Statistics.vala"
						_tmp24_ = TRUE;
#line 139 "../src/Core/Statistics.vala"
						while (TRUE) {
#line 1148 "Statistics.c"
							gdouble* _tmp26_;
							gint _tmp26__length1;
							gdouble _tmp27_;
							gdouble* _tmp28_;
							gint _tmp28__length1;
							gdouble _tmp29_;
#line 139 "../src/Core/Statistics.vala"
							if (!_tmp24_) {
#line 1157 "Statistics.c"
								gint _tmp25_;
#line 139 "../src/Core/Statistics.vala"
								_tmp25_ = j;
#line 139 "../src/Core/Statistics.vala"
								j = _tmp25_ + 1;
#line 1163 "Statistics.c"
							}
#line 139 "../src/Core/Statistics.vala"
							_tmp24_ = FALSE;
#line 139 "../src/Core/Statistics.vala"
							if (!(j < i)) {
#line 139 "../src/Core/Statistics.vala"
								break;
#line 1171 "Statistics.c"
							}
#line 140 "../src/Core/Statistics.vala"
							_tmp26_ = element;
#line 140 "../src/Core/Statistics.vala"
							_tmp26__length1 = element_length1;
#line 140 "../src/Core/Statistics.vala"
							_tmp27_ = _tmp26_[i];
#line 140 "../src/Core/Statistics.vala"
							_tmp28_ = element;
#line 140 "../src/Core/Statistics.vala"
							_tmp28__length1 = element_length1;
#line 140 "../src/Core/Statistics.vala"
							_tmp29_ = _tmp28_[j];
#line 140 "../src/Core/Statistics.vala"
							if (_tmp27_ == _tmp29_) {
#line 141 "../src/Core/Statistics.vala"
								flag = 1;
#line 142 "../src/Core/Statistics.vala"
								break;
#line 1191 "Statistics.c"
							}
						}
					}
				}
#line 145 "../src/Core/Statistics.vala"
				if (flag == 0) {
#line 1198 "Statistics.c"
					const gchar* _tmp30_;
					gdouble* _tmp31_;
					gint _tmp31__length1;
					gdouble _tmp32_;
					gchar* _tmp33_;
					gchar* _tmp34_;
					gchar* _tmp35_;
#line 146 "../src/Core/Statistics.vala"
					_tmp30_ = mode_elements;
#line 146 "../src/Core/Statistics.vala"
					_tmp31_ = element;
#line 146 "../src/Core/Statistics.vala"
					_tmp31__length1 = element_length1;
#line 146 "../src/Core/Statistics.vala"
					_tmp32_ = _tmp31_[i];
#line 146 "../src/Core/Statistics.vala"
					_tmp33_ = pebbles_statistics_output_to_string (self, _tmp32_);
#line 146 "../src/Core/Statistics.vala"
					_tmp34_ = _tmp33_;
#line 146 "../src/Core/Statistics.vala"
					_tmp35_ = g_strconcat (_tmp30_, ", ", _tmp34_, NULL);
#line 146 "../src/Core/Statistics.vala"
					_g_free0 (mode_elements);
#line 146 "../src/Core/Statistics.vala"
					mode_elements = _tmp35_;
#line 146 "../src/Core/Statistics.vala"
					_g_free0 (_tmp34_);
#line 1226 "Statistics.c"
				}
			}
		}
	}
#line 149 "../src/Core/Statistics.vala"
	result = mode_elements;
#line 149 "../src/Core/Statistics.vala"
	element = (g_free (element), NULL);
#line 149 "../src/Core/Statistics.vala"
	return result;
#line 1237 "Statistics.c"
}

gchar*
pebbles_statistics_geometric_mean (PebblesStatistics* self,
                                   const gchar* input_vals)
{
	gdouble geo_mean = 0.0;
	gdouble* _tmp5_;
	gint _tmp5__length1;
	gchar* _tmp6_;
	gchar* result = NULL;
#line 152 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 152 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 153 "../src/Core/Statistics.vala"
	pebbles_statistics_string_splitter (self, input_vals);
#line 154 "../src/Core/Statistics.vala"
	geo_mean = (gdouble) 0;
#line 1257 "Statistics.c"
	{
		gint i = 0;
#line 155 "../src/Core/Statistics.vala"
		i = 0;
#line 1262 "Statistics.c"
		{
			gboolean _tmp0_ = FALSE;
#line 155 "../src/Core/Statistics.vala"
			_tmp0_ = TRUE;
#line 155 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 1269 "Statistics.c"
				gdouble* _tmp2_;
				gint _tmp2__length1;
				gdouble* _tmp3_;
				gint _tmp3__length1;
				gdouble _tmp4_;
#line 155 "../src/Core/Statistics.vala"
				if (!_tmp0_) {
#line 1277 "Statistics.c"
					gint _tmp1_;
#line 155 "../src/Core/Statistics.vala"
					_tmp1_ = i;
#line 155 "../src/Core/Statistics.vala"
					i = _tmp1_ + 1;
#line 1283 "Statistics.c"
				}
#line 155 "../src/Core/Statistics.vala"
				_tmp0_ = FALSE;
#line 155 "../src/Core/Statistics.vala"
				_tmp2_ = self->priv->x;
#line 155 "../src/Core/Statistics.vala"
				_tmp2__length1 = self->priv->x_length1;
#line 155 "../src/Core/Statistics.vala"
				if (!(i < _tmp2__length1)) {
#line 155 "../src/Core/Statistics.vala"
					break;
#line 1295 "Statistics.c"
				}
#line 156 "../src/Core/Statistics.vala"
				_tmp3_ = self->priv->x;
#line 156 "../src/Core/Statistics.vala"
				_tmp3__length1 = self->priv->x_length1;
#line 156 "../src/Core/Statistics.vala"
				_tmp4_ = _tmp3_[i];
#line 156 "../src/Core/Statistics.vala"
				geo_mean = geo_mean + log (_tmp4_);
#line 1305 "Statistics.c"
			}
		}
	}
#line 158 "../src/Core/Statistics.vala"
	_tmp5_ = self->priv->x;
#line 158 "../src/Core/Statistics.vala"
	_tmp5__length1 = self->priv->x_length1;
#line 158 "../src/Core/Statistics.vala"
	geo_mean = geo_mean / _tmp5__length1;
#line 159 "../src/Core/Statistics.vala"
	geo_mean = exp (geo_mean);
#line 160 "../src/Core/Statistics.vala"
	_tmp6_ = pebbles_statistics_output_to_string (self, geo_mean);
#line 160 "../src/Core/Statistics.vala"
	result = _tmp6_;
#line 160 "../src/Core/Statistics.vala"
	return result;
#line 1323 "Statistics.c"
}

static gchar*
pebbles_statistics_summation_x_minus_mean_whole_square (PebblesStatistics* self,
                                                        const gchar* input_vals)
{
	gdouble mean_of_x = 0.0;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gdouble _tmp2_;
	gdouble summation = 0.0;
	gchar* _tmp8_;
	gchar* result = NULL;
#line 163 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 163 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 164 "../src/Core/Statistics.vala"
	_tmp0_ = pebbles_statistics_mean_x (self, input_vals);
#line 164 "../src/Core/Statistics.vala"
	_tmp1_ = _tmp0_;
#line 164 "../src/Core/Statistics.vala"
	_tmp2_ = double_parse (_tmp1_);
#line 164 "../src/Core/Statistics.vala"
	_g_free0 (_tmp1_);
#line 164 "../src/Core/Statistics.vala"
	mean_of_x = _tmp2_;
#line 165 "../src/Core/Statistics.vala"
	summation = 0.0;
#line 1353 "Statistics.c"
	{
		gint i = 0;
#line 166 "../src/Core/Statistics.vala"
		i = 0;
#line 1358 "Statistics.c"
		{
			gboolean _tmp3_ = FALSE;
#line 166 "../src/Core/Statistics.vala"
			_tmp3_ = TRUE;
#line 166 "../src/Core/Statistics.vala"
			while (TRUE) {
#line 1365 "Statistics.c"
				gdouble* _tmp5_;
				gint _tmp5__length1;
				gdouble* _tmp6_;
				gint _tmp6__length1;
				gdouble _tmp7_;
#line 166 "../src/Core/Statistics.vala"
				if (!_tmp3_) {
#line 1373 "Statistics.c"
					gint _tmp4_;
#line 166 "../src/Core/Statistics.vala"
					_tmp4_ = i;
#line 166 "../src/Core/Statistics.vala"
					i = _tmp4_ + 1;
#line 1379 "Statistics.c"
				}
#line 166 "../src/Core/Statistics.vala"
				_tmp3_ = FALSE;
#line 166 "../src/Core/Statistics.vala"
				_tmp5_ = self->priv->x;
#line 166 "../src/Core/Statistics.vala"
				_tmp5__length1 = self->priv->x_length1;
#line 166 "../src/Core/Statistics.vala"
				if (!(i < _tmp5__length1)) {
#line 166 "../src/Core/Statistics.vala"
					break;
#line 1391 "Statistics.c"
				}
#line 167 "../src/Core/Statistics.vala"
				_tmp6_ = self->priv->x;
#line 167 "../src/Core/Statistics.vala"
				_tmp6__length1 = self->priv->x_length1;
#line 167 "../src/Core/Statistics.vala"
				_tmp7_ = _tmp6_[i];
#line 167 "../src/Core/Statistics.vala"
				summation = summation + pow (_tmp7_ - mean_of_x, (gdouble) 2);
#line 1401 "Statistics.c"
			}
		}
	}
#line 169 "../src/Core/Statistics.vala"
	_tmp8_ = pebbles_statistics_output_to_string (self, summation);
#line 169 "../src/Core/Statistics.vala"
	result = _tmp8_;
#line 169 "../src/Core/Statistics.vala"
	return result;
#line 1411 "Statistics.c"
}

gchar*
pebbles_statistics_sample_variance (PebblesStatistics* self,
                                    const gchar* input_vals)
{
	gdouble variance = 0.0;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gdouble _tmp2_;
	gdouble* _tmp3_;
	gint _tmp3__length1;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 173 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 173 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 174 "../src/Core/Statistics.vala"
	_tmp0_ = pebbles_statistics_summation_x_minus_mean_whole_square (self, input_vals);
#line 174 "../src/Core/Statistics.vala"
	_tmp1_ = _tmp0_;
#line 174 "../src/Core/Statistics.vala"
	_tmp2_ = double_parse (_tmp1_);
#line 174 "../src/Core/Statistics.vala"
	_g_free0 (_tmp1_);
#line 174 "../src/Core/Statistics.vala"
	variance = _tmp2_;
#line 175 "../src/Core/Statistics.vala"
	_tmp3_ = self->priv->x;
#line 175 "../src/Core/Statistics.vala"
	_tmp3__length1 = self->priv->x_length1;
#line 175 "../src/Core/Statistics.vala"
	variance = variance / (_tmp3__length1 - 1);
#line 176 "../src/Core/Statistics.vala"
	_tmp4_ = pebbles_statistics_output_to_string (self, variance);
#line 176 "../src/Core/Statistics.vala"
	result = _tmp4_;
#line 176 "../src/Core/Statistics.vala"
	return result;
#line 1452 "Statistics.c"
}

gchar*
pebbles_statistics_sample_standard_deviation (PebblesStatistics* self,
                                              const gchar* input_vals)
{
	gdouble standard_deviation = 0.0;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gdouble _tmp2_;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 180 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 180 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 181 "../src/Core/Statistics.vala"
	_tmp0_ = pebbles_statistics_sample_variance (self, input_vals);
#line 181 "../src/Core/Statistics.vala"
	_tmp1_ = _tmp0_;
#line 181 "../src/Core/Statistics.vala"
	_tmp2_ = double_parse (_tmp1_);
#line 181 "../src/Core/Statistics.vala"
	_g_free0 (_tmp1_);
#line 181 "../src/Core/Statistics.vala"
	standard_deviation = _tmp2_;
#line 182 "../src/Core/Statistics.vala"
	standard_deviation = sqrt (standard_deviation);
#line 183 "../src/Core/Statistics.vala"
	_tmp3_ = pebbles_statistics_output_to_string (self, standard_deviation);
#line 183 "../src/Core/Statistics.vala"
	result = _tmp3_;
#line 183 "../src/Core/Statistics.vala"
	return result;
#line 1487 "Statistics.c"
}

gchar*
pebbles_statistics_population_variance (PebblesStatistics* self,
                                        const gchar* input_vals)
{
	gdouble variance = 0.0;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gdouble _tmp2_;
	gdouble* _tmp3_;
	gint _tmp3__length1;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 187 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 187 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 188 "../src/Core/Statistics.vala"
	_tmp0_ = pebbles_statistics_summation_x_minus_mean_whole_square (self, input_vals);
#line 188 "../src/Core/Statistics.vala"
	_tmp1_ = _tmp0_;
#line 188 "../src/Core/Statistics.vala"
	_tmp2_ = double_parse (_tmp1_);
#line 188 "../src/Core/Statistics.vala"
	_g_free0 (_tmp1_);
#line 188 "../src/Core/Statistics.vala"
	variance = _tmp2_;
#line 189 "../src/Core/Statistics.vala"
	_tmp3_ = self->priv->x;
#line 189 "../src/Core/Statistics.vala"
	_tmp3__length1 = self->priv->x_length1;
#line 189 "../src/Core/Statistics.vala"
	variance = variance / _tmp3__length1;
#line 190 "../src/Core/Statistics.vala"
	_tmp4_ = pebbles_statistics_output_to_string (self, variance);
#line 190 "../src/Core/Statistics.vala"
	result = _tmp4_;
#line 190 "../src/Core/Statistics.vala"
	return result;
#line 1528 "Statistics.c"
}

gchar*
pebbles_statistics_population_standard_deviation (PebblesStatistics* self,
                                                  const gchar* input_vals)
{
	gdouble standard_deviation = 0.0;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gdouble _tmp2_;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 194 "../src/Core/Statistics.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 194 "../src/Core/Statistics.vala"
	g_return_val_if_fail (input_vals != NULL, NULL);
#line 195 "../src/Core/Statistics.vala"
	_tmp0_ = pebbles_statistics_population_variance (self, input_vals);
#line 195 "../src/Core/Statistics.vala"
	_tmp1_ = _tmp0_;
#line 195 "../src/Core/Statistics.vala"
	_tmp2_ = double_parse (_tmp1_);
#line 195 "../src/Core/Statistics.vala"
	_g_free0 (_tmp1_);
#line 195 "../src/Core/Statistics.vala"
	standard_deviation = _tmp2_;
#line 196 "../src/Core/Statistics.vala"
	standard_deviation = sqrt (standard_deviation);
#line 197 "../src/Core/Statistics.vala"
	_tmp3_ = pebbles_statistics_output_to_string (self, standard_deviation);
#line 197 "../src/Core/Statistics.vala"
	result = _tmp3_;
#line 197 "../src/Core/Statistics.vala"
	return result;
#line 1563 "Statistics.c"
}

static void
pebbles_value_statistics_init (GValue* value)
{
#line 26 "../src/Core/Statistics.vala"
	value->data[0].v_pointer = NULL;
#line 1571 "Statistics.c"
}

static void
pebbles_value_statistics_free_value (GValue* value)
{
#line 26 "../src/Core/Statistics.vala"
	if (value->data[0].v_pointer) {
#line 26 "../src/Core/Statistics.vala"
		pebbles_statistics_unref (value->data[0].v_pointer);
#line 1581 "Statistics.c"
	}
}

static void
pebbles_value_statistics_copy_value (const GValue* src_value,
                                     GValue* dest_value)
{
#line 26 "../src/Core/Statistics.vala"
	if (src_value->data[0].v_pointer) {
#line 26 "../src/Core/Statistics.vala"
		dest_value->data[0].v_pointer = pebbles_statistics_ref (src_value->data[0].v_pointer);
#line 1593 "Statistics.c"
	} else {
#line 26 "../src/Core/Statistics.vala"
		dest_value->data[0].v_pointer = NULL;
#line 1597 "Statistics.c"
	}
}

static gpointer
pebbles_value_statistics_peek_pointer (const GValue* value)
{
#line 26 "../src/Core/Statistics.vala"
	return value->data[0].v_pointer;
#line 1606 "Statistics.c"
}

static gchar*
pebbles_value_statistics_collect_value (GValue* value,
                                        guint n_collect_values,
                                        GTypeCValue* collect_values,
                                        guint collect_flags)
{
#line 26 "../src/Core/Statistics.vala"
	if (collect_values[0].v_pointer) {
#line 1617 "Statistics.c"
		PebblesStatistics * object;
		object = collect_values[0].v_pointer;
#line 26 "../src/Core/Statistics.vala"
		if (object->parent_instance.g_class == NULL) {
#line 26 "../src/Core/Statistics.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 1624 "Statistics.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 26 "../src/Core/Statistics.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 1628 "Statistics.c"
		}
#line 26 "../src/Core/Statistics.vala"
		value->data[0].v_pointer = pebbles_statistics_ref (object);
#line 1632 "Statistics.c"
	} else {
#line 26 "../src/Core/Statistics.vala"
		value->data[0].v_pointer = NULL;
#line 1636 "Statistics.c"
	}
#line 26 "../src/Core/Statistics.vala"
	return NULL;
#line 1640 "Statistics.c"
}

static gchar*
pebbles_value_statistics_lcopy_value (const GValue* value,
                                      guint n_collect_values,
                                      GTypeCValue* collect_values,
                                      guint collect_flags)
{
	PebblesStatistics ** object_p;
	object_p = collect_values[0].v_pointer;
#line 26 "../src/Core/Statistics.vala"
	if (!object_p) {
#line 26 "../src/Core/Statistics.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 1655 "Statistics.c"
	}
#line 26 "../src/Core/Statistics.vala"
	if (!value->data[0].v_pointer) {
#line 26 "../src/Core/Statistics.vala"
		*object_p = NULL;
#line 1661 "Statistics.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 26 "../src/Core/Statistics.vala"
		*object_p = value->data[0].v_pointer;
#line 1665 "Statistics.c"
	} else {
#line 26 "../src/Core/Statistics.vala"
		*object_p = pebbles_statistics_ref (value->data[0].v_pointer);
#line 1669 "Statistics.c"
	}
#line 26 "../src/Core/Statistics.vala"
	return NULL;
#line 1673 "Statistics.c"
}

GParamSpec*
pebbles_param_spec_statistics (const gchar* name,
                               const gchar* nick,
                               const gchar* blurb,
                               GType object_type,
                               GParamFlags flags)
{
	PebblesParamSpecStatistics* spec;
#line 26 "../src/Core/Statistics.vala"
	g_return_val_if_fail (g_type_is_a (object_type, PEBBLES_TYPE_STATISTICS), NULL);
#line 26 "../src/Core/Statistics.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 26 "../src/Core/Statistics.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 26 "../src/Core/Statistics.vala"
	return G_PARAM_SPEC (spec);
#line 1692 "Statistics.c"
}

gpointer
pebbles_value_get_statistics (const GValue* value)
{
#line 26 "../src/Core/Statistics.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_STATISTICS), NULL);
#line 26 "../src/Core/Statistics.vala"
	return value->data[0].v_pointer;
#line 1702 "Statistics.c"
}

void
pebbles_value_set_statistics (GValue* value,
                              gpointer v_object)
{
	PebblesStatistics * old;
#line 26 "../src/Core/Statistics.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_STATISTICS));
#line 26 "../src/Core/Statistics.vala"
	old = value->data[0].v_pointer;
#line 26 "../src/Core/Statistics.vala"
	if (v_object) {
#line 26 "../src/Core/Statistics.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, PEBBLES_TYPE_STATISTICS));
#line 26 "../src/Core/Statistics.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 26 "../src/Core/Statistics.vala"
		value->data[0].v_pointer = v_object;
#line 26 "../src/Core/Statistics.vala"
		pebbles_statistics_ref (value->data[0].v_pointer);
#line 1724 "Statistics.c"
	} else {
#line 26 "../src/Core/Statistics.vala"
		value->data[0].v_pointer = NULL;
#line 1728 "Statistics.c"
	}
#line 26 "../src/Core/Statistics.vala"
	if (old) {
#line 26 "../src/Core/Statistics.vala"
		pebbles_statistics_unref (old);
#line 1734 "Statistics.c"
	}
}

void
pebbles_value_take_statistics (GValue* value,
                               gpointer v_object)
{
	PebblesStatistics * old;
#line 26 "../src/Core/Statistics.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_STATISTICS));
#line 26 "../src/Core/Statistics.vala"
	old = value->data[0].v_pointer;
#line 26 "../src/Core/Statistics.vala"
	if (v_object) {
#line 26 "../src/Core/Statistics.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, PEBBLES_TYPE_STATISTICS));
#line 26 "../src/Core/Statistics.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 26 "../src/Core/Statistics.vala"
		value->data[0].v_pointer = v_object;
#line 1755 "Statistics.c"
	} else {
#line 26 "../src/Core/Statistics.vala"
		value->data[0].v_pointer = NULL;
#line 1759 "Statistics.c"
	}
#line 26 "../src/Core/Statistics.vala"
	if (old) {
#line 26 "../src/Core/Statistics.vala"
		pebbles_statistics_unref (old);
#line 1765 "Statistics.c"
	}
}

static void
pebbles_statistics_class_init (PebblesStatisticsClass * klass,
                               gpointer klass_data)
{
#line 26 "../src/Core/Statistics.vala"
	pebbles_statistics_parent_class = g_type_class_peek_parent (klass);
#line 26 "../src/Core/Statistics.vala"
	((PebblesStatisticsClass *) klass)->finalize = pebbles_statistics_finalize;
#line 26 "../src/Core/Statistics.vala"
	g_type_class_adjust_private_offset (klass, &PebblesStatistics_private_offset);
#line 1779 "Statistics.c"
}

static void
pebbles_statistics_instance_init (PebblesStatistics * self,
                                  gpointer klass)
{
#line 26 "../src/Core/Statistics.vala"
	self->priv = pebbles_statistics_get_instance_private (self);
#line 26 "../src/Core/Statistics.vala"
	self->ref_count = 1;
#line 1790 "Statistics.c"
}

static void
pebbles_statistics_finalize (PebblesStatistics * obj)
{
	PebblesStatistics * self;
#line 26 "../src/Core/Statistics.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_STATISTICS, PebblesStatistics);
#line 26 "../src/Core/Statistics.vala"
	g_signal_handlers_destroy (self);
#line 27 "../src/Core/Statistics.vala"
	self->priv->tokens = (_vala_array_free (self->priv->tokens, self->priv->tokens_length1, (GDestroyNotify) g_free), NULL);
#line 28 "../src/Core/Statistics.vala"
	self->priv->x = (g_free (self->priv->x), NULL);
#line 1805 "Statistics.c"
}

static GType
pebbles_statistics_get_type_once (void)
{
	static const GTypeValueTable g_define_type_value_table = { pebbles_value_statistics_init, pebbles_value_statistics_free_value, pebbles_value_statistics_copy_value, pebbles_value_statistics_peek_pointer, "p", pebbles_value_statistics_collect_value, "p", pebbles_value_statistics_lcopy_value };
	static const GTypeInfo g_define_type_info = { sizeof (PebblesStatisticsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_statistics_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesStatistics), 0, (GInstanceInitFunc) pebbles_statistics_instance_init, &g_define_type_value_table };
	static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
	GType pebbles_statistics_type_id;
	pebbles_statistics_type_id = g_type_register_fundamental (g_type_fundamental_next (), "PebblesStatistics", &g_define_type_info, &g_define_type_fundamental_info, 0);
	PebblesStatistics_private_offset = g_type_add_instance_private (pebbles_statistics_type_id, sizeof (PebblesStatisticsPrivate));
	return pebbles_statistics_type_id;
}

GType
pebbles_statistics_get_type (void)
{
	static volatile gsize pebbles_statistics_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_statistics_type_id__volatile)) {
		GType pebbles_statistics_type_id;
		pebbles_statistics_type_id = pebbles_statistics_get_type_once ();
		g_once_init_leave (&pebbles_statistics_type_id__volatile, pebbles_statistics_type_id);
	}
	return pebbles_statistics_type_id__volatile;
}

gpointer
pebbles_statistics_ref (gpointer instance)
{
	PebblesStatistics * self;
	self = instance;
#line 26 "../src/Core/Statistics.vala"
	g_atomic_int_inc (&self->ref_count);
#line 26 "../src/Core/Statistics.vala"
	return instance;
#line 1841 "Statistics.c"
}

void
pebbles_statistics_unref (gpointer instance)
{
	PebblesStatistics * self;
	self = instance;
#line 26 "../src/Core/Statistics.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 26 "../src/Core/Statistics.vala"
		PEBBLES_STATISTICS_GET_CLASS (self)->finalize (self);
#line 26 "../src/Core/Statistics.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 1855 "Statistics.c"
	}
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

static gint
_vala_array_length (gpointer array)
{
	gint length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}

