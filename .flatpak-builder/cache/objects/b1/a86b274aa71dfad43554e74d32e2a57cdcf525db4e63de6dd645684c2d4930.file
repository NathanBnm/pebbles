/* Utils.c generated by valac 0.48.14, the Vala compiler
 * generated from Utils.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 *              Saunak Biswas  <saunakbis97@gmail.com>
 */

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <langinfo.h>
#include <granite.h>
#include <float.h>
#include <math.h>
#include <gobject/gvaluecollector.h>

#define PEBBLES_TYPE_UTILS (pebbles_utils_get_type ())
#define PEBBLES_UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_UTILS, PebblesUtils))
#define PEBBLES_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_UTILS, PebblesUtilsClass))
#define PEBBLES_IS_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_UTILS))
#define PEBBLES_IS_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_UTILS))
#define PEBBLES_UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_UTILS, PebblesUtilsClass))

typedef struct _PebblesUtils PebblesUtils;
typedef struct _PebblesUtilsClass PebblesUtilsClass;
typedef struct _PebblesUtilsPrivate PebblesUtilsPrivate;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_regex_unref0(var) ((var == NULL) ? NULL : (var = (g_regex_unref (var), NULL)))
#define _g_string_free0(var) ((var == NULL) ? NULL : (var = (g_string_free (var, TRUE), NULL)))

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN (pebbles_programmer_calculator_token_get_type ())
typedef struct _PebblesProgrammerCalculatorToken PebblesProgrammerCalculatorToken;
typedef enum  {
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS
} PebblesProgrammerCalculatorTokenType;

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN_TYPE (pebbles_programmer_calculator_token_type_get_type ())
typedef enum  {
	PEBBLES_NUMBER_SYSTEM_BINARY,
	PEBBLES_NUMBER_SYSTEM_OCTAL,
	PEBBLES_NUMBER_SYSTEM_DECIMAL,
	PEBBLES_NUMBER_SYSTEM_HEXADECIMAL
} PebblesNumberSystem;

#define PEBBLES_TYPE_NUMBER_SYSTEM (pebbles_number_system_get_type ())

#define PEBBLES_TYPE_SETTINGS (pebbles_settings_get_type ())
#define PEBBLES_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettings))
#define PEBBLES_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))
#define PEBBLES_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))

typedef struct _PebblesSettings PebblesSettings;
typedef struct _PebblesSettingsClass PebblesSettingsClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _PebblesParamSpecUtils PebblesParamSpecUtils;

struct _PebblesUtils {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PebblesUtilsPrivate * priv;
};

struct _PebblesUtilsClass {
	GTypeClass parent_class;
	void (*finalize) (PebblesUtils *self);
};

struct _PebblesProgrammerCalculatorToken {
	gchar* token;
	PebblesProgrammerCalculatorTokenType type;
	PebblesNumberSystem number_system;
};

struct _PebblesParamSpecUtils {
	GParamSpec parent_instance;
};

static gpointer pebbles_utils_parent_class = NULL;

gpointer pebbles_utils_ref (gpointer instance);
void pebbles_utils_unref (gpointer instance);
GParamSpec* pebbles_param_spec_utils (const gchar* name,
                                      const gchar* nick,
                                      const gchar* blurb,
                                      GType object_type,
                                      GParamFlags flags);
void pebbles_value_set_utils (GValue* value,
                              gpointer v_object);
void pebbles_value_take_utils (GValue* value,
                               gpointer v_object);
gpointer pebbles_value_get_utils (const GValue* value);
GType pebbles_utils_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesUtils, pebbles_utils_unref)
gchar* pebbles_utils_get_local_radix_symbol (void);
gchar* pebbles_utils_get_local_separator_symbol (void);
gchar* pebbles_utils_format_result (const gchar* _result_);
gboolean pebbles_utils_check_parenthesis (const gchar* exp);
gchar* pebbles_utils_preformat (const gchar* exp);
gchar* pebbles_utils_st_tokenize (const gchar* input);
static gchar* pebbles_utils_space_removal (const gchar* original);
gchar* pebbles_utils_algebraic_parenthesis_product_convert (const gchar* exp);
static gchar* pebbles_utils_unary_minus_convert (const gchar* exp);
gchar* pebbles_utils_pg_tokenize (PebblesUtils* self,
                                  const gchar* input);
GType pebbles_programmer_calculator_token_get_type (void) G_GNUC_CONST;
GType pebbles_programmer_calculator_token_type_get_type (void) G_GNUC_CONST;
GType pebbles_number_system_get_type (void) G_GNUC_CONST;
PebblesProgrammerCalculatorToken* pebbles_programmer_calculator_token_dup (const PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_free (PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_copy (const PebblesProgrammerCalculatorToken* self,
                                               PebblesProgrammerCalculatorToken* dest);
void pebbles_programmer_calculator_token_destroy (PebblesProgrammerCalculatorToken* self);
PebblesProgrammerCalculatorToken* pebbles_utils_get_token_array (const gchar* input_exp,
                                                                 gint* result_length1);
GType pebbles_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesSettings, g_object_unref)
PebblesSettings* pebbles_settings_get_default (void);
PebblesNumberSystem pebbles_settings_get_number_system (PebblesSettings* self);
gchar* pebbles_utils_get_natural_expression (const gchar* str);
static gboolean pebbles_utils_is_number (const gchar* exp);
gchar* pebbles_utils_algebraic_variable_product_convert (const gchar* exp);
static gboolean pebbles_utils_pg_is_number (const gchar* exp);
gchar* pebbles_utils_manage_decimal_places (gdouble _result_,
                                            gint accuracy);
PebblesUtils* pebbles_utils_new (void);
PebblesUtils* pebbles_utils_construct (GType object_type);
static void pebbles_utils_finalize (PebblesUtils * obj);
static GType pebbles_utils_get_type_once (void);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);

gchar*
pebbles_utils_get_local_radix_symbol (void)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* result = NULL;
#line 25 "../src/Core/Utils.vala"
	_tmp0_ = nl_langinfo (RADIXCHAR);
#line 25 "../src/Core/Utils.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 25 "../src/Core/Utils.vala"
	result = _tmp1_;
#line 25 "../src/Core/Utils.vala"
	return result;
#line 174 "Utils.c"
}

gchar*
pebbles_utils_get_local_separator_symbol (void)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* result = NULL;
#line 29 "../src/Core/Utils.vala"
	_tmp0_ = nl_langinfo (THOUSEP);
#line 29 "../src/Core/Utils.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 29 "../src/Core/Utils.vala"
	result = _tmp1_;
#line 29 "../src/Core/Utils.vala"
	return result;
#line 191 "Utils.c"
}

static gchar*
string_replace (const gchar* self,
                const gchar* old,
                const gchar* replacement)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (old != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (replacement != NULL, NULL);
#line 1535 "glib-2.0.vapi"
	if ((*((gchar*) self)) == '\0') {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = TRUE;
#line 213 "Utils.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = (*((gchar*) old)) == '\0';
#line 217 "Utils.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp1_) {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = TRUE;
#line 223 "Utils.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = g_strcmp0 (old, replacement) == 0;
#line 227 "Utils.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp0_) {
#line 231 "Utils.c"
		gchar* _tmp2_;
#line 1536 "glib-2.0.vapi"
		_tmp2_ = g_strdup (self);
#line 1536 "glib-2.0.vapi"
		result = _tmp2_;
#line 1536 "glib-2.0.vapi"
		return result;
#line 239 "Utils.c"
	}
	{
		GRegex* regex = NULL;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GRegex* _tmp5_;
		GRegex* _tmp6_;
		gchar* _tmp7_ = NULL;
		GRegex* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 1539 "glib-2.0.vapi"
		_tmp3_ = g_regex_escape_string (old, -1);
#line 1539 "glib-2.0.vapi"
		_tmp4_ = _tmp3_;
#line 1539 "glib-2.0.vapi"
		_tmp5_ = g_regex_new (_tmp4_, 0, 0, &_inner_error0_);
#line 1539 "glib-2.0.vapi"
		_tmp6_ = _tmp5_;
#line 1539 "glib-2.0.vapi"
		_g_free0 (_tmp4_);
#line 1539 "glib-2.0.vapi"
		regex = _tmp6_;
#line 1539 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1539 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1539 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1539 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 271 "Utils.c"
				goto __catch0_g_regex_error;
			}
#line 1539 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1539 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1539 "glib-2.0.vapi"
			return NULL;
#line 280 "Utils.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp8_ = regex;
#line 1540 "glib-2.0.vapi"
		_tmp9_ = g_regex_replace_literal (_tmp8_, self, (gssize) -1, 0, replacement, 0, &_inner_error0_);
#line 1540 "glib-2.0.vapi"
		_tmp7_ = _tmp9_;
#line 1540 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1540 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 296 "Utils.c"
				goto __catch0_g_regex_error;
			}
#line 1540 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1540 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1540 "glib-2.0.vapi"
			return NULL;
#line 305 "Utils.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp10_ = _tmp7_;
#line 1540 "glib-2.0.vapi"
		_tmp7_ = NULL;
#line 1540 "glib-2.0.vapi"
		result = _tmp10_;
#line 1540 "glib-2.0.vapi"
		_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
		_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
		return result;
#line 319 "Utils.c"
	}
	goto __finally0;
	__catch0_g_regex_error:
	{
#line 1538 "glib-2.0.vapi"
		g_clear_error (&_inner_error0_);
#line 1542 "glib-2.0.vapi"
		g_assert_not_reached ();
#line 328 "Utils.c"
	}
	__finally0:
#line 1538 "glib-2.0.vapi"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1538 "glib-2.0.vapi"
	g_clear_error (&_inner_error0_);
#line 1538 "glib-2.0.vapi"
	return NULL;
#line 337 "Utils.c"
}

static gchar*
string_slice (const gchar* self,
              glong start,
              glong end)
{
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 1480 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1481 "glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1481 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1481 "glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1482 "glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 1483 "glib-2.0.vapi"
		start = string_length + start;
#line 364 "Utils.c"
	}
#line 1485 "glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 1486 "glib-2.0.vapi"
		end = string_length + end;
#line 370 "Utils.c"
	}
#line 1488 "glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = start <= string_length;
#line 376 "Utils.c"
	} else {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = FALSE;
#line 380 "Utils.c"
	}
#line 1488 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp2_, NULL);
#line 1489 "glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = end <= string_length;
#line 388 "Utils.c"
	} else {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = FALSE;
#line 392 "Utils.c"
	}
#line 1489 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp3_, NULL);
#line 1490 "glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1491 "glib-2.0.vapi"
	_tmp4_ = g_strndup (((gchar*) self) + start, (gsize) (end - start));
#line 1491 "glib-2.0.vapi"
	result = _tmp4_;
#line 1491 "glib-2.0.vapi"
	return result;
#line 404 "Utils.c"
}

static gint
string_last_index_of (const gchar* self,
                      const gchar* needle,
                      gint start_index)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gint result = 0;
#line 1143 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, 0);
#line 1143 "glib-2.0.vapi"
	g_return_val_if_fail (needle != NULL, 0);
#line 1144 "glib-2.0.vapi"
	_tmp0_ = g_strrstr (((gchar*) self) + start_index, (gchar*) needle);
#line 1144 "glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1146 "glib-2.0.vapi"
	_tmp1_ = _result_;
#line 1146 "glib-2.0.vapi"
	if (_tmp1_ != NULL) {
#line 428 "Utils.c"
		gchar* _tmp2_;
#line 1147 "glib-2.0.vapi"
		_tmp2_ = _result_;
#line 1147 "glib-2.0.vapi"
		result = (gint) (_tmp2_ - ((gchar*) self));
#line 1147 "glib-2.0.vapi"
		return result;
#line 436 "Utils.c"
	} else {
#line 1149 "glib-2.0.vapi"
		result = -1;
#line 1149 "glib-2.0.vapi"
		return result;
#line 442 "Utils.c"
	}
}

gchar*
pebbles_utils_format_result (const gchar* _result_)
{
	gchar* output = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gboolean _tmp10_;
	GString* output_builder = NULL;
	const gchar* _tmp13_;
	GString* _tmp14_;
	gint decimalPos = 0;
	const gchar* _tmp15_;
	gchar* _tmp16_;
	gchar* _tmp17_;
	gint _tmp18_;
	gint end_position = 0;
	const gchar* _tmp22_;
	GString* _tmp27_;
	const gchar* _tmp28_;
	GString* _tmp30_;
	const gchar* _tmp31_;
	GString* _tmp34_;
	const gchar* _tmp35_;
	GString* _tmp38_;
	const gchar* _tmp39_;
	gchar* _tmp40_;
	gchar* result = NULL;
#line 32 "../src/Core/Utils.vala"
	g_return_val_if_fail (_result_ != NULL, NULL);
#line 33 "../src/Core/Utils.vala"
	_tmp0_ = pebbles_utils_get_local_radix_symbol ();
#line 33 "../src/Core/Utils.vala"
	_tmp1_ = _tmp0_;
#line 33 "../src/Core/Utils.vala"
	_tmp2_ = string_replace (_result_, ".", _tmp1_);
#line 33 "../src/Core/Utils.vala"
	_tmp3_ = _tmp2_;
#line 33 "../src/Core/Utils.vala"
	_g_free0 (_tmp1_);
#line 33 "../src/Core/Utils.vala"
	output = _tmp3_;
#line 36 "../src/Core/Utils.vala"
	while (TRUE) {
#line 494 "Utils.c"
		const gchar* _tmp4_;
		const gchar* _tmp5_;
		gchar* _tmp6_;
#line 36 "../src/Core/Utils.vala"
		_tmp4_ = output;
#line 36 "../src/Core/Utils.vala"
		if (!g_str_has_suffix (_tmp4_, "0")) {
#line 36 "../src/Core/Utils.vala"
			break;
#line 504 "Utils.c"
		}
#line 37 "../src/Core/Utils.vala"
		_tmp5_ = output;
#line 37 "../src/Core/Utils.vala"
		_tmp6_ = string_slice (_tmp5_, (glong) 0, (glong) -1);
#line 37 "../src/Core/Utils.vala"
		_g_free0 (output);
#line 37 "../src/Core/Utils.vala"
		output = _tmp6_;
#line 514 "Utils.c"
	}
#line 39 "../src/Core/Utils.vala"
	_tmp7_ = output;
#line 39 "../src/Core/Utils.vala"
	_tmp8_ = pebbles_utils_get_local_radix_symbol ();
#line 39 "../src/Core/Utils.vala"
	_tmp9_ = _tmp8_;
#line 39 "../src/Core/Utils.vala"
	_tmp10_ = g_str_has_suffix (_tmp7_, _tmp9_);
#line 39 "../src/Core/Utils.vala"
	_g_free0 (_tmp9_);
#line 39 "../src/Core/Utils.vala"
	if (_tmp10_) {
#line 528 "Utils.c"
		const gchar* _tmp11_;
		gchar* _tmp12_;
#line 40 "../src/Core/Utils.vala"
		_tmp11_ = output;
#line 40 "../src/Core/Utils.vala"
		_tmp12_ = string_slice (_tmp11_, (glong) 0, (glong) -1);
#line 40 "../src/Core/Utils.vala"
		_g_free0 (output);
#line 40 "../src/Core/Utils.vala"
		output = _tmp12_;
#line 539 "Utils.c"
	}
#line 44 "../src/Core/Utils.vala"
	_tmp13_ = output;
#line 44 "../src/Core/Utils.vala"
	_tmp14_ = g_string_new (_tmp13_);
#line 44 "../src/Core/Utils.vala"
	output_builder = _tmp14_;
#line 45 "../src/Core/Utils.vala"
	_tmp15_ = output;
#line 45 "../src/Core/Utils.vala"
	_tmp16_ = pebbles_utils_get_local_radix_symbol ();
#line 45 "../src/Core/Utils.vala"
	_tmp17_ = _tmp16_;
#line 45 "../src/Core/Utils.vala"
	_tmp18_ = string_last_index_of (_tmp15_, _tmp17_, 0);
#line 45 "../src/Core/Utils.vala"
	_g_free0 (_tmp17_);
#line 45 "../src/Core/Utils.vala"
	decimalPos = _tmp18_;
#line 46 "../src/Core/Utils.vala"
	if (decimalPos == -1) {
#line 561 "Utils.c"
		const gchar* _tmp19_;
		gint _tmp20_;
		gint _tmp21_;
#line 47 "../src/Core/Utils.vala"
		_tmp19_ = output;
#line 47 "../src/Core/Utils.vala"
		_tmp20_ = strlen (_tmp19_);
#line 47 "../src/Core/Utils.vala"
		_tmp21_ = _tmp20_;
#line 47 "../src/Core/Utils.vala"
		decimalPos = _tmp21_;
#line 573 "Utils.c"
	}
#line 49 "../src/Core/Utils.vala"
	end_position = 0;
#line 52 "../src/Core/Utils.vala"
	_tmp22_ = output;
#line 52 "../src/Core/Utils.vala"
	if (g_str_has_prefix (_tmp22_, "-")) {
#line 53 "../src/Core/Utils.vala"
		end_position = 1;
#line 583 "Utils.c"
	}
	{
		gint i = 0;
#line 55 "../src/Core/Utils.vala"
		i = decimalPos - 3;
#line 589 "Utils.c"
		{
			gboolean _tmp23_ = FALSE;
#line 55 "../src/Core/Utils.vala"
			_tmp23_ = TRUE;
#line 55 "../src/Core/Utils.vala"
			while (TRUE) {
#line 596 "Utils.c"
				GString* _tmp24_;
				gchar* _tmp25_;
				gchar* _tmp26_;
#line 55 "../src/Core/Utils.vala"
				if (!_tmp23_) {
#line 55 "../src/Core/Utils.vala"
					i -= 3;
#line 604 "Utils.c"
				}
#line 55 "../src/Core/Utils.vala"
				_tmp23_ = FALSE;
#line 55 "../src/Core/Utils.vala"
				if (!(i > end_position)) {
#line 55 "../src/Core/Utils.vala"
					break;
#line 612 "Utils.c"
				}
#line 56 "../src/Core/Utils.vala"
				_tmp24_ = output_builder;
#line 56 "../src/Core/Utils.vala"
				_tmp25_ = pebbles_utils_get_local_separator_symbol ();
#line 56 "../src/Core/Utils.vala"
				_tmp26_ = _tmp25_;
#line 56 "../src/Core/Utils.vala"
				g_string_insert (_tmp24_, (gssize) i, _tmp26_);
#line 56 "../src/Core/Utils.vala"
				_g_free0 (_tmp26_);
#line 624 "Utils.c"
			}
		}
	}
#line 59 "../src/Core/Utils.vala"
	_tmp27_ = output_builder;
#line 59 "../src/Core/Utils.vala"
	_tmp28_ = _tmp27_->str;
#line 59 "../src/Core/Utils.vala"
	if (g_strcmp0 (_tmp28_, "-0") == 0) {
#line 634 "Utils.c"
		gchar* _tmp29_;
#line 60 "../src/Core/Utils.vala"
		_tmp29_ = g_strdup ("0");
#line 60 "../src/Core/Utils.vala"
		result = _tmp29_;
#line 60 "../src/Core/Utils.vala"
		_g_string_free0 (output_builder);
#line 60 "../src/Core/Utils.vala"
		_g_free0 (output);
#line 60 "../src/Core/Utils.vala"
		return result;
#line 646 "Utils.c"
	}
#line 62 "../src/Core/Utils.vala"
	_tmp30_ = output_builder;
#line 62 "../src/Core/Utils.vala"
	_tmp31_ = _tmp30_->str;
#line 62 "../src/Core/Utils.vala"
	if (g_strcmp0 (_tmp31_, "nan") == 0) {
#line 654 "Utils.c"
		GString* _tmp32_;
		gchar* _tmp33_;
#line 63 "../src/Core/Utils.vala"
		_tmp32_ = output_builder;
#line 63 "../src/Core/Utils.vala"
		_tmp33_ = g_strdup ("E");
#line 63 "../src/Core/Utils.vala"
		_g_free0 (_tmp32_->str);
#line 63 "../src/Core/Utils.vala"
		_tmp32_->str = _tmp33_;
#line 665 "Utils.c"
	}
#line 64 "../src/Core/Utils.vala"
	_tmp34_ = output_builder;
#line 64 "../src/Core/Utils.vala"
	_tmp35_ = _tmp34_->str;
#line 64 "../src/Core/Utils.vala"
	if (g_strcmp0 (_tmp35_, "inf") == 0) {
#line 673 "Utils.c"
		GString* _tmp36_;
		gchar* _tmp37_;
#line 65 "../src/Core/Utils.vala"
		_tmp36_ = output_builder;
#line 65 "../src/Core/Utils.vala"
		_tmp37_ = g_strdup ("∞");
#line 65 "../src/Core/Utils.vala"
		_g_free0 (_tmp36_->str);
#line 65 "../src/Core/Utils.vala"
		_tmp36_->str = _tmp37_;
#line 684 "Utils.c"
	}
#line 66 "../src/Core/Utils.vala"
	_tmp38_ = output_builder;
#line 66 "../src/Core/Utils.vala"
	_tmp39_ = _tmp38_->str;
#line 66 "../src/Core/Utils.vala"
	_tmp40_ = g_strdup (_tmp39_);
#line 66 "../src/Core/Utils.vala"
	result = _tmp40_;
#line 66 "../src/Core/Utils.vala"
	_g_string_free0 (output_builder);
#line 66 "../src/Core/Utils.vala"
	_g_free0 (output);
#line 66 "../src/Core/Utils.vala"
	return result;
#line 700 "Utils.c"
}

static gunichar
string_get_char (const gchar* self,
                 glong index)
{
	gunichar result = 0U;
#line 1262 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, 0U);
#line 1263 "glib-2.0.vapi"
	result = g_utf8_get_char (((gchar*) self) + index);
#line 1263 "glib-2.0.vapi"
	return result;
#line 714 "Utils.c"
}

gboolean
pebbles_utils_check_parenthesis (const gchar* exp)
{
	gint bracket_balance = 0;
	gboolean result = FALSE;
#line 68 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, FALSE);
#line 69 "../src/Core/Utils.vala"
	bracket_balance = 0;
#line 726 "Utils.c"
	{
		gint i = 0;
#line 70 "../src/Core/Utils.vala"
		i = 0;
#line 731 "Utils.c"
		{
			gboolean _tmp0_ = FALSE;
#line 70 "../src/Core/Utils.vala"
			_tmp0_ = TRUE;
#line 70 "../src/Core/Utils.vala"
			while (TRUE) {
#line 738 "Utils.c"
				gint _tmp2_;
				gint _tmp3_;
#line 70 "../src/Core/Utils.vala"
				if (!_tmp0_) {
#line 743 "Utils.c"
					gint _tmp1_;
#line 70 "../src/Core/Utils.vala"
					_tmp1_ = i;
#line 70 "../src/Core/Utils.vala"
					i = _tmp1_ + 1;
#line 749 "Utils.c"
				}
#line 70 "../src/Core/Utils.vala"
				_tmp0_ = FALSE;
#line 70 "../src/Core/Utils.vala"
				_tmp2_ = strlen (exp);
#line 70 "../src/Core/Utils.vala"
				_tmp3_ = _tmp2_;
#line 70 "../src/Core/Utils.vala"
				if (!(i < _tmp3_)) {
#line 70 "../src/Core/Utils.vala"
					break;
#line 761 "Utils.c"
				}
#line 71 "../src/Core/Utils.vala"
				if (string_get_char (exp, (glong) i) == ((gunichar) '(')) {
#line 765 "Utils.c"
					gint _tmp4_;
#line 72 "../src/Core/Utils.vala"
					_tmp4_ = bracket_balance;
#line 72 "../src/Core/Utils.vala"
					bracket_balance = _tmp4_ + 1;
#line 771 "Utils.c"
				} else {
#line 74 "../src/Core/Utils.vala"
					if (string_get_char (exp, (glong) i) == ((gunichar) ')')) {
#line 775 "Utils.c"
						gint _tmp5_;
#line 75 "../src/Core/Utils.vala"
						_tmp5_ = bracket_balance;
#line 75 "../src/Core/Utils.vala"
						bracket_balance = _tmp5_ - 1;
#line 781 "Utils.c"
					}
				}
			}
		}
	}
#line 78 "../src/Core/Utils.vala"
	result = bracket_balance >= 0;
#line 78 "../src/Core/Utils.vala"
	return result;
#line 791 "Utils.c"
}

gchar*
pebbles_utils_preformat (const gchar* exp)
{
	gchar* formatted_str = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* result = NULL;
#line 81 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, NULL);
#line 83 "../src/Core/Utils.vala"
	_tmp0_ = string_replace (exp, "/", "\xC3\xB7");
#line 83 "../src/Core/Utils.vala"
	_g_free0 (formatted_str);
#line 83 "../src/Core/Utils.vala"
	formatted_str = _tmp0_;
#line 84 "../src/Core/Utils.vala"
	_tmp1_ = formatted_str;
#line 84 "../src/Core/Utils.vala"
	_tmp2_ = string_replace (_tmp1_, "*", "\xC3\x97");
#line 84 "../src/Core/Utils.vala"
	_g_free0 (formatted_str);
#line 84 "../src/Core/Utils.vala"
	formatted_str = _tmp2_;
#line 85 "../src/Core/Utils.vala"
	result = formatted_str;
#line 85 "../src/Core/Utils.vala"
	return result;
#line 822 "Utils.c"
}

static gchar*
string_strip (const gchar* self)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1359 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1360 "glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1360 "glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1361 "glib-2.0.vapi"
	g_strstrip (_result_);
#line 1362 "glib-2.0.vapi"
	result = _result_;
#line 1362 "glib-2.0.vapi"
	return result;
#line 843 "Utils.c"
}

gchar*
pebbles_utils_st_tokenize (const gchar* input)
{
	gchar* result = NULL;
#line 88 "../src/Core/Utils.vala"
	g_return_val_if_fail (input != NULL, NULL);
#line 89 "../src/Core/Utils.vala"
	if (pebbles_utils_check_parenthesis (input)) {
#line 854 "Utils.c"
		gchar* exp = NULL;
		gchar* _tmp0_;
		const gchar* _tmp1_;
		gchar* _tmp2_;
		const gchar* _tmp3_;
		gchar* _tmp4_;
		const gchar* _tmp5_;
		gchar* _tmp6_;
		const gchar* _tmp7_;
		gchar* _tmp8_;
		const gchar* _tmp9_;
		gchar* _tmp10_;
		const gchar* _tmp11_;
		gchar* _tmp12_;
		const gchar* _tmp13_;
		gchar* _tmp14_;
		const gchar* _tmp15_;
		gchar* _tmp16_;
		const gchar* _tmp17_;
		gchar* _tmp18_;
		const gchar* _tmp19_;
		gchar* _tmp20_;
		const gchar* _tmp21_;
		gchar* _tmp22_;
		const gchar* _tmp23_;
		gchar* _tmp24_;
		const gchar* _tmp25_;
		gchar* _tmp26_;
		const gchar* _tmp27_;
		gchar* _tmp28_;
		const gchar* _tmp29_;
		gchar* _tmp30_;
		const gchar* _tmp31_;
		gchar* _tmp32_;
		const gchar* _tmp33_;
		gchar* _tmp34_;
		const gchar* _tmp35_;
		gchar* _tmp36_;
		const gchar* _tmp37_;
		gchar* _tmp38_;
		const gchar* _tmp39_;
		gchar* _tmp40_;
		const gchar* _tmp41_;
		gchar* _tmp42_;
		const gchar* _tmp43_;
		gchar* _tmp44_;
		const gchar* _tmp45_;
		gchar* _tmp46_;
		const gchar* _tmp47_;
		gchar* _tmp48_;
		const gchar* _tmp49_;
		gchar* _tmp50_;
		const gchar* _tmp51_;
		gchar* _tmp52_;
		const gchar* _tmp53_;
		gchar* _tmp54_;
		const gchar* _tmp55_;
		gchar* _tmp56_;
		const gchar* _tmp57_;
		gchar* _tmp58_;
		const gchar* _tmp59_;
		gchar* _tmp60_;
		const gchar* _tmp61_;
		gchar* _tmp62_;
		const gchar* _tmp63_;
		gchar* _tmp64_;
		const gchar* _tmp65_;
		gchar* _tmp66_;
		const gchar* _tmp67_;
		gchar* _tmp68_;
		const gchar* _tmp69_;
		gchar* _tmp70_;
		const gchar* _tmp71_;
		gchar* _tmp72_;
		const gchar* _tmp73_;
		gchar* _tmp74_;
		const gchar* _tmp75_;
		gchar* _tmp76_;
		const gchar* _tmp77_;
		gchar* _tmp78_;
		const gchar* _tmp79_;
		gchar* _tmp80_;
		const gchar* _tmp81_;
		gchar* _tmp82_;
		const gchar* _tmp83_;
		gchar* _tmp84_;
		const gchar* _tmp85_;
		gchar* _tmp86_;
		const gchar* _tmp87_;
		gchar* _tmp88_;
		const gchar* _tmp89_;
		gchar* _tmp90_;
		const gchar* _tmp91_;
		gchar* _tmp92_;
		const gchar* _tmp93_;
		gchar* _tmp94_;
		const gchar* _tmp95_;
		gchar* _tmp96_;
		const gchar* _tmp97_;
		gchar* _tmp98_;
		const gchar* _tmp99_;
		gchar* _tmp100_;
		const gchar* _tmp101_;
		gchar* _tmp102_;
		const gchar* _tmp103_;
		gchar* _tmp104_;
		const gchar* _tmp105_;
		gchar* _tmp106_;
		const gchar* _tmp107_;
		gchar* _tmp108_;
		const gchar* _tmp109_;
		gchar* _tmp110_;
		const gchar* _tmp111_;
		gchar* _tmp112_;
		const gchar* _tmp113_;
		gchar* _tmp114_;
		const gchar* _tmp115_;
		gchar* _tmp116_;
		const gchar* _tmp117_;
		gchar* _tmp118_;
		const gchar* _tmp119_;
		gchar* _tmp120_;
		const gchar* _tmp121_;
		gchar* _tmp122_;
		const gchar* _tmp123_;
		gchar* _tmp124_;
		const gchar* _tmp125_;
		gchar* _tmp126_;
		const gchar* _tmp127_;
		gchar* _tmp128_;
		const gchar* _tmp129_;
		gchar* _tmp130_;
		const gchar* _tmp131_;
		gchar* _tmp132_;
		const gchar* _tmp133_;
		gchar* _tmp134_;
		const gchar* _tmp135_;
		gchar* _tmp136_;
		const gchar* _tmp137_;
		gchar* _tmp138_;
		gchar* _tmp139_;
		gchar* _tmp140_;
		gchar* _tmp141_;
#line 90 "../src/Core/Utils.vala"
		_tmp0_ = g_strdup (input);
#line 90 "../src/Core/Utils.vala"
		exp = _tmp0_;
#line 101 "../src/Core/Utils.vala"
		_tmp1_ = exp;
#line 101 "../src/Core/Utils.vala"
		_tmp2_ = string_replace (_tmp1_, "\xCF\x80", " ( 3.1415926535897932 ) ");
#line 101 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 101 "../src/Core/Utils.vala"
		exp = _tmp2_;
#line 102 "../src/Core/Utils.vala"
		_tmp3_ = exp;
#line 102 "../src/Core/Utils.vala"
		_tmp4_ = string_replace (_tmp3_, "\xCF\x86", " ( 1.618033989 ) ");
#line 102 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 102 "../src/Core/Utils.vala"
		exp = _tmp4_;
#line 103 "../src/Core/Utils.vala"
		_tmp5_ = exp;
#line 103 "../src/Core/Utils.vala"
		_tmp6_ = string_replace (_tmp5_, "\xF0\x9D\x9B\xBE", " ( 0.5772156649 ) ");
#line 103 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 103 "../src/Core/Utils.vala"
		exp = _tmp6_;
#line 104 "../src/Core/Utils.vala"
		_tmp7_ = exp;
#line 104 "../src/Core/Utils.vala"
		_tmp8_ = string_replace (_tmp7_, "\xCE\xBB", " ( 1.30357 ) ");
#line 104 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 104 "../src/Core/Utils.vala"
		exp = _tmp8_;
#line 105 "../src/Core/Utils.vala"
		_tmp9_ = exp;
#line 105 "../src/Core/Utils.vala"
		_tmp10_ = string_replace (_tmp9_, "K", " ( 2.685452001 ) ");
#line 105 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 105 "../src/Core/Utils.vala"
		exp = _tmp10_;
#line 106 "../src/Core/Utils.vala"
		_tmp11_ = exp;
#line 106 "../src/Core/Utils.vala"
		_tmp12_ = string_replace (_tmp11_, "\xCE\xB1", " ( 2.5029 ) ");
#line 106 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 106 "../src/Core/Utils.vala"
		exp = _tmp12_;
#line 107 "../src/Core/Utils.vala"
		_tmp13_ = exp;
#line 107 "../src/Core/Utils.vala"
		_tmp14_ = string_replace (_tmp13_, "\xCE\xB4", " ( 4.6692 ) ");
#line 107 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 107 "../src/Core/Utils.vala"
		exp = _tmp14_;
#line 108 "../src/Core/Utils.vala"
		_tmp15_ = exp;
#line 108 "../src/Core/Utils.vala"
		_tmp16_ = string_replace (_tmp15_, "\xF0\x9D\x91\x83", " ( 2.29558714939 ) ");
#line 108 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 108 "../src/Core/Utils.vala"
		exp = _tmp16_;
#line 109 "../src/Core/Utils.vala"
		_tmp17_ = exp;
#line 109 "../src/Core/Utils.vala"
		_tmp18_ = string_replace (_tmp17_, "E", " * 10 ^ ");
#line 109 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 109 "../src/Core/Utils.vala"
		exp = _tmp18_;
#line 110 "../src/Core/Utils.vala"
		_tmp19_ = exp;
#line 110 "../src/Core/Utils.vala"
		_tmp20_ = string_replace (_tmp19_, "pi", " ( 3.1415926535897932 ) ");
#line 110 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 110 "../src/Core/Utils.vala"
		exp = _tmp20_;
#line 112 "../src/Core/Utils.vala"
		_tmp21_ = exp;
#line 112 "../src/Core/Utils.vala"
		_tmp22_ = g_utf8_strdown (_tmp21_, (gssize) -1);
#line 112 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 112 "../src/Core/Utils.vala"
		exp = _tmp22_;
#line 115 "../src/Core/Utils.vala"
		_tmp23_ = exp;
#line 115 "../src/Core/Utils.vala"
		_tmp24_ = string_replace (_tmp23_, "isinh", " [0] ");
#line 115 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 115 "../src/Core/Utils.vala"
		exp = _tmp24_;
#line 116 "../src/Core/Utils.vala"
		_tmp25_ = exp;
#line 116 "../src/Core/Utils.vala"
		_tmp26_ = string_replace (_tmp25_, "icosh", " [1] ");
#line 116 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 116 "../src/Core/Utils.vala"
		exp = _tmp26_;
#line 117 "../src/Core/Utils.vala"
		_tmp27_ = exp;
#line 117 "../src/Core/Utils.vala"
		_tmp28_ = string_replace (_tmp27_, "itanh", " [2] ");
#line 117 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 117 "../src/Core/Utils.vala"
		exp = _tmp28_;
#line 118 "../src/Core/Utils.vala"
		_tmp29_ = exp;
#line 118 "../src/Core/Utils.vala"
		_tmp30_ = string_replace (_tmp29_, "isin", " [3] ");
#line 118 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 118 "../src/Core/Utils.vala"
		exp = _tmp30_;
#line 119 "../src/Core/Utils.vala"
		_tmp31_ = exp;
#line 119 "../src/Core/Utils.vala"
		_tmp32_ = string_replace (_tmp31_, "icos", " [4] ");
#line 119 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 119 "../src/Core/Utils.vala"
		exp = _tmp32_;
#line 120 "../src/Core/Utils.vala"
		_tmp33_ = exp;
#line 120 "../src/Core/Utils.vala"
		_tmp34_ = string_replace (_tmp33_, "itan", " [5] ");
#line 120 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 120 "../src/Core/Utils.vala"
		exp = _tmp34_;
#line 121 "../src/Core/Utils.vala"
		_tmp35_ = exp;
#line 121 "../src/Core/Utils.vala"
		_tmp36_ = string_replace (_tmp35_, "sinh", " [6] ");
#line 121 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 121 "../src/Core/Utils.vala"
		exp = _tmp36_;
#line 122 "../src/Core/Utils.vala"
		_tmp37_ = exp;
#line 122 "../src/Core/Utils.vala"
		_tmp38_ = string_replace (_tmp37_, "cosh", " [7] ");
#line 122 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 122 "../src/Core/Utils.vala"
		exp = _tmp38_;
#line 123 "../src/Core/Utils.vala"
		_tmp39_ = exp;
#line 123 "../src/Core/Utils.vala"
		_tmp40_ = string_replace (_tmp39_, "tanh", " [8] ");
#line 123 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 123 "../src/Core/Utils.vala"
		exp = _tmp40_;
#line 124 "../src/Core/Utils.vala"
		_tmp41_ = exp;
#line 124 "../src/Core/Utils.vala"
		_tmp42_ = string_replace (_tmp41_, "sin", " [9] ");
#line 124 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 124 "../src/Core/Utils.vala"
		exp = _tmp42_;
#line 125 "../src/Core/Utils.vala"
		_tmp43_ = exp;
#line 125 "../src/Core/Utils.vala"
		_tmp44_ = string_replace (_tmp43_, "cos", " [10] ");
#line 125 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 125 "../src/Core/Utils.vala"
		exp = _tmp44_;
#line 126 "../src/Core/Utils.vala"
		_tmp45_ = exp;
#line 126 "../src/Core/Utils.vala"
		_tmp46_ = string_replace (_tmp45_, "tan", " [11] ");
#line 126 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 126 "../src/Core/Utils.vala"
		exp = _tmp46_;
#line 127 "../src/Core/Utils.vala"
		_tmp47_ = exp;
#line 127 "../src/Core/Utils.vala"
		_tmp48_ = string_replace (_tmp47_, "log\xE2\x82\x81\xE2\x82\x80", " 10 log ");
#line 127 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 127 "../src/Core/Utils.vala"
		exp = _tmp48_;
#line 128 "../src/Core/Utils.vala"
		_tmp49_ = exp;
#line 128 "../src/Core/Utils.vala"
		_tmp50_ = string_replace (_tmp49_, "log", " log ");
#line 128 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 128 "../src/Core/Utils.vala"
		exp = _tmp50_;
#line 129 "../src/Core/Utils.vala"
		_tmp51_ = exp;
#line 129 "../src/Core/Utils.vala"
		_tmp52_ = string_replace (_tmp51_, "ln", " e log ");
#line 129 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 129 "../src/Core/Utils.vala"
		exp = _tmp52_;
#line 130 "../src/Core/Utils.vala"
		_tmp53_ = exp;
#line 130 "../src/Core/Utils.vala"
		_tmp54_ = string_replace (_tmp53_, "mod", " m ");
#line 130 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 130 "../src/Core/Utils.vala"
		exp = _tmp54_;
#line 131 "../src/Core/Utils.vala"
		_tmp55_ = exp;
#line 131 "../src/Core/Utils.vala"
		_tmp56_ = string_replace (_tmp55_, "p", " p ");
#line 131 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 131 "../src/Core/Utils.vala"
		exp = _tmp56_;
#line 132 "../src/Core/Utils.vala"
		_tmp57_ = exp;
#line 132 "../src/Core/Utils.vala"
		_tmp58_ = string_replace (_tmp57_, "P", " p ");
#line 132 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 132 "../src/Core/Utils.vala"
		exp = _tmp58_;
#line 133 "../src/Core/Utils.vala"
		_tmp59_ = exp;
#line 133 "../src/Core/Utils.vala"
		_tmp60_ = string_replace (_tmp59_, "C", " b ");
#line 133 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 133 "../src/Core/Utils.vala"
		exp = _tmp60_;
#line 134 "../src/Core/Utils.vala"
		_tmp61_ = exp;
#line 134 "../src/Core/Utils.vala"
		_tmp62_ = string_replace (_tmp61_, "c", " b ");
#line 134 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 134 "../src/Core/Utils.vala"
		exp = _tmp62_;
#line 137 "../src/Core/Utils.vala"
		_tmp63_ = exp;
#line 137 "../src/Core/Utils.vala"
		_tmp64_ = string_replace (_tmp63_, "i", " ( ( 0 - 1 ) ^ ( 0.5 ) ) ");
#line 137 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 137 "../src/Core/Utils.vala"
		exp = _tmp64_;
#line 138 "../src/Core/Utils.vala"
		_tmp65_ = exp;
#line 138 "../src/Core/Utils.vala"
		_tmp66_ = string_replace (_tmp65_, "e", " ( 2.718281828 ) ");
#line 138 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 138 "../src/Core/Utils.vala"
		exp = _tmp66_;
#line 139 "../src/Core/Utils.vala"
		_tmp67_ = exp;
#line 139 "../src/Core/Utils.vala"
		_tmp68_ = string_replace (_tmp67_, "[0]", " 0 r ");
#line 139 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 139 "../src/Core/Utils.vala"
		exp = _tmp68_;
#line 140 "../src/Core/Utils.vala"
		_tmp69_ = exp;
#line 140 "../src/Core/Utils.vala"
		_tmp70_ = string_replace (_tmp69_, "[1]", " 0 z ");
#line 140 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 140 "../src/Core/Utils.vala"
		exp = _tmp70_;
#line 141 "../src/Core/Utils.vala"
		_tmp71_ = exp;
#line 141 "../src/Core/Utils.vala"
		_tmp72_ = string_replace (_tmp71_, "[2]", " 0 k ");
#line 141 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 141 "../src/Core/Utils.vala"
		exp = _tmp72_;
#line 142 "../src/Core/Utils.vala"
		_tmp73_ = exp;
#line 142 "../src/Core/Utils.vala"
		_tmp74_ = string_replace (_tmp73_, "[3]", " 0 i ");
#line 142 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 142 "../src/Core/Utils.vala"
		exp = _tmp74_;
#line 143 "../src/Core/Utils.vala"
		_tmp75_ = exp;
#line 143 "../src/Core/Utils.vala"
		_tmp76_ = string_replace (_tmp75_, "[4]", " 0 o ");
#line 143 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 143 "../src/Core/Utils.vala"
		exp = _tmp76_;
#line 144 "../src/Core/Utils.vala"
		_tmp77_ = exp;
#line 144 "../src/Core/Utils.vala"
		_tmp78_ = string_replace (_tmp77_, "[5]", " 0 a ");
#line 144 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 144 "../src/Core/Utils.vala"
		exp = _tmp78_;
#line 145 "../src/Core/Utils.vala"
		_tmp79_ = exp;
#line 145 "../src/Core/Utils.vala"
		_tmp80_ = string_replace (_tmp79_, "[6]", " 0 h ");
#line 145 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 145 "../src/Core/Utils.vala"
		exp = _tmp80_;
#line 146 "../src/Core/Utils.vala"
		_tmp81_ = exp;
#line 146 "../src/Core/Utils.vala"
		_tmp82_ = string_replace (_tmp81_, "[7]", " 0 y ");
#line 146 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 146 "../src/Core/Utils.vala"
		exp = _tmp82_;
#line 147 "../src/Core/Utils.vala"
		_tmp83_ = exp;
#line 147 "../src/Core/Utils.vala"
		_tmp84_ = string_replace (_tmp83_, "[8]", " 0 e ");
#line 147 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 147 "../src/Core/Utils.vala"
		exp = _tmp84_;
#line 148 "../src/Core/Utils.vala"
		_tmp85_ = exp;
#line 148 "../src/Core/Utils.vala"
		_tmp86_ = string_replace (_tmp85_, "[9]", " 0 s ");
#line 148 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 148 "../src/Core/Utils.vala"
		exp = _tmp86_;
#line 149 "../src/Core/Utils.vala"
		_tmp87_ = exp;
#line 149 "../src/Core/Utils.vala"
		_tmp88_ = string_replace (_tmp87_, "[10]", " 0 c ");
#line 149 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 149 "../src/Core/Utils.vala"
		exp = _tmp88_;
#line 150 "../src/Core/Utils.vala"
		_tmp89_ = exp;
#line 150 "../src/Core/Utils.vala"
		_tmp90_ = string_replace (_tmp89_, "[11]", " 0 t ");
#line 150 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 150 "../src/Core/Utils.vala"
		exp = _tmp90_;
#line 151 "../src/Core/Utils.vala"
		_tmp91_ = exp;
#line 151 "../src/Core/Utils.vala"
		_tmp92_ = string_replace (_tmp91_, "log", " l ");
#line 151 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 151 "../src/Core/Utils.vala"
		exp = _tmp92_;
#line 152 "../src/Core/Utils.vala"
		_tmp93_ = exp;
#line 152 "../src/Core/Utils.vala"
		_tmp94_ = string_replace (_tmp93_, "(", " ( ");
#line 152 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 152 "../src/Core/Utils.vala"
		exp = _tmp94_;
#line 153 "../src/Core/Utils.vala"
		_tmp95_ = exp;
#line 153 "../src/Core/Utils.vala"
		_tmp96_ = string_replace (_tmp95_, ")", " ) ");
#line 153 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 153 "../src/Core/Utils.vala"
		exp = _tmp96_;
#line 154 "../src/Core/Utils.vala"
		_tmp97_ = exp;
#line 154 "../src/Core/Utils.vala"
		_tmp98_ = string_replace (_tmp97_, "\xC3\x97", " * ");
#line 154 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 154 "../src/Core/Utils.vala"
		exp = _tmp98_;
#line 155 "../src/Core/Utils.vala"
		_tmp99_ = exp;
#line 155 "../src/Core/Utils.vala"
		_tmp100_ = string_replace (_tmp99_, "\xC3\xB7", " / ");
#line 155 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 155 "../src/Core/Utils.vala"
		exp = _tmp100_;
#line 156 "../src/Core/Utils.vala"
		_tmp101_ = exp;
#line 156 "../src/Core/Utils.vala"
		_tmp102_ = string_replace (_tmp101_, "%", " / 100 ");
#line 156 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 156 "../src/Core/Utils.vala"
		exp = _tmp102_;
#line 157 "../src/Core/Utils.vala"
		_tmp103_ = exp;
#line 157 "../src/Core/Utils.vala"
		_tmp104_ = string_replace (_tmp103_, "+", " + ");
#line 157 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 157 "../src/Core/Utils.vala"
		exp = _tmp104_;
#line 158 "../src/Core/Utils.vala"
		_tmp105_ = exp;
#line 158 "../src/Core/Utils.vala"
		_tmp106_ = string_replace (_tmp105_, "-", " - ");
#line 158 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 158 "../src/Core/Utils.vala"
		exp = _tmp106_;
#line 159 "../src/Core/Utils.vala"
		_tmp107_ = exp;
#line 159 "../src/Core/Utils.vala"
		_tmp108_ = string_replace (_tmp107_, "−", " - ");
#line 159 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 159 "../src/Core/Utils.vala"
		exp = _tmp108_;
#line 160 "../src/Core/Utils.vala"
		_tmp109_ = exp;
#line 160 "../src/Core/Utils.vala"
		_tmp110_ = string_replace (_tmp109_, "*", " * ");
#line 160 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 160 "../src/Core/Utils.vala"
		exp = _tmp110_;
#line 161 "../src/Core/Utils.vala"
		_tmp111_ = exp;
#line 161 "../src/Core/Utils.vala"
		_tmp112_ = string_replace (_tmp111_, "/", " / ");
#line 161 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 161 "../src/Core/Utils.vala"
		exp = _tmp112_;
#line 162 "../src/Core/Utils.vala"
		_tmp113_ = exp;
#line 162 "../src/Core/Utils.vala"
		_tmp114_ = string_replace (_tmp113_, "^", " ^ ");
#line 162 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 162 "../src/Core/Utils.vala"
		exp = _tmp114_;
#line 163 "../src/Core/Utils.vala"
		_tmp115_ = exp;
#line 163 "../src/Core/Utils.vala"
		_tmp116_ = string_replace (_tmp115_, "\xE2\x81\xBF√", " q ");
#line 163 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 163 "../src/Core/Utils.vala"
		exp = _tmp116_;
#line 164 "../src/Core/Utils.vala"
		_tmp117_ = exp;
#line 164 "../src/Core/Utils.vala"
		_tmp118_ = string_replace (_tmp117_, "sqrt", " 2 q ");
#line 164 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 164 "../src/Core/Utils.vala"
		exp = _tmp118_;
#line 165 "../src/Core/Utils.vala"
		_tmp119_ = exp;
#line 165 "../src/Core/Utils.vala"
		_tmp120_ = string_replace (_tmp119_, "√", " 2 q ");
#line 165 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 165 "../src/Core/Utils.vala"
		exp = _tmp120_;
#line 166 "../src/Core/Utils.vala"
		_tmp121_ = exp;
#line 166 "../src/Core/Utils.vala"
		_tmp122_ = string_replace (_tmp121_, "sqr", " ^ 2 ");
#line 166 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 166 "../src/Core/Utils.vala"
		exp = _tmp122_;
#line 167 "../src/Core/Utils.vala"
		_tmp123_ = exp;
#line 167 "../src/Core/Utils.vala"
		_tmp124_ = string_replace (_tmp123_, "rt", " q ");
#line 167 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 167 "../src/Core/Utils.vala"
		exp = _tmp124_;
#line 168 "../src/Core/Utils.vala"
		_tmp125_ = exp;
#line 168 "../src/Core/Utils.vala"
		_tmp126_ = string_replace (_tmp125_, "!", " ! ");
#line 168 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 168 "../src/Core/Utils.vala"
		exp = _tmp126_;
#line 169 "../src/Core/Utils.vala"
		_tmp127_ = exp;
#line 169 "../src/Core/Utils.vala"
		_tmp128_ = string_replace (_tmp127_, "∞", "inf");
#line 169 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 169 "../src/Core/Utils.vala"
		exp = _tmp128_;
#line 171 "../src/Core/Utils.vala"
		_tmp129_ = exp;
#line 171 "../src/Core/Utils.vala"
		_tmp130_ = string_strip (_tmp129_);
#line 171 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 171 "../src/Core/Utils.vala"
		exp = _tmp130_;
#line 172 "../src/Core/Utils.vala"
		_tmp131_ = exp;
#line 172 "../src/Core/Utils.vala"
		_tmp132_ = pebbles_utils_space_removal (_tmp131_);
#line 172 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 172 "../src/Core/Utils.vala"
		exp = _tmp132_;
#line 175 "../src/Core/Utils.vala"
		_tmp133_ = exp;
#line 175 "../src/Core/Utils.vala"
		_tmp134_ = pebbles_utils_algebraic_parenthesis_product_convert (_tmp133_);
#line 175 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 175 "../src/Core/Utils.vala"
		exp = _tmp134_;
#line 176 "../src/Core/Utils.vala"
		_tmp135_ = exp;
#line 176 "../src/Core/Utils.vala"
		_tmp136_ = pebbles_utils_unary_minus_convert (_tmp135_);
#line 176 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 176 "../src/Core/Utils.vala"
		exp = _tmp136_;
#line 179 "../src/Core/Utils.vala"
		_tmp137_ = exp;
#line 179 "../src/Core/Utils.vala"
		_tmp138_ = g_strconcat ("Final exp: ", _tmp137_, NULL);
#line 179 "../src/Core/Utils.vala"
		_tmp139_ = _tmp138_;
#line 179 "../src/Core/Utils.vala"
		_tmp140_ = g_strconcat (_tmp139_, "\n", NULL);
#line 179 "../src/Core/Utils.vala"
		_tmp141_ = _tmp140_;
#line 179 "../src/Core/Utils.vala"
		g_print ("%s", _tmp141_);
#line 179 "../src/Core/Utils.vala"
		_g_free0 (_tmp141_);
#line 179 "../src/Core/Utils.vala"
		_g_free0 (_tmp139_);
#line 180 "../src/Core/Utils.vala"
		result = exp;
#line 180 "../src/Core/Utils.vala"
		return result;
#line 1566 "Utils.c"
	} else {
		gchar* _tmp142_;
#line 183 "../src/Core/Utils.vala"
		_tmp142_ = g_strdup ("E");
#line 183 "../src/Core/Utils.vala"
		result = _tmp142_;
#line 183 "../src/Core/Utils.vala"
		return result;
#line 1575 "Utils.c"
	}
}

gchar*
pebbles_utils_pg_tokenize (PebblesUtils* self,
                           const gchar* input)
{
	gchar* _tmp80_;
	gchar* result = NULL;
#line 187 "../src/Core/Utils.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 187 "../src/Core/Utils.vala"
	g_return_val_if_fail (input != NULL, NULL);
#line 188 "../src/Core/Utils.vala"
	if (pebbles_utils_check_parenthesis (input)) {
#line 1591 "Utils.c"
		gchar* exp = NULL;
		gchar* _tmp0_;
		const gchar* _tmp1_;
		gchar* _tmp2_;
		const gchar* _tmp3_;
		gchar* _tmp4_;
		const gchar* _tmp5_;
		gchar* _tmp6_;
		const gchar* _tmp7_;
		gchar* _tmp8_;
		const gchar* _tmp9_;
		gchar* _tmp10_;
		const gchar* _tmp11_;
		gchar* _tmp12_;
		const gchar* _tmp13_;
		gchar* _tmp14_;
		const gchar* _tmp15_;
		gchar* _tmp16_;
		const gchar* _tmp17_;
		gchar* _tmp18_;
		const gchar* _tmp19_;
		gchar* _tmp20_;
		const gchar* _tmp21_;
		gchar* _tmp22_;
		const gchar* _tmp23_;
		gchar* _tmp24_;
		const gchar* _tmp25_;
		gchar* _tmp26_;
		const gchar* _tmp27_;
		gchar* _tmp28_;
		const gchar* _tmp29_;
		gchar* _tmp30_;
		const gchar* _tmp31_;
		gchar* _tmp32_;
		const gchar* _tmp33_;
		gchar* _tmp34_;
		const gchar* _tmp35_;
		gchar* _tmp36_;
		const gchar* _tmp37_;
		gchar* _tmp38_;
		const gchar* _tmp39_;
		gchar* _tmp40_;
		const gchar* _tmp41_;
		gchar* _tmp42_;
		const gchar* _tmp43_;
		gchar* _tmp44_;
		const gchar* _tmp45_;
		gchar* _tmp46_;
		const gchar* _tmp47_;
		gchar* _tmp48_;
		const gchar* _tmp49_;
		gchar* _tmp50_;
		const gchar* _tmp51_;
		gchar* _tmp52_;
		const gchar* _tmp53_;
		gchar* _tmp54_;
		const gchar* _tmp55_;
		gchar* _tmp56_;
		const gchar* _tmp57_;
		gchar* _tmp58_;
		const gchar* _tmp59_;
		gchar* _tmp60_;
		const gchar* _tmp61_;
		gchar* _tmp62_;
		const gchar* _tmp63_;
		gchar* _tmp64_;
		const gchar* _tmp65_;
		gchar* _tmp66_;
		const gchar* _tmp67_;
		gchar* _tmp68_;
		const gchar* _tmp69_;
		gchar* _tmp70_;
		const gchar* _tmp71_;
		gchar* _tmp72_;
		const gchar* _tmp73_;
		gchar* _tmp74_;
		const gchar* _tmp75_;
		gchar* _tmp76_;
		gchar* _tmp77_;
		gchar* _tmp78_;
		gchar* _tmp79_;
#line 189 "../src/Core/Utils.vala"
		_tmp0_ = g_strdup (input);
#line 189 "../src/Core/Utils.vala"
		exp = _tmp0_;
#line 190 "../src/Core/Utils.vala"
		_tmp1_ = exp;
#line 190 "../src/Core/Utils.vala"
		_tmp2_ = string_replace (_tmp1_, "lsh", " [0] ");
#line 190 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 190 "../src/Core/Utils.vala"
		exp = _tmp2_;
#line 191 "../src/Core/Utils.vala"
		_tmp3_ = exp;
#line 191 "../src/Core/Utils.vala"
		_tmp4_ = string_replace (_tmp3_, "rsh", " [1] ");
#line 191 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 191 "../src/Core/Utils.vala"
		exp = _tmp4_;
#line 192 "../src/Core/Utils.vala"
		_tmp5_ = exp;
#line 192 "../src/Core/Utils.vala"
		_tmp6_ = string_replace (_tmp5_, "lr", " [2] ");
#line 192 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 192 "../src/Core/Utils.vala"
		exp = _tmp6_;
#line 193 "../src/Core/Utils.vala"
		_tmp7_ = exp;
#line 193 "../src/Core/Utils.vala"
		_tmp8_ = string_replace (_tmp7_, "rr", " [3] ");
#line 193 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 193 "../src/Core/Utils.vala"
		exp = _tmp8_;
#line 194 "../src/Core/Utils.vala"
		_tmp9_ = exp;
#line 194 "../src/Core/Utils.vala"
		_tmp10_ = string_replace (_tmp9_, "not", " [4] ");
#line 194 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 194 "../src/Core/Utils.vala"
		exp = _tmp10_;
#line 195 "../src/Core/Utils.vala"
		_tmp11_ = exp;
#line 195 "../src/Core/Utils.vala"
		_tmp12_ = string_replace (_tmp11_, "nand", " [5] ");
#line 195 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 195 "../src/Core/Utils.vala"
		exp = _tmp12_;
#line 196 "../src/Core/Utils.vala"
		_tmp13_ = exp;
#line 196 "../src/Core/Utils.vala"
		_tmp14_ = string_replace (_tmp13_, "xnor", " [6]] ");
#line 196 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 196 "../src/Core/Utils.vala"
		exp = _tmp14_;
#line 197 "../src/Core/Utils.vala"
		_tmp15_ = exp;
#line 197 "../src/Core/Utils.vala"
		_tmp16_ = string_replace (_tmp15_, "xor", " [7] ");
#line 197 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 197 "../src/Core/Utils.vala"
		exp = _tmp16_;
#line 198 "../src/Core/Utils.vala"
		_tmp17_ = exp;
#line 198 "../src/Core/Utils.vala"
		_tmp18_ = string_replace (_tmp17_, "nor", " [8] ");
#line 198 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 198 "../src/Core/Utils.vala"
		exp = _tmp18_;
#line 199 "../src/Core/Utils.vala"
		_tmp19_ = exp;
#line 199 "../src/Core/Utils.vala"
		_tmp20_ = string_replace (_tmp19_, "and", " [9] ");
#line 199 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 199 "../src/Core/Utils.vala"
		exp = _tmp20_;
#line 200 "../src/Core/Utils.vala"
		_tmp21_ = exp;
#line 200 "../src/Core/Utils.vala"
		_tmp22_ = string_replace (_tmp21_, "or", " [10] ");
#line 200 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 200 "../src/Core/Utils.vala"
		exp = _tmp22_;
#line 201 "../src/Core/Utils.vala"
		_tmp23_ = exp;
#line 201 "../src/Core/Utils.vala"
		_tmp24_ = string_replace (_tmp23_, "mod", " [11] ");
#line 201 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 201 "../src/Core/Utils.vala"
		exp = _tmp24_;
#line 203 "../src/Core/Utils.vala"
		_tmp25_ = exp;
#line 203 "../src/Core/Utils.vala"
		_tmp26_ = string_replace (_tmp25_, "[0]", " 0 < ");
#line 203 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 203 "../src/Core/Utils.vala"
		exp = _tmp26_;
#line 204 "../src/Core/Utils.vala"
		_tmp27_ = exp;
#line 204 "../src/Core/Utils.vala"
		_tmp28_ = string_replace (_tmp27_, "[1]", " 0 > ");
#line 204 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 204 "../src/Core/Utils.vala"
		exp = _tmp28_;
#line 205 "../src/Core/Utils.vala"
		_tmp29_ = exp;
#line 205 "../src/Core/Utils.vala"
		_tmp30_ = string_replace (_tmp29_, "[2]", " 0 k ");
#line 205 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 205 "../src/Core/Utils.vala"
		exp = _tmp30_;
#line 206 "../src/Core/Utils.vala"
		_tmp31_ = exp;
#line 206 "../src/Core/Utils.vala"
		_tmp32_ = string_replace (_tmp31_, "[3]", " 0 q ");
#line 206 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 206 "../src/Core/Utils.vala"
		exp = _tmp32_;
#line 207 "../src/Core/Utils.vala"
		_tmp33_ = exp;
#line 207 "../src/Core/Utils.vala"
		_tmp34_ = string_replace (_tmp33_, "[4]", " n ");
#line 207 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 207 "../src/Core/Utils.vala"
		exp = _tmp34_;
#line 208 "../src/Core/Utils.vala"
		_tmp35_ = exp;
#line 208 "../src/Core/Utils.vala"
		_tmp36_ = string_replace (_tmp35_, "[5]", " r ");
#line 208 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 208 "../src/Core/Utils.vala"
		exp = _tmp36_;
#line 209 "../src/Core/Utils.vala"
		_tmp37_ = exp;
#line 209 "../src/Core/Utils.vala"
		_tmp38_ = string_replace (_tmp37_, "[6]", " 0 t ");
#line 209 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 209 "../src/Core/Utils.vala"
		exp = _tmp38_;
#line 210 "../src/Core/Utils.vala"
		_tmp39_ = exp;
#line 210 "../src/Core/Utils.vala"
		_tmp40_ = string_replace (_tmp39_, "[7]", " y ");
#line 210 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 210 "../src/Core/Utils.vala"
		exp = _tmp40_;
#line 211 "../src/Core/Utils.vala"
		_tmp41_ = exp;
#line 211 "../src/Core/Utils.vala"
		_tmp42_ = string_replace (_tmp41_, "[8]", " w ");
#line 211 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 211 "../src/Core/Utils.vala"
		exp = _tmp42_;
#line 212 "../src/Core/Utils.vala"
		_tmp43_ = exp;
#line 212 "../src/Core/Utils.vala"
		_tmp44_ = string_replace (_tmp43_, "[9]", " x ");
#line 212 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 212 "../src/Core/Utils.vala"
		exp = _tmp44_;
#line 213 "../src/Core/Utils.vala"
		_tmp45_ = exp;
#line 213 "../src/Core/Utils.vala"
		_tmp46_ = string_replace (_tmp45_, "[10]", " z ");
#line 213 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 213 "../src/Core/Utils.vala"
		exp = _tmp46_;
#line 214 "../src/Core/Utils.vala"
		_tmp47_ = exp;
#line 214 "../src/Core/Utils.vala"
		_tmp48_ = string_replace (_tmp47_, "[11]", " m ");
#line 214 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 214 "../src/Core/Utils.vala"
		exp = _tmp48_;
#line 215 "../src/Core/Utils.vala"
		_tmp49_ = exp;
#line 215 "../src/Core/Utils.vala"
		_tmp50_ = string_replace (_tmp49_, "(", " ( ");
#line 215 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 215 "../src/Core/Utils.vala"
		exp = _tmp50_;
#line 216 "../src/Core/Utils.vala"
		_tmp51_ = exp;
#line 216 "../src/Core/Utils.vala"
		_tmp52_ = string_replace (_tmp51_, ")", " ) ");
#line 216 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 216 "../src/Core/Utils.vala"
		exp = _tmp52_;
#line 217 "../src/Core/Utils.vala"
		_tmp53_ = exp;
#line 217 "../src/Core/Utils.vala"
		_tmp54_ = string_replace (_tmp53_, "+", " + ");
#line 217 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 217 "../src/Core/Utils.vala"
		exp = _tmp54_;
#line 218 "../src/Core/Utils.vala"
		_tmp55_ = exp;
#line 218 "../src/Core/Utils.vala"
		_tmp56_ = string_replace (_tmp55_, "-", " - ");
#line 218 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 218 "../src/Core/Utils.vala"
		exp = _tmp56_;
#line 219 "../src/Core/Utils.vala"
		_tmp57_ = exp;
#line 219 "../src/Core/Utils.vala"
		_tmp58_ = string_replace (_tmp57_, "−", " - ");
#line 219 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 219 "../src/Core/Utils.vala"
		exp = _tmp58_;
#line 220 "../src/Core/Utils.vala"
		_tmp59_ = exp;
#line 220 "../src/Core/Utils.vala"
		_tmp60_ = string_replace (_tmp59_, "\xC3\x97", " * ");
#line 220 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 220 "../src/Core/Utils.vala"
		exp = _tmp60_;
#line 221 "../src/Core/Utils.vala"
		_tmp61_ = exp;
#line 221 "../src/Core/Utils.vala"
		_tmp62_ = string_replace (_tmp61_, "\xC3\xB7", " / ");
#line 221 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 221 "../src/Core/Utils.vala"
		exp = _tmp62_;
#line 222 "../src/Core/Utils.vala"
		_tmp63_ = exp;
#line 222 "../src/Core/Utils.vala"
		_tmp64_ = string_replace (_tmp63_, "*", " * ");
#line 222 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 222 "../src/Core/Utils.vala"
		exp = _tmp64_;
#line 223 "../src/Core/Utils.vala"
		_tmp65_ = exp;
#line 223 "../src/Core/Utils.vala"
		_tmp66_ = string_replace (_tmp65_, "/", " / ");
#line 223 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 223 "../src/Core/Utils.vala"
		exp = _tmp66_;
#line 224 "../src/Core/Utils.vala"
		_tmp67_ = exp;
#line 224 "../src/Core/Utils.vala"
		_tmp68_ = string_strip (_tmp67_);
#line 224 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 224 "../src/Core/Utils.vala"
		exp = _tmp68_;
#line 225 "../src/Core/Utils.vala"
		_tmp69_ = exp;
#line 225 "../src/Core/Utils.vala"
		_tmp70_ = pebbles_utils_space_removal (_tmp69_);
#line 225 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 225 "../src/Core/Utils.vala"
		exp = _tmp70_;
#line 228 "../src/Core/Utils.vala"
		_tmp71_ = exp;
#line 228 "../src/Core/Utils.vala"
		_tmp72_ = pebbles_utils_algebraic_parenthesis_product_convert (_tmp71_);
#line 228 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 228 "../src/Core/Utils.vala"
		exp = _tmp72_;
#line 229 "../src/Core/Utils.vala"
		_tmp73_ = exp;
#line 229 "../src/Core/Utils.vala"
		_tmp74_ = pebbles_utils_unary_minus_convert (_tmp73_);
#line 229 "../src/Core/Utils.vala"
		_g_free0 (exp);
#line 229 "../src/Core/Utils.vala"
		exp = _tmp74_;
#line 232 "../src/Core/Utils.vala"
		_tmp75_ = exp;
#line 232 "../src/Core/Utils.vala"
		_tmp76_ = g_strconcat ("Final exp: ", _tmp75_, NULL);
#line 232 "../src/Core/Utils.vala"
		_tmp77_ = _tmp76_;
#line 232 "../src/Core/Utils.vala"
		_tmp78_ = g_strconcat (_tmp77_, "\n", NULL);
#line 232 "../src/Core/Utils.vala"
		_tmp79_ = _tmp78_;
#line 232 "../src/Core/Utils.vala"
		g_print ("%s", _tmp79_);
#line 232 "../src/Core/Utils.vala"
		_g_free0 (_tmp79_);
#line 232 "../src/Core/Utils.vala"
		_g_free0 (_tmp77_);
#line 233 "../src/Core/Utils.vala"
		result = exp;
#line 233 "../src/Core/Utils.vala"
		return result;
#line 1993 "Utils.c"
	}
#line 236 "../src/Core/Utils.vala"
	_tmp80_ = g_strdup ("E");
#line 236 "../src/Core/Utils.vala"
	result = _tmp80_;
#line 236 "../src/Core/Utils.vala"
	return result;
#line 2001 "Utils.c"
}

PebblesProgrammerCalculatorToken*
pebbles_utils_get_token_array (const gchar* input_exp,
                               gint* result_length1)
{
	PebblesSettings* settings = NULL;
	PebblesSettings* _tmp0_;
	gchar* exp = NULL;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar* _tmp7_;
	const gchar* _tmp8_;
	gchar* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	const gchar* _tmp14_;
	gchar* _tmp15_;
	const gchar* _tmp16_;
	gchar* _tmp17_;
	const gchar* _tmp18_;
	gchar* _tmp19_;
	const gchar* _tmp20_;
	gchar* _tmp21_;
	const gchar* _tmp22_;
	gchar* _tmp23_;
	const gchar* _tmp24_;
	gchar* _tmp25_;
	const gchar* _tmp26_;
	gchar* _tmp27_;
	const gchar* _tmp28_;
	gchar* _tmp29_;
	const gchar* _tmp30_;
	gchar* _tmp31_;
	const gchar* _tmp32_;
	gchar* _tmp33_;
	const gchar* _tmp34_;
	gchar* _tmp35_;
	const gchar* _tmp36_;
	gchar* _tmp37_;
	const gchar* _tmp38_;
	gchar* _tmp39_;
	const gchar* _tmp40_;
	gchar* _tmp41_;
	const gchar* _tmp42_;
	gchar* _tmp43_;
	const gchar* _tmp44_;
	gchar* _tmp45_;
	const gchar* _tmp46_;
	gchar* _tmp47_;
	const gchar* _tmp48_;
	gchar* _tmp49_;
	const gchar* _tmp50_;
	gchar* _tmp51_;
	const gchar* _tmp52_;
	gchar* _tmp53_;
	gchar* str_with_unform_spaces = NULL;
	const gchar* _tmp54_;
	gchar* _tmp55_;
	gchar** str_tokens = NULL;
	const gchar* _tmp56_;
	gchar** _tmp57_;
	gchar** _tmp58_;
	gint str_tokens_length1;
	gint _str_tokens_size_;
	PebblesProgrammerCalculatorToken* tokens = NULL;
	gchar** _tmp59_;
	gint _tmp59__length1;
	PebblesProgrammerCalculatorToken* _tmp60_;
	gint tokens_length1;
	gint _tokens_size_;
	PebblesProgrammerCalculatorToken* _tmp80_;
	gint _tmp80__length1;
	PebblesProgrammerCalculatorToken* result = NULL;
#line 238 "../src/Core/Utils.vala"
	g_return_val_if_fail (input_exp != NULL, NULL);
#line 239 "../src/Core/Utils.vala"
	_tmp0_ = pebbles_settings_get_default ();
#line 239 "../src/Core/Utils.vala"
	settings = _tmp0_;
#line 241 "../src/Core/Utils.vala"
	_tmp1_ = string_replace (input_exp, "lsh", " < ");
#line 241 "../src/Core/Utils.vala"
	exp = _tmp1_;
#line 242 "../src/Core/Utils.vala"
	_tmp2_ = exp;
#line 242 "../src/Core/Utils.vala"
	_tmp3_ = string_replace (_tmp2_, "rsh", " > ");
#line 242 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 242 "../src/Core/Utils.vala"
	exp = _tmp3_;
#line 243 "../src/Core/Utils.vala"
	_tmp4_ = exp;
#line 243 "../src/Core/Utils.vala"
	_tmp5_ = string_replace (_tmp4_, "lr", " lr ");
#line 243 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 243 "../src/Core/Utils.vala"
	exp = _tmp5_;
#line 244 "../src/Core/Utils.vala"
	_tmp6_ = exp;
#line 244 "../src/Core/Utils.vala"
	_tmp7_ = string_replace (_tmp6_, "rr", " rr ");
#line 244 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 244 "../src/Core/Utils.vala"
	exp = _tmp7_;
#line 245 "../src/Core/Utils.vala"
	_tmp8_ = exp;
#line 245 "../src/Core/Utils.vala"
	_tmp9_ = string_replace (_tmp8_, "not", " ! ");
#line 245 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 245 "../src/Core/Utils.vala"
	exp = _tmp9_;
#line 246 "../src/Core/Utils.vala"
	_tmp10_ = exp;
#line 246 "../src/Core/Utils.vala"
	_tmp11_ = string_replace (_tmp10_, "nand", " [5] ");
#line 246 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 246 "../src/Core/Utils.vala"
	exp = _tmp11_;
#line 247 "../src/Core/Utils.vala"
	_tmp12_ = exp;
#line 247 "../src/Core/Utils.vala"
	_tmp13_ = string_replace (_tmp12_, "xnor", " [6] ");
#line 247 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 247 "../src/Core/Utils.vala"
	exp = _tmp13_;
#line 248 "../src/Core/Utils.vala"
	_tmp14_ = exp;
#line 248 "../src/Core/Utils.vala"
	_tmp15_ = string_replace (_tmp14_, "xor", " [7] ");
#line 248 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 248 "../src/Core/Utils.vala"
	exp = _tmp15_;
#line 249 "../src/Core/Utils.vala"
	_tmp16_ = exp;
#line 249 "../src/Core/Utils.vala"
	_tmp17_ = string_replace (_tmp16_, "nor", " [8] ");
#line 249 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 249 "../src/Core/Utils.vala"
	exp = _tmp17_;
#line 250 "../src/Core/Utils.vala"
	_tmp18_ = exp;
#line 250 "../src/Core/Utils.vala"
	_tmp19_ = string_replace (_tmp18_, "and", " & ");
#line 250 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 250 "../src/Core/Utils.vala"
	exp = _tmp19_;
#line 251 "../src/Core/Utils.vala"
	_tmp20_ = exp;
#line 251 "../src/Core/Utils.vala"
	_tmp21_ = string_replace (_tmp20_, "or", " | ");
#line 251 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 251 "../src/Core/Utils.vala"
	exp = _tmp21_;
#line 252 "../src/Core/Utils.vala"
	_tmp22_ = exp;
#line 252 "../src/Core/Utils.vala"
	_tmp23_ = string_replace (_tmp22_, "mod", " m ");
#line 252 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 252 "../src/Core/Utils.vala"
	exp = _tmp23_;
#line 253 "../src/Core/Utils.vala"
	_tmp24_ = exp;
#line 253 "../src/Core/Utils.vala"
	_tmp25_ = string_replace (_tmp24_, "[5]", " a ");
#line 253 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 253 "../src/Core/Utils.vala"
	exp = _tmp25_;
#line 254 "../src/Core/Utils.vala"
	_tmp26_ = exp;
#line 254 "../src/Core/Utils.vala"
	_tmp27_ = string_replace (_tmp26_, "[6]", " n ");
#line 254 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 254 "../src/Core/Utils.vala"
	exp = _tmp27_;
#line 255 "../src/Core/Utils.vala"
	_tmp28_ = exp;
#line 255 "../src/Core/Utils.vala"
	_tmp29_ = string_replace (_tmp28_, "[7]", " x ");
#line 255 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 255 "../src/Core/Utils.vala"
	exp = _tmp29_;
#line 256 "../src/Core/Utils.vala"
	_tmp30_ = exp;
#line 256 "../src/Core/Utils.vala"
	_tmp31_ = string_replace (_tmp30_, "[8]", " o ");
#line 256 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 256 "../src/Core/Utils.vala"
	exp = _tmp31_;
#line 257 "../src/Core/Utils.vala"
	_tmp32_ = exp;
#line 257 "../src/Core/Utils.vala"
	_tmp33_ = string_replace (_tmp32_, "(", " ( ");
#line 257 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 257 "../src/Core/Utils.vala"
	exp = _tmp33_;
#line 258 "../src/Core/Utils.vala"
	_tmp34_ = exp;
#line 258 "../src/Core/Utils.vala"
	_tmp35_ = string_replace (_tmp34_, ")", " ) ");
#line 258 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 258 "../src/Core/Utils.vala"
	exp = _tmp35_;
#line 259 "../src/Core/Utils.vala"
	_tmp36_ = exp;
#line 259 "../src/Core/Utils.vala"
	_tmp37_ = string_replace (_tmp36_, "+", " + ");
#line 259 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 259 "../src/Core/Utils.vala"
	exp = _tmp37_;
#line 260 "../src/Core/Utils.vala"
	_tmp38_ = exp;
#line 260 "../src/Core/Utils.vala"
	_tmp39_ = string_replace (_tmp38_, "-", " - ");
#line 260 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 260 "../src/Core/Utils.vala"
	exp = _tmp39_;
#line 261 "../src/Core/Utils.vala"
	_tmp40_ = exp;
#line 261 "../src/Core/Utils.vala"
	_tmp41_ = string_replace (_tmp40_, "−", " - ");
#line 261 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 261 "../src/Core/Utils.vala"
	exp = _tmp41_;
#line 262 "../src/Core/Utils.vala"
	_tmp42_ = exp;
#line 262 "../src/Core/Utils.vala"
	_tmp43_ = string_replace (_tmp42_, "\xC3\x97", " * ");
#line 262 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 262 "../src/Core/Utils.vala"
	exp = _tmp43_;
#line 263 "../src/Core/Utils.vala"
	_tmp44_ = exp;
#line 263 "../src/Core/Utils.vala"
	_tmp45_ = string_replace (_tmp44_, "\xC3\xB7", " / ");
#line 263 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 263 "../src/Core/Utils.vala"
	exp = _tmp45_;
#line 264 "../src/Core/Utils.vala"
	_tmp46_ = exp;
#line 264 "../src/Core/Utils.vala"
	_tmp47_ = string_replace (_tmp46_, "*", " * ");
#line 264 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 264 "../src/Core/Utils.vala"
	exp = _tmp47_;
#line 265 "../src/Core/Utils.vala"
	_tmp48_ = exp;
#line 265 "../src/Core/Utils.vala"
	_tmp49_ = string_replace (_tmp48_, "/", " / ");
#line 265 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 265 "../src/Core/Utils.vala"
	exp = _tmp49_;
#line 266 "../src/Core/Utils.vala"
	_tmp50_ = exp;
#line 266 "../src/Core/Utils.vala"
	_tmp51_ = string_strip (_tmp50_);
#line 266 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 266 "../src/Core/Utils.vala"
	exp = _tmp51_;
#line 267 "../src/Core/Utils.vala"
	_tmp52_ = exp;
#line 267 "../src/Core/Utils.vala"
	_tmp53_ = pebbles_utils_space_removal (_tmp52_);
#line 267 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 267 "../src/Core/Utils.vala"
	exp = _tmp53_;
#line 269 "../src/Core/Utils.vala"
	_tmp54_ = exp;
#line 269 "../src/Core/Utils.vala"
	_tmp55_ = pebbles_utils_space_removal (_tmp54_);
#line 269 "../src/Core/Utils.vala"
	str_with_unform_spaces = _tmp55_;
#line 270 "../src/Core/Utils.vala"
	_tmp56_ = str_with_unform_spaces;
#line 270 "../src/Core/Utils.vala"
	_tmp58_ = _tmp57_ = g_strsplit (_tmp56_, " ", 0);
#line 270 "../src/Core/Utils.vala"
	str_tokens = _tmp58_;
#line 270 "../src/Core/Utils.vala"
	str_tokens_length1 = _vala_array_length (_tmp57_);
#line 270 "../src/Core/Utils.vala"
	_str_tokens_size_ = str_tokens_length1;
#line 271 "../src/Core/Utils.vala"
	_tmp59_ = str_tokens;
#line 271 "../src/Core/Utils.vala"
	_tmp59__length1 = str_tokens_length1;
#line 271 "../src/Core/Utils.vala"
	_tmp60_ = g_new0 (PebblesProgrammerCalculatorToken, _tmp59__length1);
#line 271 "../src/Core/Utils.vala"
	tokens = _tmp60_;
#line 271 "../src/Core/Utils.vala"
	tokens_length1 = _tmp59__length1;
#line 271 "../src/Core/Utils.vala"
	_tokens_size_ = tokens_length1;
#line 2328 "Utils.c"
	{
		gint i = 0;
#line 272 "../src/Core/Utils.vala"
		i = 0;
#line 2333 "Utils.c"
		{
			gboolean _tmp61_ = FALSE;
#line 272 "../src/Core/Utils.vala"
			_tmp61_ = TRUE;
#line 272 "../src/Core/Utils.vala"
			while (TRUE) {
#line 2340 "Utils.c"
				gchar** _tmp63_;
				gint _tmp63__length1;
				gchar** _tmp64_;
				gint _tmp64__length1;
				const gchar* _tmp65_;
				const gchar* _tmp66_;
				GQuark _tmp68_ = 0U;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label0 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label1 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label2 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label3 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label4 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label5 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label6 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label7 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label8 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label9 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label10 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label11 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label12 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label13 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label14 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label15 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label16 = 0;
#line 273 "../src/Core/Utils.vala"
				static GQuark _tmp67_label17 = 0;
#line 2384 "Utils.c"
				PebblesProgrammerCalculatorToken* _tmp72_;
				gint _tmp72__length1;
				gchar** _tmp73_;
				gint _tmp73__length1;
				const gchar* _tmp74_;
				gchar* _tmp75_;
				PebblesProgrammerCalculatorToken* _tmp76_;
				gint _tmp76__length1;
				PebblesSettings* _tmp77_;
				PebblesNumberSystem _tmp78_;
				PebblesNumberSystem _tmp79_;
#line 272 "../src/Core/Utils.vala"
				if (!_tmp61_) {
#line 2398 "Utils.c"
					gint _tmp62_;
#line 272 "../src/Core/Utils.vala"
					_tmp62_ = i;
#line 272 "../src/Core/Utils.vala"
					i = _tmp62_ + 1;
#line 2404 "Utils.c"
				}
#line 272 "../src/Core/Utils.vala"
				_tmp61_ = FALSE;
#line 272 "../src/Core/Utils.vala"
				_tmp63_ = str_tokens;
#line 272 "../src/Core/Utils.vala"
				_tmp63__length1 = str_tokens_length1;
#line 272 "../src/Core/Utils.vala"
				if (!(i < _tmp63__length1)) {
#line 272 "../src/Core/Utils.vala"
					break;
#line 2416 "Utils.c"
				}
#line 273 "../src/Core/Utils.vala"
				_tmp64_ = str_tokens;
#line 273 "../src/Core/Utils.vala"
				_tmp64__length1 = str_tokens_length1;
#line 273 "../src/Core/Utils.vala"
				_tmp65_ = _tmp64_[i];
#line 273 "../src/Core/Utils.vala"
				_tmp66_ = _tmp65_;
#line 273 "../src/Core/Utils.vala"
				_tmp68_ = (NULL == _tmp66_) ? 0 : g_quark_from_string (_tmp66_);
#line 273 "../src/Core/Utils.vala"
				if ((((((((((((((((_tmp68_ == ((0 != _tmp67_label0) ? _tmp67_label0 : (_tmp67_label0 = g_quark_from_static_string ("<")))) || (_tmp68_ == ((0 != _tmp67_label1) ? _tmp67_label1 : (_tmp67_label1 = g_quark_from_static_string (">"))))) || (_tmp68_ == ((0 != _tmp67_label2) ? _tmp67_label2 : (_tmp67_label2 = g_quark_from_static_string ("lr"))))) || (_tmp68_ == ((0 != _tmp67_label3) ? _tmp67_label3 : (_tmp67_label3 = g_quark_from_static_string ("rr"))))) || (_tmp68_ == ((0 != _tmp67_label4) ? _tmp67_label4 : (_tmp67_label4 = g_quark_from_static_string ("!"))))) || (_tmp68_ == ((0 != _tmp67_label5) ? _tmp67_label5 : (_tmp67_label5 = g_quark_from_static_string ("a"))))) || (_tmp68_ == ((0 != _tmp67_label6) ? _tmp67_label6 : (_tmp67_label6 = g_quark_from_static_string ("n"))))) || (_tmp68_ == ((0 != _tmp67_label7) ? _tmp67_label7 : (_tmp67_label7 = g_quark_from_static_string ("x"))))) || (_tmp68_ == ((0 != _tmp67_label8) ? _tmp67_label8 : (_tmp67_label8 = g_quark_from_static_string ("o"))))) || (_tmp68_ == ((0 != _tmp67_label9) ? _tmp67_label9 : (_tmp67_label9 = g_quark_from_static_string ("&"))))) || (_tmp68_ == ((0 != _tmp67_label10) ? _tmp67_label10 : (_tmp67_label10 = g_quark_from_static_string ("|"))))) || (_tmp68_ == ((0 != _tmp67_label11) ? _tmp67_label11 : (_tmp67_label11 = g_quark_from_static_string ("m"))))) || (_tmp68_ == ((0 != _tmp67_label12) ? _tmp67_label12 : (_tmp67_label12 = g_quark_from_static_string ("+"))))) || (_tmp68_ == ((0 != _tmp67_label13) ? _tmp67_label13 : (_tmp67_label13 = g_quark_from_static_string ("-"))))) || (_tmp68_ == ((0 != _tmp67_label14) ? _tmp67_label14 : (_tmp67_label14 = g_quark_from_static_string ("/"))))) || (_tmp68_ == ((0 != _tmp67_label15) ? _tmp67_label15 : (_tmp67_label15 = g_quark_from_static_string ("*"))))) {
#line 273 "../src/Core/Utils.vala"
					switch (0) {
#line 2432 "Utils.c"
						default:
						{
							PebblesProgrammerCalculatorToken* _tmp69_;
							gint _tmp69__length1;
#line 290 "../src/Core/Utils.vala"
							_tmp69_ = tokens;
#line 290 "../src/Core/Utils.vala"
							_tmp69__length1 = tokens_length1;
#line 290 "../src/Core/Utils.vala"
							_tmp69_[i].type = PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR;
#line 291 "../src/Core/Utils.vala"
							break;
#line 2445 "Utils.c"
						}
					}
				} else if ((_tmp68_ == ((0 != _tmp67_label16) ? _tmp67_label16 : (_tmp67_label16 = g_quark_from_static_string ("(")))) || (_tmp68_ == ((0 != _tmp67_label17) ? _tmp67_label17 : (_tmp67_label17 = g_quark_from_static_string (")"))))) {
#line 273 "../src/Core/Utils.vala"
					switch (0) {
#line 2451 "Utils.c"
						default:
						{
							PebblesProgrammerCalculatorToken* _tmp70_;
							gint _tmp70__length1;
#line 294 "../src/Core/Utils.vala"
							_tmp70_ = tokens;
#line 294 "../src/Core/Utils.vala"
							_tmp70__length1 = tokens_length1;
#line 294 "../src/Core/Utils.vala"
							_tmp70_[i].type = PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS;
#line 295 "../src/Core/Utils.vala"
							break;
#line 2464 "Utils.c"
						}
					}
				} else {
#line 273 "../src/Core/Utils.vala"
					switch (0) {
#line 2470 "Utils.c"
						default:
						{
							PebblesProgrammerCalculatorToken* _tmp71_;
							gint _tmp71__length1;
#line 297 "../src/Core/Utils.vala"
							_tmp71_ = tokens;
#line 297 "../src/Core/Utils.vala"
							_tmp71__length1 = tokens_length1;
#line 297 "../src/Core/Utils.vala"
							_tmp71_[i].type = PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND;
#line 298 "../src/Core/Utils.vala"
							break;
#line 2483 "Utils.c"
						}
					}
				}
#line 300 "../src/Core/Utils.vala"
				_tmp72_ = tokens;
#line 300 "../src/Core/Utils.vala"
				_tmp72__length1 = tokens_length1;
#line 300 "../src/Core/Utils.vala"
				_tmp73_ = str_tokens;
#line 300 "../src/Core/Utils.vala"
				_tmp73__length1 = str_tokens_length1;
#line 300 "../src/Core/Utils.vala"
				_tmp74_ = _tmp73_[i];
#line 300 "../src/Core/Utils.vala"
				_tmp75_ = g_strdup (_tmp74_);
#line 300 "../src/Core/Utils.vala"
				_g_free0 (_tmp72_[i].token);
#line 300 "../src/Core/Utils.vala"
				_tmp72_[i].token = _tmp75_;
#line 301 "../src/Core/Utils.vala"
				_tmp76_ = tokens;
#line 301 "../src/Core/Utils.vala"
				_tmp76__length1 = tokens_length1;
#line 301 "../src/Core/Utils.vala"
				_tmp77_ = settings;
#line 301 "../src/Core/Utils.vala"
				_tmp78_ = pebbles_settings_get_number_system (_tmp77_);
#line 301 "../src/Core/Utils.vala"
				_tmp79_ = _tmp78_;
#line 301 "../src/Core/Utils.vala"
				_tmp76_[i].number_system = _tmp79_;
#line 2515 "Utils.c"
			}
		}
	}
#line 304 "../src/Core/Utils.vala"
	_tmp80_ = tokens;
#line 304 "../src/Core/Utils.vala"
	_tmp80__length1 = tokens_length1;
#line 304 "../src/Core/Utils.vala"
	if (result_length1) {
#line 304 "../src/Core/Utils.vala"
		*result_length1 = _tmp80__length1;
#line 2527 "Utils.c"
	}
#line 304 "../src/Core/Utils.vala"
	result = _tmp80_;
#line 304 "../src/Core/Utils.vala"
	str_tokens = (_vala_array_free (str_tokens, str_tokens_length1, (GDestroyNotify) g_free), NULL);
#line 304 "../src/Core/Utils.vala"
	_g_free0 (str_with_unform_spaces);
#line 304 "../src/Core/Utils.vala"
	_g_free0 (exp);
#line 304 "../src/Core/Utils.vala"
	_g_object_unref0 (settings);
#line 304 "../src/Core/Utils.vala"
	return result;
#line 2541 "Utils.c"
}

gchar*
pebbles_utils_get_natural_expression (const gchar* str)
{
	gchar* ret_val = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	const gchar* _tmp3_;
	gchar* _tmp4_;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	const gchar* _tmp9_;
	gchar* _tmp10_;
	const gchar* _tmp11_;
	gchar* _tmp12_;
	const gchar* _tmp13_;
	gchar* _tmp14_;
	const gchar* _tmp15_;
	gchar* _tmp16_;
	const gchar* _tmp17_;
	gchar* _tmp18_;
	const gchar* _tmp19_;
	gchar* _tmp20_;
	const gchar* _tmp21_;
	gchar* _tmp22_;
	const gchar* _tmp23_;
	gchar* _tmp24_;
	const gchar* _tmp25_;
	gchar* _tmp26_;
	const gchar* _tmp27_;
	gchar* _tmp28_;
	const gchar* _tmp29_;
	gchar* _tmp30_;
	const gchar* _tmp31_;
	gchar* _tmp32_;
	const gchar* _tmp33_;
	gchar* _tmp34_;
	const gchar* _tmp35_;
	gchar* _tmp36_;
	const gchar* _tmp37_;
	gchar* _tmp38_;
	const gchar* _tmp39_;
	gchar* _tmp40_;
	const gchar* _tmp41_;
	gchar* _tmp42_;
	gchar* result = NULL;
#line 307 "../src/Core/Utils.vala"
	g_return_val_if_fail (str != NULL, NULL);
#line 308 "../src/Core/Utils.vala"
	_tmp0_ = g_strdup (str);
#line 308 "../src/Core/Utils.vala"
	ret_val = _tmp0_;
#line 309 "../src/Core/Utils.vala"
	_tmp1_ = ret_val;
#line 309 "../src/Core/Utils.vala"
	_tmp2_ = string_replace (_tmp1_, "<", "lsh");
#line 309 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 309 "../src/Core/Utils.vala"
	ret_val = _tmp2_;
#line 310 "../src/Core/Utils.vala"
	_tmp3_ = ret_val;
#line 310 "../src/Core/Utils.vala"
	_tmp4_ = string_replace (_tmp3_, ">", "rsh");
#line 310 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 310 "../src/Core/Utils.vala"
	ret_val = _tmp4_;
#line 311 "../src/Core/Utils.vala"
	_tmp5_ = ret_val;
#line 311 "../src/Core/Utils.vala"
	_tmp6_ = string_replace (_tmp5_, "!", "[0]");
#line 311 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 311 "../src/Core/Utils.vala"
	ret_val = _tmp6_;
#line 312 "../src/Core/Utils.vala"
	_tmp7_ = ret_val;
#line 312 "../src/Core/Utils.vala"
	_tmp8_ = string_replace (_tmp7_, "&", "[1]");
#line 312 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 312 "../src/Core/Utils.vala"
	ret_val = _tmp8_;
#line 313 "../src/Core/Utils.vala"
	_tmp9_ = ret_val;
#line 313 "../src/Core/Utils.vala"
	_tmp10_ = string_replace (_tmp9_, "|", "[2]");
#line 313 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 313 "../src/Core/Utils.vala"
	ret_val = _tmp10_;
#line 314 "../src/Core/Utils.vala"
	_tmp11_ = ret_val;
#line 314 "../src/Core/Utils.vala"
	_tmp12_ = string_replace (_tmp11_, "m", "[3]");
#line 314 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 314 "../src/Core/Utils.vala"
	ret_val = _tmp12_;
#line 315 "../src/Core/Utils.vala"
	_tmp13_ = ret_val;
#line 315 "../src/Core/Utils.vala"
	_tmp14_ = string_replace (_tmp13_, "a", "[4]");
#line 315 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 315 "../src/Core/Utils.vala"
	ret_val = _tmp14_;
#line 316 "../src/Core/Utils.vala"
	_tmp15_ = ret_val;
#line 316 "../src/Core/Utils.vala"
	_tmp16_ = string_replace (_tmp15_, "o", "[5]");
#line 316 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 316 "../src/Core/Utils.vala"
	ret_val = _tmp16_;
#line 317 "../src/Core/Utils.vala"
	_tmp17_ = ret_val;
#line 317 "../src/Core/Utils.vala"
	_tmp18_ = string_replace (_tmp17_, "x", "[6]");
#line 317 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 317 "../src/Core/Utils.vala"
	ret_val = _tmp18_;
#line 318 "../src/Core/Utils.vala"
	_tmp19_ = ret_val;
#line 318 "../src/Core/Utils.vala"
	_tmp20_ = string_replace (_tmp19_, "n", "[7]");
#line 318 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 318 "../src/Core/Utils.vala"
	ret_val = _tmp20_;
#line 319 "../src/Core/Utils.vala"
	_tmp21_ = ret_val;
#line 319 "../src/Core/Utils.vala"
	_tmp22_ = string_replace (_tmp21_, "[0]", "not");
#line 319 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 319 "../src/Core/Utils.vala"
	ret_val = _tmp22_;
#line 320 "../src/Core/Utils.vala"
	_tmp23_ = ret_val;
#line 320 "../src/Core/Utils.vala"
	_tmp24_ = string_replace (_tmp23_, "[1]", "and");
#line 320 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 320 "../src/Core/Utils.vala"
	ret_val = _tmp24_;
#line 321 "../src/Core/Utils.vala"
	_tmp25_ = ret_val;
#line 321 "../src/Core/Utils.vala"
	_tmp26_ = string_replace (_tmp25_, "[2]", "or");
#line 321 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 321 "../src/Core/Utils.vala"
	ret_val = _tmp26_;
#line 322 "../src/Core/Utils.vala"
	_tmp27_ = ret_val;
#line 322 "../src/Core/Utils.vala"
	_tmp28_ = string_replace (_tmp27_, "[3]", "mod");
#line 322 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 322 "../src/Core/Utils.vala"
	ret_val = _tmp28_;
#line 323 "../src/Core/Utils.vala"
	_tmp29_ = ret_val;
#line 323 "../src/Core/Utils.vala"
	_tmp30_ = string_replace (_tmp29_, "[4]", "nand");
#line 323 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 323 "../src/Core/Utils.vala"
	ret_val = _tmp30_;
#line 324 "../src/Core/Utils.vala"
	_tmp31_ = ret_val;
#line 324 "../src/Core/Utils.vala"
	_tmp32_ = string_replace (_tmp31_, "[5]", "nor");
#line 324 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 324 "../src/Core/Utils.vala"
	ret_val = _tmp32_;
#line 325 "../src/Core/Utils.vala"
	_tmp33_ = ret_val;
#line 325 "../src/Core/Utils.vala"
	_tmp34_ = string_replace (_tmp33_, "[6]", "xor");
#line 325 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 325 "../src/Core/Utils.vala"
	ret_val = _tmp34_;
#line 326 "../src/Core/Utils.vala"
	_tmp35_ = ret_val;
#line 326 "../src/Core/Utils.vala"
	_tmp36_ = string_replace (_tmp35_, "[7]", "xnor");
#line 326 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 326 "../src/Core/Utils.vala"
	ret_val = _tmp36_;
#line 327 "../src/Core/Utils.vala"
	_tmp37_ = ret_val;
#line 327 "../src/Core/Utils.vala"
	_tmp38_ = string_replace (_tmp37_, "*", "\xC3\x97");
#line 327 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 327 "../src/Core/Utils.vala"
	ret_val = _tmp38_;
#line 328 "../src/Core/Utils.vala"
	_tmp39_ = ret_val;
#line 328 "../src/Core/Utils.vala"
	_tmp40_ = string_replace (_tmp39_, "/", "\xC3\xB7");
#line 328 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 328 "../src/Core/Utils.vala"
	ret_val = _tmp40_;
#line 329 "../src/Core/Utils.vala"
	_tmp41_ = ret_val;
#line 329 "../src/Core/Utils.vala"
	_tmp42_ = string_replace (_tmp41_, "-", "−");
#line 329 "../src/Core/Utils.vala"
	_g_free0 (ret_val);
#line 329 "../src/Core/Utils.vala"
	ret_val = _tmp42_;
#line 330 "../src/Core/Utils.vala"
	result = ret_val;
#line 330 "../src/Core/Utils.vala"
	return result;
#line 2770 "Utils.c"
}

static gchar*
g_unichar_to_string (gunichar self)
{
	gchar* str = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1071 "glib-2.0.vapi"
	_tmp0_ = g_new0 (gchar, 7);
#line 1071 "glib-2.0.vapi"
	str = (gchar*) _tmp0_;
#line 1072 "glib-2.0.vapi"
	g_unichar_to_utf8 (self, str);
#line 1073 "glib-2.0.vapi"
	result = str;
#line 1073 "glib-2.0.vapi"
	return result;
#line 2789 "Utils.c"
}

static gchar*
pebbles_utils_space_removal (const gchar* original)
{
	gint i = 0;
	gint j = 0;
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 332 "../src/Core/Utils.vala"
	g_return_val_if_fail (original != NULL, NULL);
#line 333 "../src/Core/Utils.vala"
	i = 0;
#line 333 "../src/Core/Utils.vala"
	j = 0;
#line 334 "../src/Core/Utils.vala"
	_tmp0_ = g_strdup ("");
#line 334 "../src/Core/Utils.vala"
	_result_ = _tmp0_;
#line 335 "../src/Core/Utils.vala"
	while (TRUE) {
#line 2812 "Utils.c"
		gint _tmp1_;
		gint _tmp2_;
		gchar* _tmp3_;
		gchar* _tmp4_;
		gboolean _tmp5_;
#line 335 "../src/Core/Utils.vala"
		_tmp1_ = strlen (original);
#line 335 "../src/Core/Utils.vala"
		_tmp2_ = _tmp1_;
#line 335 "../src/Core/Utils.vala"
		if (!(i < _tmp2_)) {
#line 335 "../src/Core/Utils.vala"
			break;
#line 2826 "Utils.c"
		}
#line 336 "../src/Core/Utils.vala"
		j = i + 1;
#line 337 "../src/Core/Utils.vala"
		_tmp3_ = g_unichar_to_string (string_get_char (original, (glong) i));
#line 337 "../src/Core/Utils.vala"
		_tmp4_ = _tmp3_;
#line 337 "../src/Core/Utils.vala"
		_tmp5_ = g_strcmp0 (_tmp4_, " ") == 0;
#line 337 "../src/Core/Utils.vala"
		_g_free0 (_tmp4_);
#line 337 "../src/Core/Utils.vala"
		if (_tmp5_) {
#line 2840 "Utils.c"
			const gchar* _tmp10_;
			gchar* _tmp11_;
#line 338 "../src/Core/Utils.vala"
			while (TRUE) {
#line 2845 "Utils.c"
				gchar* _tmp6_;
				gchar* _tmp7_;
				gboolean _tmp8_;
				gint _tmp9_;
#line 338 "../src/Core/Utils.vala"
				_tmp6_ = g_unichar_to_string (string_get_char (original, (glong) j));
#line 338 "../src/Core/Utils.vala"
				_tmp7_ = _tmp6_;
#line 338 "../src/Core/Utils.vala"
				_tmp8_ = !(g_strcmp0 (_tmp7_, " ") == 0);
#line 338 "../src/Core/Utils.vala"
				_g_free0 (_tmp7_);
#line 338 "../src/Core/Utils.vala"
				if (_tmp8_) {
#line 338 "../src/Core/Utils.vala"
					break;
#line 2862 "Utils.c"
				}
#line 339 "../src/Core/Utils.vala"
				_tmp9_ = j;
#line 339 "../src/Core/Utils.vala"
				j = _tmp9_ + 1;
#line 2868 "Utils.c"
			}
#line 341 "../src/Core/Utils.vala"
			_tmp10_ = _result_;
#line 341 "../src/Core/Utils.vala"
			_tmp11_ = g_strconcat (_tmp10_, " ", NULL);
#line 341 "../src/Core/Utils.vala"
			_g_free0 (_result_);
#line 341 "../src/Core/Utils.vala"
			_result_ = _tmp11_;
#line 342 "../src/Core/Utils.vala"
			i = j;
#line 2880 "Utils.c"
		} else {
			const gchar* _tmp12_;
			gchar* _tmp13_;
			gchar* _tmp14_;
			gchar* _tmp15_;
			gint _tmp16_;
#line 345 "../src/Core/Utils.vala"
			_tmp12_ = _result_;
#line 345 "../src/Core/Utils.vala"
			_tmp13_ = g_unichar_to_string (string_get_char (original, (glong) i));
#line 345 "../src/Core/Utils.vala"
			_tmp14_ = _tmp13_;
#line 345 "../src/Core/Utils.vala"
			_tmp15_ = g_strconcat (_tmp12_, _tmp14_, NULL);
#line 345 "../src/Core/Utils.vala"
			_g_free0 (_result_);
#line 345 "../src/Core/Utils.vala"
			_result_ = _tmp15_;
#line 345 "../src/Core/Utils.vala"
			_g_free0 (_tmp14_);
#line 346 "../src/Core/Utils.vala"
			_tmp16_ = i;
#line 346 "../src/Core/Utils.vala"
			i = _tmp16_ + 1;
#line 2905 "Utils.c"
		}
	}
#line 349 "../src/Core/Utils.vala"
	result = _result_;
#line 349 "../src/Core/Utils.vala"
	return result;
#line 2912 "Utils.c"
}

static gchar*
_vala_g_strjoinv (const gchar* separator,
                  gchar** str_array,
                  gint str_array_length1)
{
	gboolean _tmp0_ = FALSE;
	gchar* result = NULL;
#line 1200 "glib-2.0.vapi"
	if (separator == NULL) {
#line 1201 "glib-2.0.vapi"
		separator = "";
#line 2926 "Utils.c"
	}
#line 1203 "glib-2.0.vapi"
	if (str_array != NULL) {
#line 2930 "Utils.c"
		gboolean _tmp1_ = FALSE;
#line 1203 "glib-2.0.vapi"
		if (str_array_length1 > 0) {
#line 1203 "glib-2.0.vapi"
			_tmp1_ = TRUE;
#line 2936 "Utils.c"
		} else {
			gboolean _tmp2_ = FALSE;
#line 1203 "glib-2.0.vapi"
			if (str_array_length1 == -1) {
#line 2941 "Utils.c"
				const gchar* _tmp3_;
#line 1203 "glib-2.0.vapi"
				_tmp3_ = str_array[0];
#line 1203 "glib-2.0.vapi"
				_tmp2_ = _tmp3_ != NULL;
#line 2947 "Utils.c"
			} else {
#line 1203 "glib-2.0.vapi"
				_tmp2_ = FALSE;
#line 2951 "Utils.c"
			}
#line 1203 "glib-2.0.vapi"
			_tmp1_ = _tmp2_;
#line 2955 "Utils.c"
		}
#line 1203 "glib-2.0.vapi"
		_tmp0_ = _tmp1_;
#line 2959 "Utils.c"
	} else {
#line 1203 "glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 2963 "Utils.c"
	}
#line 1203 "glib-2.0.vapi"
	if (_tmp0_) {
#line 2967 "Utils.c"
		gint i = 0;
		gsize len = 0UL;
		gint _tmp16_;
		gint _tmp17_;
		const gchar* res = NULL;
		void* _tmp18_;
		void* ptr = NULL;
		const gchar* _tmp19_;
		const gchar* _tmp20_;
		void* _tmp21_;
		const gchar* _tmp31_;
#line 1205 "glib-2.0.vapi"
		len = (gsize) 1;
#line 2981 "Utils.c"
		{
			gboolean _tmp4_ = FALSE;
#line 1206 "glib-2.0.vapi"
			i = 0;
#line 1206 "glib-2.0.vapi"
			_tmp4_ = TRUE;
#line 1206 "glib-2.0.vapi"
			while (TRUE) {
#line 2990 "Utils.c"
				gboolean _tmp6_ = FALSE;
				gboolean _tmp7_ = FALSE;
				gint _tmp10_ = 0;
				const gchar* _tmp11_;
#line 1206 "glib-2.0.vapi"
				if (!_tmp4_) {
#line 2997 "Utils.c"
					gint _tmp5_;
#line 1206 "glib-2.0.vapi"
					_tmp5_ = i;
#line 1206 "glib-2.0.vapi"
					i = _tmp5_ + 1;
#line 3003 "Utils.c"
				}
#line 1206 "glib-2.0.vapi"
				_tmp4_ = FALSE;
#line 1206 "glib-2.0.vapi"
				if (str_array_length1 != -1) {
#line 1206 "glib-2.0.vapi"
					_tmp7_ = i < str_array_length1;
#line 3011 "Utils.c"
				} else {
#line 1206 "glib-2.0.vapi"
					_tmp7_ = FALSE;
#line 3015 "Utils.c"
				}
#line 1206 "glib-2.0.vapi"
				if (_tmp7_) {
#line 1206 "glib-2.0.vapi"
					_tmp6_ = TRUE;
#line 3021 "Utils.c"
				} else {
					gboolean _tmp8_ = FALSE;
#line 1206 "glib-2.0.vapi"
					if (str_array_length1 == -1) {
#line 3026 "Utils.c"
						const gchar* _tmp9_;
#line 1206 "glib-2.0.vapi"
						_tmp9_ = str_array[i];
#line 1206 "glib-2.0.vapi"
						_tmp8_ = _tmp9_ != NULL;
#line 3032 "Utils.c"
					} else {
#line 1206 "glib-2.0.vapi"
						_tmp8_ = FALSE;
#line 3036 "Utils.c"
					}
#line 1206 "glib-2.0.vapi"
					_tmp6_ = _tmp8_;
#line 3040 "Utils.c"
				}
#line 1206 "glib-2.0.vapi"
				if (!_tmp6_) {
#line 1206 "glib-2.0.vapi"
					break;
#line 3046 "Utils.c"
				}
#line 1207 "glib-2.0.vapi"
				_tmp11_ = str_array[i];
#line 1207 "glib-2.0.vapi"
				if (_tmp11_ != NULL) {
#line 3052 "Utils.c"
					const gchar* _tmp12_;
					gint _tmp13_;
					gint _tmp14_;
#line 1207 "glib-2.0.vapi"
					_tmp12_ = str_array[i];
#line 1207 "glib-2.0.vapi"
					_tmp13_ = strlen ((const gchar*) _tmp12_);
#line 1207 "glib-2.0.vapi"
					_tmp14_ = _tmp13_;
#line 1207 "glib-2.0.vapi"
					_tmp10_ = _tmp14_;
#line 3064 "Utils.c"
				} else {
#line 1207 "glib-2.0.vapi"
					_tmp10_ = 0;
#line 3068 "Utils.c"
				}
#line 1207 "glib-2.0.vapi"
				len += (gsize) _tmp10_;
#line 3072 "Utils.c"
			}
		}
#line 1209 "glib-2.0.vapi"
		if (i == 0) {
#line 3077 "Utils.c"
			gchar* _tmp15_;
#line 1210 "glib-2.0.vapi"
			_tmp15_ = g_strdup ("");
#line 1210 "glib-2.0.vapi"
			result = _tmp15_;
#line 1210 "glib-2.0.vapi"
			return result;
#line 3085 "Utils.c"
		}
#line 1212 "glib-2.0.vapi"
		str_array_length1 = i;
#line 1213 "glib-2.0.vapi"
		_tmp16_ = strlen ((const gchar*) separator);
#line 1213 "glib-2.0.vapi"
		_tmp17_ = _tmp16_;
#line 1213 "glib-2.0.vapi"
		len += (gsize) (_tmp17_ * (i - 1));
#line 1215 "glib-2.0.vapi"
		_tmp18_ = g_malloc (len);
#line 1215 "glib-2.0.vapi"
		res = _tmp18_;
#line 1216 "glib-2.0.vapi"
		_tmp19_ = res;
#line 1216 "glib-2.0.vapi"
		_tmp20_ = str_array[0];
#line 1216 "glib-2.0.vapi"
		_tmp21_ = g_stpcpy ((void*) _tmp19_, (const gchar*) _tmp20_);
#line 1216 "glib-2.0.vapi"
		ptr = _tmp21_;
#line 3107 "Utils.c"
		{
			gboolean _tmp22_ = FALSE;
#line 1217 "glib-2.0.vapi"
			i = 1;
#line 1217 "glib-2.0.vapi"
			_tmp22_ = TRUE;
#line 1217 "glib-2.0.vapi"
			while (TRUE) {
#line 3116 "Utils.c"
				void* _tmp24_;
				void* _tmp25_;
				const gchar* _tmp26_ = NULL;
				const gchar* _tmp27_;
				void* _tmp29_;
				void* _tmp30_;
#line 1217 "glib-2.0.vapi"
				if (!_tmp22_) {
#line 3125 "Utils.c"
					gint _tmp23_;
#line 1217 "glib-2.0.vapi"
					_tmp23_ = i;
#line 1217 "glib-2.0.vapi"
					i = _tmp23_ + 1;
#line 3131 "Utils.c"
				}
#line 1217 "glib-2.0.vapi"
				_tmp22_ = FALSE;
#line 1217 "glib-2.0.vapi"
				if (!(i < str_array_length1)) {
#line 1217 "glib-2.0.vapi"
					break;
#line 3139 "Utils.c"
				}
#line 1218 "glib-2.0.vapi"
				_tmp24_ = ptr;
#line 1218 "glib-2.0.vapi"
				_tmp25_ = g_stpcpy (_tmp24_, (const gchar*) separator);
#line 1218 "glib-2.0.vapi"
				ptr = _tmp25_;
#line 1219 "glib-2.0.vapi"
				_tmp27_ = str_array[i];
#line 1219 "glib-2.0.vapi"
				if (_tmp27_ != NULL) {
#line 3151 "Utils.c"
					const gchar* _tmp28_;
#line 1219 "glib-2.0.vapi"
					_tmp28_ = str_array[i];
#line 1219 "glib-2.0.vapi"
					_tmp26_ = (const gchar*) _tmp28_;
#line 3157 "Utils.c"
				} else {
#line 1219 "glib-2.0.vapi"
					_tmp26_ = "";
#line 3161 "Utils.c"
				}
#line 1219 "glib-2.0.vapi"
				_tmp29_ = ptr;
#line 1219 "glib-2.0.vapi"
				_tmp30_ = g_stpcpy (_tmp29_, _tmp26_);
#line 1219 "glib-2.0.vapi"
				ptr = _tmp30_;
#line 3169 "Utils.c"
			}
		}
#line 1222 "glib-2.0.vapi"
		_tmp31_ = res;
#line 1222 "glib-2.0.vapi"
		res = NULL;
#line 1222 "glib-2.0.vapi"
		result = (gchar*) _tmp31_;
#line 1222 "glib-2.0.vapi"
		return result;
#line 3180 "Utils.c"
	} else {
		gchar* _tmp32_;
#line 1224 "glib-2.0.vapi"
		_tmp32_ = g_strdup ("");
#line 1224 "glib-2.0.vapi"
		result = _tmp32_;
#line 1224 "glib-2.0.vapi"
		return result;
#line 3189 "Utils.c"
	}
}

static gchar*
pebbles_utils_unary_minus_convert (const gchar* exp)
{
	gchar* uniminus_converted = NULL;
	gchar* _tmp0_;
	gchar** tokens = NULL;
	gchar** _tmp1_;
	gchar** _tmp2_;
	gint tokens_length1;
	gint _tokens_size_;
	gchar** _tmp34_;
	gint _tmp34__length1;
	gchar* _tmp35_;
	const gchar* _tmp36_;
	gchar* result = NULL;
#line 351 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, NULL);
#line 352 "../src/Core/Utils.vala"
	g_print (">%s<\n", exp);
#line 353 "../src/Core/Utils.vala"
	_tmp0_ = g_strdup ("");
#line 353 "../src/Core/Utils.vala"
	uniminus_converted = _tmp0_;
#line 354 "../src/Core/Utils.vala"
	_tmp2_ = _tmp1_ = g_strsplit (exp, " ", 0);
#line 354 "../src/Core/Utils.vala"
	tokens = _tmp2_;
#line 354 "../src/Core/Utils.vala"
	tokens_length1 = _vala_array_length (_tmp1_);
#line 354 "../src/Core/Utils.vala"
	_tokens_size_ = tokens_length1;
#line 3224 "Utils.c"
	{
		gint i = 0;
#line 355 "../src/Core/Utils.vala"
		i = 0;
#line 3229 "Utils.c"
		{
			gboolean _tmp3_ = FALSE;
#line 355 "../src/Core/Utils.vala"
			_tmp3_ = TRUE;
#line 355 "../src/Core/Utils.vala"
			while (TRUE) {
#line 3236 "Utils.c"
				gchar** _tmp5_;
				gint _tmp5__length1;
				gchar** _tmp6_;
				gint _tmp6__length1;
				const gchar* _tmp7_;
#line 355 "../src/Core/Utils.vala"
				if (!_tmp3_) {
#line 3244 "Utils.c"
					gint _tmp4_;
#line 355 "../src/Core/Utils.vala"
					_tmp4_ = i;
#line 355 "../src/Core/Utils.vala"
					i = _tmp4_ + 1;
#line 3250 "Utils.c"
				}
#line 355 "../src/Core/Utils.vala"
				_tmp3_ = FALSE;
#line 355 "../src/Core/Utils.vala"
				_tmp5_ = tokens;
#line 355 "../src/Core/Utils.vala"
				_tmp5__length1 = tokens_length1;
#line 355 "../src/Core/Utils.vala"
				if (!(i < _tmp5__length1)) {
#line 355 "../src/Core/Utils.vala"
					break;
#line 3262 "Utils.c"
				}
#line 356 "../src/Core/Utils.vala"
				_tmp6_ = tokens;
#line 356 "../src/Core/Utils.vala"
				_tmp6__length1 = tokens_length1;
#line 356 "../src/Core/Utils.vala"
				_tmp7_ = _tmp6_[i];
#line 356 "../src/Core/Utils.vala"
				if (g_strcmp0 (_tmp7_, "-") == 0) {
#line 3272 "Utils.c"
					gchar** _tmp8_;
					gint _tmp8__length1;
					const gchar* _tmp9_;
#line 357 "../src/Core/Utils.vala"
					_tmp8_ = tokens;
#line 357 "../src/Core/Utils.vala"
					_tmp8__length1 = tokens_length1;
#line 357 "../src/Core/Utils.vala"
					_tmp9_ = _tmp8_[i + 1];
#line 357 "../src/Core/Utils.vala"
					g_print ("token: %s\n", _tmp9_);
#line 358 "../src/Core/Utils.vala"
					if (i == 0) {
#line 3286 "Utils.c"
						gchar** _tmp10_;
						gint _tmp10__length1;
#line 359 "../src/Core/Utils.vala"
						_tmp10_ = tokens;
#line 359 "../src/Core/Utils.vala"
						_tmp10__length1 = tokens_length1;
#line 359 "../src/Core/Utils.vala"
						if (i < _tmp10__length1) {
#line 3295 "Utils.c"
							gchar** _tmp11_;
							gint _tmp11__length1;
							gchar* _tmp12_;
							gchar** _tmp13_;
							gint _tmp13__length1;
							gchar** _tmp14_;
							gint _tmp14__length1;
							const gchar* _tmp15_;
							gchar* _tmp16_;
#line 360 "../src/Core/Utils.vala"
							_tmp11_ = tokens;
#line 360 "../src/Core/Utils.vala"
							_tmp11__length1 = tokens_length1;
#line 360 "../src/Core/Utils.vala"
							_tmp12_ = g_strdup ("( 0 u");
#line 360 "../src/Core/Utils.vala"
							_g_free0 (_tmp11_[i]);
#line 360 "../src/Core/Utils.vala"
							_tmp11_[i] = _tmp12_;
#line 361 "../src/Core/Utils.vala"
							_tmp13_ = tokens;
#line 361 "../src/Core/Utils.vala"
							_tmp13__length1 = tokens_length1;
#line 361 "../src/Core/Utils.vala"
							_tmp14_ = tokens;
#line 361 "../src/Core/Utils.vala"
							_tmp14__length1 = tokens_length1;
#line 361 "../src/Core/Utils.vala"
							_tmp15_ = _tmp14_[i + 1];
#line 361 "../src/Core/Utils.vala"
							_tmp16_ = g_strconcat (_tmp15_, " )", NULL);
#line 361 "../src/Core/Utils.vala"
							_g_free0 (_tmp13_[i + 1]);
#line 361 "../src/Core/Utils.vala"
							_tmp13_[i + 1] = _tmp16_;
#line 3331 "Utils.c"
						}
					} else {
						gboolean _tmp17_ = FALSE;
						gboolean _tmp18_ = FALSE;
						gchar** _tmp19_;
						gint _tmp19__length1;
						const gchar* _tmp20_;
#line 363 "../src/Core/Utils.vala"
						_tmp19_ = tokens;
#line 363 "../src/Core/Utils.vala"
						_tmp19__length1 = tokens_length1;
#line 363 "../src/Core/Utils.vala"
						_tmp20_ = _tmp19_[i - 1];
#line 363 "../src/Core/Utils.vala"
						if (g_strcmp0 (_tmp20_, ")") == 0) {
#line 363 "../src/Core/Utils.vala"
							_tmp18_ = TRUE;
#line 3349 "Utils.c"
						} else {
							gchar** _tmp21_;
							gint _tmp21__length1;
							const gchar* _tmp22_;
#line 363 "../src/Core/Utils.vala"
							_tmp21_ = tokens;
#line 363 "../src/Core/Utils.vala"
							_tmp21__length1 = tokens_length1;
#line 363 "../src/Core/Utils.vala"
							_tmp22_ = _tmp21_[i - 1];
#line 363 "../src/Core/Utils.vala"
							_tmp18_ = g_strcmp0 (_tmp22_, "x") == 0;
#line 3362 "Utils.c"
						}
#line 363 "../src/Core/Utils.vala"
						if (_tmp18_) {
#line 363 "../src/Core/Utils.vala"
							_tmp17_ = TRUE;
#line 3368 "Utils.c"
						} else {
							gchar** _tmp23_;
							gint _tmp23__length1;
							const gchar* _tmp24_;
#line 363 "../src/Core/Utils.vala"
							_tmp23_ = tokens;
#line 363 "../src/Core/Utils.vala"
							_tmp23__length1 = tokens_length1;
#line 363 "../src/Core/Utils.vala"
							_tmp24_ = _tmp23_[i - 1];
#line 363 "../src/Core/Utils.vala"
							_tmp17_ = pebbles_utils_is_number (_tmp24_);
#line 3381 "Utils.c"
						}
#line 363 "../src/Core/Utils.vala"
						if (_tmp17_) {
#line 3385 "Utils.c"
							gchar** _tmp25_;
							gint _tmp25__length1;
							gchar* _tmp26_;
#line 364 "../src/Core/Utils.vala"
							_tmp25_ = tokens;
#line 364 "../src/Core/Utils.vala"
							_tmp25__length1 = tokens_length1;
#line 364 "../src/Core/Utils.vala"
							_tmp26_ = g_strdup ("-");
#line 364 "../src/Core/Utils.vala"
							_g_free0 (_tmp25_[i]);
#line 364 "../src/Core/Utils.vala"
							_tmp25_[i] = _tmp26_;
#line 3399 "Utils.c"
						} else {
							gchar** _tmp27_;
							gint _tmp27__length1;
#line 366 "../src/Core/Utils.vala"
							_tmp27_ = tokens;
#line 366 "../src/Core/Utils.vala"
							_tmp27__length1 = tokens_length1;
#line 366 "../src/Core/Utils.vala"
							if (i < _tmp27__length1) {
#line 3409 "Utils.c"
								gchar** _tmp28_;
								gint _tmp28__length1;
								gchar* _tmp29_;
								gchar** _tmp30_;
								gint _tmp30__length1;
								gchar** _tmp31_;
								gint _tmp31__length1;
								const gchar* _tmp32_;
								gchar* _tmp33_;
#line 367 "../src/Core/Utils.vala"
								_tmp28_ = tokens;
#line 367 "../src/Core/Utils.vala"
								_tmp28__length1 = tokens_length1;
#line 367 "../src/Core/Utils.vala"
								_tmp29_ = g_strdup ("( 0 u");
#line 367 "../src/Core/Utils.vala"
								_g_free0 (_tmp28_[i]);
#line 367 "../src/Core/Utils.vala"
								_tmp28_[i] = _tmp29_;
#line 368 "../src/Core/Utils.vala"
								_tmp30_ = tokens;
#line 368 "../src/Core/Utils.vala"
								_tmp30__length1 = tokens_length1;
#line 368 "../src/Core/Utils.vala"
								_tmp31_ = tokens;
#line 368 "../src/Core/Utils.vala"
								_tmp31__length1 = tokens_length1;
#line 368 "../src/Core/Utils.vala"
								_tmp32_ = _tmp31_[i + 1];
#line 368 "../src/Core/Utils.vala"
								_tmp33_ = g_strconcat (_tmp32_, " )", NULL);
#line 368 "../src/Core/Utils.vala"
								_g_free0 (_tmp30_[i + 1]);
#line 368 "../src/Core/Utils.vala"
								_tmp30_[i + 1] = _tmp33_;
#line 3445 "Utils.c"
							}
						}
					}
				}
			}
		}
	}
#line 373 "../src/Core/Utils.vala"
	_tmp34_ = tokens;
#line 373 "../src/Core/Utils.vala"
	_tmp34__length1 = tokens_length1;
#line 373 "../src/Core/Utils.vala"
	_tmp35_ = _vala_g_strjoinv (" ", _tmp34_, (gint) _tmp34__length1);
#line 373 "../src/Core/Utils.vala"
	_g_free0 (uniminus_converted);
#line 373 "../src/Core/Utils.vala"
	uniminus_converted = _tmp35_;
#line 375 "../src/Core/Utils.vala"
	_tmp36_ = uniminus_converted;
#line 375 "../src/Core/Utils.vala"
	g_print ("unary converted: %s\n", _tmp36_);
#line 376 "../src/Core/Utils.vala"
	result = uniminus_converted;
#line 376 "../src/Core/Utils.vala"
	tokens = (_vala_array_free (tokens, tokens_length1, (GDestroyNotify) g_free), NULL);
#line 376 "../src/Core/Utils.vala"
	return result;
#line 3473 "Utils.c"
}

gchar*
pebbles_utils_algebraic_variable_product_convert (const gchar* exp)
{
	gchar* converted_exp = NULL;
	gchar* _tmp0_;
	gchar** tokens = NULL;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar** _tmp3_;
	gchar** _tmp4_;
	gchar** _tmp5_;
	gint _tmp5__length1;
	gint tokens_length1;
	gint _tokens_size_;
	gchar** _tmp19_;
	gint _tmp19__length1;
	gchar* _tmp20_;
	gchar* _tmp21_;
	gchar* _tmp22_;
	gchar* result = NULL;
#line 379 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, NULL);
#line 380 "../src/Core/Utils.vala"
	_tmp0_ = g_strdup ("");
#line 380 "../src/Core/Utils.vala"
	converted_exp = _tmp0_;
#line 381 "../src/Core/Utils.vala"
	_tmp1_ = string_replace (exp, "x", " x ");
#line 381 "../src/Core/Utils.vala"
	_tmp2_ = _tmp1_;
#line 381 "../src/Core/Utils.vala"
	_tmp4_ = _tmp3_ = g_strsplit (_tmp2_, " ", 0);
#line 381 "../src/Core/Utils.vala"
	_tmp5_ = _tmp4_;
#line 381 "../src/Core/Utils.vala"
	_tmp5__length1 = _vala_array_length (_tmp3_);
#line 381 "../src/Core/Utils.vala"
	_g_free0 (_tmp2_);
#line 381 "../src/Core/Utils.vala"
	tokens = _tmp5_;
#line 381 "../src/Core/Utils.vala"
	tokens_length1 = _tmp5__length1;
#line 381 "../src/Core/Utils.vala"
	_tokens_size_ = tokens_length1;
#line 3520 "Utils.c"
	{
		gint i = 0;
#line 382 "../src/Core/Utils.vala"
		i = 1;
#line 3525 "Utils.c"
		{
			gboolean _tmp6_ = FALSE;
#line 382 "../src/Core/Utils.vala"
			_tmp6_ = TRUE;
#line 382 "../src/Core/Utils.vala"
			while (TRUE) {
#line 3532 "Utils.c"
				gchar** _tmp8_;
				gint _tmp8__length1;
				gboolean _tmp9_ = FALSE;
				gboolean _tmp10_ = FALSE;
				gchar** _tmp11_;
				gint _tmp11__length1;
				const gchar* _tmp12_;
#line 382 "../src/Core/Utils.vala"
				if (!_tmp6_) {
#line 3542 "Utils.c"
					gint _tmp7_;
#line 382 "../src/Core/Utils.vala"
					_tmp7_ = i;
#line 382 "../src/Core/Utils.vala"
					i = _tmp7_ + 1;
#line 3548 "Utils.c"
				}
#line 382 "../src/Core/Utils.vala"
				_tmp6_ = FALSE;
#line 382 "../src/Core/Utils.vala"
				_tmp8_ = tokens;
#line 382 "../src/Core/Utils.vala"
				_tmp8__length1 = tokens_length1;
#line 382 "../src/Core/Utils.vala"
				if (!(i < _tmp8__length1)) {
#line 382 "../src/Core/Utils.vala"
					break;
#line 3560 "Utils.c"
				}
#line 383 "../src/Core/Utils.vala"
				_tmp11_ = tokens;
#line 383 "../src/Core/Utils.vala"
				_tmp11__length1 = tokens_length1;
#line 383 "../src/Core/Utils.vala"
				_tmp12_ = _tmp11_[i];
#line 383 "../src/Core/Utils.vala"
				if (g_strcmp0 (_tmp12_, "x") == 0) {
#line 3570 "Utils.c"
					gchar** _tmp13_;
					gint _tmp13__length1;
					const gchar* _tmp14_;
#line 383 "../src/Core/Utils.vala"
					_tmp13_ = tokens;
#line 383 "../src/Core/Utils.vala"
					_tmp13__length1 = tokens_length1;
#line 383 "../src/Core/Utils.vala"
					_tmp14_ = _tmp13_[i - 1];
#line 383 "../src/Core/Utils.vala"
					_tmp10_ = pebbles_utils_is_number (_tmp14_);
#line 3582 "Utils.c"
				} else {
#line 383 "../src/Core/Utils.vala"
					_tmp10_ = FALSE;
#line 3586 "Utils.c"
				}
#line 383 "../src/Core/Utils.vala"
				if (_tmp10_) {
#line 3590 "Utils.c"
					gchar** _tmp15_;
					gint _tmp15__length1;
					const gchar* _tmp16_;
#line 383 "../src/Core/Utils.vala"
					_tmp15_ = tokens;
#line 383 "../src/Core/Utils.vala"
					_tmp15__length1 = tokens_length1;
#line 383 "../src/Core/Utils.vala"
					_tmp16_ = _tmp15_[i - 1];
#line 383 "../src/Core/Utils.vala"
					_tmp9_ = g_strcmp0 (_tmp16_, "(") != 0;
#line 3602 "Utils.c"
				} else {
#line 383 "../src/Core/Utils.vala"
					_tmp9_ = FALSE;
#line 3606 "Utils.c"
				}
#line 383 "../src/Core/Utils.vala"
				if (_tmp9_) {
#line 3610 "Utils.c"
					gchar** _tmp17_;
					gint _tmp17__length1;
					gchar* _tmp18_;
#line 384 "../src/Core/Utils.vala"
					_tmp17_ = tokens;
#line 384 "../src/Core/Utils.vala"
					_tmp17__length1 = tokens_length1;
#line 384 "../src/Core/Utils.vala"
					_tmp18_ = g_strdup ("* x");
#line 384 "../src/Core/Utils.vala"
					_g_free0 (_tmp17_[i]);
#line 384 "../src/Core/Utils.vala"
					_tmp17_[i] = _tmp18_;
#line 3624 "Utils.c"
				}
			}
		}
	}
#line 387 "../src/Core/Utils.vala"
	_tmp19_ = tokens;
#line 387 "../src/Core/Utils.vala"
	_tmp19__length1 = tokens_length1;
#line 387 "../src/Core/Utils.vala"
	_tmp20_ = _vala_g_strjoinv (" ", _tmp19_, (gint) _tmp19__length1);
#line 387 "../src/Core/Utils.vala"
	_tmp21_ = _tmp20_;
#line 387 "../src/Core/Utils.vala"
	_tmp22_ = pebbles_utils_space_removal (_tmp21_);
#line 387 "../src/Core/Utils.vala"
	_g_free0 (converted_exp);
#line 387 "../src/Core/Utils.vala"
	converted_exp = _tmp22_;
#line 387 "../src/Core/Utils.vala"
	_g_free0 (_tmp21_);
#line 389 "../src/Core/Utils.vala"
	result = converted_exp;
#line 389 "../src/Core/Utils.vala"
	tokens = (_vala_array_free (tokens, tokens_length1, (GDestroyNotify) g_free), NULL);
#line 389 "../src/Core/Utils.vala"
	return result;
#line 3651 "Utils.c"
}

gchar*
pebbles_utils_algebraic_parenthesis_product_convert (const gchar* exp)
{
	gchar** tokens = NULL;
	gchar** _tmp0_;
	gchar** _tmp1_;
	gint tokens_length1;
	gint _tokens_size_;
	gchar* converted_exp = NULL;
	gchar** _tmp20_;
	gint _tmp20__length1;
	gchar* _tmp21_;
	gchar* _tmp22_;
	gchar* _tmp23_;
	gchar* _tmp24_;
	gchar* result = NULL;
#line 392 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, NULL);
#line 393 "../src/Core/Utils.vala"
	_tmp1_ = _tmp0_ = g_strsplit (exp, " ", 0);
#line 393 "../src/Core/Utils.vala"
	tokens = _tmp1_;
#line 393 "../src/Core/Utils.vala"
	tokens_length1 = _vala_array_length (_tmp0_);
#line 393 "../src/Core/Utils.vala"
	_tokens_size_ = tokens_length1;
#line 3680 "Utils.c"
	{
		gint i = 0;
#line 394 "../src/Core/Utils.vala"
		i = 1;
#line 3685 "Utils.c"
		{
			gboolean _tmp2_ = FALSE;
#line 394 "../src/Core/Utils.vala"
			_tmp2_ = TRUE;
#line 394 "../src/Core/Utils.vala"
			while (TRUE) {
#line 3692 "Utils.c"
				gchar** _tmp4_;
				gint _tmp4__length1;
				gchar** _tmp5_;
				gint _tmp5__length1;
				const gchar* _tmp6_;
				gchar** _tmp11_;
				gint _tmp11__length1;
				const gchar* _tmp12_;
#line 394 "../src/Core/Utils.vala"
				if (!_tmp2_) {
#line 3703 "Utils.c"
					gint _tmp3_;
#line 394 "../src/Core/Utils.vala"
					_tmp3_ = i;
#line 394 "../src/Core/Utils.vala"
					i = _tmp3_ + 1;
#line 3709 "Utils.c"
				}
#line 394 "../src/Core/Utils.vala"
				_tmp2_ = FALSE;
#line 394 "../src/Core/Utils.vala"
				_tmp4_ = tokens;
#line 394 "../src/Core/Utils.vala"
				_tmp4__length1 = tokens_length1;
#line 394 "../src/Core/Utils.vala"
				if (!(i < (_tmp4__length1 - 1))) {
#line 394 "../src/Core/Utils.vala"
					break;
#line 3721 "Utils.c"
				}
#line 395 "../src/Core/Utils.vala"
				_tmp5_ = tokens;
#line 395 "../src/Core/Utils.vala"
				_tmp5__length1 = tokens_length1;
#line 395 "../src/Core/Utils.vala"
				_tmp6_ = _tmp5_[i];
#line 395 "../src/Core/Utils.vala"
				if (g_strcmp0 (_tmp6_, "(") == 0) {
#line 3731 "Utils.c"
					gchar** _tmp7_;
					gint _tmp7__length1;
					const gchar* _tmp8_;
#line 396 "../src/Core/Utils.vala"
					_tmp7_ = tokens;
#line 396 "../src/Core/Utils.vala"
					_tmp7__length1 = tokens_length1;
#line 396 "../src/Core/Utils.vala"
					_tmp8_ = _tmp7_[i - 1];
#line 396 "../src/Core/Utils.vala"
					if (pebbles_utils_is_number (_tmp8_)) {
#line 3743 "Utils.c"
						gchar** _tmp9_;
						gint _tmp9__length1;
						gchar* _tmp10_;
#line 397 "../src/Core/Utils.vala"
						_tmp9_ = tokens;
#line 397 "../src/Core/Utils.vala"
						_tmp9__length1 = tokens_length1;
#line 397 "../src/Core/Utils.vala"
						_tmp10_ = g_strdup ("* (");
#line 397 "../src/Core/Utils.vala"
						_g_free0 (_tmp9_[i]);
#line 397 "../src/Core/Utils.vala"
						_tmp9_[i] = _tmp10_;
#line 3757 "Utils.c"
					}
				}
#line 400 "../src/Core/Utils.vala"
				_tmp11_ = tokens;
#line 400 "../src/Core/Utils.vala"
				_tmp11__length1 = tokens_length1;
#line 400 "../src/Core/Utils.vala"
				_tmp12_ = _tmp11_[i];
#line 400 "../src/Core/Utils.vala"
				if (g_strcmp0 (_tmp12_, ")") == 0) {
#line 3768 "Utils.c"
					gboolean _tmp13_ = FALSE;
					gchar** _tmp14_;
					gint _tmp14__length1;
					const gchar* _tmp15_;
#line 401 "../src/Core/Utils.vala"
					_tmp14_ = tokens;
#line 401 "../src/Core/Utils.vala"
					_tmp14__length1 = tokens_length1;
#line 401 "../src/Core/Utils.vala"
					_tmp15_ = _tmp14_[i + 1];
#line 401 "../src/Core/Utils.vala"
					if (pebbles_utils_is_number (_tmp15_)) {
#line 401 "../src/Core/Utils.vala"
						_tmp13_ = TRUE;
#line 3783 "Utils.c"
					} else {
						gchar** _tmp16_;
						gint _tmp16__length1;
						const gchar* _tmp17_;
#line 401 "../src/Core/Utils.vala"
						_tmp16_ = tokens;
#line 401 "../src/Core/Utils.vala"
						_tmp16__length1 = tokens_length1;
#line 401 "../src/Core/Utils.vala"
						_tmp17_ = _tmp16_[i + 1];
#line 401 "../src/Core/Utils.vala"
						_tmp13_ = g_strcmp0 (_tmp17_, "(") == 0;
#line 3796 "Utils.c"
					}
#line 401 "../src/Core/Utils.vala"
					if (_tmp13_) {
#line 3800 "Utils.c"
						gchar** _tmp18_;
						gint _tmp18__length1;
						gchar* _tmp19_;
#line 402 "../src/Core/Utils.vala"
						_tmp18_ = tokens;
#line 402 "../src/Core/Utils.vala"
						_tmp18__length1 = tokens_length1;
#line 402 "../src/Core/Utils.vala"
						_tmp19_ = g_strdup (") *");
#line 402 "../src/Core/Utils.vala"
						_g_free0 (_tmp18_[i]);
#line 402 "../src/Core/Utils.vala"
						_tmp18_[i] = _tmp19_;
#line 3814 "Utils.c"
					}
				}
			}
		}
	}
#line 406 "../src/Core/Utils.vala"
	_tmp20_ = tokens;
#line 406 "../src/Core/Utils.vala"
	_tmp20__length1 = tokens_length1;
#line 406 "../src/Core/Utils.vala"
	_tmp21_ = _vala_g_strjoinv (" ", _tmp20_, (gint) _tmp20__length1);
#line 406 "../src/Core/Utils.vala"
	_tmp22_ = _tmp21_;
#line 406 "../src/Core/Utils.vala"
	_tmp23_ = pebbles_utils_space_removal (_tmp22_);
#line 406 "../src/Core/Utils.vala"
	_tmp24_ = _tmp23_;
#line 406 "../src/Core/Utils.vala"
	_g_free0 (_tmp22_);
#line 406 "../src/Core/Utils.vala"
	converted_exp = _tmp24_;
#line 407 "../src/Core/Utils.vala"
	g_print ("algebraic converted: %s\n", converted_exp);
#line 408 "../src/Core/Utils.vala"
	result = converted_exp;
#line 408 "../src/Core/Utils.vala"
	tokens = (_vala_array_free (tokens, tokens_length1, (GDestroyNotify) g_free), NULL);
#line 408 "../src/Core/Utils.vala"
	return result;
#line 3844 "Utils.c"
}

static gboolean
pebbles_utils_is_number (const gchar* exp)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_ = FALSE;
	gboolean _tmp6_ = FALSE;
	gboolean _tmp7_ = FALSE;
	gboolean _tmp8_ = FALSE;
	gboolean _tmp9_ = FALSE;
	gboolean _tmp10_ = FALSE;
	gboolean result = FALSE;
#line 411 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, FALSE);
#line 412 "../src/Core/Utils.vala"
	if (g_str_has_suffix (exp, "0")) {
#line 412 "../src/Core/Utils.vala"
		_tmp10_ = TRUE;
#line 3868 "Utils.c"
	} else {
#line 413 "../src/Core/Utils.vala"
		_tmp10_ = g_str_has_suffix (exp, "1");
#line 3872 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp10_) {
#line 412 "../src/Core/Utils.vala"
		_tmp9_ = TRUE;
#line 3878 "Utils.c"
	} else {
#line 414 "../src/Core/Utils.vala"
		_tmp9_ = g_str_has_suffix (exp, "2");
#line 3882 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp9_) {
#line 412 "../src/Core/Utils.vala"
		_tmp8_ = TRUE;
#line 3888 "Utils.c"
	} else {
#line 415 "../src/Core/Utils.vala"
		_tmp8_ = g_str_has_suffix (exp, "3");
#line 3892 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp8_) {
#line 412 "../src/Core/Utils.vala"
		_tmp7_ = TRUE;
#line 3898 "Utils.c"
	} else {
#line 416 "../src/Core/Utils.vala"
		_tmp7_ = g_str_has_suffix (exp, "4");
#line 3902 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp7_) {
#line 412 "../src/Core/Utils.vala"
		_tmp6_ = TRUE;
#line 3908 "Utils.c"
	} else {
#line 417 "../src/Core/Utils.vala"
		_tmp6_ = g_str_has_suffix (exp, "5");
#line 3912 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp6_) {
#line 412 "../src/Core/Utils.vala"
		_tmp5_ = TRUE;
#line 3918 "Utils.c"
	} else {
#line 418 "../src/Core/Utils.vala"
		_tmp5_ = g_str_has_suffix (exp, "6");
#line 3922 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp5_) {
#line 412 "../src/Core/Utils.vala"
		_tmp4_ = TRUE;
#line 3928 "Utils.c"
	} else {
#line 419 "../src/Core/Utils.vala"
		_tmp4_ = g_str_has_suffix (exp, "7");
#line 3932 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp4_) {
#line 412 "../src/Core/Utils.vala"
		_tmp3_ = TRUE;
#line 3938 "Utils.c"
	} else {
#line 420 "../src/Core/Utils.vala"
		_tmp3_ = g_str_has_suffix (exp, "8");
#line 3942 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp3_) {
#line 412 "../src/Core/Utils.vala"
		_tmp2_ = TRUE;
#line 3948 "Utils.c"
	} else {
#line 421 "../src/Core/Utils.vala"
		_tmp2_ = g_str_has_suffix (exp, "9");
#line 3952 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp2_) {
#line 412 "../src/Core/Utils.vala"
		_tmp1_ = TRUE;
#line 3958 "Utils.c"
	} else {
#line 422 "../src/Core/Utils.vala"
		_tmp1_ = g_str_has_suffix (exp, ".");
#line 3962 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp1_) {
#line 412 "../src/Core/Utils.vala"
		_tmp0_ = TRUE;
#line 3968 "Utils.c"
	} else {
#line 423 "../src/Core/Utils.vala"
		_tmp0_ = g_str_has_suffix (exp, "x");
#line 3972 "Utils.c"
	}
#line 412 "../src/Core/Utils.vala"
	if (_tmp0_) {
#line 425 "../src/Core/Utils.vala"
		result = TRUE;
#line 425 "../src/Core/Utils.vala"
		return result;
#line 3980 "Utils.c"
	}
#line 427 "../src/Core/Utils.vala"
	result = FALSE;
#line 427 "../src/Core/Utils.vala"
	return result;
#line 3986 "Utils.c"
}

static gboolean
pebbles_utils_pg_is_number (const gchar* exp)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_ = FALSE;
	gboolean _tmp6_ = FALSE;
	gboolean _tmp7_ = FALSE;
	gboolean _tmp8_ = FALSE;
	gboolean _tmp9_ = FALSE;
	gboolean _tmp10_ = FALSE;
	gboolean _tmp11_ = FALSE;
	gboolean _tmp12_ = FALSE;
	gboolean _tmp13_ = FALSE;
	gboolean _tmp14_ = FALSE;
	gboolean _tmp15_ = FALSE;
	gboolean _tmp16_ = FALSE;
	gboolean _tmp17_ = FALSE;
	gboolean _tmp18_ = FALSE;
	gboolean _tmp19_ = FALSE;
	gboolean _tmp20_ = FALSE;
	gboolean _tmp21_ = FALSE;
	gboolean result = FALSE;
#line 429 "../src/Core/Utils.vala"
	g_return_val_if_fail (exp != NULL, FALSE);
#line 430 "../src/Core/Utils.vala"
	if (g_str_has_suffix (exp, "0")) {
#line 430 "../src/Core/Utils.vala"
		_tmp21_ = TRUE;
#line 4021 "Utils.c"
	} else {
#line 431 "../src/Core/Utils.vala"
		_tmp21_ = g_str_has_suffix (exp, "1");
#line 4025 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp21_) {
#line 430 "../src/Core/Utils.vala"
		_tmp20_ = TRUE;
#line 4031 "Utils.c"
	} else {
#line 432 "../src/Core/Utils.vala"
		_tmp20_ = g_str_has_suffix (exp, "2");
#line 4035 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp20_) {
#line 430 "../src/Core/Utils.vala"
		_tmp19_ = TRUE;
#line 4041 "Utils.c"
	} else {
#line 433 "../src/Core/Utils.vala"
		_tmp19_ = g_str_has_suffix (exp, "3");
#line 4045 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp19_) {
#line 430 "../src/Core/Utils.vala"
		_tmp18_ = TRUE;
#line 4051 "Utils.c"
	} else {
#line 434 "../src/Core/Utils.vala"
		_tmp18_ = g_str_has_suffix (exp, "4");
#line 4055 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp18_) {
#line 430 "../src/Core/Utils.vala"
		_tmp17_ = TRUE;
#line 4061 "Utils.c"
	} else {
#line 435 "../src/Core/Utils.vala"
		_tmp17_ = g_str_has_suffix (exp, "5");
#line 4065 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp17_) {
#line 430 "../src/Core/Utils.vala"
		_tmp16_ = TRUE;
#line 4071 "Utils.c"
	} else {
#line 436 "../src/Core/Utils.vala"
		_tmp16_ = g_str_has_suffix (exp, "6");
#line 4075 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp16_) {
#line 430 "../src/Core/Utils.vala"
		_tmp15_ = TRUE;
#line 4081 "Utils.c"
	} else {
#line 437 "../src/Core/Utils.vala"
		_tmp15_ = g_str_has_suffix (exp, "7");
#line 4085 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp15_) {
#line 430 "../src/Core/Utils.vala"
		_tmp14_ = TRUE;
#line 4091 "Utils.c"
	} else {
#line 438 "../src/Core/Utils.vala"
		_tmp14_ = g_str_has_suffix (exp, "8");
#line 4095 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp14_) {
#line 430 "../src/Core/Utils.vala"
		_tmp13_ = TRUE;
#line 4101 "Utils.c"
	} else {
#line 439 "../src/Core/Utils.vala"
		_tmp13_ = g_str_has_suffix (exp, "9");
#line 4105 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp13_) {
#line 430 "../src/Core/Utils.vala"
		_tmp12_ = TRUE;
#line 4111 "Utils.c"
	} else {
#line 440 "../src/Core/Utils.vala"
		_tmp12_ = g_str_has_suffix (exp, ".");
#line 4115 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp12_) {
#line 430 "../src/Core/Utils.vala"
		_tmp11_ = TRUE;
#line 4121 "Utils.c"
	} else {
#line 441 "../src/Core/Utils.vala"
		_tmp11_ = g_str_has_suffix (exp, "a");
#line 4125 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp11_) {
#line 430 "../src/Core/Utils.vala"
		_tmp10_ = TRUE;
#line 4131 "Utils.c"
	} else {
#line 442 "../src/Core/Utils.vala"
		_tmp10_ = g_str_has_suffix (exp, "b");
#line 4135 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp10_) {
#line 430 "../src/Core/Utils.vala"
		_tmp9_ = TRUE;
#line 4141 "Utils.c"
	} else {
#line 443 "../src/Core/Utils.vala"
		_tmp9_ = g_str_has_suffix (exp, "c");
#line 4145 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp9_) {
#line 430 "../src/Core/Utils.vala"
		_tmp8_ = TRUE;
#line 4151 "Utils.c"
	} else {
#line 444 "../src/Core/Utils.vala"
		_tmp8_ = g_str_has_suffix (exp, "d");
#line 4155 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp8_) {
#line 430 "../src/Core/Utils.vala"
		_tmp7_ = TRUE;
#line 4161 "Utils.c"
	} else {
#line 445 "../src/Core/Utils.vala"
		_tmp7_ = g_str_has_suffix (exp, "e");
#line 4165 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp7_) {
#line 430 "../src/Core/Utils.vala"
		_tmp6_ = TRUE;
#line 4171 "Utils.c"
	} else {
#line 446 "../src/Core/Utils.vala"
		_tmp6_ = g_str_has_suffix (exp, "f");
#line 4175 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp6_) {
#line 430 "../src/Core/Utils.vala"
		_tmp5_ = TRUE;
#line 4181 "Utils.c"
	} else {
#line 447 "../src/Core/Utils.vala"
		_tmp5_ = g_str_has_suffix (exp, "A");
#line 4185 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp5_) {
#line 430 "../src/Core/Utils.vala"
		_tmp4_ = TRUE;
#line 4191 "Utils.c"
	} else {
#line 448 "../src/Core/Utils.vala"
		_tmp4_ = g_str_has_suffix (exp, "B");
#line 4195 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp4_) {
#line 430 "../src/Core/Utils.vala"
		_tmp3_ = TRUE;
#line 4201 "Utils.c"
	} else {
#line 449 "../src/Core/Utils.vala"
		_tmp3_ = g_str_has_suffix (exp, "C");
#line 4205 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp3_) {
#line 430 "../src/Core/Utils.vala"
		_tmp2_ = TRUE;
#line 4211 "Utils.c"
	} else {
#line 450 "../src/Core/Utils.vala"
		_tmp2_ = g_str_has_suffix (exp, "D");
#line 4215 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp2_) {
#line 430 "../src/Core/Utils.vala"
		_tmp1_ = TRUE;
#line 4221 "Utils.c"
	} else {
#line 451 "../src/Core/Utils.vala"
		_tmp1_ = g_str_has_suffix (exp, "E");
#line 4225 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp1_) {
#line 430 "../src/Core/Utils.vala"
		_tmp0_ = TRUE;
#line 4231 "Utils.c"
	} else {
#line 452 "../src/Core/Utils.vala"
		_tmp0_ = g_str_has_suffix (exp, "F");
#line 4235 "Utils.c"
	}
#line 430 "../src/Core/Utils.vala"
	if (_tmp0_) {
#line 454 "../src/Core/Utils.vala"
		result = TRUE;
#line 454 "../src/Core/Utils.vala"
		return result;
#line 4243 "Utils.c"
	}
#line 456 "../src/Core/Utils.vala"
	result = FALSE;
#line 456 "../src/Core/Utils.vala"
	return result;
#line 4249 "Utils.c"
}

static gchar*
double_to_string (gdouble self)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gint _tmp1__length1;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 989 "glib-2.0.vapi"
	_tmp0_ = g_new0 (gchar, G_ASCII_DTOSTR_BUF_SIZE);
#line 989 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 989 "glib-2.0.vapi"
	_tmp1__length1 = G_ASCII_DTOSTR_BUF_SIZE;
#line 989 "glib-2.0.vapi"
	_tmp2_ = g_ascii_dtostr (_tmp1_, (gint) G_ASCII_DTOSTR_BUF_SIZE, self);
#line 989 "glib-2.0.vapi"
	_tmp3_ = g_strdup (_tmp2_);
#line 989 "glib-2.0.vapi"
	_tmp4_ = _tmp3_;
#line 989 "glib-2.0.vapi"
	_tmp1_ = (g_free (_tmp1_), NULL);
#line 989 "glib-2.0.vapi"
	result = _tmp4_;
#line 989 "glib-2.0.vapi"
	return result;
#line 4280 "Utils.c"
}

gchar*
pebbles_utils_manage_decimal_places (gdouble _result_,
                                     gint accuracy)
{
	gchar* output = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 459 "../src/Core/Utils.vala"
	_tmp0_ = g_strdup ("");
#line 459 "../src/Core/Utils.vala"
	output = _tmp0_;
#line 460 "../src/Core/Utils.vala"
	switch (accuracy) {
#line 460 "../src/Core/Utils.vala"
		case 10:
#line 4298 "Utils.c"
		{
			gchar* _tmp1_;
#line 462 "../src/Core/Utils.vala"
			_tmp1_ = g_strdup_printf ("%.10f", _result_);
#line 462 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 462 "../src/Core/Utils.vala"
			output = _tmp1_;
#line 463 "../src/Core/Utils.vala"
			break;
#line 4309 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 9:
#line 4313 "Utils.c"
		{
			gchar* _tmp2_;
#line 465 "../src/Core/Utils.vala"
			_tmp2_ = g_strdup_printf ("%.9f", _result_);
#line 465 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 465 "../src/Core/Utils.vala"
			output = _tmp2_;
#line 466 "../src/Core/Utils.vala"
			break;
#line 4324 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 8:
#line 4328 "Utils.c"
		{
			gchar* _tmp3_;
#line 468 "../src/Core/Utils.vala"
			_tmp3_ = g_strdup_printf ("%.8f", _result_);
#line 468 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 468 "../src/Core/Utils.vala"
			output = _tmp3_;
#line 469 "../src/Core/Utils.vala"
			break;
#line 4339 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 7:
#line 4343 "Utils.c"
		{
			gchar* _tmp4_;
#line 471 "../src/Core/Utils.vala"
			_tmp4_ = g_strdup_printf ("%.7f", _result_);
#line 471 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 471 "../src/Core/Utils.vala"
			output = _tmp4_;
#line 472 "../src/Core/Utils.vala"
			break;
#line 4354 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 6:
#line 4358 "Utils.c"
		{
			gchar* _tmp5_;
#line 474 "../src/Core/Utils.vala"
			_tmp5_ = g_strdup_printf ("%.6f", _result_);
#line 474 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 474 "../src/Core/Utils.vala"
			output = _tmp5_;
#line 475 "../src/Core/Utils.vala"
			break;
#line 4369 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 5:
#line 4373 "Utils.c"
		{
			gchar* _tmp6_;
#line 477 "../src/Core/Utils.vala"
			_tmp6_ = g_strdup_printf ("%.5f", _result_);
#line 477 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 477 "../src/Core/Utils.vala"
			output = _tmp6_;
#line 478 "../src/Core/Utils.vala"
			break;
#line 4384 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 4:
#line 4388 "Utils.c"
		{
			gchar* _tmp7_;
#line 480 "../src/Core/Utils.vala"
			_tmp7_ = g_strdup_printf ("%.4f", _result_);
#line 480 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 480 "../src/Core/Utils.vala"
			output = _tmp7_;
#line 481 "../src/Core/Utils.vala"
			break;
#line 4399 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 3:
#line 4403 "Utils.c"
		{
			gchar* _tmp8_;
#line 483 "../src/Core/Utils.vala"
			_tmp8_ = g_strdup_printf ("%.3f", _result_);
#line 483 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 483 "../src/Core/Utils.vala"
			output = _tmp8_;
#line 484 "../src/Core/Utils.vala"
			break;
#line 4414 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 2:
#line 4418 "Utils.c"
		{
			gchar* _tmp9_;
#line 486 "../src/Core/Utils.vala"
			_tmp9_ = g_strdup_printf ("%.2f", _result_);
#line 486 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 486 "../src/Core/Utils.vala"
			output = _tmp9_;
#line 487 "../src/Core/Utils.vala"
			break;
#line 4429 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 1:
#line 4433 "Utils.c"
		{
			gchar* _tmp10_;
#line 489 "../src/Core/Utils.vala"
			_tmp10_ = g_strdup_printf ("%.1f", _result_);
#line 489 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 489 "../src/Core/Utils.vala"
			output = _tmp10_;
#line 490 "../src/Core/Utils.vala"
			break;
#line 4444 "Utils.c"
		}
#line 460 "../src/Core/Utils.vala"
		case 0:
#line 4448 "Utils.c"
		{
			gchar* _tmp11_;
#line 492 "../src/Core/Utils.vala"
			_tmp11_ = g_strdup_printf ("%.0f", _result_);
#line 492 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 492 "../src/Core/Utils.vala"
			output = _tmp11_;
#line 493 "../src/Core/Utils.vala"
			break;
#line 4459 "Utils.c"
		}
		default:
		{
			gchar* _tmp12_;
#line 495 "../src/Core/Utils.vala"
			_tmp12_ = double_to_string (_result_);
#line 495 "../src/Core/Utils.vala"
			_g_free0 (output);
#line 495 "../src/Core/Utils.vala"
			output = _tmp12_;
#line 496 "../src/Core/Utils.vala"
			break;
#line 4472 "Utils.c"
		}
	}
#line 498 "../src/Core/Utils.vala"
	result = output;
#line 498 "../src/Core/Utils.vala"
	return result;
#line 4479 "Utils.c"
}

PebblesUtils*
pebbles_utils_construct (GType object_type)
{
	PebblesUtils* self = NULL;
#line 23 "../src/Core/Utils.vala"
	self = (PebblesUtils*) g_type_create_instance (object_type);
#line 23 "../src/Core/Utils.vala"
	return self;
#line 4490 "Utils.c"
}

PebblesUtils*
pebbles_utils_new (void)
{
#line 23 "../src/Core/Utils.vala"
	return pebbles_utils_construct (PEBBLES_TYPE_UTILS);
#line 4498 "Utils.c"
}

static void
pebbles_value_utils_init (GValue* value)
{
#line 23 "../src/Core/Utils.vala"
	value->data[0].v_pointer = NULL;
#line 4506 "Utils.c"
}

static void
pebbles_value_utils_free_value (GValue* value)
{
#line 23 "../src/Core/Utils.vala"
	if (value->data[0].v_pointer) {
#line 23 "../src/Core/Utils.vala"
		pebbles_utils_unref (value->data[0].v_pointer);
#line 4516 "Utils.c"
	}
}

static void
pebbles_value_utils_copy_value (const GValue* src_value,
                                GValue* dest_value)
{
#line 23 "../src/Core/Utils.vala"
	if (src_value->data[0].v_pointer) {
#line 23 "../src/Core/Utils.vala"
		dest_value->data[0].v_pointer = pebbles_utils_ref (src_value->data[0].v_pointer);
#line 4528 "Utils.c"
	} else {
#line 23 "../src/Core/Utils.vala"
		dest_value->data[0].v_pointer = NULL;
#line 4532 "Utils.c"
	}
}

static gpointer
pebbles_value_utils_peek_pointer (const GValue* value)
{
#line 23 "../src/Core/Utils.vala"
	return value->data[0].v_pointer;
#line 4541 "Utils.c"
}

static gchar*
pebbles_value_utils_collect_value (GValue* value,
                                   guint n_collect_values,
                                   GTypeCValue* collect_values,
                                   guint collect_flags)
{
#line 23 "../src/Core/Utils.vala"
	if (collect_values[0].v_pointer) {
#line 4552 "Utils.c"
		PebblesUtils * object;
		object = collect_values[0].v_pointer;
#line 23 "../src/Core/Utils.vala"
		if (object->parent_instance.g_class == NULL) {
#line 23 "../src/Core/Utils.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 4559 "Utils.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 23 "../src/Core/Utils.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 4563 "Utils.c"
		}
#line 23 "../src/Core/Utils.vala"
		value->data[0].v_pointer = pebbles_utils_ref (object);
#line 4567 "Utils.c"
	} else {
#line 23 "../src/Core/Utils.vala"
		value->data[0].v_pointer = NULL;
#line 4571 "Utils.c"
	}
#line 23 "../src/Core/Utils.vala"
	return NULL;
#line 4575 "Utils.c"
}

static gchar*
pebbles_value_utils_lcopy_value (const GValue* value,
                                 guint n_collect_values,
                                 GTypeCValue* collect_values,
                                 guint collect_flags)
{
	PebblesUtils ** object_p;
	object_p = collect_values[0].v_pointer;
#line 23 "../src/Core/Utils.vala"
	if (!object_p) {
#line 23 "../src/Core/Utils.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 4590 "Utils.c"
	}
#line 23 "../src/Core/Utils.vala"
	if (!value->data[0].v_pointer) {
#line 23 "../src/Core/Utils.vala"
		*object_p = NULL;
#line 4596 "Utils.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 23 "../src/Core/Utils.vala"
		*object_p = value->data[0].v_pointer;
#line 4600 "Utils.c"
	} else {
#line 23 "../src/Core/Utils.vala"
		*object_p = pebbles_utils_ref (value->data[0].v_pointer);
#line 4604 "Utils.c"
	}
#line 23 "../src/Core/Utils.vala"
	return NULL;
#line 4608 "Utils.c"
}

GParamSpec*
pebbles_param_spec_utils (const gchar* name,
                          const gchar* nick,
                          const gchar* blurb,
                          GType object_type,
                          GParamFlags flags)
{
	PebblesParamSpecUtils* spec;
#line 23 "../src/Core/Utils.vala"
	g_return_val_if_fail (g_type_is_a (object_type, PEBBLES_TYPE_UTILS), NULL);
#line 23 "../src/Core/Utils.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 23 "../src/Core/Utils.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 23 "../src/Core/Utils.vala"
	return G_PARAM_SPEC (spec);
#line 4627 "Utils.c"
}

gpointer
pebbles_value_get_utils (const GValue* value)
{
#line 23 "../src/Core/Utils.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_UTILS), NULL);
#line 23 "../src/Core/Utils.vala"
	return value->data[0].v_pointer;
#line 4637 "Utils.c"
}

void
pebbles_value_set_utils (GValue* value,
                         gpointer v_object)
{
	PebblesUtils * old;
#line 23 "../src/Core/Utils.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_UTILS));
#line 23 "../src/Core/Utils.vala"
	old = value->data[0].v_pointer;
#line 23 "../src/Core/Utils.vala"
	if (v_object) {
#line 23 "../src/Core/Utils.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, PEBBLES_TYPE_UTILS));
#line 23 "../src/Core/Utils.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 23 "../src/Core/Utils.vala"
		value->data[0].v_pointer = v_object;
#line 23 "../src/Core/Utils.vala"
		pebbles_utils_ref (value->data[0].v_pointer);
#line 4659 "Utils.c"
	} else {
#line 23 "../src/Core/Utils.vala"
		value->data[0].v_pointer = NULL;
#line 4663 "Utils.c"
	}
#line 23 "../src/Core/Utils.vala"
	if (old) {
#line 23 "../src/Core/Utils.vala"
		pebbles_utils_unref (old);
#line 4669 "Utils.c"
	}
}

void
pebbles_value_take_utils (GValue* value,
                          gpointer v_object)
{
	PebblesUtils * old;
#line 23 "../src/Core/Utils.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_UTILS));
#line 23 "../src/Core/Utils.vala"
	old = value->data[0].v_pointer;
#line 23 "../src/Core/Utils.vala"
	if (v_object) {
#line 23 "../src/Core/Utils.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, PEBBLES_TYPE_UTILS));
#line 23 "../src/Core/Utils.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 23 "../src/Core/Utils.vala"
		value->data[0].v_pointer = v_object;
#line 4690 "Utils.c"
	} else {
#line 23 "../src/Core/Utils.vala"
		value->data[0].v_pointer = NULL;
#line 4694 "Utils.c"
	}
#line 23 "../src/Core/Utils.vala"
	if (old) {
#line 23 "../src/Core/Utils.vala"
		pebbles_utils_unref (old);
#line 4700 "Utils.c"
	}
}

static void
pebbles_utils_class_init (PebblesUtilsClass * klass,
                          gpointer klass_data)
{
#line 23 "../src/Core/Utils.vala"
	pebbles_utils_parent_class = g_type_class_peek_parent (klass);
#line 23 "../src/Core/Utils.vala"
	((PebblesUtilsClass *) klass)->finalize = pebbles_utils_finalize;
#line 4712 "Utils.c"
}

static void
pebbles_utils_instance_init (PebblesUtils * self,
                             gpointer klass)
{
#line 23 "../src/Core/Utils.vala"
	self->ref_count = 1;
#line 4721 "Utils.c"
}

static void
pebbles_utils_finalize (PebblesUtils * obj)
{
	PebblesUtils * self;
#line 23 "../src/Core/Utils.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_UTILS, PebblesUtils);
#line 23 "../src/Core/Utils.vala"
	g_signal_handlers_destroy (self);
#line 4732 "Utils.c"
}

static GType
pebbles_utils_get_type_once (void)
{
	static const GTypeValueTable g_define_type_value_table = { pebbles_value_utils_init, pebbles_value_utils_free_value, pebbles_value_utils_copy_value, pebbles_value_utils_peek_pointer, "p", pebbles_value_utils_collect_value, "p", pebbles_value_utils_lcopy_value };
	static const GTypeInfo g_define_type_info = { sizeof (PebblesUtilsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_utils_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesUtils), 0, (GInstanceInitFunc) pebbles_utils_instance_init, &g_define_type_value_table };
	static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
	GType pebbles_utils_type_id;
	pebbles_utils_type_id = g_type_register_fundamental (g_type_fundamental_next (), "PebblesUtils", &g_define_type_info, &g_define_type_fundamental_info, 0);
	return pebbles_utils_type_id;
}

GType
pebbles_utils_get_type (void)
{
	static volatile gsize pebbles_utils_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_utils_type_id__volatile)) {
		GType pebbles_utils_type_id;
		pebbles_utils_type_id = pebbles_utils_get_type_once ();
		g_once_init_leave (&pebbles_utils_type_id__volatile, pebbles_utils_type_id);
	}
	return pebbles_utils_type_id__volatile;
}

gpointer
pebbles_utils_ref (gpointer instance)
{
	PebblesUtils * self;
	self = instance;
#line 23 "../src/Core/Utils.vala"
	g_atomic_int_inc (&self->ref_count);
#line 23 "../src/Core/Utils.vala"
	return instance;
#line 4767 "Utils.c"
}

void
pebbles_utils_unref (gpointer instance)
{
	PebblesUtils * self;
	self = instance;
#line 23 "../src/Core/Utils.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 23 "../src/Core/Utils.vala"
		PEBBLES_UTILS_GET_CLASS (self)->finalize (self);
#line 23 "../src/Core/Utils.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 4781 "Utils.c"
	}
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

static gint
_vala_array_length (gpointer array)
{
	gint length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}

