/* ProgrammerCalculator.c generated by valac 0.48.14, the Vala compiler
 * generated from ProgrammerCalculator.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 *              Saunak Biswas  <saunakbis97@gmail.com>
 */

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <math.h>
#include <float.h>
#include <stdio.h>
#include <granite.h>
#include <gobject/gvaluecollector.h>

#define PEBBLES_TYPE_PROGRAMMER_CALCULATOR (pebbles_programmer_calculator_get_type ())
#define PEBBLES_PROGRAMMER_CALCULATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculator))
#define PEBBLES_PROGRAMMER_CALCULATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculatorClass))
#define PEBBLES_IS_PROGRAMMER_CALCULATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_PROGRAMMER_CALCULATOR))
#define PEBBLES_IS_PROGRAMMER_CALCULATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_PROGRAMMER_CALCULATOR))
#define PEBBLES_PROGRAMMER_CALCULATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculatorClass))

typedef struct _PebblesProgrammerCalculator PebblesProgrammerCalculator;
typedef struct _PebblesProgrammerCalculatorClass PebblesProgrammerCalculatorClass;
typedef struct _PebblesProgrammerCalculatorPrivate PebblesProgrammerCalculatorPrivate;

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN (pebbles_programmer_calculator_token_get_type ())
typedef struct _PebblesProgrammerCalculatorToken PebblesProgrammerCalculatorToken;
typedef enum  {
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND,
	PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS
} PebblesProgrammerCalculatorTokenType;

#define PEBBLES_PROGRAMMER_CALCULATOR_TYPE_TOKEN_TYPE (pebbles_programmer_calculator_token_type_get_type ())
typedef enum  {
	PEBBLES_NUMBER_SYSTEM_BINARY,
	PEBBLES_NUMBER_SYSTEM_OCTAL,
	PEBBLES_NUMBER_SYSTEM_DECIMAL,
	PEBBLES_NUMBER_SYSTEM_HEXADECIMAL
} PebblesNumberSystem;

#define PEBBLES_TYPE_NUMBER_SYSTEM (pebbles_number_system_get_type ())
#define _g_free0(var) (var = (g_free (var), NULL))
typedef enum  {
	PEBBLES_GLOBAL_WORD_LENGTH_QWD = 0,
	PEBBLES_GLOBAL_WORD_LENGTH_DWD = 1,
	PEBBLES_GLOBAL_WORD_LENGTH_WRD = 2,
	PEBBLES_GLOBAL_WORD_LENGTH_BYT = 3
} PebblesGlobalWordLength;

#define PEBBLES_TYPE_GLOBAL_WORD_LENGTH (pebbles_global_word_length_get_type ())

#define PEBBLES_TYPE_PROGRAMMER (pebbles_programmer_get_type ())
#define PEBBLES_PROGRAMMER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_PROGRAMMER, PebblesProgrammer))
#define PEBBLES_PROGRAMMER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_PROGRAMMER, PebblesProgrammerClass))
#define PEBBLES_IS_PROGRAMMER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_PROGRAMMER))
#define PEBBLES_IS_PROGRAMMER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_PROGRAMMER))
#define PEBBLES_PROGRAMMER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_PROGRAMMER, PebblesProgrammerClass))

typedef struct _PebblesProgrammer PebblesProgrammer;
typedef struct _PebblesProgrammerClass PebblesProgrammerClass;

#define PEBBLES_TYPE_SETTINGS (pebbles_settings_get_type ())
#define PEBBLES_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettings))
#define PEBBLES_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))
#define PEBBLES_IS_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_SETTINGS))
#define PEBBLES_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_SETTINGS, PebblesSettingsClass))

typedef struct _PebblesSettings PebblesSettings;
typedef struct _PebblesSettingsClass PebblesSettingsClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_CHAR_STACK (char_stack_get_type ())
#define CHAR_STACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CHAR_STACK, CharStack))
#define CHAR_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_CHAR_STACK, CharStackClass))
#define IS_CHAR_STACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CHAR_STACK))
#define IS_CHAR_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_CHAR_STACK))
#define CHAR_STACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CHAR_STACK, CharStackClass))

typedef struct _CharStack CharStack;
typedef struct _CharStackClass CharStackClass;

#define TYPE_BOOL_ARRAY_STACK (bool_array_stack_get_type ())
#define BOOL_ARRAY_STACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BOOL_ARRAY_STACK, BoolArrayStack))
#define BOOL_ARRAY_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_BOOL_ARRAY_STACK, BoolArrayStackClass))
#define IS_BOOL_ARRAY_STACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BOOL_ARRAY_STACK))
#define IS_BOOL_ARRAY_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_BOOL_ARRAY_STACK))
#define BOOL_ARRAY_STACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BOOL_ARRAY_STACK, BoolArrayStackClass))

typedef struct _BoolArrayStack BoolArrayStack;
typedef struct _BoolArrayStackClass BoolArrayStackClass;
typedef enum  {
	PEBBLES_WORD_SIZE_BYTE = 8,
	PEBBLES_WORD_SIZE_WORD = 16,
	PEBBLES_WORD_SIZE_DWORD = 32,
	PEBBLES_WORD_SIZE_QWORD = 64
} PebblesWordSize;

#define PEBBLES_TYPE_WORD_SIZE (pebbles_word_size_get_type ())
typedef struct _PebblesProgrammerPrivate PebblesProgrammerPrivate;
#define _pebbles_programmer_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_programmer_unref (var), NULL)))
#define _bool_array_stack_unref0(var) ((var == NULL) ? NULL : (var = (bool_array_stack_unref (var), NULL)))
#define _char_stack_unref0(var) ((var == NULL) ? NULL : (var = (char_stack_unref (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_regex_unref0(var) ((var == NULL) ? NULL : (var = (g_regex_unref (var), NULL)))
typedef struct _PebblesParamSpecProgrammerCalculator PebblesParamSpecProgrammerCalculator;

struct _PebblesProgrammerCalculator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PebblesProgrammerCalculatorPrivate * priv;
};

struct _PebblesProgrammerCalculatorClass {
	GTypeClass parent_class;
	void (*finalize) (PebblesProgrammerCalculator *self);
};

struct _PebblesProgrammerCalculatorToken {
	gchar* token;
	PebblesProgrammerCalculatorTokenType type;
	PebblesNumberSystem number_system;
};

struct _PebblesProgrammerCalculatorPrivate {
	PebblesProgrammerCalculatorToken* stored_tokens;
	gint stored_tokens_length1;
	gint _stored_tokens_size_;
};

typedef enum  {
	PEBBLES_CALC_ERROR_DIVIDE_BY_ZERO
} PebblesCalcError;
#define PEBBLES_CALC_ERROR pebbles_calc_error_quark ()
struct _PebblesProgrammer {
	GTypeInstance parent_instance;
	volatile int ref_count;
	PebblesProgrammerPrivate * priv;
	PebblesWordSize word_size;
	gboolean* output;
	gint output_length1;
	gboolean carry;
	gboolean aux_carry;
	gboolean f0;
	gboolean overflow_flag;
	gboolean parity_flag;
	gboolean zero_flag;
	gboolean negative_flag;
};

struct _PebblesProgrammerClass {
	GTypeClass parent_class;
	void (*finalize) (PebblesProgrammer *self);
};

struct _PebblesParamSpecProgrammerCalculator {
	GParamSpec parent_instance;
};

static gint PebblesProgrammerCalculator_private_offset;
static gpointer pebbles_programmer_calculator_parent_class = NULL;

gpointer pebbles_programmer_calculator_ref (gpointer instance);
void pebbles_programmer_calculator_unref (gpointer instance);
GParamSpec* pebbles_param_spec_programmer_calculator (const gchar* name,
                                                      const gchar* nick,
                                                      const gchar* blurb,
                                                      GType object_type,
                                                      GParamFlags flags);
void pebbles_value_set_programmer_calculator (GValue* value,
                                              gpointer v_object);
void pebbles_value_take_programmer_calculator (GValue* value,
                                               gpointer v_object);
gpointer pebbles_value_get_programmer_calculator (const GValue* value);
GType pebbles_programmer_calculator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesProgrammerCalculator, pebbles_programmer_calculator_unref)
GType pebbles_programmer_calculator_token_get_type (void) G_GNUC_CONST;
GType pebbles_programmer_calculator_token_type_get_type (void) G_GNUC_CONST;
GType pebbles_number_system_get_type (void) G_GNUC_CONST;
PebblesProgrammerCalculatorToken* pebbles_programmer_calculator_token_dup (const PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_free (PebblesProgrammerCalculatorToken* self);
void pebbles_programmer_calculator_token_copy (const PebblesProgrammerCalculatorToken* self,
                                               PebblesProgrammerCalculatorToken* dest);
void pebbles_programmer_calculator_token_destroy (PebblesProgrammerCalculatorToken* self);
static void _vala_PebblesProgrammerCalculatorToken_array_free (PebblesProgrammerCalculatorToken * array,
                                                        gint array_length);
PebblesProgrammerCalculator* pebbles_programmer_calculator_new (void);
PebblesProgrammerCalculator* pebbles_programmer_calculator_construct (GType object_type);
void pebbles_programmer_calculator_get_last_token (PebblesProgrammerCalculator* self,
                                                   PebblesProgrammerCalculatorToken* result);
PebblesProgrammerCalculatorToken* pebbles_programmer_calculator_get_token_array (PebblesProgrammerCalculator* self,
                                                                                 gint* result_length1);
static PebblesProgrammerCalculatorToken* _vala_array_dup18 (PebblesProgrammerCalculatorToken* self,
                                                     gint length);
GType pebbles_global_word_length_get_type (void) G_GNUC_CONST;
gchar* pebbles_programmer_calculator_set_last_token (PebblesProgrammerCalculator* self,
                                                     gboolean* arr,
                                                     gint arr_length1,
                                                     PebblesGlobalWordLength wrd_length,
                                                     PebblesNumberSystem number_system);
gchar* pebbles_programmer_calculator_bool_array_to_string (PebblesProgrammerCalculator* self,
                                                           gboolean* arr,
                                                           gint arr_length1,
                                                           PebblesGlobalWordLength wrd_length,
                                                           PebblesNumberSystem number_system);
gchar* pebbles_utils_get_natural_expression (const gchar* str);
void pebbles_programmer_calculator_populate_token_array (PebblesProgrammerCalculator* self,
                                                         const gchar* exp);
PebblesProgrammerCalculatorToken* pebbles_utils_get_token_array (const gchar* input_exp,
                                                                 gint* result_length1);
gchar* pebbles_programmer_calculator_token_to_string (PebblesProgrammerCalculatorToken *self);
gchar* pebbles_programmer_calculator_set_number_system (PebblesProgrammerCalculator* self,
                                                        const gchar* exp,
                                                        PebblesGlobalWordLength* wrd_length,
                                                        gboolean* force_decimal);
static gboolean pebbles_programmer_calculator_compare_token_set (PebblesProgrammerCalculator* self,
                                                          PebblesProgrammerCalculatorToken* a,
                                                          gint a_length1,
                                                          PebblesProgrammerCalculatorToken* b,
                                                          gint b_length1);
static gchar* pebbles_programmer_calculator_convert_number_system (PebblesProgrammerCalculator* self,
                                                            const gchar* exp,
                                                            PebblesNumberSystem number_system_a,
                                                            PebblesNumberSystem number_system_b,
                                                            PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_decimal_to_binary (PebblesProgrammerCalculator* self,
                                                                const gchar* number,
                                                                PebblesGlobalWordLength* wrd_length,
                                                                gboolean* format);
gchar* pebbles_programmer_calculator_convert_decimal_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                                     const gchar* number,
                                                                     PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_decimal_to_octal (PebblesProgrammerCalculator* self,
                                                               const gchar* dec_value,
                                                               PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_binary_to_decimal (PebblesProgrammerCalculator* self,
                                                                const gchar* number,
                                                                PebblesGlobalWordLength* wrd_length,
                                                                gboolean* negative);
gchar* pebbles_programmer_calculator_convert_binary_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                                    const gchar* bin_value,
                                                                    PebblesGlobalWordLength* wrd_length,
                                                                    gboolean* negative);
gchar* pebbles_programmer_calculator_convert_binary_to_octal (PebblesProgrammerCalculator* self,
                                                              const gchar* bin_value,
                                                              PebblesGlobalWordLength* wrd_length,
                                                              gboolean* negative);
gchar* pebbles_programmer_calculator_convert_hexadecimal_to_decimal (PebblesProgrammerCalculator* self,
                                                                     const gchar* number,
                                                                     PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_hexadecimal_to_binary (PebblesProgrammerCalculator* self,
                                                                    const gchar* hex_value,
                                                                    PebblesGlobalWordLength* wrd_length,
                                                                    gboolean* format);
gchar* pebbles_programmer_calculator_convert_hexadecimal_to_octal (PebblesProgrammerCalculator* self,
                                                                   const gchar* hex_value,
                                                                   PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_octal_to_decimal (PebblesProgrammerCalculator* self,
                                                               const gchar* oct_value,
                                                               PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_convert_octal_to_binary (PebblesProgrammerCalculator* self,
                                                              const gchar* oct_value,
                                                              PebblesGlobalWordLength* wrd_length,
                                                              gboolean* format);
gchar* pebbles_programmer_calculator_convert_octal_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                                   const gchar* oct_value,
                                                                   PebblesGlobalWordLength* wrd_length);
gchar* pebbles_programmer_calculator_represent_binary_by_word_length (PebblesProgrammerCalculator* self,
                                                                      const gchar* binary_value,
                                                                      PebblesGlobalWordLength wrd_length,
                                                                      gboolean* format);
gchar* pebbles_programmer_calculator_map_bin_to_hex (const gchar* bin);
static guint64 pebbles_programmer_calculator_pow64 (PebblesProgrammerCalculator* self,
                                             guint64 a,
                                             guint64 b);
static gboolean pebbles_programmer_calculator_has_precedence_pemdas (gchar op1,
                                                              gchar op2);
gpointer pebbles_programmer_ref (gpointer instance);
void pebbles_programmer_unref (gpointer instance);
GParamSpec* pebbles_param_spec_programmer (const gchar* name,
                                           const gchar* nick,
                                           const gchar* blurb,
                                           GType object_type,
                                           GParamFlags flags);
void pebbles_value_set_programmer (GValue* value,
                                   gpointer v_object);
void pebbles_value_take_programmer (GValue* value,
                                    gpointer v_object);
gpointer pebbles_value_get_programmer (const GValue* value);
GType pebbles_programmer_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesProgrammer, pebbles_programmer_unref)
GQuark pebbles_calc_error_quark (void);
gboolean* pebbles_programmer_calculator_apply_op (PebblesProgrammerCalculator* self,
                                                  PebblesProgrammer* prog_calc,
                                                  gchar op,
                                                  gboolean* a,
                                                  gint a_length1,
                                                  gboolean* b,
                                                  gint b_length1,
                                                  gint word_size,
                                                  gint* result_length1,
                                                  GError** error);
gboolean* pebbles_programmer_add (PebblesProgrammer* self,
                                  gboolean* input_a,
                                  gint input_a_length1,
                                  gboolean* input_b,
                                  gint input_b_length1,
                                  gint* word_size,
                                  gint* result_length1);
gboolean* pebbles_programmer_subtract (PebblesProgrammer* self,
                                       gboolean* input_a,
                                       gint input_a_length1,
                                       gboolean* input_b,
                                       gint input_b_length1,
                                       gint* word_size,
                                       gint* result_length1);
gchar* pebbles_programmer_multiply (PebblesProgrammer* self,
                                    gboolean* input_a,
                                    gint input_a_length1,
                                    gboolean* input_b,
                                    gint input_b_length1,
                                    gint* word_size);
gboolean* pebbles_programmer_calculator_string_to_bool_array (PebblesProgrammerCalculator* self,
                                                              const gchar* str,
                                                              PebblesNumberSystem number_system,
                                                              PebblesGlobalWordLength wrd_length,
                                                              gint* result_length1);
GType pebbles_settings_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesSettings, g_object_unref)
PebblesSettings* pebbles_settings_get_default (void);
PebblesGlobalWordLength pebbles_settings_get_global_word_length (PebblesSettings* self);
gchar* pebbles_programmer_division_signed_integer (PebblesProgrammer* self,
                                                   gboolean* input_a,
                                                   gint input_a_length1,
                                                   gboolean* input_b,
                                                   gint input_b_length1,
                                                   gint* word_size);
gboolean* pebbles_programmer_and (PebblesProgrammer* self,
                                  gboolean* input_a,
                                  gint input_a_length1,
                                  gboolean* input_b,
                                  gint input_b_length1,
                                  gint* word_size,
                                  gint* result_length1);
gboolean* pebbles_programmer_or (PebblesProgrammer* self,
                                 gboolean* input_a,
                                 gint input_a_length1,
                                 gboolean* input_b,
                                 gint input_b_length1,
                                 gint* word_size,
                                 gint* result_length1);
gboolean* pebbles_programmer_not (PebblesProgrammer* self,
                                  gboolean* input,
                                  gint input_length1,
                                  gint* word_size,
                                  gint* result_length1);
gboolean* pebbles_programmer_nand (PebblesProgrammer* self,
                                   gboolean* input_a,
                                   gint input_a_length1,
                                   gboolean* input_b,
                                   gint input_b_length1,
                                   gint* word_size,
                                   gint* result_length1);
gboolean* pebbles_programmer_nor (PebblesProgrammer* self,
                                  gboolean* input_a,
                                  gint input_a_length1,
                                  gboolean* input_b,
                                  gint input_b_length1,
                                  gint* word_size,
                                  gint* result_length1);
gboolean* pebbles_programmer_xor (PebblesProgrammer* self,
                                  gboolean* input_a,
                                  gint input_a_length1,
                                  gboolean* input_b,
                                  gint input_b_length1,
                                  gint* word_size,
                                  gint* result_length1);
gboolean* pebbles_programmer_xnor (PebblesProgrammer* self,
                                   gboolean* input_a,
                                   gint input_a_length1,
                                   gboolean* input_b,
                                   gint input_b_length1,
                                   gint* word_size,
                                   gint* result_length1);
gchar* pebbles_programmer_mod_signed_integer (PebblesProgrammer* self,
                                              gboolean* input_a,
                                              gint input_a_length1,
                                              gboolean* input_b,
                                              gint input_b_length1,
                                              gint* word_size);
gboolean* pebbles_programmer_left_shift (PebblesProgrammer* self,
                                         gboolean* input_a,
                                         gint input_a_length1,
                                         gboolean* input_b,
                                         gint input_b_length1,
                                         gboolean fill_bits,
                                         gint* word_size,
                                         gint* result_length1);
gboolean* pebbles_programmer_right_shift (PebblesProgrammer* self,
                                          gboolean* input_a,
                                          gint input_a_length1,
                                          gboolean* input_b,
                                          gint input_b_length1,
                                          gboolean fill_bits,
                                          gint* word_size,
                                          gint* result_length1);
gchar* pebbles_programmer_calculator_evaluate_exp (PebblesProgrammerCalculator* self,
                                                   PebblesGlobalWordLength* wrd_length,
                                                   PebblesNumberSystem number_system,
                                                   gboolean** output_array,
                                                   gint* output_array_length1,
                                                   GError** error);
gpointer char_stack_ref (gpointer instance);
void char_stack_unref (gpointer instance);
GParamSpec* param_spec_char_stack (const gchar* name,
                                   const gchar* nick,
                                   const gchar* blurb,
                                   GType object_type,
                                   GParamFlags flags);
void value_set_char_stack (GValue* value,
                           gpointer v_object);
void value_take_char_stack (GValue* value,
                            gpointer v_object);
gpointer value_get_char_stack (const GValue* value);
GType char_stack_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CharStack, char_stack_unref)
CharStack* char_stack_new (gint num);
CharStack* char_stack_construct (GType object_type,
                                 gint num);
gpointer bool_array_stack_ref (gpointer instance);
void bool_array_stack_unref (gpointer instance);
GParamSpec* param_spec_bool_array_stack (const gchar* name,
                                         const gchar* nick,
                                         const gchar* blurb,
                                         GType object_type,
                                         GParamFlags flags);
void value_set_bool_array_stack (GValue* value,
                                 gpointer v_object);
void value_take_bool_array_stack (GValue* value,
                                  gpointer v_object);
gpointer value_get_bool_array_stack (const GValue* value);
GType bool_array_stack_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BoolArrayStack, bool_array_stack_unref)
BoolArrayStack* bool_array_stack_new (gint num);
BoolArrayStack* bool_array_stack_construct (GType object_type,
                                            gint num);
PebblesProgrammer* pebbles_programmer_new (void);
PebblesProgrammer* pebbles_programmer_construct (GType object_type);
GType pebbles_word_size_get_type (void) G_GNUC_CONST;
gboolean bool_array_stack_push (BoolArrayStack* self,
                                gboolean* elem,
                                gint elem_length1);
gboolean char_stack_push (CharStack* self,
                          gchar elem);
gchar char_stack_peek (CharStack* self);
gchar char_stack_pop (CharStack* self);
gboolean* bool_array_stack_pop (BoolArrayStack* self,
                                gint* result_length1);
gboolean char_stack_empty (CharStack* self);
static gboolean* _vala_array_dup19 (gboolean* self,
                             gint length);
static void pebbles_programmer_calculator_finalize (PebblesProgrammerCalculator * obj);
static GType pebbles_programmer_calculator_get_type_once (void);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);

static const gchar PEBBLES_PROGRAMMER_CALCULATOR_HEXADECIMAL_DIGITS[6] = {'a', 'b', 'c', 'd', 'e', 'f'};

static inline gpointer
pebbles_programmer_calculator_get_instance_private (PebblesProgrammerCalculator* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesProgrammerCalculator_private_offset);
}

static GType
pebbles_programmer_calculator_token_type_get_type_once (void)
{
	static const GEnumValue values[] = {{PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR, "PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR", "operator"}, {PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND, "PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND", "operand"}, {PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS, "PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS", "parenthesis"}, {0, NULL, NULL}};
	GType pebbles_programmer_calculator_token_type_type_id;
	pebbles_programmer_calculator_token_type_type_id = g_enum_register_static ("PebblesProgrammerCalculatorTokenType", values);
	return pebbles_programmer_calculator_token_type_type_id;
}

GType
pebbles_programmer_calculator_token_type_get_type (void)
{
	static volatile gsize pebbles_programmer_calculator_token_type_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_programmer_calculator_token_type_type_id__volatile)) {
		GType pebbles_programmer_calculator_token_type_type_id;
		pebbles_programmer_calculator_token_type_type_id = pebbles_programmer_calculator_token_type_get_type_once ();
		g_once_init_leave (&pebbles_programmer_calculator_token_type_type_id__volatile, pebbles_programmer_calculator_token_type_type_id);
	}
	return pebbles_programmer_calculator_token_type_type_id__volatile;
}

static void
_vala_PebblesProgrammerCalculatorToken_array_free (PebblesProgrammerCalculatorToken * array,
                                                   gint array_length)
{
#line 67 "../src/Core/ProgrammerCalculator.vala"
	if (array != NULL) {
#line 528 "ProgrammerCalculator.c"
		gint i;
#line 67 "../src/Core/ProgrammerCalculator.vala"
		for (i = 0; i < array_length; i = i + 1) {
#line 67 "../src/Core/ProgrammerCalculator.vala"
			pebbles_programmer_calculator_token_destroy (&array[i]);
#line 534 "ProgrammerCalculator.c"
		}
	}
#line 67 "../src/Core/ProgrammerCalculator.vala"
	g_free (array);
#line 539 "ProgrammerCalculator.c"
}

PebblesProgrammerCalculator*
pebbles_programmer_calculator_construct (GType object_type)
{
	PebblesProgrammerCalculator* self = NULL;
	PebblesProgrammerCalculatorToken* _tmp0_;
	PebblesProgrammerCalculatorToken* _tmp1_;
	gint _tmp1__length1;
	PebblesProgrammerCalculatorToken _tmp2_ = {0};
	PebblesProgrammerCalculatorToken* _tmp3_;
	gint _tmp3__length1;
	gchar* _tmp4_;
	PebblesProgrammerCalculatorToken* _tmp5_;
	gint _tmp5__length1;
	PebblesProgrammerCalculatorToken* _tmp6_;
	gint _tmp6__length1;
#line 69 "../src/Core/ProgrammerCalculator.vala"
	self = (PebblesProgrammerCalculator*) g_type_create_instance (object_type);
#line 70 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_new0 (PebblesProgrammerCalculatorToken, 1);
#line 70 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens = (_vala_PebblesProgrammerCalculatorToken_array_free (self->priv->stored_tokens, self->priv->stored_tokens_length1), NULL);
#line 70 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens = _tmp0_;
#line 70 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens_length1 = 1;
#line 70 "../src/Core/ProgrammerCalculator.vala"
	self->priv->_stored_tokens_size_ = self->priv->stored_tokens_length1;
#line 71 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = self->priv->stored_tokens;
#line 71 "../src/Core/ProgrammerCalculator.vala"
	_tmp1__length1 = self->priv->stored_tokens_length1;
#line 71 "../src/Core/ProgrammerCalculator.vala"
	memset (&_tmp2_, 0, sizeof (PebblesProgrammerCalculatorToken));
#line 71 "../src/Core/ProgrammerCalculator.vala"
	pebbles_programmer_calculator_token_destroy (&_tmp1_[0]);
#line 71 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_[0] = _tmp2_;
#line 72 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = self->priv->stored_tokens;
#line 72 "../src/Core/ProgrammerCalculator.vala"
	_tmp3__length1 = self->priv->stored_tokens_length1;
#line 72 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = g_strdup ("0");
#line 72 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp3_[0].token);
#line 72 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_[0].token = _tmp4_;
#line 73 "../src/Core/ProgrammerCalculator.vala"
	_tmp5_ = self->priv->stored_tokens;
#line 73 "../src/Core/ProgrammerCalculator.vala"
	_tmp5__length1 = self->priv->stored_tokens_length1;
#line 73 "../src/Core/ProgrammerCalculator.vala"
	_tmp5_[0].number_system = PEBBLES_NUMBER_SYSTEM_DECIMAL;
#line 74 "../src/Core/ProgrammerCalculator.vala"
	_tmp6_ = self->priv->stored_tokens;
#line 74 "../src/Core/ProgrammerCalculator.vala"
	_tmp6__length1 = self->priv->stored_tokens_length1;
#line 74 "../src/Core/ProgrammerCalculator.vala"
	_tmp6_[0].type = PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND;
#line 69 "../src/Core/ProgrammerCalculator.vala"
	return self;
#line 603 "ProgrammerCalculator.c"
}

PebblesProgrammerCalculator*
pebbles_programmer_calculator_new (void)
{
#line 69 "../src/Core/ProgrammerCalculator.vala"
	return pebbles_programmer_calculator_construct (PEBBLES_TYPE_PROGRAMMER_CALCULATOR);
#line 611 "ProgrammerCalculator.c"
}

void
pebbles_programmer_calculator_get_last_token (PebblesProgrammerCalculator* self,
                                              PebblesProgrammerCalculatorToken* result)
{
	PebblesProgrammerCalculatorToken* _tmp0_;
	gint _tmp0__length1;
	PebblesProgrammerCalculatorToken* _tmp1_;
	gint _tmp1__length1;
	PebblesProgrammerCalculatorToken* _tmp2_;
	gint _tmp2__length1;
	PebblesProgrammerCalculatorToken _tmp3_;
	PebblesProgrammerCalculatorToken _tmp4_;
	PebblesProgrammerCalculatorToken _tmp5_ = {0};
#line 77 "../src/Core/ProgrammerCalculator.vala"
	g_return_if_fail (self != NULL);
#line 78 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = self->priv->stored_tokens;
#line 78 "../src/Core/ProgrammerCalculator.vala"
	_tmp0__length1 = self->priv->stored_tokens_length1;
#line 78 "../src/Core/ProgrammerCalculator.vala"
	g_print ("%d\n", _tmp0__length1);
#line 79 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = self->priv->stored_tokens;
#line 79 "../src/Core/ProgrammerCalculator.vala"
	_tmp1__length1 = self->priv->stored_tokens_length1;
#line 79 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = self->priv->stored_tokens;
#line 79 "../src/Core/ProgrammerCalculator.vala"
	_tmp2__length1 = self->priv->stored_tokens_length1;
#line 79 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = _tmp1_[_tmp2__length1 - 1];
#line 79 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = _tmp3_;
#line 79 "../src/Core/ProgrammerCalculator.vala"
	pebbles_programmer_calculator_token_copy (&_tmp4_, &_tmp5_);
#line 79 "../src/Core/ProgrammerCalculator.vala"
	*result = _tmp5_;
#line 79 "../src/Core/ProgrammerCalculator.vala"
	return;
#line 653 "ProgrammerCalculator.c"
}

static PebblesProgrammerCalculatorToken*
_vala_array_dup18 (PebblesProgrammerCalculatorToken* self,
                   gint length)
{
#line 83 "../src/Core/ProgrammerCalculator.vala"
	if (length > 0) {
#line 662 "ProgrammerCalculator.c"
		PebblesProgrammerCalculatorToken* result;
		gint i;
#line 83 "../src/Core/ProgrammerCalculator.vala"
		result = g_new0 (PebblesProgrammerCalculatorToken, length);
#line 83 "../src/Core/ProgrammerCalculator.vala"
		for (i = 0; i < length; i++) {
#line 669 "ProgrammerCalculator.c"
			PebblesProgrammerCalculatorToken _tmp0_;
			PebblesProgrammerCalculatorToken _tmp1_ = {0};
#line 83 "../src/Core/ProgrammerCalculator.vala"
			_tmp0_ = self[i];
#line 83 "../src/Core/ProgrammerCalculator.vala"
			pebbles_programmer_calculator_token_copy (&_tmp0_, &_tmp1_);
#line 83 "../src/Core/ProgrammerCalculator.vala"
			result[i] = _tmp1_;
#line 678 "ProgrammerCalculator.c"
		}
#line 83 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 682 "ProgrammerCalculator.c"
	}
#line 83 "../src/Core/ProgrammerCalculator.vala"
	return NULL;
#line 686 "ProgrammerCalculator.c"
}

PebblesProgrammerCalculatorToken*
pebbles_programmer_calculator_get_token_array (PebblesProgrammerCalculator* self,
                                               gint* result_length1)
{
	PebblesProgrammerCalculatorToken* _tmp0_;
	gint _tmp0__length1;
	PebblesProgrammerCalculatorToken* _tmp1_;
	gint _tmp1__length1;
	PebblesProgrammerCalculatorToken* _tmp2_;
	gint _tmp2__length1;
	PebblesProgrammerCalculatorToken* result = NULL;
#line 82 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 83 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = self->priv->stored_tokens;
#line 83 "../src/Core/ProgrammerCalculator.vala"
	_tmp0__length1 = self->priv->stored_tokens_length1;
#line 83 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = (_tmp0_ != NULL) ? _vala_array_dup18 (_tmp0_, _tmp0__length1) : ((gpointer) _tmp0_);
#line 83 "../src/Core/ProgrammerCalculator.vala"
	_tmp1__length1 = _tmp0__length1;
#line 83 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = _tmp1_;
#line 83 "../src/Core/ProgrammerCalculator.vala"
	_tmp2__length1 = _tmp1__length1;
#line 83 "../src/Core/ProgrammerCalculator.vala"
	if (result_length1) {
#line 83 "../src/Core/ProgrammerCalculator.vala"
		*result_length1 = _tmp2__length1;
#line 718 "ProgrammerCalculator.c"
	}
#line 83 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp2_;
#line 83 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 724 "ProgrammerCalculator.c"
}

static gchar*
_vala_g_strjoinv (const gchar* separator,
                  gchar** str_array,
                  gint str_array_length1)
{
	gboolean _tmp0_ = FALSE;
	gchar* result = NULL;
#line 1200 "glib-2.0.vapi"
	if (separator == NULL) {
#line 1201 "glib-2.0.vapi"
		separator = "";
#line 738 "ProgrammerCalculator.c"
	}
#line 1203 "glib-2.0.vapi"
	if (str_array != NULL) {
#line 742 "ProgrammerCalculator.c"
		gboolean _tmp1_ = FALSE;
#line 1203 "glib-2.0.vapi"
		if (str_array_length1 > 0) {
#line 1203 "glib-2.0.vapi"
			_tmp1_ = TRUE;
#line 748 "ProgrammerCalculator.c"
		} else {
			gboolean _tmp2_ = FALSE;
#line 1203 "glib-2.0.vapi"
			if (str_array_length1 == -1) {
#line 753 "ProgrammerCalculator.c"
				const gchar* _tmp3_;
#line 1203 "glib-2.0.vapi"
				_tmp3_ = str_array[0];
#line 1203 "glib-2.0.vapi"
				_tmp2_ = _tmp3_ != NULL;
#line 759 "ProgrammerCalculator.c"
			} else {
#line 1203 "glib-2.0.vapi"
				_tmp2_ = FALSE;
#line 763 "ProgrammerCalculator.c"
			}
#line 1203 "glib-2.0.vapi"
			_tmp1_ = _tmp2_;
#line 767 "ProgrammerCalculator.c"
		}
#line 1203 "glib-2.0.vapi"
		_tmp0_ = _tmp1_;
#line 771 "ProgrammerCalculator.c"
	} else {
#line 1203 "glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 775 "ProgrammerCalculator.c"
	}
#line 1203 "glib-2.0.vapi"
	if (_tmp0_) {
#line 779 "ProgrammerCalculator.c"
		gint i = 0;
		gsize len = 0UL;
		gint _tmp16_;
		gint _tmp17_;
		const gchar* res = NULL;
		void* _tmp18_;
		void* ptr = NULL;
		const gchar* _tmp19_;
		const gchar* _tmp20_;
		void* _tmp21_;
		const gchar* _tmp31_;
#line 1205 "glib-2.0.vapi"
		len = (gsize) 1;
#line 793 "ProgrammerCalculator.c"
		{
			gboolean _tmp4_ = FALSE;
#line 1206 "glib-2.0.vapi"
			i = 0;
#line 1206 "glib-2.0.vapi"
			_tmp4_ = TRUE;
#line 1206 "glib-2.0.vapi"
			while (TRUE) {
#line 802 "ProgrammerCalculator.c"
				gboolean _tmp6_ = FALSE;
				gboolean _tmp7_ = FALSE;
				gint _tmp10_ = 0;
				const gchar* _tmp11_;
#line 1206 "glib-2.0.vapi"
				if (!_tmp4_) {
#line 809 "ProgrammerCalculator.c"
					gint _tmp5_;
#line 1206 "glib-2.0.vapi"
					_tmp5_ = i;
#line 1206 "glib-2.0.vapi"
					i = _tmp5_ + 1;
#line 815 "ProgrammerCalculator.c"
				}
#line 1206 "glib-2.0.vapi"
				_tmp4_ = FALSE;
#line 1206 "glib-2.0.vapi"
				if (str_array_length1 != -1) {
#line 1206 "glib-2.0.vapi"
					_tmp7_ = i < str_array_length1;
#line 823 "ProgrammerCalculator.c"
				} else {
#line 1206 "glib-2.0.vapi"
					_tmp7_ = FALSE;
#line 827 "ProgrammerCalculator.c"
				}
#line 1206 "glib-2.0.vapi"
				if (_tmp7_) {
#line 1206 "glib-2.0.vapi"
					_tmp6_ = TRUE;
#line 833 "ProgrammerCalculator.c"
				} else {
					gboolean _tmp8_ = FALSE;
#line 1206 "glib-2.0.vapi"
					if (str_array_length1 == -1) {
#line 838 "ProgrammerCalculator.c"
						const gchar* _tmp9_;
#line 1206 "glib-2.0.vapi"
						_tmp9_ = str_array[i];
#line 1206 "glib-2.0.vapi"
						_tmp8_ = _tmp9_ != NULL;
#line 844 "ProgrammerCalculator.c"
					} else {
#line 1206 "glib-2.0.vapi"
						_tmp8_ = FALSE;
#line 848 "ProgrammerCalculator.c"
					}
#line 1206 "glib-2.0.vapi"
					_tmp6_ = _tmp8_;
#line 852 "ProgrammerCalculator.c"
				}
#line 1206 "glib-2.0.vapi"
				if (!_tmp6_) {
#line 1206 "glib-2.0.vapi"
					break;
#line 858 "ProgrammerCalculator.c"
				}
#line 1207 "glib-2.0.vapi"
				_tmp11_ = str_array[i];
#line 1207 "glib-2.0.vapi"
				if (_tmp11_ != NULL) {
#line 864 "ProgrammerCalculator.c"
					const gchar* _tmp12_;
					gint _tmp13_;
					gint _tmp14_;
#line 1207 "glib-2.0.vapi"
					_tmp12_ = str_array[i];
#line 1207 "glib-2.0.vapi"
					_tmp13_ = strlen ((const gchar*) _tmp12_);
#line 1207 "glib-2.0.vapi"
					_tmp14_ = _tmp13_;
#line 1207 "glib-2.0.vapi"
					_tmp10_ = _tmp14_;
#line 876 "ProgrammerCalculator.c"
				} else {
#line 1207 "glib-2.0.vapi"
					_tmp10_ = 0;
#line 880 "ProgrammerCalculator.c"
				}
#line 1207 "glib-2.0.vapi"
				len += (gsize) _tmp10_;
#line 884 "ProgrammerCalculator.c"
			}
		}
#line 1209 "glib-2.0.vapi"
		if (i == 0) {
#line 889 "ProgrammerCalculator.c"
			gchar* _tmp15_;
#line 1210 "glib-2.0.vapi"
			_tmp15_ = g_strdup ("");
#line 1210 "glib-2.0.vapi"
			result = _tmp15_;
#line 1210 "glib-2.0.vapi"
			return result;
#line 897 "ProgrammerCalculator.c"
		}
#line 1212 "glib-2.0.vapi"
		str_array_length1 = i;
#line 1213 "glib-2.0.vapi"
		_tmp16_ = strlen ((const gchar*) separator);
#line 1213 "glib-2.0.vapi"
		_tmp17_ = _tmp16_;
#line 1213 "glib-2.0.vapi"
		len += (gsize) (_tmp17_ * (i - 1));
#line 1215 "glib-2.0.vapi"
		_tmp18_ = g_malloc (len);
#line 1215 "glib-2.0.vapi"
		res = _tmp18_;
#line 1216 "glib-2.0.vapi"
		_tmp19_ = res;
#line 1216 "glib-2.0.vapi"
		_tmp20_ = str_array[0];
#line 1216 "glib-2.0.vapi"
		_tmp21_ = g_stpcpy ((void*) _tmp19_, (const gchar*) _tmp20_);
#line 1216 "glib-2.0.vapi"
		ptr = _tmp21_;
#line 919 "ProgrammerCalculator.c"
		{
			gboolean _tmp22_ = FALSE;
#line 1217 "glib-2.0.vapi"
			i = 1;
#line 1217 "glib-2.0.vapi"
			_tmp22_ = TRUE;
#line 1217 "glib-2.0.vapi"
			while (TRUE) {
#line 928 "ProgrammerCalculator.c"
				void* _tmp24_;
				void* _tmp25_;
				const gchar* _tmp26_ = NULL;
				const gchar* _tmp27_;
				void* _tmp29_;
				void* _tmp30_;
#line 1217 "glib-2.0.vapi"
				if (!_tmp22_) {
#line 937 "ProgrammerCalculator.c"
					gint _tmp23_;
#line 1217 "glib-2.0.vapi"
					_tmp23_ = i;
#line 1217 "glib-2.0.vapi"
					i = _tmp23_ + 1;
#line 943 "ProgrammerCalculator.c"
				}
#line 1217 "glib-2.0.vapi"
				_tmp22_ = FALSE;
#line 1217 "glib-2.0.vapi"
				if (!(i < str_array_length1)) {
#line 1217 "glib-2.0.vapi"
					break;
#line 951 "ProgrammerCalculator.c"
				}
#line 1218 "glib-2.0.vapi"
				_tmp24_ = ptr;
#line 1218 "glib-2.0.vapi"
				_tmp25_ = g_stpcpy (_tmp24_, (const gchar*) separator);
#line 1218 "glib-2.0.vapi"
				ptr = _tmp25_;
#line 1219 "glib-2.0.vapi"
				_tmp27_ = str_array[i];
#line 1219 "glib-2.0.vapi"
				if (_tmp27_ != NULL) {
#line 963 "ProgrammerCalculator.c"
					const gchar* _tmp28_;
#line 1219 "glib-2.0.vapi"
					_tmp28_ = str_array[i];
#line 1219 "glib-2.0.vapi"
					_tmp26_ = (const gchar*) _tmp28_;
#line 969 "ProgrammerCalculator.c"
				} else {
#line 1219 "glib-2.0.vapi"
					_tmp26_ = "";
#line 973 "ProgrammerCalculator.c"
				}
#line 1219 "glib-2.0.vapi"
				_tmp29_ = ptr;
#line 1219 "glib-2.0.vapi"
				_tmp30_ = g_stpcpy (_tmp29_, _tmp26_);
#line 1219 "glib-2.0.vapi"
				ptr = _tmp30_;
#line 981 "ProgrammerCalculator.c"
			}
		}
#line 1222 "glib-2.0.vapi"
		_tmp31_ = res;
#line 1222 "glib-2.0.vapi"
		res = NULL;
#line 1222 "glib-2.0.vapi"
		result = (gchar*) _tmp31_;
#line 1222 "glib-2.0.vapi"
		return result;
#line 992 "ProgrammerCalculator.c"
	} else {
		gchar* _tmp32_;
#line 1224 "glib-2.0.vapi"
		_tmp32_ = g_strdup ("");
#line 1224 "glib-2.0.vapi"
		result = _tmp32_;
#line 1224 "glib-2.0.vapi"
		return result;
#line 1001 "ProgrammerCalculator.c"
	}
}

gchar*
pebbles_programmer_calculator_set_last_token (PebblesProgrammerCalculator* self,
                                              gboolean* arr,
                                              gint arr_length1,
                                              PebblesGlobalWordLength wrd_length,
                                              PebblesNumberSystem number_system)
{
	PebblesProgrammerCalculatorToken* _tmp0_;
	gint _tmp0__length1;
	PebblesProgrammerCalculatorToken* _tmp1_;
	gint _tmp1__length1;
	PebblesProgrammerCalculatorToken _tmp2_;
	PebblesProgrammerCalculatorTokenType _tmp3_;
	PebblesProgrammerCalculatorToken* _tmp6_;
	gint _tmp6__length1;
	PebblesProgrammerCalculatorToken* _tmp7_;
	gint _tmp7__length1;
	gchar* _tmp8_;
	gchar** token_list = NULL;
	PebblesProgrammerCalculatorToken* _tmp9_;
	gint _tmp9__length1;
	gchar** _tmp10_;
	gint token_list_length1;
	gint _token_list_size_;
	gchar** _tmp19_;
	gint _tmp19__length1;
	gchar* _tmp20_;
	gchar* _tmp21_;
	gchar* _tmp22_;
	gchar* _tmp23_;
	gchar* result = NULL;
#line 86 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 87 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = self->priv->stored_tokens;
#line 87 "../src/Core/ProgrammerCalculator.vala"
	_tmp0__length1 = self->priv->stored_tokens_length1;
#line 87 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = self->priv->stored_tokens;
#line 87 "../src/Core/ProgrammerCalculator.vala"
	_tmp1__length1 = self->priv->stored_tokens_length1;
#line 87 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = _tmp0_[_tmp1__length1 - 1];
#line 87 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = _tmp2_.type;
#line 87 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp3_ != PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND) {
#line 1052 "ProgrammerCalculator.c"
		PebblesProgrammerCalculatorToken* _tmp4_;
		gint _tmp4__length1;
		gint _tmp5_;
#line 88 "../src/Core/ProgrammerCalculator.vala"
		_tmp4_ = self->priv->stored_tokens;
#line 88 "../src/Core/ProgrammerCalculator.vala"
		_tmp4__length1 = self->priv->stored_tokens_length1;
#line 88 "../src/Core/ProgrammerCalculator.vala"
		_tmp5_ = _tmp4__length1 + 1;
#line 88 "../src/Core/ProgrammerCalculator.vala"
		self->priv->stored_tokens = g_renew (PebblesProgrammerCalculatorToken, self->priv->stored_tokens, _tmp4__length1 + 1);
#line 88 "../src/Core/ProgrammerCalculator.vala"
		(_tmp5_ > self->priv->stored_tokens_length1) ? memset (self->priv->stored_tokens + self->priv->stored_tokens_length1, 0, sizeof (PebblesProgrammerCalculatorToken) * (_tmp5_ - self->priv->stored_tokens_length1)) : NULL;
#line 88 "../src/Core/ProgrammerCalculator.vala"
		self->priv->stored_tokens_length1 = _tmp5_;
#line 88 "../src/Core/ProgrammerCalculator.vala"
		self->priv->_stored_tokens_size_ = _tmp5_;
#line 1070 "ProgrammerCalculator.c"
	}
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_tmp6_ = self->priv->stored_tokens;
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_tmp6__length1 = self->priv->stored_tokens_length1;
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_tmp7_ = self->priv->stored_tokens;
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_tmp7__length1 = self->priv->stored_tokens_length1;
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_tmp8_ = pebbles_programmer_calculator_bool_array_to_string (self, arr, (gint) arr_length1, wrd_length, number_system);
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp6_[_tmp7__length1 - 1].token);
#line 90 "../src/Core/ProgrammerCalculator.vala"
	_tmp6_[_tmp7__length1 - 1].token = _tmp8_;
#line 91 "../src/Core/ProgrammerCalculator.vala"
	_tmp9_ = self->priv->stored_tokens;
#line 91 "../src/Core/ProgrammerCalculator.vala"
	_tmp9__length1 = self->priv->stored_tokens_length1;
#line 91 "../src/Core/ProgrammerCalculator.vala"
	_tmp10_ = g_new0 (gchar*, _tmp9__length1 + 1);
#line 91 "../src/Core/ProgrammerCalculator.vala"
	token_list = _tmp10_;
#line 91 "../src/Core/ProgrammerCalculator.vala"
	token_list_length1 = _tmp9__length1;
#line 91 "../src/Core/ProgrammerCalculator.vala"
	_token_list_size_ = token_list_length1;
#line 1098 "ProgrammerCalculator.c"
	{
		gint i = 0;
#line 92 "../src/Core/ProgrammerCalculator.vala"
		i = 0;
#line 1103 "ProgrammerCalculator.c"
		{
			gboolean _tmp11_ = FALSE;
#line 92 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = TRUE;
#line 92 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 1110 "ProgrammerCalculator.c"
				PebblesProgrammerCalculatorToken* _tmp13_;
				gint _tmp13__length1;
				gchar** _tmp14_;
				gint _tmp14__length1;
				PebblesProgrammerCalculatorToken* _tmp15_;
				gint _tmp15__length1;
				PebblesProgrammerCalculatorToken _tmp16_;
				const gchar* _tmp17_;
				gchar* _tmp18_;
#line 92 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp11_) {
#line 1122 "ProgrammerCalculator.c"
					gint _tmp12_;
#line 92 "../src/Core/ProgrammerCalculator.vala"
					_tmp12_ = i;
#line 92 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp12_ + 1;
#line 1128 "ProgrammerCalculator.c"
				}
#line 92 "../src/Core/ProgrammerCalculator.vala"
				_tmp11_ = FALSE;
#line 92 "../src/Core/ProgrammerCalculator.vala"
				_tmp13_ = self->priv->stored_tokens;
#line 92 "../src/Core/ProgrammerCalculator.vala"
				_tmp13__length1 = self->priv->stored_tokens_length1;
#line 92 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < _tmp13__length1)) {
#line 92 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 1140 "ProgrammerCalculator.c"
				}
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_ = token_list;
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp14__length1 = token_list_length1;
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp15_ = self->priv->stored_tokens;
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp15__length1 = self->priv->stored_tokens_length1;
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp16_ = _tmp15_[i];
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp17_ = _tmp16_.token;
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp18_ = g_strdup (_tmp17_);
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (_tmp14_[i]);
#line 93 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_[i] = _tmp18_;
#line 1160 "ProgrammerCalculator.c"
			}
		}
	}
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_tmp19_ = token_list;
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_tmp19__length1 = token_list_length1;
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_tmp20_ = _vala_g_strjoinv (" ", _tmp19_, (gint) _tmp19__length1);
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_tmp21_ = _tmp20_;
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_tmp22_ = pebbles_utils_get_natural_expression (_tmp21_);
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_tmp23_ = _tmp22_;
#line 95 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp21_);
#line 95 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp23_;
#line 95 "../src/Core/ProgrammerCalculator.vala"
	token_list = (_vala_array_free (token_list, token_list_length1, (GDestroyNotify) g_free), NULL);
#line 95 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 1184 "ProgrammerCalculator.c"
}

void
pebbles_programmer_calculator_populate_token_array (PebblesProgrammerCalculator* self,
                                                    const gchar* exp)
{
	gint _tmp0_ = 0;
	PebblesProgrammerCalculatorToken* _tmp1_;
#line 98 "../src/Core/ProgrammerCalculator.vala"
	g_return_if_fail (self != NULL);
#line 98 "../src/Core/ProgrammerCalculator.vala"
	g_return_if_fail (exp != NULL);
#line 99 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_utils_get_token_array (exp, &_tmp0_);
#line 99 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens = (_vala_PebblesProgrammerCalculatorToken_array_free (self->priv->stored_tokens, self->priv->stored_tokens_length1), NULL);
#line 99 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens = _tmp1_;
#line 99 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens_length1 = _tmp0_;
#line 99 "../src/Core/ProgrammerCalculator.vala"
	self->priv->_stored_tokens_size_ = self->priv->stored_tokens_length1;
#line 1207 "ProgrammerCalculator.c"
	{
		gint i = 0;
#line 100 "../src/Core/ProgrammerCalculator.vala"
		i = 0;
#line 1212 "ProgrammerCalculator.c"
		{
			gboolean _tmp2_ = FALSE;
#line 100 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = TRUE;
#line 100 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 1219 "ProgrammerCalculator.c"
				PebblesProgrammerCalculatorToken* _tmp4_;
				gint _tmp4__length1;
				PebblesProgrammerCalculatorToken* _tmp5_;
				gint _tmp5__length1;
				gchar* _tmp6_;
				gchar* _tmp7_;
#line 100 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp2_) {
#line 1228 "ProgrammerCalculator.c"
					gint _tmp3_;
#line 100 "../src/Core/ProgrammerCalculator.vala"
					_tmp3_ = i;
#line 100 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp3_ + 1;
#line 1234 "ProgrammerCalculator.c"
				}
#line 100 "../src/Core/ProgrammerCalculator.vala"
				_tmp2_ = FALSE;
#line 100 "../src/Core/ProgrammerCalculator.vala"
				_tmp4_ = self->priv->stored_tokens;
#line 100 "../src/Core/ProgrammerCalculator.vala"
				_tmp4__length1 = self->priv->stored_tokens_length1;
#line 100 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < _tmp4__length1)) {
#line 100 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 1246 "ProgrammerCalculator.c"
				}
#line 101 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = self->priv->stored_tokens;
#line 101 "../src/Core/ProgrammerCalculator.vala"
				_tmp5__length1 = self->priv->stored_tokens_length1;
#line 101 "../src/Core/ProgrammerCalculator.vala"
				_tmp6_ = pebbles_programmer_calculator_token_to_string (&_tmp5_[i]);
#line 101 "../src/Core/ProgrammerCalculator.vala"
				_tmp7_ = _tmp6_;
#line 101 "../src/Core/ProgrammerCalculator.vala"
				g_print ("%s\n", _tmp7_);
#line 101 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (_tmp7_);
#line 1260 "ProgrammerCalculator.c"
			}
		}
	}
#line 103 "../src/Core/ProgrammerCalculator.vala"
	g_print ("\n");
#line 1266 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_set_number_system (PebblesProgrammerCalculator* self,
                                                 const gchar* exp,
                                                 PebblesGlobalWordLength* wrd_length,
                                                 gboolean* force_decimal)
{
	PebblesProgrammerCalculatorToken* token_structure = NULL;
	gint _tmp0_ = 0;
	PebblesProgrammerCalculatorToken* _tmp1_;
	gint token_structure_length1;
	gint _token_structure_size_;
	PebblesProgrammerCalculatorToken* _tmp2_;
	gint _tmp2__length1;
	PebblesProgrammerCalculatorToken* _tmp3_;
	gint _tmp3__length1;
	gchar** token_list = NULL;
	PebblesProgrammerCalculatorToken* _tmp28_;
	gint _tmp28__length1;
	gchar** _tmp29_;
	gint token_list_length1;
	gint _token_list_size_;
	gchar** _tmp38_;
	gint _tmp38__length1;
	gchar* _tmp39_;
	gchar* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	gchar* result = NULL;
#line 105 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 105 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (exp != NULL, NULL);
#line 106 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_utils_get_token_array (exp, &_tmp0_);
#line 106 "../src/Core/ProgrammerCalculator.vala"
	token_structure = _tmp1_;
#line 106 "../src/Core/ProgrammerCalculator.vala"
	token_structure_length1 = _tmp0_;
#line 106 "../src/Core/ProgrammerCalculator.vala"
	_token_structure_size_ = token_structure_length1;
#line 107 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = token_structure;
#line 107 "../src/Core/ProgrammerCalculator.vala"
	_tmp2__length1 = token_structure_length1;
#line 107 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = self->priv->stored_tokens;
#line 107 "../src/Core/ProgrammerCalculator.vala"
	_tmp3__length1 = self->priv->stored_tokens_length1;
#line 107 "../src/Core/ProgrammerCalculator.vala"
	if (pebbles_programmer_calculator_compare_token_set (self, _tmp2_, (gint) _tmp2__length1, _tmp3_, (gint) _tmp3__length1)) {
#line 1319 "ProgrammerCalculator.c"
		{
			gint i = 0;
#line 108 "../src/Core/ProgrammerCalculator.vala"
			i = 0;
#line 1324 "ProgrammerCalculator.c"
			{
				gboolean _tmp4_ = FALSE;
#line 108 "../src/Core/ProgrammerCalculator.vala"
				_tmp4_ = TRUE;
#line 108 "../src/Core/ProgrammerCalculator.vala"
				while (TRUE) {
#line 1331 "ProgrammerCalculator.c"
					PebblesProgrammerCalculatorToken* _tmp6_;
					gint _tmp6__length1;
					PebblesProgrammerCalculatorToken* _tmp7_;
					gint _tmp7__length1;
					PebblesProgrammerCalculatorToken _tmp8_;
					PebblesProgrammerCalculatorTokenType _tmp9_;
#line 108 "../src/Core/ProgrammerCalculator.vala"
					if (!_tmp4_) {
#line 1340 "ProgrammerCalculator.c"
						gint _tmp5_;
#line 108 "../src/Core/ProgrammerCalculator.vala"
						_tmp5_ = i;
#line 108 "../src/Core/ProgrammerCalculator.vala"
						i = _tmp5_ + 1;
#line 1346 "ProgrammerCalculator.c"
					}
#line 108 "../src/Core/ProgrammerCalculator.vala"
					_tmp4_ = FALSE;
#line 108 "../src/Core/ProgrammerCalculator.vala"
					_tmp6_ = token_structure;
#line 108 "../src/Core/ProgrammerCalculator.vala"
					_tmp6__length1 = token_structure_length1;
#line 108 "../src/Core/ProgrammerCalculator.vala"
					if (!(i < _tmp6__length1)) {
#line 108 "../src/Core/ProgrammerCalculator.vala"
						break;
#line 1358 "ProgrammerCalculator.c"
					}
#line 109 "../src/Core/ProgrammerCalculator.vala"
					_tmp7_ = token_structure;
#line 109 "../src/Core/ProgrammerCalculator.vala"
					_tmp7__length1 = token_structure_length1;
#line 109 "../src/Core/ProgrammerCalculator.vala"
					_tmp8_ = _tmp7_[i];
#line 109 "../src/Core/ProgrammerCalculator.vala"
					_tmp9_ = _tmp8_.type;
#line 109 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp9_ == PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND) {
#line 1370 "ProgrammerCalculator.c"
						PebblesProgrammerCalculatorToken* _tmp10_;
						gint _tmp10__length1;
						PebblesProgrammerCalculatorToken _tmp11_;
						PebblesNumberSystem _tmp12_;
						PebblesProgrammerCalculatorToken* _tmp13_;
						gint _tmp13__length1;
						PebblesProgrammerCalculatorToken _tmp14_;
						PebblesNumberSystem _tmp15_;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp10_ = token_structure;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp10__length1 = token_structure_length1;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp11_ = _tmp10_[i];
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp12_ = _tmp11_.number_system;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp13_ = self->priv->stored_tokens;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp13__length1 = self->priv->stored_tokens_length1;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp14_ = _tmp13_[i];
#line 110 "../src/Core/ProgrammerCalculator.vala"
						_tmp15_ = _tmp14_.number_system;
#line 110 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp12_ != _tmp15_) {
#line 1397 "ProgrammerCalculator.c"
							PebblesNumberSystem _tmp16_ = 0;
							PebblesProgrammerCalculatorToken* _tmp20_;
							gint _tmp20__length1;
							PebblesProgrammerCalculatorToken* _tmp21_;
							gint _tmp21__length1;
							PebblesProgrammerCalculatorToken _tmp22_;
							const gchar* _tmp23_;
							PebblesProgrammerCalculatorToken* _tmp24_;
							gint _tmp24__length1;
							PebblesProgrammerCalculatorToken _tmp25_;
							PebblesNumberSystem _tmp26_;
							gchar* _tmp27_;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							if (*force_decimal) {
#line 111 "../src/Core/ProgrammerCalculator.vala"
								_tmp16_ = PEBBLES_NUMBER_SYSTEM_DECIMAL;
#line 1414 "ProgrammerCalculator.c"
							} else {
								PebblesProgrammerCalculatorToken* _tmp17_;
								gint _tmp17__length1;
								PebblesProgrammerCalculatorToken _tmp18_;
								PebblesNumberSystem _tmp19_;
#line 111 "../src/Core/ProgrammerCalculator.vala"
								_tmp17_ = token_structure;
#line 111 "../src/Core/ProgrammerCalculator.vala"
								_tmp17__length1 = token_structure_length1;
#line 111 "../src/Core/ProgrammerCalculator.vala"
								_tmp18_ = _tmp17_[i];
#line 111 "../src/Core/ProgrammerCalculator.vala"
								_tmp19_ = _tmp18_.number_system;
#line 111 "../src/Core/ProgrammerCalculator.vala"
								_tmp16_ = _tmp19_;
#line 1430 "ProgrammerCalculator.c"
							}
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp20_ = self->priv->stored_tokens;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp20__length1 = self->priv->stored_tokens_length1;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp21_ = self->priv->stored_tokens;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp21__length1 = self->priv->stored_tokens_length1;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp22_ = _tmp21_[i];
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp23_ = _tmp22_.token;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp24_ = self->priv->stored_tokens;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp24__length1 = self->priv->stored_tokens_length1;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp25_ = _tmp24_[i];
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp26_ = _tmp25_.number_system;
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp27_ = pebbles_programmer_calculator_convert_number_system (self, _tmp23_, _tmp26_, _tmp16_, wrd_length);
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_g_free0 (_tmp20_[i].token);
#line 111 "../src/Core/ProgrammerCalculator.vala"
							_tmp20_[i].token = _tmp27_;
#line 1458 "ProgrammerCalculator.c"
						}
					}
				}
			}
		}
	}
#line 116 "../src/Core/ProgrammerCalculator.vala"
	_tmp28_ = self->priv->stored_tokens;
#line 116 "../src/Core/ProgrammerCalculator.vala"
	_tmp28__length1 = self->priv->stored_tokens_length1;
#line 116 "../src/Core/ProgrammerCalculator.vala"
	_tmp29_ = g_new0 (gchar*, _tmp28__length1 + 1);
#line 116 "../src/Core/ProgrammerCalculator.vala"
	token_list = _tmp29_;
#line 116 "../src/Core/ProgrammerCalculator.vala"
	token_list_length1 = _tmp28__length1;
#line 116 "../src/Core/ProgrammerCalculator.vala"
	_token_list_size_ = token_list_length1;
#line 1477 "ProgrammerCalculator.c"
	{
		gint i = 0;
#line 117 "../src/Core/ProgrammerCalculator.vala"
		i = 0;
#line 1482 "ProgrammerCalculator.c"
		{
			gboolean _tmp30_ = FALSE;
#line 117 "../src/Core/ProgrammerCalculator.vala"
			_tmp30_ = TRUE;
#line 117 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 1489 "ProgrammerCalculator.c"
				PebblesProgrammerCalculatorToken* _tmp32_;
				gint _tmp32__length1;
				gchar** _tmp33_;
				gint _tmp33__length1;
				PebblesProgrammerCalculatorToken* _tmp34_;
				gint _tmp34__length1;
				PebblesProgrammerCalculatorToken _tmp35_;
				const gchar* _tmp36_;
				gchar* _tmp37_;
#line 117 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp30_) {
#line 1501 "ProgrammerCalculator.c"
					gint _tmp31_;
#line 117 "../src/Core/ProgrammerCalculator.vala"
					_tmp31_ = i;
#line 117 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp31_ + 1;
#line 1507 "ProgrammerCalculator.c"
				}
#line 117 "../src/Core/ProgrammerCalculator.vala"
				_tmp30_ = FALSE;
#line 117 "../src/Core/ProgrammerCalculator.vala"
				_tmp32_ = self->priv->stored_tokens;
#line 117 "../src/Core/ProgrammerCalculator.vala"
				_tmp32__length1 = self->priv->stored_tokens_length1;
#line 117 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < _tmp32__length1)) {
#line 117 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 1519 "ProgrammerCalculator.c"
				}
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp33_ = token_list;
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp33__length1 = token_list_length1;
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp34_ = self->priv->stored_tokens;
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp34__length1 = self->priv->stored_tokens_length1;
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp35_ = _tmp34_[i];
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp36_ = _tmp35_.token;
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp37_ = g_strdup (_tmp36_);
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (_tmp33_[i]);
#line 118 "../src/Core/ProgrammerCalculator.vala"
				_tmp33_[i] = _tmp37_;
#line 1539 "ProgrammerCalculator.c"
			}
		}
	}
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_tmp38_ = token_list;
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_tmp38__length1 = token_list_length1;
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_tmp39_ = _vala_g_strjoinv (" ", _tmp38_, (gint) _tmp38__length1);
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_tmp40_ = _tmp39_;
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_tmp41_ = pebbles_utils_get_natural_expression (_tmp40_);
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_tmp42_ = _tmp41_;
#line 120 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp40_);
#line 120 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp42_;
#line 120 "../src/Core/ProgrammerCalculator.vala"
	token_list = (_vala_array_free (token_list, token_list_length1, (GDestroyNotify) g_free), NULL);
#line 120 "../src/Core/ProgrammerCalculator.vala"
	token_structure = (_vala_PebblesProgrammerCalculatorToken_array_free (token_structure, token_structure_length1), NULL);
#line 120 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 1565 "ProgrammerCalculator.c"
}

static gboolean
pebbles_programmer_calculator_compare_token_set (PebblesProgrammerCalculator* self,
                                                 PebblesProgrammerCalculatorToken* a,
                                                 gint a_length1,
                                                 PebblesProgrammerCalculatorToken* b,
                                                 gint b_length1)
{
	gboolean result = FALSE;
#line 122 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 123 "../src/Core/ProgrammerCalculator.vala"
	if (a_length1 != b_length1) {
#line 124 "../src/Core/ProgrammerCalculator.vala"
		result = FALSE;
#line 124 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 1584 "ProgrammerCalculator.c"
	}
	{
		gint i = 0;
#line 126 "../src/Core/ProgrammerCalculator.vala"
		i = 0;
#line 1590 "ProgrammerCalculator.c"
		{
			gboolean _tmp0_ = FALSE;
#line 126 "../src/Core/ProgrammerCalculator.vala"
			_tmp0_ = TRUE;
#line 126 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 1597 "ProgrammerCalculator.c"
				PebblesProgrammerCalculatorToken _tmp2_;
				const gchar* _tmp3_;
				PebblesProgrammerCalculatorToken _tmp4_;
				const gchar* _tmp5_;
#line 126 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp0_) {
#line 1604 "ProgrammerCalculator.c"
					gint _tmp1_;
#line 126 "../src/Core/ProgrammerCalculator.vala"
					_tmp1_ = i;
#line 126 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp1_ + 1;
#line 1610 "ProgrammerCalculator.c"
				}
#line 126 "../src/Core/ProgrammerCalculator.vala"
				_tmp0_ = FALSE;
#line 126 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < a_length1)) {
#line 126 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 1618 "ProgrammerCalculator.c"
				}
#line 127 "../src/Core/ProgrammerCalculator.vala"
				_tmp2_ = a[i];
#line 127 "../src/Core/ProgrammerCalculator.vala"
				_tmp3_ = _tmp2_.token;
#line 127 "../src/Core/ProgrammerCalculator.vala"
				_tmp4_ = b[i];
#line 127 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = _tmp4_.token;
#line 127 "../src/Core/ProgrammerCalculator.vala"
				if (g_strcmp0 (_tmp3_, _tmp5_) != 0) {
#line 128 "../src/Core/ProgrammerCalculator.vala"
					result = FALSE;
#line 128 "../src/Core/ProgrammerCalculator.vala"
					return result;
#line 1634 "ProgrammerCalculator.c"
				}
			}
		}
	}
#line 131 "../src/Core/ProgrammerCalculator.vala"
	result = TRUE;
#line 131 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 1643 "ProgrammerCalculator.c"
}

static gchar*
pebbles_programmer_calculator_convert_number_system (PebblesProgrammerCalculator* self,
                                                     const gchar* exp,
                                                     PebblesNumberSystem number_system_a,
                                                     PebblesNumberSystem number_system_b,
                                                     PebblesGlobalWordLength* wrd_length)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp22_;
	gchar* result = NULL;
#line 133 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 133 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (exp != NULL, NULL);
#line 134 "../src/Core/ProgrammerCalculator.vala"
	g_print ("Number system change\n");
#line 135 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_strconcat (">", exp, NULL);
#line 135 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = _tmp0_;
#line 135 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = g_strconcat (_tmp1_, "\n", NULL);
#line 135 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = _tmp2_;
#line 135 "../src/Core/ProgrammerCalculator.vala"
	g_print ("%s", _tmp3_);
#line 135 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp3_);
#line 135 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp1_);
#line 136 "../src/Core/ProgrammerCalculator.vala"
	g_print (" %d -> %d\n", (gint) number_system_a, (gint) number_system_b);
#line 138 "../src/Core/ProgrammerCalculator.vala"
	if (number_system_a == PEBBLES_NUMBER_SYSTEM_DECIMAL) {
#line 139 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_BINARY) {
#line 1685 "ProgrammerCalculator.c"
			gboolean _tmp4_;
			gchar* _tmp5_;
#line 140 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_ = FALSE;
#line 140 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = pebbles_programmer_calculator_convert_decimal_to_binary (self, exp, wrd_length, &_tmp4_);
#line 140 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp5_;
#line 140 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1696 "ProgrammerCalculator.c"
		}
#line 142 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_HEXADECIMAL) {
#line 1700 "ProgrammerCalculator.c"
			gchar* _tmp6_;
#line 143 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = pebbles_programmer_calculator_convert_decimal_to_hexadecimal (self, exp, wrd_length);
#line 143 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp6_;
#line 143 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1708 "ProgrammerCalculator.c"
		}
#line 145 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_OCTAL) {
#line 1712 "ProgrammerCalculator.c"
			gchar* _tmp7_;
#line 146 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = pebbles_programmer_calculator_convert_decimal_to_octal (self, exp, wrd_length);
#line 146 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp7_;
#line 146 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1720 "ProgrammerCalculator.c"
		}
	}
#line 149 "../src/Core/ProgrammerCalculator.vala"
	if (number_system_a == PEBBLES_NUMBER_SYSTEM_BINARY) {
#line 150 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_DECIMAL) {
#line 1727 "ProgrammerCalculator.c"
			gboolean _tmp8_;
			gchar* _tmp9_;
#line 151 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = FALSE;
#line 151 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = pebbles_programmer_calculator_convert_binary_to_decimal (self, exp, wrd_length, &_tmp8_);
#line 151 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp9_;
#line 151 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1738 "ProgrammerCalculator.c"
		}
#line 153 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_HEXADECIMAL) {
#line 1742 "ProgrammerCalculator.c"
			gboolean _tmp10_;
			gchar* _tmp11_;
#line 154 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = FALSE;
#line 154 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = pebbles_programmer_calculator_convert_binary_to_hexadecimal (self, exp, wrd_length, &_tmp10_);
#line 154 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp11_;
#line 154 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1753 "ProgrammerCalculator.c"
		}
#line 156 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_OCTAL) {
#line 1757 "ProgrammerCalculator.c"
			gboolean _tmp12_;
			gchar* _tmp13_;
#line 157 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = FALSE;
#line 157 "../src/Core/ProgrammerCalculator.vala"
			_tmp13_ = pebbles_programmer_calculator_convert_binary_to_octal (self, exp, wrd_length, &_tmp12_);
#line 157 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp13_;
#line 157 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1768 "ProgrammerCalculator.c"
		}
	}
#line 160 "../src/Core/ProgrammerCalculator.vala"
	if (number_system_a == PEBBLES_NUMBER_SYSTEM_HEXADECIMAL) {
#line 161 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_DECIMAL) {
#line 1775 "ProgrammerCalculator.c"
			gchar* _tmp14_;
#line 162 "../src/Core/ProgrammerCalculator.vala"
			_tmp14_ = pebbles_programmer_calculator_convert_hexadecimal_to_decimal (self, exp, wrd_length);
#line 162 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp14_;
#line 162 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1783 "ProgrammerCalculator.c"
		}
#line 164 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_BINARY) {
#line 1787 "ProgrammerCalculator.c"
			gboolean _tmp15_;
			gchar* _tmp16_;
#line 165 "../src/Core/ProgrammerCalculator.vala"
			_tmp15_ = FALSE;
#line 165 "../src/Core/ProgrammerCalculator.vala"
			_tmp16_ = pebbles_programmer_calculator_convert_hexadecimal_to_binary (self, exp, wrd_length, &_tmp15_);
#line 165 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp16_;
#line 165 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1798 "ProgrammerCalculator.c"
		}
#line 167 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_OCTAL) {
#line 1802 "ProgrammerCalculator.c"
			gchar* _tmp17_;
#line 168 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = pebbles_programmer_calculator_convert_hexadecimal_to_octal (self, exp, wrd_length);
#line 168 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp17_;
#line 168 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1810 "ProgrammerCalculator.c"
		}
	}
#line 171 "../src/Core/ProgrammerCalculator.vala"
	if (number_system_a == PEBBLES_NUMBER_SYSTEM_OCTAL) {
#line 172 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_DECIMAL) {
#line 1817 "ProgrammerCalculator.c"
			gchar* _tmp18_;
#line 173 "../src/Core/ProgrammerCalculator.vala"
			_tmp18_ = pebbles_programmer_calculator_convert_octal_to_decimal (self, exp, wrd_length);
#line 173 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp18_;
#line 173 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1825 "ProgrammerCalculator.c"
		}
#line 175 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_BINARY) {
#line 1829 "ProgrammerCalculator.c"
			gboolean _tmp19_;
			gchar* _tmp20_;
#line 176 "../src/Core/ProgrammerCalculator.vala"
			_tmp19_ = FALSE;
#line 176 "../src/Core/ProgrammerCalculator.vala"
			_tmp20_ = pebbles_programmer_calculator_convert_octal_to_binary (self, exp, wrd_length, &_tmp19_);
#line 176 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp20_;
#line 176 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1840 "ProgrammerCalculator.c"
		}
#line 178 "../src/Core/ProgrammerCalculator.vala"
		if (number_system_b == PEBBLES_NUMBER_SYSTEM_HEXADECIMAL) {
#line 1844 "ProgrammerCalculator.c"
			gchar* _tmp21_;
#line 179 "../src/Core/ProgrammerCalculator.vala"
			_tmp21_ = pebbles_programmer_calculator_convert_octal_to_hexadecimal (self, exp, wrd_length);
#line 179 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp21_;
#line 179 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 1852 "ProgrammerCalculator.c"
		}
	}
#line 182 "../src/Core/ProgrammerCalculator.vala"
	_tmp22_ = g_strdup ("");
#line 182 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp22_;
#line 182 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 1861 "ProgrammerCalculator.c"
}

static gint64
int64_parse (const gchar* str,
             guint _base)
{
	gint64 result = 0LL;
#line 770 "glib-2.0.vapi"
	g_return_val_if_fail (str != NULL, 0LL);
#line 771 "glib-2.0.vapi"
	result = g_ascii_strtoll (str, NULL, _base);
#line 771 "glib-2.0.vapi"
	return result;
#line 1875 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_decimal_to_binary (PebblesProgrammerCalculator* self,
                                                         const gchar* number,
                                                         PebblesGlobalWordLength* wrd_length,
                                                         gboolean* format)
{
	gint* temp = NULL;
	gint* _tmp0_;
	gint temp_length1;
	gint _temp_size_;
	gint64 decimal = 0LL;
	gint i = 0;
	gchar* binary = NULL;
	gchar* _tmp4_;
	const gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* result = NULL;
#line 185 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 185 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (number != NULL, NULL);
#line 186 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_new0 (gint, 64);
#line 186 "../src/Core/ProgrammerCalculator.vala"
	temp = _tmp0_;
#line 186 "../src/Core/ProgrammerCalculator.vala"
	temp_length1 = 64;
#line 186 "../src/Core/ProgrammerCalculator.vala"
	_temp_size_ = temp_length1;
#line 187 "../src/Core/ProgrammerCalculator.vala"
	decimal = int64_parse (number, (guint) 0);
#line 188 "../src/Core/ProgrammerCalculator.vala"
	i = 0;
#line 1911 "ProgrammerCalculator.c"
	{
		gboolean _tmp1_ = FALSE;
#line 189 "../src/Core/ProgrammerCalculator.vala"
		_tmp1_ = TRUE;
#line 189 "../src/Core/ProgrammerCalculator.vala"
		while (TRUE) {
#line 1918 "ProgrammerCalculator.c"
			gint* _tmp3_;
			gint _tmp3__length1;
#line 189 "../src/Core/ProgrammerCalculator.vala"
			if (!_tmp1_) {
#line 1923 "ProgrammerCalculator.c"
				gint _tmp2_;
#line 189 "../src/Core/ProgrammerCalculator.vala"
				_tmp2_ = i;
#line 189 "../src/Core/ProgrammerCalculator.vala"
				i = _tmp2_ + 1;
#line 1929 "ProgrammerCalculator.c"
			}
#line 189 "../src/Core/ProgrammerCalculator.vala"
			_tmp1_ = FALSE;
#line 189 "../src/Core/ProgrammerCalculator.vala"
			if (!(decimal > ((gint64) 0))) {
#line 189 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 1937 "ProgrammerCalculator.c"
			}
#line 190 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_ = temp;
#line 190 "../src/Core/ProgrammerCalculator.vala"
			_tmp3__length1 = temp_length1;
#line 190 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_[i] = (gint) fabs ((gdouble) (decimal % 2));
#line 191 "../src/Core/ProgrammerCalculator.vala"
			decimal /= (gint64) 2;
#line 1947 "ProgrammerCalculator.c"
		}
	}
#line 193 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = g_strdup ("");
#line 193 "../src/Core/ProgrammerCalculator.vala"
	binary = _tmp4_;
#line 1954 "ProgrammerCalculator.c"
	{
		gboolean _tmp5_ = FALSE;
#line 194 "../src/Core/ProgrammerCalculator.vala"
		i = i - 1;
#line 194 "../src/Core/ProgrammerCalculator.vala"
		_tmp5_ = TRUE;
#line 194 "../src/Core/ProgrammerCalculator.vala"
		while (TRUE) {
#line 1963 "ProgrammerCalculator.c"
			const gchar* _tmp7_;
			gint* _tmp8_;
			gint _tmp8__length1;
			gint _tmp9_;
			gchar* _tmp10_;
			gchar* _tmp11_;
			gchar* _tmp12_;
#line 194 "../src/Core/ProgrammerCalculator.vala"
			if (!_tmp5_) {
#line 1973 "ProgrammerCalculator.c"
				gint _tmp6_;
#line 194 "../src/Core/ProgrammerCalculator.vala"
				_tmp6_ = i;
#line 194 "../src/Core/ProgrammerCalculator.vala"
				i = _tmp6_ - 1;
#line 1979 "ProgrammerCalculator.c"
			}
#line 194 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = FALSE;
#line 194 "../src/Core/ProgrammerCalculator.vala"
			if (!(i >= 0)) {
#line 194 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 1987 "ProgrammerCalculator.c"
			}
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = binary;
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = temp;
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp8__length1 = temp_length1;
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = _tmp8_[i];
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = g_strdup_printf ("%i", _tmp9_);
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = _tmp10_;
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = g_strconcat (_tmp7_, _tmp11_, NULL);
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (binary);
#line 195 "../src/Core/ProgrammerCalculator.vala"
			binary = _tmp12_;
#line 195 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp11_);
#line 2009 "ProgrammerCalculator.c"
		}
	}
#line 197 "../src/Core/ProgrammerCalculator.vala"
	_tmp13_ = binary;
#line 197 "../src/Core/ProgrammerCalculator.vala"
	_tmp14_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, _tmp13_, *wrd_length, format);
#line 197 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp14_;
#line 197 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (binary);
#line 197 "../src/Core/ProgrammerCalculator.vala"
	temp = (g_free (temp), NULL);
#line 197 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 2024 "ProgrammerCalculator.c"
}

static gchar
string_get (const gchar* self,
            glong index)
{
	gchar _tmp0_;
	gchar result = '\0';
#line 1232 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, '\0');
#line 1233 "glib-2.0.vapi"
	_tmp0_ = ((gchar*) self)[index];
#line 1233 "glib-2.0.vapi"
	result = _tmp0_;
#line 1233 "glib-2.0.vapi"
	return result;
#line 2041 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_binary_to_decimal (PebblesProgrammerCalculator* self,
                                                         const gchar* number,
                                                         PebblesGlobalWordLength* wrd_length,
                                                         gboolean* negative)
{
	gchar* formatted_binary = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gint64 decimal = 0LL;
	gchar* converted_binary = NULL;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp20_;
	gint64 _tmp21_ = 0LL;
	gchar* _tmp22_;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 199 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 199 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (number != NULL, NULL);
#line 200 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 200 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, number, *wrd_length, &_tmp0_);
#line 200 "../src/Core/ProgrammerCalculator.vala"
	formatted_binary = _tmp1_;
#line 201 "../src/Core/ProgrammerCalculator.vala"
	decimal = (gint64) 0;
#line 202 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = formatted_binary;
#line 202 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = g_strdup (_tmp2_);
#line 202 "../src/Core/ProgrammerCalculator.vala"
	converted_binary = _tmp3_;
#line 203 "../src/Core/ProgrammerCalculator.vala"
	if (*negative) {
#line 2082 "ProgrammerCalculator.c"
		gchar* _tmp4_;
		const gchar* _tmp14_;
		gint64 _tmp15_ = 0LL;
		gchar* _tmp16_;
		gchar* _tmp17_;
		gchar* _tmp18_;
		gchar* _tmp19_;
#line 204 "../src/Core/ProgrammerCalculator.vala"
		_tmp4_ = g_strdup ("");
#line 204 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (converted_binary);
#line 204 "../src/Core/ProgrammerCalculator.vala"
		converted_binary = _tmp4_;
#line 2096 "ProgrammerCalculator.c"
		{
			gint i = 0;
#line 205 "../src/Core/ProgrammerCalculator.vala"
			i = 0;
#line 2101 "ProgrammerCalculator.c"
			{
				gboolean _tmp5_ = FALSE;
#line 205 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = TRUE;
#line 205 "../src/Core/ProgrammerCalculator.vala"
				while (TRUE) {
#line 2108 "ProgrammerCalculator.c"
					const gchar* _tmp7_;
					gint _tmp8_;
					gint _tmp9_;
					const gchar* _tmp10_ = NULL;
					const gchar* _tmp11_;
					const gchar* _tmp12_;
					gchar* _tmp13_;
#line 205 "../src/Core/ProgrammerCalculator.vala"
					if (!_tmp5_) {
#line 2118 "ProgrammerCalculator.c"
						gint _tmp6_;
#line 205 "../src/Core/ProgrammerCalculator.vala"
						_tmp6_ = i;
#line 205 "../src/Core/ProgrammerCalculator.vala"
						i = _tmp6_ + 1;
#line 2124 "ProgrammerCalculator.c"
					}
#line 205 "../src/Core/ProgrammerCalculator.vala"
					_tmp5_ = FALSE;
#line 205 "../src/Core/ProgrammerCalculator.vala"
					_tmp7_ = formatted_binary;
#line 205 "../src/Core/ProgrammerCalculator.vala"
					_tmp8_ = strlen (_tmp7_);
#line 205 "../src/Core/ProgrammerCalculator.vala"
					_tmp9_ = _tmp8_;
#line 205 "../src/Core/ProgrammerCalculator.vala"
					if (!(i < _tmp9_)) {
#line 205 "../src/Core/ProgrammerCalculator.vala"
						break;
#line 2138 "ProgrammerCalculator.c"
					}
#line 206 "../src/Core/ProgrammerCalculator.vala"
					_tmp11_ = formatted_binary;
#line 206 "../src/Core/ProgrammerCalculator.vala"
					if (string_get (_tmp11_, (glong) i) == '1') {
#line 206 "../src/Core/ProgrammerCalculator.vala"
						_tmp10_ = "0";
#line 2146 "ProgrammerCalculator.c"
					} else {
#line 206 "../src/Core/ProgrammerCalculator.vala"
						_tmp10_ = "1";
#line 2150 "ProgrammerCalculator.c"
					}
#line 206 "../src/Core/ProgrammerCalculator.vala"
					_tmp12_ = converted_binary;
#line 206 "../src/Core/ProgrammerCalculator.vala"
					_tmp13_ = g_strconcat (_tmp12_, _tmp10_, NULL);
#line 206 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (converted_binary);
#line 206 "../src/Core/ProgrammerCalculator.vala"
					converted_binary = _tmp13_;
#line 2160 "ProgrammerCalculator.c"
				}
			}
		}
#line 208 "../src/Core/ProgrammerCalculator.vala"
		_tmp14_ = converted_binary;
#line 208 "../src/Core/ProgrammerCalculator.vala"
		g_ascii_string_to_signed (_tmp14_, (guint) 2, G_MININT64, G_MAXINT64, &_tmp15_, &_inner_error0_);
#line 208 "../src/Core/ProgrammerCalculator.vala"
		decimal = _tmp15_;
#line 208 "../src/Core/ProgrammerCalculator.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 208 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (converted_binary);
#line 208 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (formatted_binary);
#line 208 "../src/Core/ProgrammerCalculator.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 208 "../src/Core/ProgrammerCalculator.vala"
			g_clear_error (&_inner_error0_);
#line 208 "../src/Core/ProgrammerCalculator.vala"
			return NULL;
#line 2182 "ProgrammerCalculator.c"
		}
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_tmp16_ = g_strdup_printf ("%" G_GINT64_FORMAT, decimal + 1);
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_tmp17_ = _tmp16_;
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_tmp18_ = g_strconcat ("-", _tmp17_, NULL);
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_tmp19_ = _tmp18_;
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (_tmp17_);
#line 209 "../src/Core/ProgrammerCalculator.vala"
		result = _tmp19_;
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (converted_binary);
#line 209 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (formatted_binary);
#line 209 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 2202 "ProgrammerCalculator.c"
	}
#line 211 "../src/Core/ProgrammerCalculator.vala"
	_tmp20_ = converted_binary;
#line 211 "../src/Core/ProgrammerCalculator.vala"
	g_ascii_string_to_signed (_tmp20_, (guint) 2, G_MININT64, G_MAXINT64, &_tmp21_, &_inner_error0_);
#line 211 "../src/Core/ProgrammerCalculator.vala"
	decimal = _tmp21_;
#line 211 "../src/Core/ProgrammerCalculator.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 211 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (converted_binary);
#line 211 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (formatted_binary);
#line 211 "../src/Core/ProgrammerCalculator.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 211 "../src/Core/ProgrammerCalculator.vala"
		g_clear_error (&_inner_error0_);
#line 211 "../src/Core/ProgrammerCalculator.vala"
		return NULL;
#line 2222 "ProgrammerCalculator.c"
	}
#line 212 "../src/Core/ProgrammerCalculator.vala"
	_tmp22_ = g_strdup_printf ("%" G_GINT64_FORMAT, decimal);
#line 212 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp22_;
#line 212 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (converted_binary);
#line 212 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (formatted_binary);
#line 212 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 2234 "ProgrammerCalculator.c"
}

static gchar*
string_slice (const gchar* self,
              glong start,
              glong end)
{
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 1480 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1481 "glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1481 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1481 "glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1482 "glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 1483 "glib-2.0.vapi"
		start = string_length + start;
#line 2261 "ProgrammerCalculator.c"
	}
#line 1485 "glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 1486 "glib-2.0.vapi"
		end = string_length + end;
#line 2267 "ProgrammerCalculator.c"
	}
#line 1488 "glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = start <= string_length;
#line 2273 "ProgrammerCalculator.c"
	} else {
#line 1488 "glib-2.0.vapi"
		_tmp2_ = FALSE;
#line 2277 "ProgrammerCalculator.c"
	}
#line 1488 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp2_, NULL);
#line 1489 "glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = end <= string_length;
#line 2285 "ProgrammerCalculator.c"
	} else {
#line 1489 "glib-2.0.vapi"
		_tmp3_ = FALSE;
#line 2289 "ProgrammerCalculator.c"
	}
#line 1489 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp3_, NULL);
#line 1490 "glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1491 "glib-2.0.vapi"
	_tmp4_ = g_strndup (((gchar*) self) + start, (gsize) (end - start));
#line 1491 "glib-2.0.vapi"
	result = _tmp4_;
#line 1491 "glib-2.0.vapi"
	return result;
#line 2301 "ProgrammerCalculator.c"
}

static gunichar
string_get_char (const gchar* self,
                 glong index)
{
	gunichar result = 0U;
#line 1262 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, 0U);
#line 1263 "glib-2.0.vapi"
	result = g_utf8_get_char (((gchar*) self) + index);
#line 1263 "glib-2.0.vapi"
	return result;
#line 2315 "ProgrammerCalculator.c"
}

static gchar*
g_unichar_to_string (gunichar self)
{
	gchar* str = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1071 "glib-2.0.vapi"
	_tmp0_ = g_new0 (gchar, 7);
#line 1071 "glib-2.0.vapi"
	str = (gchar*) _tmp0_;
#line 1072 "glib-2.0.vapi"
	g_unichar_to_utf8 (self, str);
#line 1073 "glib-2.0.vapi"
	result = str;
#line 1073 "glib-2.0.vapi"
	return result;
#line 2334 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_represent_binary_by_word_length (PebblesProgrammerCalculator* self,
                                                               const gchar* binary_value,
                                                               PebblesGlobalWordLength wrd_length,
                                                               gboolean* format)
{
	gchar* new_binary = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 214 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 214 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (binary_value != NULL, NULL);
#line 215 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_strdup ("");
#line 215 "../src/Core/ProgrammerCalculator.vala"
	new_binary = _tmp0_;
#line 216 "../src/Core/ProgrammerCalculator.vala"
	switch (wrd_length) {
#line 216 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_BYT:
#line 2358 "ProgrammerCalculator.c"
		{
			gint _tmp1_;
			gint _tmp2_;
#line 218 "../src/Core/ProgrammerCalculator.vala"
			_tmp1_ = strlen (binary_value);
#line 218 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = _tmp1_;
#line 218 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp2_ > 8) {
#line 2368 "ProgrammerCalculator.c"
				gint _tmp3_;
				gint _tmp4_;
				gchar* _tmp5_;
#line 220 "../src/Core/ProgrammerCalculator.vala"
				_tmp3_ = strlen (binary_value);
#line 220 "../src/Core/ProgrammerCalculator.vala"
				_tmp4_ = _tmp3_;
#line 220 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = string_slice (binary_value, (glong) (_tmp4_ - 9), (glong) -1);
#line 220 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 220 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp5_;
#line 2382 "ProgrammerCalculator.c"
			} else {
				gchar* pre_zeros = NULL;
				gchar* _tmp6_;
				const gchar* _tmp13_;
				gchar* _tmp14_;
#line 223 "../src/Core/ProgrammerCalculator.vala"
				_tmp6_ = g_strdup ("");
#line 223 "../src/Core/ProgrammerCalculator.vala"
				pre_zeros = _tmp6_;
#line 2392 "ProgrammerCalculator.c"
				{
					gint i = 0;
#line 224 "../src/Core/ProgrammerCalculator.vala"
					i = 0;
#line 2397 "ProgrammerCalculator.c"
					{
						gboolean _tmp7_ = FALSE;
#line 224 "../src/Core/ProgrammerCalculator.vala"
						_tmp7_ = TRUE;
#line 224 "../src/Core/ProgrammerCalculator.vala"
						while (TRUE) {
#line 2404 "ProgrammerCalculator.c"
							gint _tmp9_;
							gint _tmp10_;
							const gchar* _tmp11_;
							gchar* _tmp12_;
#line 224 "../src/Core/ProgrammerCalculator.vala"
							if (!_tmp7_) {
#line 2411 "ProgrammerCalculator.c"
								gint _tmp8_;
#line 224 "../src/Core/ProgrammerCalculator.vala"
								_tmp8_ = i;
#line 224 "../src/Core/ProgrammerCalculator.vala"
								i = _tmp8_ + 1;
#line 2417 "ProgrammerCalculator.c"
							}
#line 224 "../src/Core/ProgrammerCalculator.vala"
							_tmp7_ = FALSE;
#line 224 "../src/Core/ProgrammerCalculator.vala"
							_tmp9_ = strlen (binary_value);
#line 224 "../src/Core/ProgrammerCalculator.vala"
							_tmp10_ = _tmp9_;
#line 224 "../src/Core/ProgrammerCalculator.vala"
							if (!(i < (8 - _tmp10_))) {
#line 224 "../src/Core/ProgrammerCalculator.vala"
								break;
#line 2429 "ProgrammerCalculator.c"
							}
#line 225 "../src/Core/ProgrammerCalculator.vala"
							_tmp11_ = pre_zeros;
#line 225 "../src/Core/ProgrammerCalculator.vala"
							_tmp12_ = g_strconcat (_tmp11_, "0", NULL);
#line 225 "../src/Core/ProgrammerCalculator.vala"
							_g_free0 (pre_zeros);
#line 225 "../src/Core/ProgrammerCalculator.vala"
							pre_zeros = _tmp12_;
#line 2439 "ProgrammerCalculator.c"
						}
					}
				}
#line 227 "../src/Core/ProgrammerCalculator.vala"
				_tmp13_ = pre_zeros;
#line 227 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_ = g_strconcat (_tmp13_, binary_value, NULL);
#line 227 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 227 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp14_;
#line 218 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (pre_zeros);
#line 2453 "ProgrammerCalculator.c"
			}
#line 229 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 2457 "ProgrammerCalculator.c"
		}
#line 216 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_WRD:
#line 2461 "ProgrammerCalculator.c"
		{
			gint _tmp15_;
			gint _tmp16_;
#line 231 "../src/Core/ProgrammerCalculator.vala"
			_tmp15_ = strlen (binary_value);
#line 231 "../src/Core/ProgrammerCalculator.vala"
			_tmp16_ = _tmp15_;
#line 231 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp16_ > 16) {
#line 2471 "ProgrammerCalculator.c"
				gint _tmp17_;
				gint _tmp18_;
				gchar* _tmp19_;
#line 233 "../src/Core/ProgrammerCalculator.vala"
				_tmp17_ = strlen (binary_value);
#line 233 "../src/Core/ProgrammerCalculator.vala"
				_tmp18_ = _tmp17_;
#line 233 "../src/Core/ProgrammerCalculator.vala"
				_tmp19_ = string_slice (binary_value, (glong) (_tmp18_ - 17), (glong) -1);
#line 233 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 233 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp19_;
#line 2485 "ProgrammerCalculator.c"
			} else {
				gchar* pre_zeros = NULL;
				gchar* _tmp20_;
				const gchar* _tmp27_;
				gchar* _tmp28_;
#line 236 "../src/Core/ProgrammerCalculator.vala"
				_tmp20_ = g_strdup ("");
#line 236 "../src/Core/ProgrammerCalculator.vala"
				pre_zeros = _tmp20_;
#line 2495 "ProgrammerCalculator.c"
				{
					gint i = 0;
#line 237 "../src/Core/ProgrammerCalculator.vala"
					i = 0;
#line 2500 "ProgrammerCalculator.c"
					{
						gboolean _tmp21_ = FALSE;
#line 237 "../src/Core/ProgrammerCalculator.vala"
						_tmp21_ = TRUE;
#line 237 "../src/Core/ProgrammerCalculator.vala"
						while (TRUE) {
#line 2507 "ProgrammerCalculator.c"
							gint _tmp23_;
							gint _tmp24_;
							const gchar* _tmp25_;
							gchar* _tmp26_;
#line 237 "../src/Core/ProgrammerCalculator.vala"
							if (!_tmp21_) {
#line 2514 "ProgrammerCalculator.c"
								gint _tmp22_;
#line 237 "../src/Core/ProgrammerCalculator.vala"
								_tmp22_ = i;
#line 237 "../src/Core/ProgrammerCalculator.vala"
								i = _tmp22_ + 1;
#line 2520 "ProgrammerCalculator.c"
							}
#line 237 "../src/Core/ProgrammerCalculator.vala"
							_tmp21_ = FALSE;
#line 237 "../src/Core/ProgrammerCalculator.vala"
							_tmp23_ = strlen (binary_value);
#line 237 "../src/Core/ProgrammerCalculator.vala"
							_tmp24_ = _tmp23_;
#line 237 "../src/Core/ProgrammerCalculator.vala"
							if (!(i < (16 - _tmp24_))) {
#line 237 "../src/Core/ProgrammerCalculator.vala"
								break;
#line 2532 "ProgrammerCalculator.c"
							}
#line 238 "../src/Core/ProgrammerCalculator.vala"
							_tmp25_ = pre_zeros;
#line 238 "../src/Core/ProgrammerCalculator.vala"
							_tmp26_ = g_strconcat (_tmp25_, "0", NULL);
#line 238 "../src/Core/ProgrammerCalculator.vala"
							_g_free0 (pre_zeros);
#line 238 "../src/Core/ProgrammerCalculator.vala"
							pre_zeros = _tmp26_;
#line 2542 "ProgrammerCalculator.c"
						}
					}
				}
#line 240 "../src/Core/ProgrammerCalculator.vala"
				_tmp27_ = pre_zeros;
#line 240 "../src/Core/ProgrammerCalculator.vala"
				_tmp28_ = g_strconcat (_tmp27_, binary_value, NULL);
#line 240 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 240 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp28_;
#line 231 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (pre_zeros);
#line 2556 "ProgrammerCalculator.c"
			}
#line 242 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 2560 "ProgrammerCalculator.c"
		}
#line 216 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_DWD:
#line 2564 "ProgrammerCalculator.c"
		{
			gint _tmp29_;
			gint _tmp30_;
#line 244 "../src/Core/ProgrammerCalculator.vala"
			_tmp29_ = strlen (binary_value);
#line 244 "../src/Core/ProgrammerCalculator.vala"
			_tmp30_ = _tmp29_;
#line 244 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp30_ > 32) {
#line 2574 "ProgrammerCalculator.c"
				gint _tmp31_;
				gint _tmp32_;
				gchar* _tmp33_;
#line 246 "../src/Core/ProgrammerCalculator.vala"
				_tmp31_ = strlen (binary_value);
#line 246 "../src/Core/ProgrammerCalculator.vala"
				_tmp32_ = _tmp31_;
#line 246 "../src/Core/ProgrammerCalculator.vala"
				_tmp33_ = string_slice (binary_value, (glong) (_tmp32_ - 33), (glong) -1);
#line 246 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 246 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp33_;
#line 2588 "ProgrammerCalculator.c"
			} else {
				gchar* pre_zeros = NULL;
				gchar* _tmp34_;
				const gchar* _tmp41_;
				gchar* _tmp42_;
#line 249 "../src/Core/ProgrammerCalculator.vala"
				_tmp34_ = g_strdup ("");
#line 249 "../src/Core/ProgrammerCalculator.vala"
				pre_zeros = _tmp34_;
#line 2598 "ProgrammerCalculator.c"
				{
					gint i = 0;
#line 250 "../src/Core/ProgrammerCalculator.vala"
					i = 0;
#line 2603 "ProgrammerCalculator.c"
					{
						gboolean _tmp35_ = FALSE;
#line 250 "../src/Core/ProgrammerCalculator.vala"
						_tmp35_ = TRUE;
#line 250 "../src/Core/ProgrammerCalculator.vala"
						while (TRUE) {
#line 2610 "ProgrammerCalculator.c"
							gint _tmp37_;
							gint _tmp38_;
							const gchar* _tmp39_;
							gchar* _tmp40_;
#line 250 "../src/Core/ProgrammerCalculator.vala"
							if (!_tmp35_) {
#line 2617 "ProgrammerCalculator.c"
								gint _tmp36_;
#line 250 "../src/Core/ProgrammerCalculator.vala"
								_tmp36_ = i;
#line 250 "../src/Core/ProgrammerCalculator.vala"
								i = _tmp36_ + 1;
#line 2623 "ProgrammerCalculator.c"
							}
#line 250 "../src/Core/ProgrammerCalculator.vala"
							_tmp35_ = FALSE;
#line 250 "../src/Core/ProgrammerCalculator.vala"
							_tmp37_ = strlen (binary_value);
#line 250 "../src/Core/ProgrammerCalculator.vala"
							_tmp38_ = _tmp37_;
#line 250 "../src/Core/ProgrammerCalculator.vala"
							if (!(i < (32 - _tmp38_))) {
#line 250 "../src/Core/ProgrammerCalculator.vala"
								break;
#line 2635 "ProgrammerCalculator.c"
							}
#line 251 "../src/Core/ProgrammerCalculator.vala"
							_tmp39_ = pre_zeros;
#line 251 "../src/Core/ProgrammerCalculator.vala"
							_tmp40_ = g_strconcat (_tmp39_, "0", NULL);
#line 251 "../src/Core/ProgrammerCalculator.vala"
							_g_free0 (pre_zeros);
#line 251 "../src/Core/ProgrammerCalculator.vala"
							pre_zeros = _tmp40_;
#line 2645 "ProgrammerCalculator.c"
						}
					}
				}
#line 253 "../src/Core/ProgrammerCalculator.vala"
				_tmp41_ = pre_zeros;
#line 253 "../src/Core/ProgrammerCalculator.vala"
				_tmp42_ = g_strconcat (_tmp41_, binary_value, NULL);
#line 253 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 253 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp42_;
#line 244 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (pre_zeros);
#line 2659 "ProgrammerCalculator.c"
			}
#line 255 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 2663 "ProgrammerCalculator.c"
		}
#line 216 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_QWD:
#line 2667 "ProgrammerCalculator.c"
		{
			gint _tmp43_;
			gint _tmp44_;
#line 257 "../src/Core/ProgrammerCalculator.vala"
			_tmp43_ = strlen (binary_value);
#line 257 "../src/Core/ProgrammerCalculator.vala"
			_tmp44_ = _tmp43_;
#line 257 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp44_ > 64) {
#line 2677 "ProgrammerCalculator.c"
				gint _tmp45_;
				gint _tmp46_;
				gchar* _tmp47_;
#line 259 "../src/Core/ProgrammerCalculator.vala"
				_tmp45_ = strlen (binary_value);
#line 259 "../src/Core/ProgrammerCalculator.vala"
				_tmp46_ = _tmp45_;
#line 259 "../src/Core/ProgrammerCalculator.vala"
				_tmp47_ = string_slice (binary_value, (glong) (_tmp46_ - 65), (glong) -1);
#line 259 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 259 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp47_;
#line 2691 "ProgrammerCalculator.c"
			} else {
				gchar* pre_zeros = NULL;
				gchar* _tmp48_;
				const gchar* _tmp55_;
				gchar* _tmp56_;
#line 262 "../src/Core/ProgrammerCalculator.vala"
				_tmp48_ = g_strdup ("");
#line 262 "../src/Core/ProgrammerCalculator.vala"
				pre_zeros = _tmp48_;
#line 2701 "ProgrammerCalculator.c"
				{
					gint i = 0;
#line 263 "../src/Core/ProgrammerCalculator.vala"
					i = 0;
#line 2706 "ProgrammerCalculator.c"
					{
						gboolean _tmp49_ = FALSE;
#line 263 "../src/Core/ProgrammerCalculator.vala"
						_tmp49_ = TRUE;
#line 263 "../src/Core/ProgrammerCalculator.vala"
						while (TRUE) {
#line 2713 "ProgrammerCalculator.c"
							gint _tmp51_;
							gint _tmp52_;
							const gchar* _tmp53_;
							gchar* _tmp54_;
#line 263 "../src/Core/ProgrammerCalculator.vala"
							if (!_tmp49_) {
#line 2720 "ProgrammerCalculator.c"
								gint _tmp50_;
#line 263 "../src/Core/ProgrammerCalculator.vala"
								_tmp50_ = i;
#line 263 "../src/Core/ProgrammerCalculator.vala"
								i = _tmp50_ + 1;
#line 2726 "ProgrammerCalculator.c"
							}
#line 263 "../src/Core/ProgrammerCalculator.vala"
							_tmp49_ = FALSE;
#line 263 "../src/Core/ProgrammerCalculator.vala"
							_tmp51_ = strlen (binary_value);
#line 263 "../src/Core/ProgrammerCalculator.vala"
							_tmp52_ = _tmp51_;
#line 263 "../src/Core/ProgrammerCalculator.vala"
							if (!(i < (64 - _tmp52_))) {
#line 263 "../src/Core/ProgrammerCalculator.vala"
								break;
#line 2738 "ProgrammerCalculator.c"
							}
#line 264 "../src/Core/ProgrammerCalculator.vala"
							_tmp53_ = pre_zeros;
#line 264 "../src/Core/ProgrammerCalculator.vala"
							_tmp54_ = g_strconcat (_tmp53_, "0", NULL);
#line 264 "../src/Core/ProgrammerCalculator.vala"
							_g_free0 (pre_zeros);
#line 264 "../src/Core/ProgrammerCalculator.vala"
							pre_zeros = _tmp54_;
#line 2748 "ProgrammerCalculator.c"
						}
					}
				}
#line 266 "../src/Core/ProgrammerCalculator.vala"
				_tmp55_ = pre_zeros;
#line 266 "../src/Core/ProgrammerCalculator.vala"
				_tmp56_ = g_strconcat (_tmp55_, binary_value, NULL);
#line 266 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (new_binary);
#line 266 "../src/Core/ProgrammerCalculator.vala"
				new_binary = _tmp56_;
#line 257 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (pre_zeros);
#line 2762 "ProgrammerCalculator.c"
			}
#line 268 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 2766 "ProgrammerCalculator.c"
		}
		default:
#line 216 "../src/Core/ProgrammerCalculator.vala"
		break;
#line 2771 "ProgrammerCalculator.c"
	}
#line 270 "../src/Core/ProgrammerCalculator.vala"
	if (*format) {
#line 2775 "ProgrammerCalculator.c"
		gchar* formatted_binary = NULL;
		gchar* _tmp57_;
#line 271 "../src/Core/ProgrammerCalculator.vala"
		_tmp57_ = g_strdup ("");
#line 271 "../src/Core/ProgrammerCalculator.vala"
		formatted_binary = _tmp57_;
#line 2782 "ProgrammerCalculator.c"
		{
			gint i = 0;
#line 272 "../src/Core/ProgrammerCalculator.vala"
			i = 0;
#line 2787 "ProgrammerCalculator.c"
			{
				gboolean _tmp58_ = FALSE;
#line 272 "../src/Core/ProgrammerCalculator.vala"
				_tmp58_ = TRUE;
#line 272 "../src/Core/ProgrammerCalculator.vala"
				while (TRUE) {
#line 2794 "ProgrammerCalculator.c"
					const gchar* _tmp60_;
					gint _tmp61_;
					gint _tmp62_;
					const gchar* _tmp63_;
					const gchar* _tmp64_;
					gchar* _tmp65_;
					gchar* _tmp66_;
					gchar* _tmp67_;
#line 272 "../src/Core/ProgrammerCalculator.vala"
					if (!_tmp58_) {
#line 2805 "ProgrammerCalculator.c"
						gint _tmp59_;
#line 272 "../src/Core/ProgrammerCalculator.vala"
						_tmp59_ = i;
#line 272 "../src/Core/ProgrammerCalculator.vala"
						i = _tmp59_ + 1;
#line 2811 "ProgrammerCalculator.c"
					}
#line 272 "../src/Core/ProgrammerCalculator.vala"
					_tmp58_ = FALSE;
#line 272 "../src/Core/ProgrammerCalculator.vala"
					_tmp60_ = new_binary;
#line 272 "../src/Core/ProgrammerCalculator.vala"
					_tmp61_ = strlen (_tmp60_);
#line 272 "../src/Core/ProgrammerCalculator.vala"
					_tmp62_ = _tmp61_;
#line 272 "../src/Core/ProgrammerCalculator.vala"
					if (!(i < _tmp62_)) {
#line 272 "../src/Core/ProgrammerCalculator.vala"
						break;
#line 2825 "ProgrammerCalculator.c"
					}
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_tmp63_ = formatted_binary;
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_tmp64_ = new_binary;
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_tmp65_ = g_unichar_to_string (string_get_char (_tmp64_, (glong) i));
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_tmp66_ = _tmp65_;
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_tmp67_ = g_strconcat (_tmp63_, _tmp66_, NULL);
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (formatted_binary);
#line 273 "../src/Core/ProgrammerCalculator.vala"
					formatted_binary = _tmp67_;
#line 273 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (_tmp66_);
#line 274 "../src/Core/ProgrammerCalculator.vala"
					if (((i + 1) % 8) == 0) {
#line 2845 "ProgrammerCalculator.c"
						const gchar* _tmp68_;
						gchar* _tmp69_;
#line 275 "../src/Core/ProgrammerCalculator.vala"
						_tmp68_ = formatted_binary;
#line 275 "../src/Core/ProgrammerCalculator.vala"
						_tmp69_ = g_strconcat (_tmp68_, " ", NULL);
#line 275 "../src/Core/ProgrammerCalculator.vala"
						_g_free0 (formatted_binary);
#line 275 "../src/Core/ProgrammerCalculator.vala"
						formatted_binary = _tmp69_;
#line 2856 "ProgrammerCalculator.c"
					}
				}
			}
		}
#line 278 "../src/Core/ProgrammerCalculator.vala"
		result = formatted_binary;
#line 278 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (new_binary);
#line 278 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 2867 "ProgrammerCalculator.c"
	}
#line 280 "../src/Core/ProgrammerCalculator.vala"
	result = new_binary;
#line 280 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 2873 "ProgrammerCalculator.c"
}

static gchar*
string_chug (const gchar* self)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1351 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1352 "glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1352 "glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1353 "glib-2.0.vapi"
	g_strchug (_result_);
#line 1354 "glib-2.0.vapi"
	result = _result_;
#line 1354 "glib-2.0.vapi"
	return result;
#line 2894 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_decimal_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                              const gchar* number,
                                                              PebblesGlobalWordLength* wrd_length)
{
	gint n = 0;
	gchar* hexa = NULL;
	gchar* _tmp0_;
	gint i = 0;
	gchar* hex_value = NULL;
	gchar* _tmp11_;
	const gchar* _tmp19_ = NULL;
	const gchar* _tmp20_;
	gchar* _tmp21_;
	gchar* _tmp22_;
	gboolean _tmp23_;
	gchar* _tmp25_;
	gchar* result = NULL;
#line 283 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 283 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (number != NULL, NULL);
#line 284 "../src/Core/ProgrammerCalculator.vala"
	n = atoi (number);
#line 285 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_strdup ("");
#line 285 "../src/Core/ProgrammerCalculator.vala"
	hexa = _tmp0_;
#line 287 "../src/Core/ProgrammerCalculator.vala"
	i = 0;
#line 288 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 2929 "ProgrammerCalculator.c"
		gint temp = 0;
		gint _tmp10_;
#line 288 "../src/Core/ProgrammerCalculator.vala"
		if (!(n != 0)) {
#line 288 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 2936 "ProgrammerCalculator.c"
		}
#line 289 "../src/Core/ProgrammerCalculator.vala"
		temp = 0;
#line 290 "../src/Core/ProgrammerCalculator.vala"
		temp = n % 16;
#line 291 "../src/Core/ProgrammerCalculator.vala"
		if (temp < 10) {
#line 2944 "ProgrammerCalculator.c"
			const gchar* _tmp1_;
			gchar* _tmp2_;
			gchar* _tmp3_;
			gchar* _tmp4_;
#line 292 "../src/Core/ProgrammerCalculator.vala"
			_tmp1_ = hexa;
#line 292 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = g_strdup_printf ("%i", temp);
#line 292 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_ = _tmp2_;
#line 292 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_ = g_strconcat (_tmp1_, _tmp3_, NULL);
#line 292 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (hexa);
#line 292 "../src/Core/ProgrammerCalculator.vala"
			hexa = _tmp4_;
#line 292 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp3_);
#line 2963 "ProgrammerCalculator.c"
		} else {
			const gchar* _tmp5_;
			gchar _tmp6_;
			gchar* _tmp7_;
			gchar* _tmp8_;
			gchar* _tmp9_;
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = hexa;
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = PEBBLES_PROGRAMMER_CALCULATOR_HEXADECIMAL_DIGITS[temp - 10];
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = g_strdup_printf ("%c", _tmp6_);
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = _tmp7_;
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = g_strconcat (_tmp5_, _tmp8_, NULL);
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (hexa);
#line 294 "../src/Core/ProgrammerCalculator.vala"
			hexa = _tmp9_;
#line 294 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp8_);
#line 2986 "ProgrammerCalculator.c"
		}
#line 296 "../src/Core/ProgrammerCalculator.vala"
		_tmp10_ = i;
#line 296 "../src/Core/ProgrammerCalculator.vala"
		i = _tmp10_ + 1;
#line 297 "../src/Core/ProgrammerCalculator.vala"
		n /= 16;
#line 2994 "ProgrammerCalculator.c"
	}
#line 300 "../src/Core/ProgrammerCalculator.vala"
	_tmp11_ = g_strdup ("");
#line 300 "../src/Core/ProgrammerCalculator.vala"
	hex_value = _tmp11_;
#line 3000 "ProgrammerCalculator.c"
	{
		gint j = 0;
#line 301 "../src/Core/ProgrammerCalculator.vala"
		j = i - 1;
#line 3005 "ProgrammerCalculator.c"
		{
			gboolean _tmp12_ = FALSE;
#line 301 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = TRUE;
#line 301 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 3012 "ProgrammerCalculator.c"
				const gchar* _tmp14_;
				const gchar* _tmp15_;
				gchar* _tmp16_;
				gchar* _tmp17_;
				gchar* _tmp18_;
#line 301 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp12_) {
#line 3020 "ProgrammerCalculator.c"
					gint _tmp13_;
#line 301 "../src/Core/ProgrammerCalculator.vala"
					_tmp13_ = j;
#line 301 "../src/Core/ProgrammerCalculator.vala"
					j = _tmp13_ - 1;
#line 3026 "ProgrammerCalculator.c"
				}
#line 301 "../src/Core/ProgrammerCalculator.vala"
				_tmp12_ = FALSE;
#line 301 "../src/Core/ProgrammerCalculator.vala"
				if (!(j >= 0)) {
#line 301 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 3034 "ProgrammerCalculator.c"
				}
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_ = hex_value;
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_tmp15_ = hexa;
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_tmp16_ = g_strdup_printf ("%c", string_get (_tmp15_, (glong) j));
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_tmp17_ = _tmp16_;
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_tmp18_ = g_strconcat (_tmp14_, _tmp17_, NULL);
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (hex_value);
#line 302 "../src/Core/ProgrammerCalculator.vala"
				hex_value = _tmp18_;
#line 302 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (_tmp17_);
#line 3052 "ProgrammerCalculator.c"
			}
		}
	}
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_tmp20_ = hex_value;
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_tmp21_ = string_chug (_tmp20_);
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_tmp22_ = _tmp21_;
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_tmp23_ = g_strcmp0 (_tmp22_, "") == 0;
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp22_);
#line 304 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp23_) {
#line 304 "../src/Core/ProgrammerCalculator.vala"
		_tmp19_ = "0";
#line 3070 "ProgrammerCalculator.c"
	} else {
		const gchar* _tmp24_;
#line 304 "../src/Core/ProgrammerCalculator.vala"
		_tmp24_ = hex_value;
#line 304 "../src/Core/ProgrammerCalculator.vala"
		_tmp19_ = _tmp24_;
#line 3077 "ProgrammerCalculator.c"
	}
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_tmp25_ = g_strdup (_tmp19_);
#line 304 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp25_;
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (hex_value);
#line 304 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (hexa);
#line 304 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 3089 "ProgrammerCalculator.c"
}

static const gchar*
string_to_string (const gchar* self)
{
	const gchar* result = NULL;
#line 1570 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1571 "glib-2.0.vapi"
	result = self;
#line 1571 "glib-2.0.vapi"
	return result;
#line 3102 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_hexadecimal_to_decimal (PebblesProgrammerCalculator* self,
                                                              const gchar* number,
                                                              PebblesGlobalWordLength* wrd_length)
{
	gchar* binary_value = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gchar* decimal = NULL;
	gboolean _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* result = NULL;
#line 307 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 307 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (number != NULL, NULL);
#line 308 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 308 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_convert_hexadecimal_to_binary (self, number, wrd_length, &_tmp0_);
#line 308 "../src/Core/ProgrammerCalculator.vala"
	binary_value = _tmp1_;
#line 309 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = FALSE;
#line 309 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = pebbles_programmer_calculator_convert_binary_to_decimal (self, binary_value, wrd_length, &_tmp2_);
#line 309 "../src/Core/ProgrammerCalculator.vala"
	decimal = _tmp3_;
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = g_strconcat (number, ", ", NULL);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp5_ = _tmp4_;
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp6_ = g_strconcat (_tmp5_, binary_value, NULL);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp7_ = _tmp6_;
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp8_ = g_strconcat (_tmp7_, ", ", NULL);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp9_ = _tmp8_;
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp10_ = g_strconcat (_tmp9_, decimal, NULL);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_tmp11_ = _tmp10_;
#line 310 "../src/Core/ProgrammerCalculator.vala"
	g_print ("%s", _tmp11_);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp11_);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp9_);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp7_);
#line 310 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp5_);
#line 311 "../src/Core/ProgrammerCalculator.vala"
	_tmp12_ = string_to_string (decimal);
#line 311 "../src/Core/ProgrammerCalculator.vala"
	_tmp13_ = g_strdup (_tmp12_);
#line 311 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp13_;
#line 311 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (decimal);
#line 311 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (binary_value);
#line 311 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 3181 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_hexadecimal_to_binary (PebblesProgrammerCalculator* self,
                                                             const gchar* hex_value,
                                                             PebblesGlobalWordLength* wrd_length,
                                                             gboolean* format)
{
	glong i = 0L;
	gchar* binary_value = NULL;
	gchar* _tmp0_;
	gchar* formatted_binary = NULL;
	const gchar* _tmp36_;
	gchar* _tmp37_;
	const gchar* _tmp38_;
	gchar* _tmp39_;
	gchar* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	gchar* _tmp43_;
	gchar* _tmp44_;
	gchar* _tmp45_;
	gchar* _tmp46_;
	gchar* result = NULL;
#line 314 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 314 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (hex_value != NULL, NULL);
#line 316 "../src/Core/ProgrammerCalculator.vala"
	i = (glong) 0;
#line 317 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_strdup ("");
#line 317 "../src/Core/ProgrammerCalculator.vala"
	binary_value = _tmp0_;
#line 318 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 3218 "ProgrammerCalculator.c"
		gint _tmp1_;
		gint _tmp2_;
		glong _tmp35_;
#line 318 "../src/Core/ProgrammerCalculator.vala"
		_tmp1_ = strlen (hex_value);
#line 318 "../src/Core/ProgrammerCalculator.vala"
		_tmp2_ = _tmp1_;
#line 318 "../src/Core/ProgrammerCalculator.vala"
		if (!(i < ((glong) _tmp2_))) {
#line 318 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 3230 "ProgrammerCalculator.c"
		}
#line 320 "../src/Core/ProgrammerCalculator.vala"
		switch (string_get_char (hex_value, i)) {
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '0':
#line 3236 "ProgrammerCalculator.c"
			{
				const gchar* _tmp3_;
				gchar* _tmp4_;
#line 322 "../src/Core/ProgrammerCalculator.vala"
				_tmp3_ = binary_value;
#line 322 "../src/Core/ProgrammerCalculator.vala"
				_tmp4_ = g_strconcat (_tmp3_, "0000", NULL);
#line 322 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 322 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp4_;
#line 323 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3250 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '1':
#line 3254 "ProgrammerCalculator.c"
			{
				const gchar* _tmp5_;
				gchar* _tmp6_;
#line 325 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = binary_value;
#line 325 "../src/Core/ProgrammerCalculator.vala"
				_tmp6_ = g_strconcat (_tmp5_, "0001", NULL);
#line 325 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 325 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp6_;
#line 326 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3268 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '2':
#line 3272 "ProgrammerCalculator.c"
			{
				const gchar* _tmp7_;
				gchar* _tmp8_;
#line 328 "../src/Core/ProgrammerCalculator.vala"
				_tmp7_ = binary_value;
#line 328 "../src/Core/ProgrammerCalculator.vala"
				_tmp8_ = g_strconcat (_tmp7_, "0010", NULL);
#line 328 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 328 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp8_;
#line 329 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3286 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '3':
#line 3290 "ProgrammerCalculator.c"
			{
				const gchar* _tmp9_;
				gchar* _tmp10_;
#line 331 "../src/Core/ProgrammerCalculator.vala"
				_tmp9_ = binary_value;
#line 331 "../src/Core/ProgrammerCalculator.vala"
				_tmp10_ = g_strconcat (_tmp9_, "0011", NULL);
#line 331 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 331 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp10_;
#line 332 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3304 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '4':
#line 3308 "ProgrammerCalculator.c"
			{
				const gchar* _tmp11_;
				gchar* _tmp12_;
#line 334 "../src/Core/ProgrammerCalculator.vala"
				_tmp11_ = binary_value;
#line 334 "../src/Core/ProgrammerCalculator.vala"
				_tmp12_ = g_strconcat (_tmp11_, "0100", NULL);
#line 334 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 334 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp12_;
#line 335 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3322 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '5':
#line 3326 "ProgrammerCalculator.c"
			{
				const gchar* _tmp13_;
				gchar* _tmp14_;
#line 337 "../src/Core/ProgrammerCalculator.vala"
				_tmp13_ = binary_value;
#line 337 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_ = g_strconcat (_tmp13_, "0101", NULL);
#line 337 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 337 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp14_;
#line 338 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3340 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '6':
#line 3344 "ProgrammerCalculator.c"
			{
				const gchar* _tmp15_;
				gchar* _tmp16_;
#line 340 "../src/Core/ProgrammerCalculator.vala"
				_tmp15_ = binary_value;
#line 340 "../src/Core/ProgrammerCalculator.vala"
				_tmp16_ = g_strconcat (_tmp15_, "0110", NULL);
#line 340 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 340 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp16_;
#line 341 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3358 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '7':
#line 3362 "ProgrammerCalculator.c"
			{
				const gchar* _tmp17_;
				gchar* _tmp18_;
#line 343 "../src/Core/ProgrammerCalculator.vala"
				_tmp17_ = binary_value;
#line 343 "../src/Core/ProgrammerCalculator.vala"
				_tmp18_ = g_strconcat (_tmp17_, "0111", NULL);
#line 343 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 343 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp18_;
#line 344 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3376 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '8':
#line 3380 "ProgrammerCalculator.c"
			{
				const gchar* _tmp19_;
				gchar* _tmp20_;
#line 346 "../src/Core/ProgrammerCalculator.vala"
				_tmp19_ = binary_value;
#line 346 "../src/Core/ProgrammerCalculator.vala"
				_tmp20_ = g_strconcat (_tmp19_, "1000", NULL);
#line 346 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 346 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp20_;
#line 347 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3394 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case '9':
#line 3398 "ProgrammerCalculator.c"
			{
				const gchar* _tmp21_;
				gchar* _tmp22_;
#line 349 "../src/Core/ProgrammerCalculator.vala"
				_tmp21_ = binary_value;
#line 349 "../src/Core/ProgrammerCalculator.vala"
				_tmp22_ = g_strconcat (_tmp21_, "1001", NULL);
#line 349 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 349 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp22_;
#line 350 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3412 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'A':
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'a':
#line 3418 "ProgrammerCalculator.c"
			{
				const gchar* _tmp23_;
				gchar* _tmp24_;
#line 353 "../src/Core/ProgrammerCalculator.vala"
				_tmp23_ = binary_value;
#line 353 "../src/Core/ProgrammerCalculator.vala"
				_tmp24_ = g_strconcat (_tmp23_, "1010", NULL);
#line 353 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 353 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp24_;
#line 354 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3432 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'B':
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'b':
#line 3438 "ProgrammerCalculator.c"
			{
				const gchar* _tmp25_;
				gchar* _tmp26_;
#line 357 "../src/Core/ProgrammerCalculator.vala"
				_tmp25_ = binary_value;
#line 357 "../src/Core/ProgrammerCalculator.vala"
				_tmp26_ = g_strconcat (_tmp25_, "1011", NULL);
#line 357 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 357 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp26_;
#line 358 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3452 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'C':
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'c':
#line 3458 "ProgrammerCalculator.c"
			{
				const gchar* _tmp27_;
				gchar* _tmp28_;
#line 361 "../src/Core/ProgrammerCalculator.vala"
				_tmp27_ = binary_value;
#line 361 "../src/Core/ProgrammerCalculator.vala"
				_tmp28_ = g_strconcat (_tmp27_, "1100", NULL);
#line 361 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 361 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp28_;
#line 362 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3472 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'D':
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'd':
#line 3478 "ProgrammerCalculator.c"
			{
				const gchar* _tmp29_;
				gchar* _tmp30_;
#line 365 "../src/Core/ProgrammerCalculator.vala"
				_tmp29_ = binary_value;
#line 365 "../src/Core/ProgrammerCalculator.vala"
				_tmp30_ = g_strconcat (_tmp29_, "1101", NULL);
#line 365 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 365 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp30_;
#line 366 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3492 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'E':
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'e':
#line 3498 "ProgrammerCalculator.c"
			{
				const gchar* _tmp31_;
				gchar* _tmp32_;
#line 369 "../src/Core/ProgrammerCalculator.vala"
				_tmp31_ = binary_value;
#line 369 "../src/Core/ProgrammerCalculator.vala"
				_tmp32_ = g_strconcat (_tmp31_, "1110", NULL);
#line 369 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 369 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp32_;
#line 370 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3512 "ProgrammerCalculator.c"
			}
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'F':
#line 320 "../src/Core/ProgrammerCalculator.vala"
			case 'f':
#line 3518 "ProgrammerCalculator.c"
			{
				const gchar* _tmp33_;
				gchar* _tmp34_;
#line 373 "../src/Core/ProgrammerCalculator.vala"
				_tmp33_ = binary_value;
#line 373 "../src/Core/ProgrammerCalculator.vala"
				_tmp34_ = g_strconcat (_tmp33_, "1111", NULL);
#line 373 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (binary_value);
#line 373 "../src/Core/ProgrammerCalculator.vala"
				binary_value = _tmp34_;
#line 374 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3532 "ProgrammerCalculator.c"
			}
			default:
			{
#line 376 "../src/Core/ProgrammerCalculator.vala"
				break;
#line 3538 "ProgrammerCalculator.c"
			}
		}
#line 378 "../src/Core/ProgrammerCalculator.vala"
		_tmp35_ = i;
#line 378 "../src/Core/ProgrammerCalculator.vala"
		i = _tmp35_ + 1;
#line 3545 "ProgrammerCalculator.c"
	}
#line 381 "../src/Core/ProgrammerCalculator.vala"
	_tmp36_ = binary_value;
#line 381 "../src/Core/ProgrammerCalculator.vala"
	_tmp37_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, _tmp36_, *wrd_length, format);
#line 381 "../src/Core/ProgrammerCalculator.vala"
	formatted_binary = _tmp37_;
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp38_ = binary_value;
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp39_ = g_strconcat (">>>>>>", _tmp38_, NULL);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp40_ = _tmp39_;
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp41_ = g_strconcat (_tmp40_, "<<<", NULL);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp42_ = _tmp41_;
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp43_ = g_strconcat (_tmp42_, formatted_binary, NULL);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp44_ = _tmp43_;
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp45_ = g_strconcat (_tmp44_, ">>>\n", NULL);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_tmp46_ = _tmp45_;
#line 382 "../src/Core/ProgrammerCalculator.vala"
	g_print ("%s", _tmp46_);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp46_);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp44_);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp42_);
#line 382 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp40_);
#line 383 "../src/Core/ProgrammerCalculator.vala"
	result = formatted_binary;
#line 383 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (binary_value);
#line 383 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 3587 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_map_bin_to_hex (const gchar* bin)
{
	const gchar* _tmp0_;
	GQuark _tmp2_ = 0U;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label0 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label1 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label2 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label3 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label4 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label5 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label6 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label7 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label8 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label9 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label10 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label11 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label12 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label13 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label14 = 0;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	static GQuark _tmp1_label15 = 0;
#line 3627 "ProgrammerCalculator.c"
	gchar* _tmp19_;
	gchar* result = NULL;
#line 385 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (bin != NULL, NULL);
#line 386 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = bin;
#line 386 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = (NULL == _tmp0_) ? 0 : g_quark_from_string (_tmp0_);
#line 386 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp2_ == ((0 != _tmp1_label0) ? _tmp1_label0 : (_tmp1_label0 = g_quark_from_static_string ("0000")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3640 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp3_;
#line 388 "../src/Core/ProgrammerCalculator.vala"
				_tmp3_ = g_strdup ("0");
#line 388 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp3_;
#line 388 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3650 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label1) ? _tmp1_label1 : (_tmp1_label1 = g_quark_from_static_string ("0001")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3656 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp4_;
#line 390 "../src/Core/ProgrammerCalculator.vala"
				_tmp4_ = g_strdup ("1");
#line 390 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp4_;
#line 390 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3666 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label2) ? _tmp1_label2 : (_tmp1_label2 = g_quark_from_static_string ("0010")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3672 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp5_;
#line 392 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = g_strdup ("2");
#line 392 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp5_;
#line 392 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3682 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label3) ? _tmp1_label3 : (_tmp1_label3 = g_quark_from_static_string ("0011")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3688 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp6_;
#line 394 "../src/Core/ProgrammerCalculator.vala"
				_tmp6_ = g_strdup ("3");
#line 394 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp6_;
#line 394 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3698 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label4) ? _tmp1_label4 : (_tmp1_label4 = g_quark_from_static_string ("0100")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3704 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp7_;
#line 396 "../src/Core/ProgrammerCalculator.vala"
				_tmp7_ = g_strdup ("4");
#line 396 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp7_;
#line 396 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3714 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label5) ? _tmp1_label5 : (_tmp1_label5 = g_quark_from_static_string ("0101")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3720 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp8_;
#line 398 "../src/Core/ProgrammerCalculator.vala"
				_tmp8_ = g_strdup ("5");
#line 398 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp8_;
#line 398 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3730 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label6) ? _tmp1_label6 : (_tmp1_label6 = g_quark_from_static_string ("0110")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3736 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp9_;
#line 400 "../src/Core/ProgrammerCalculator.vala"
				_tmp9_ = g_strdup ("6");
#line 400 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp9_;
#line 400 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3746 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label7) ? _tmp1_label7 : (_tmp1_label7 = g_quark_from_static_string ("0111")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3752 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp10_;
#line 402 "../src/Core/ProgrammerCalculator.vala"
				_tmp10_ = g_strdup ("7");
#line 402 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp10_;
#line 402 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3762 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label8) ? _tmp1_label8 : (_tmp1_label8 = g_quark_from_static_string ("1000")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3768 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp11_;
#line 404 "../src/Core/ProgrammerCalculator.vala"
				_tmp11_ = g_strdup ("8");
#line 404 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp11_;
#line 404 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3778 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label9) ? _tmp1_label9 : (_tmp1_label9 = g_quark_from_static_string ("1001")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3784 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp12_;
#line 406 "../src/Core/ProgrammerCalculator.vala"
				_tmp12_ = g_strdup ("9");
#line 406 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp12_;
#line 406 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3794 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label10) ? _tmp1_label10 : (_tmp1_label10 = g_quark_from_static_string ("1010")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3800 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp13_;
#line 408 "../src/Core/ProgrammerCalculator.vala"
				_tmp13_ = g_strdup ("a");
#line 408 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp13_;
#line 408 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3810 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label11) ? _tmp1_label11 : (_tmp1_label11 = g_quark_from_static_string ("1011")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3816 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp14_;
#line 410 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_ = g_strdup ("b");
#line 410 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp14_;
#line 410 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3826 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label12) ? _tmp1_label12 : (_tmp1_label12 = g_quark_from_static_string ("1100")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3832 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp15_;
#line 412 "../src/Core/ProgrammerCalculator.vala"
				_tmp15_ = g_strdup ("b");
#line 412 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp15_;
#line 412 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3842 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label13) ? _tmp1_label13 : (_tmp1_label13 = g_quark_from_static_string ("1101")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3848 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp16_;
#line 414 "../src/Core/ProgrammerCalculator.vala"
				_tmp16_ = g_strdup ("d");
#line 414 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp16_;
#line 414 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3858 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label14) ? _tmp1_label14 : (_tmp1_label14 = g_quark_from_static_string ("1110")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3864 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp17_;
#line 416 "../src/Core/ProgrammerCalculator.vala"
				_tmp17_ = g_strdup ("e");
#line 416 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp17_;
#line 416 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3874 "ProgrammerCalculator.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label15) ? _tmp1_label15 : (_tmp1_label15 = g_quark_from_static_string ("1111")))) {
#line 386 "../src/Core/ProgrammerCalculator.vala"
		switch (0) {
#line 3880 "ProgrammerCalculator.c"
			default:
			{
				gchar* _tmp18_;
#line 418 "../src/Core/ProgrammerCalculator.vala"
				_tmp18_ = g_strdup ("f");
#line 418 "../src/Core/ProgrammerCalculator.vala"
				result = _tmp18_;
#line 418 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 3890 "ProgrammerCalculator.c"
			}
		}
	}
#line 420 "../src/Core/ProgrammerCalculator.vala"
	_tmp19_ = g_strdup ("");
#line 420 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp19_;
#line 420 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 3900 "ProgrammerCalculator.c"
}

static glong
string_strnlen (gchar* str,
                glong maxlen)
{
	gchar* end = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	glong result = 0L;
#line 1447 "glib-2.0.vapi"
	_tmp0_ = memchr (str, 0, (gsize) maxlen);
#line 1447 "glib-2.0.vapi"
	end = _tmp0_;
#line 1448 "glib-2.0.vapi"
	_tmp1_ = end;
#line 1448 "glib-2.0.vapi"
	if (_tmp1_ == NULL) {
#line 1449 "glib-2.0.vapi"
		result = maxlen;
#line 1449 "glib-2.0.vapi"
		return result;
#line 3923 "ProgrammerCalculator.c"
	} else {
		gchar* _tmp2_;
#line 1451 "glib-2.0.vapi"
		_tmp2_ = end;
#line 1451 "glib-2.0.vapi"
		result = (glong) (_tmp2_ - str);
#line 1451 "glib-2.0.vapi"
		return result;
#line 3932 "ProgrammerCalculator.c"
	}
}

static gchar*
string_substring (const gchar* self,
                  glong offset,
                  glong len)
{
	glong string_length = 0L;
	gboolean _tmp0_ = FALSE;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 1458 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1460 "glib-2.0.vapi"
	if (offset >= ((glong) 0)) {
#line 1460 "glib-2.0.vapi"
		_tmp0_ = len >= ((glong) 0);
#line 3951 "ProgrammerCalculator.c"
	} else {
#line 1460 "glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 3955 "ProgrammerCalculator.c"
	}
#line 1460 "glib-2.0.vapi"
	if (_tmp0_) {
#line 1462 "glib-2.0.vapi"
		string_length = string_strnlen ((gchar*) self, offset + len);
#line 3961 "ProgrammerCalculator.c"
	} else {
		gint _tmp1_;
		gint _tmp2_;
#line 1464 "glib-2.0.vapi"
		_tmp1_ = strlen (self);
#line 1464 "glib-2.0.vapi"
		_tmp2_ = _tmp1_;
#line 1464 "glib-2.0.vapi"
		string_length = (glong) _tmp2_;
#line 3971 "ProgrammerCalculator.c"
	}
#line 1467 "glib-2.0.vapi"
	if (offset < ((glong) 0)) {
#line 1468 "glib-2.0.vapi"
		offset = string_length + offset;
#line 1469 "glib-2.0.vapi"
		g_return_val_if_fail (offset >= ((glong) 0), NULL);
#line 3979 "ProgrammerCalculator.c"
	} else {
#line 1471 "glib-2.0.vapi"
		g_return_val_if_fail (offset <= string_length, NULL);
#line 3983 "ProgrammerCalculator.c"
	}
#line 1473 "glib-2.0.vapi"
	if (len < ((glong) 0)) {
#line 1474 "glib-2.0.vapi"
		len = string_length - offset;
#line 3989 "ProgrammerCalculator.c"
	}
#line 1476 "glib-2.0.vapi"
	g_return_val_if_fail ((offset + len) <= string_length, NULL);
#line 1477 "glib-2.0.vapi"
	_tmp3_ = g_strndup (((gchar*) self) + offset, (gsize) len);
#line 1477 "glib-2.0.vapi"
	result = _tmp3_;
#line 1477 "glib-2.0.vapi"
	return result;
#line 3999 "ProgrammerCalculator.c"
}

static gchar*
string_splice (const gchar* self,
               glong start,
               glong end,
               const gchar* str)
{
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gsize str_size = 0UL;
	const gchar* _result_ = NULL;
	void* _tmp6_;
	gchar* dest = NULL;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp12_;
	const gchar* _tmp13_;
	gchar* result = NULL;
#line 1494 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1495 "glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1495 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1495 "glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1496 "glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 1497 "glib-2.0.vapi"
		start = string_length + start;
#line 4035 "ProgrammerCalculator.c"
	}
#line 1499 "glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 1500 "glib-2.0.vapi"
		end = string_length + end;
#line 4041 "ProgrammerCalculator.c"
	}
#line 1502 "glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 1502 "glib-2.0.vapi"
		_tmp2_ = start <= string_length;
#line 4047 "ProgrammerCalculator.c"
	} else {
#line 1502 "glib-2.0.vapi"
		_tmp2_ = FALSE;
#line 4051 "ProgrammerCalculator.c"
	}
#line 1502 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp2_, NULL);
#line 1503 "glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 1503 "glib-2.0.vapi"
		_tmp3_ = end <= string_length;
#line 4059 "ProgrammerCalculator.c"
	} else {
#line 1503 "glib-2.0.vapi"
		_tmp3_ = FALSE;
#line 4063 "ProgrammerCalculator.c"
	}
#line 1503 "glib-2.0.vapi"
	g_return_val_if_fail (_tmp3_, NULL);
#line 1504 "glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1507 "glib-2.0.vapi"
	if (str == NULL) {
#line 1508 "glib-2.0.vapi"
		str_size = (gsize) 0;
#line 4073 "ProgrammerCalculator.c"
	} else {
		gint _tmp4_;
		gint _tmp5_;
#line 1510 "glib-2.0.vapi"
		_tmp4_ = strlen ((const gchar*) str);
#line 1510 "glib-2.0.vapi"
		_tmp5_ = _tmp4_;
#line 1510 "glib-2.0.vapi"
		str_size = (gsize) _tmp5_;
#line 4083 "ProgrammerCalculator.c"
	}
#line 1513 "glib-2.0.vapi"
	_tmp6_ = g_malloc0 (((string_length - (end - start)) + str_size) + 1);
#line 1513 "glib-2.0.vapi"
	_result_ = _tmp6_;
#line 1515 "glib-2.0.vapi"
	_tmp7_ = _result_;
#line 1515 "glib-2.0.vapi"
	dest = (gchar*) _tmp7_;
#line 1517 "glib-2.0.vapi"
	_tmp8_ = dest;
#line 1517 "glib-2.0.vapi"
	memcpy (_tmp8_, self, (gsize) start);
#line 1518 "glib-2.0.vapi"
	_tmp9_ = dest;
#line 1518 "glib-2.0.vapi"
	dest = _tmp9_ + start;
#line 1520 "glib-2.0.vapi"
	if (str != NULL) {
#line 4103 "ProgrammerCalculator.c"
		gchar* _tmp10_;
		gchar* _tmp11_;
#line 1521 "glib-2.0.vapi"
		_tmp10_ = dest;
#line 1521 "glib-2.0.vapi"
		memcpy (_tmp10_, str, str_size);
#line 1522 "glib-2.0.vapi"
		_tmp11_ = dest;
#line 1522 "glib-2.0.vapi"
		dest = _tmp11_ + str_size;
#line 4114 "ProgrammerCalculator.c"
	}
#line 1525 "glib-2.0.vapi"
	_tmp12_ = dest;
#line 1525 "glib-2.0.vapi"
	memcpy (_tmp12_, ((gchar*) self) + end, (gsize) (string_length - end));
#line 1527 "glib-2.0.vapi"
	_tmp13_ = _result_;
#line 1527 "glib-2.0.vapi"
	_result_ = NULL;
#line 1527 "glib-2.0.vapi"
	result = (gchar*) _tmp13_;
#line 1527 "glib-2.0.vapi"
	return result;
#line 4128 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_binary_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                             const gchar* bin_value,
                                                             PebblesGlobalWordLength* wrd_length,
                                                             gboolean* negative)
{
	gchar* bin = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gint i = 0;
	gchar* hex_value = NULL;
	gchar* _tmp2_;
	gchar* converted_binary = NULL;
	const gchar* _tmp3_;
	gchar* _tmp4_;
	const gchar* _tmp39_ = NULL;
	const gchar* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	gboolean _tmp43_;
	gchar* _tmp45_;
	gchar* result = NULL;
#line 423 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 423 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (bin_value != NULL, NULL);
#line 424 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 424 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, bin_value, *wrd_length, &_tmp0_);
#line 424 "../src/Core/ProgrammerCalculator.vala"
	bin = _tmp1_;
#line 425 "../src/Core/ProgrammerCalculator.vala"
	i = 0;
#line 426 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = g_strdup ("");
#line 426 "../src/Core/ProgrammerCalculator.vala"
	hex_value = _tmp2_;
#line 427 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = bin;
#line 427 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = g_strdup (_tmp3_);
#line 427 "../src/Core/ProgrammerCalculator.vala"
	converted_binary = _tmp4_;
#line 428 "../src/Core/ProgrammerCalculator.vala"
	if (*negative) {
#line 4177 "ProgrammerCalculator.c"
		gchar* _tmp5_;
#line 429 "../src/Core/ProgrammerCalculator.vala"
		_tmp5_ = g_strdup ("");
#line 429 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (converted_binary);
#line 429 "../src/Core/ProgrammerCalculator.vala"
		converted_binary = _tmp5_;
#line 4185 "ProgrammerCalculator.c"
		{
			gboolean _tmp6_ = FALSE;
#line 430 "../src/Core/ProgrammerCalculator.vala"
			i = 0;
#line 430 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = TRUE;
#line 430 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 4194 "ProgrammerCalculator.c"
				const gchar* _tmp8_;
				gint _tmp9_;
				gint _tmp10_;
				const gchar* _tmp11_ = NULL;
				const gchar* _tmp12_;
				const gchar* _tmp13_;
				gchar* _tmp14_;
#line 430 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp6_) {
#line 4204 "ProgrammerCalculator.c"
					gint _tmp7_;
#line 430 "../src/Core/ProgrammerCalculator.vala"
					_tmp7_ = i;
#line 430 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp7_ + 1;
#line 4210 "ProgrammerCalculator.c"
				}
#line 430 "../src/Core/ProgrammerCalculator.vala"
				_tmp6_ = FALSE;
#line 430 "../src/Core/ProgrammerCalculator.vala"
				_tmp8_ = bin;
#line 430 "../src/Core/ProgrammerCalculator.vala"
				_tmp9_ = strlen (_tmp8_);
#line 430 "../src/Core/ProgrammerCalculator.vala"
				_tmp10_ = _tmp9_;
#line 430 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < _tmp10_)) {
#line 430 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 4224 "ProgrammerCalculator.c"
				}
#line 431 "../src/Core/ProgrammerCalculator.vala"
				_tmp12_ = bin;
#line 431 "../src/Core/ProgrammerCalculator.vala"
				if (string_get (_tmp12_, (glong) i) == '1') {
#line 431 "../src/Core/ProgrammerCalculator.vala"
					_tmp11_ = "0";
#line 4232 "ProgrammerCalculator.c"
				} else {
#line 431 "../src/Core/ProgrammerCalculator.vala"
					_tmp11_ = "1";
#line 4236 "ProgrammerCalculator.c"
				}
#line 431 "../src/Core/ProgrammerCalculator.vala"
				_tmp13_ = converted_binary;
#line 431 "../src/Core/ProgrammerCalculator.vala"
				_tmp14_ = g_strconcat (_tmp13_, _tmp11_, NULL);
#line 431 "../src/Core/ProgrammerCalculator.vala"
				_g_free0 (converted_binary);
#line 431 "../src/Core/ProgrammerCalculator.vala"
				converted_binary = _tmp14_;
#line 4246 "ProgrammerCalculator.c"
			}
		}
	}
#line 434 "../src/Core/ProgrammerCalculator.vala"
	i = 0;
#line 435 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 4254 "ProgrammerCalculator.c"
		const gchar* _tmp15_;
		const gchar* _tmp16_;
		gchar* _tmp17_;
		gchar* _tmp18_;
		gchar* _tmp19_;
		gchar* _tmp20_;
		gchar* _tmp21_;
		gboolean _tmp22_ = FALSE;
		const gchar* _tmp23_;
		gint _tmp24_;
		gint _tmp25_;
		const gchar* _tmp27_;
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp15_ = hex_value;
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp16_ = converted_binary;
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp17_ = string_substring (_tmp16_, (glong) i, (glong) 4);
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp18_ = _tmp17_;
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp19_ = pebbles_programmer_calculator_map_bin_to_hex (_tmp18_);
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp20_ = _tmp19_;
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_tmp21_ = g_strconcat (_tmp15_, _tmp20_, NULL);
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (hex_value);
#line 438 "../src/Core/ProgrammerCalculator.vala"
		hex_value = _tmp21_;
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (_tmp20_);
#line 438 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (_tmp18_);
#line 439 "../src/Core/ProgrammerCalculator.vala"
		i += 4;
#line 440 "../src/Core/ProgrammerCalculator.vala"
		_tmp23_ = converted_binary;
#line 440 "../src/Core/ProgrammerCalculator.vala"
		_tmp24_ = strlen (_tmp23_);
#line 440 "../src/Core/ProgrammerCalculator.vala"
		_tmp25_ = _tmp24_;
#line 440 "../src/Core/ProgrammerCalculator.vala"
		if (i == _tmp25_) {
#line 440 "../src/Core/ProgrammerCalculator.vala"
			_tmp22_ = TRUE;
#line 4301 "ProgrammerCalculator.c"
		} else {
			const gchar* _tmp26_;
#line 440 "../src/Core/ProgrammerCalculator.vala"
			_tmp26_ = converted_binary;
#line 440 "../src/Core/ProgrammerCalculator.vala"
			_tmp22_ = g_strcmp0 (_tmp26_, "") == 0;
#line 4308 "ProgrammerCalculator.c"
		}
#line 440 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp22_) {
#line 441 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 4314 "ProgrammerCalculator.c"
		}
#line 444 "../src/Core/ProgrammerCalculator.vala"
		_tmp27_ = converted_binary;
#line 444 "../src/Core/ProgrammerCalculator.vala"
		if (string_get_char (_tmp27_, (glong) i) == ((gunichar) '.')) {
#line 4320 "ProgrammerCalculator.c"
			const gchar* _tmp28_;
			gchar* _tmp29_;
			gint _tmp30_;
#line 446 "../src/Core/ProgrammerCalculator.vala"
			_tmp28_ = hex_value;
#line 446 "../src/Core/ProgrammerCalculator.vala"
			_tmp29_ = g_strconcat (_tmp28_, ".", NULL);
#line 446 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (hex_value);
#line 446 "../src/Core/ProgrammerCalculator.vala"
			hex_value = _tmp29_;
#line 447 "../src/Core/ProgrammerCalculator.vala"
			_tmp30_ = i;
#line 447 "../src/Core/ProgrammerCalculator.vala"
			i = _tmp30_ + 1;
#line 4336 "ProgrammerCalculator.c"
		}
	}
#line 450 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 4341 "ProgrammerCalculator.c"
		const gchar* _tmp31_;
		const gchar* _tmp32_;
		gchar* _tmp33_;
#line 450 "../src/Core/ProgrammerCalculator.vala"
		_tmp31_ = hex_value;
#line 450 "../src/Core/ProgrammerCalculator.vala"
		if (!g_str_has_prefix (_tmp31_, "0")) {
#line 450 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 4351 "ProgrammerCalculator.c"
		}
#line 451 "../src/Core/ProgrammerCalculator.vala"
		_tmp32_ = hex_value;
#line 451 "../src/Core/ProgrammerCalculator.vala"
		_tmp33_ = string_splice (_tmp32_, (glong) 0, (glong) 1, "");
#line 451 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (hex_value);
#line 451 "../src/Core/ProgrammerCalculator.vala"
		hex_value = _tmp33_;
#line 4361 "ProgrammerCalculator.c"
	}
#line 453 "../src/Core/ProgrammerCalculator.vala"
	if (*negative) {
#line 4365 "ProgrammerCalculator.c"
		gint hex_num = 0;
		const gchar* _tmp34_;
		gint _tmp35_;
		gchar* _tmp36_;
		const gchar* _tmp37_;
		gchar* _tmp38_;
#line 454 "../src/Core/ProgrammerCalculator.vala"
		hex_num = 0x0;
#line 455 "../src/Core/ProgrammerCalculator.vala"
		_tmp34_ = hex_value;
#line 455 "../src/Core/ProgrammerCalculator.vala"
		sscanf (_tmp34_, "%x", &hex_num);
#line 456 "../src/Core/ProgrammerCalculator.vala"
		_tmp35_ = hex_num;
#line 456 "../src/Core/ProgrammerCalculator.vala"
		hex_num = _tmp35_ + 1;
#line 457 "../src/Core/ProgrammerCalculator.vala"
		_tmp36_ = g_strdup_printf ("%x", (guint) hex_num);
#line 457 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (hex_value);
#line 457 "../src/Core/ProgrammerCalculator.vala"
		hex_value = _tmp36_;
#line 458 "../src/Core/ProgrammerCalculator.vala"
		_tmp37_ = hex_value;
#line 458 "../src/Core/ProgrammerCalculator.vala"
		_tmp38_ = g_strconcat ("-", _tmp37_, NULL);
#line 458 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (hex_value);
#line 458 "../src/Core/ProgrammerCalculator.vala"
		hex_value = _tmp38_;
#line 4396 "ProgrammerCalculator.c"
	}
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_tmp40_ = hex_value;
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_tmp41_ = string_chug (_tmp40_);
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_tmp42_ = _tmp41_;
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_tmp43_ = g_strcmp0 (_tmp42_, "") == 0;
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp42_);
#line 460 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp43_) {
#line 460 "../src/Core/ProgrammerCalculator.vala"
		_tmp39_ = "0";
#line 4412 "ProgrammerCalculator.c"
	} else {
		const gchar* _tmp44_;
#line 460 "../src/Core/ProgrammerCalculator.vala"
		_tmp44_ = hex_value;
#line 460 "../src/Core/ProgrammerCalculator.vala"
		_tmp39_ = _tmp44_;
#line 4419 "ProgrammerCalculator.c"
	}
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_tmp45_ = g_strdup (_tmp39_);
#line 460 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp45_;
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (converted_binary);
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (hex_value);
#line 460 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (bin);
#line 460 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4433 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_binary_to_octal (PebblesProgrammerCalculator* self,
                                                       const gchar* bin_value,
                                                       PebblesGlobalWordLength* wrd_length,
                                                       gboolean* negative)
{
	gchar* binary_string = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	guint64 octalNum = 0ULL;
	guint64 decimalNum = 0ULL;
	guint64 count = 0ULL;
	gchar* converted_binary = NULL;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp14_;
	guint64 _tmp15_ = 0ULL;
	gchar* _tmp17_ = NULL;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 463 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 463 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (bin_value != NULL, NULL);
#line 465 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 465 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, bin_value, *wrd_length, &_tmp0_);
#line 465 "../src/Core/ProgrammerCalculator.vala"
	binary_string = _tmp1_;
#line 466 "../src/Core/ProgrammerCalculator.vala"
	octalNum = (guint64) 0;
#line 466 "../src/Core/ProgrammerCalculator.vala"
	decimalNum = (guint64) 0;
#line 466 "../src/Core/ProgrammerCalculator.vala"
	count = (guint64) 1;
#line 467 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = binary_string;
#line 467 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = g_strdup (_tmp2_);
#line 467 "../src/Core/ProgrammerCalculator.vala"
	converted_binary = _tmp3_;
#line 468 "../src/Core/ProgrammerCalculator.vala"
	if (*negative) {
#line 4480 "ProgrammerCalculator.c"
		gchar* _tmp4_;
#line 469 "../src/Core/ProgrammerCalculator.vala"
		_tmp4_ = g_strdup ("");
#line 469 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (converted_binary);
#line 469 "../src/Core/ProgrammerCalculator.vala"
		converted_binary = _tmp4_;
#line 4488 "ProgrammerCalculator.c"
		{
			gint i = 0;
#line 470 "../src/Core/ProgrammerCalculator.vala"
			i = 0;
#line 4493 "ProgrammerCalculator.c"
			{
				gboolean _tmp5_ = FALSE;
#line 470 "../src/Core/ProgrammerCalculator.vala"
				_tmp5_ = TRUE;
#line 470 "../src/Core/ProgrammerCalculator.vala"
				while (TRUE) {
#line 4500 "ProgrammerCalculator.c"
					const gchar* _tmp7_;
					gint _tmp8_;
					gint _tmp9_;
					const gchar* _tmp10_ = NULL;
					const gchar* _tmp11_;
					const gchar* _tmp12_;
					gchar* _tmp13_;
#line 470 "../src/Core/ProgrammerCalculator.vala"
					if (!_tmp5_) {
#line 4510 "ProgrammerCalculator.c"
						gint _tmp6_;
#line 470 "../src/Core/ProgrammerCalculator.vala"
						_tmp6_ = i;
#line 470 "../src/Core/ProgrammerCalculator.vala"
						i = _tmp6_ + 1;
#line 4516 "ProgrammerCalculator.c"
					}
#line 470 "../src/Core/ProgrammerCalculator.vala"
					_tmp5_ = FALSE;
#line 470 "../src/Core/ProgrammerCalculator.vala"
					_tmp7_ = binary_string;
#line 470 "../src/Core/ProgrammerCalculator.vala"
					_tmp8_ = strlen (_tmp7_);
#line 470 "../src/Core/ProgrammerCalculator.vala"
					_tmp9_ = _tmp8_;
#line 470 "../src/Core/ProgrammerCalculator.vala"
					if (!(i < _tmp9_)) {
#line 470 "../src/Core/ProgrammerCalculator.vala"
						break;
#line 4530 "ProgrammerCalculator.c"
					}
#line 471 "../src/Core/ProgrammerCalculator.vala"
					_tmp11_ = binary_string;
#line 471 "../src/Core/ProgrammerCalculator.vala"
					if (string_get (_tmp11_, (glong) i) == '1') {
#line 471 "../src/Core/ProgrammerCalculator.vala"
						_tmp10_ = "0";
#line 4538 "ProgrammerCalculator.c"
					} else {
#line 471 "../src/Core/ProgrammerCalculator.vala"
						_tmp10_ = "1";
#line 4542 "ProgrammerCalculator.c"
					}
#line 471 "../src/Core/ProgrammerCalculator.vala"
					_tmp12_ = converted_binary;
#line 471 "../src/Core/ProgrammerCalculator.vala"
					_tmp13_ = g_strconcat (_tmp12_, _tmp10_, NULL);
#line 471 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (converted_binary);
#line 471 "../src/Core/ProgrammerCalculator.vala"
					converted_binary = _tmp13_;
#line 4552 "ProgrammerCalculator.c"
				}
			}
		}
	}
#line 474 "../src/Core/ProgrammerCalculator.vala"
	_tmp14_ = converted_binary;
#line 474 "../src/Core/ProgrammerCalculator.vala"
	g_ascii_string_to_unsigned (_tmp14_, (guint) 2, 0ULL, G_MAXUINT64, &_tmp15_, &_inner_error0_);
#line 474 "../src/Core/ProgrammerCalculator.vala"
	decimalNum = _tmp15_;
#line 474 "../src/Core/ProgrammerCalculator.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 474 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (converted_binary);
#line 474 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (binary_string);
#line 474 "../src/Core/ProgrammerCalculator.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 474 "../src/Core/ProgrammerCalculator.vala"
		g_clear_error (&_inner_error0_);
#line 474 "../src/Core/ProgrammerCalculator.vala"
		return NULL;
#line 4575 "ProgrammerCalculator.c"
	}
#line 475 "../src/Core/ProgrammerCalculator.vala"
	if (*negative) {
#line 4579 "ProgrammerCalculator.c"
		guint64 _tmp16_;
#line 476 "../src/Core/ProgrammerCalculator.vala"
		_tmp16_ = decimalNum;
#line 476 "../src/Core/ProgrammerCalculator.vala"
		decimalNum = _tmp16_ + 1;
#line 4585 "ProgrammerCalculator.c"
	}
#line 478 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 478 "../src/Core/ProgrammerCalculator.vala"
		if (!(decimalNum != ((guint64) 0))) {
#line 478 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 4593 "ProgrammerCalculator.c"
		}
#line 479 "../src/Core/ProgrammerCalculator.vala"
		octalNum += ((guint64) fabs ((gdouble) (decimalNum % 8))) * count;
#line 480 "../src/Core/ProgrammerCalculator.vala"
		decimalNum = (guint64) (decimalNum / 8);
#line 481 "../src/Core/ProgrammerCalculator.vala"
		count *= (guint64) 10;
#line 4601 "ProgrammerCalculator.c"
	}
#line 483 "../src/Core/ProgrammerCalculator.vala"
	if (*negative) {
#line 4605 "ProgrammerCalculator.c"
		gchar* _tmp18_;
		gchar* _tmp19_;
		gchar* _tmp20_;
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_tmp18_ = g_strdup_printf ("%" G_GUINT64_FORMAT, octalNum);
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_tmp19_ = _tmp18_;
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_tmp20_ = g_strconcat ("-", _tmp19_, NULL);
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (_tmp17_);
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_tmp17_ = _tmp20_;
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (_tmp19_);
#line 4621 "ProgrammerCalculator.c"
	} else {
		gchar* _tmp21_;
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_tmp21_ = g_strdup_printf ("%" G_GUINT64_FORMAT, octalNum);
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_g_free0 (_tmp17_);
#line 483 "../src/Core/ProgrammerCalculator.vala"
		_tmp17_ = _tmp21_;
#line 4630 "ProgrammerCalculator.c"
	}
#line 483 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp17_;
#line 483 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (converted_binary);
#line 483 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (binary_string);
#line 483 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4640 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_decimal_to_octal (PebblesProgrammerCalculator* self,
                                                        const gchar* dec_value,
                                                        PebblesGlobalWordLength* wrd_length)
{
	gchar* bin_value = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 486 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 486 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (dec_value != NULL, NULL);
#line 487 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 487 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_convert_decimal_to_binary (self, dec_value, wrd_length, &_tmp0_);
#line 487 "../src/Core/ProgrammerCalculator.vala"
	bin_value = _tmp1_;
#line 488 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = FALSE;
#line 488 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = pebbles_programmer_calculator_convert_binary_to_octal (self, bin_value, wrd_length, &_tmp2_);
#line 488 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp3_;
#line 488 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (bin_value);
#line 488 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4674 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_hexadecimal_to_octal (PebblesProgrammerCalculator* self,
                                                            const gchar* hex_value,
                                                            PebblesGlobalWordLength* wrd_length)
{
	gchar* bin_value = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 491 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 491 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (hex_value != NULL, NULL);
#line 492 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 492 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_convert_hexadecimal_to_binary (self, hex_value, wrd_length, &_tmp0_);
#line 492 "../src/Core/ProgrammerCalculator.vala"
	bin_value = _tmp1_;
#line 493 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = FALSE;
#line 493 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = pebbles_programmer_calculator_convert_binary_to_octal (self, bin_value, wrd_length, &_tmp2_);
#line 493 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp3_;
#line 493 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (bin_value);
#line 493 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4708 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_octal_to_binary (PebblesProgrammerCalculator* self,
                                                       const gchar* oct_value,
                                                       PebblesGlobalWordLength* wrd_length,
                                                       gboolean* format)
{
	gint64 octalNum = 0LL;
	gint64 decimalNum = 0LL;
	gint64 binaryNum = 0LL;
	gint64 count = 0LL;
	gchar* bin_value = NULL;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gboolean _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* result = NULL;
#line 496 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 496 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (oct_value != NULL, NULL);
#line 497 "../src/Core/ProgrammerCalculator.vala"
	octalNum = int64_parse (oct_value, (guint) 0);
#line 498 "../src/Core/ProgrammerCalculator.vala"
	decimalNum = (gint64) 0;
#line 498 "../src/Core/ProgrammerCalculator.vala"
	binaryNum = (gint64) 0;
#line 498 "../src/Core/ProgrammerCalculator.vala"
	count = (gint64) 0;
#line 500 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 4744 "ProgrammerCalculator.c"
		gint64 _tmp0_;
#line 500 "../src/Core/ProgrammerCalculator.vala"
		if (!(octalNum != ((gint64) 0))) {
#line 500 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 4750 "ProgrammerCalculator.c"
		}
#line 501 "../src/Core/ProgrammerCalculator.vala"
		decimalNum += (gint64) ((octalNum % 10) * pebbles_programmer_calculator_pow64 (self, (guint64) 8, (guint64) count));
#line 502 "../src/Core/ProgrammerCalculator.vala"
		count = count + 1;
#line 502 "../src/Core/ProgrammerCalculator.vala"
		_tmp0_ = count;
#line 503 "../src/Core/ProgrammerCalculator.vala"
		octalNum /= (gint64) 10;
#line 4760 "ProgrammerCalculator.c"
	}
#line 505 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = g_strdup_printf ("%" G_GINT64_FORMAT, decimalNum);
#line 505 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = _tmp1_;
#line 505 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = FALSE;
#line 505 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = pebbles_programmer_calculator_convert_decimal_to_binary (self, _tmp2_, wrd_length, &_tmp3_);
#line 505 "../src/Core/ProgrammerCalculator.vala"
	_tmp5_ = _tmp4_;
#line 505 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp2_);
#line 505 "../src/Core/ProgrammerCalculator.vala"
	bin_value = _tmp5_;
#line 506 "../src/Core/ProgrammerCalculator.vala"
	_tmp6_ = bin_value;
#line 506 "../src/Core/ProgrammerCalculator.vala"
	_tmp7_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, _tmp6_, *wrd_length, format);
#line 506 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (bin_value);
#line 506 "../src/Core/ProgrammerCalculator.vala"
	bin_value = _tmp7_;
#line 507 "../src/Core/ProgrammerCalculator.vala"
	result = bin_value;
#line 507 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4788 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_octal_to_decimal (PebblesProgrammerCalculator* self,
                                                        const gchar* oct_value,
                                                        PebblesGlobalWordLength* wrd_length)
{
	gchar* bin_value = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 509 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 509 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (oct_value != NULL, NULL);
#line 510 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 510 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_convert_octal_to_binary (self, oct_value, wrd_length, &_tmp0_);
#line 510 "../src/Core/ProgrammerCalculator.vala"
	bin_value = _tmp1_;
#line 511 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = FALSE;
#line 511 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = pebbles_programmer_calculator_convert_binary_to_decimal (self, bin_value, wrd_length, &_tmp2_);
#line 511 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp3_;
#line 511 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (bin_value);
#line 511 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4822 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_convert_octal_to_hexadecimal (PebblesProgrammerCalculator* self,
                                                            const gchar* oct_value,
                                                            PebblesGlobalWordLength* wrd_length)
{
	gchar* bin_value = NULL;
	gboolean _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_;
	gchar* _tmp3_;
	gchar* result = NULL;
#line 513 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 513 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (oct_value != NULL, NULL);
#line 514 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = FALSE;
#line 514 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = pebbles_programmer_calculator_convert_octal_to_binary (self, oct_value, wrd_length, &_tmp0_);
#line 514 "../src/Core/ProgrammerCalculator.vala"
	bin_value = _tmp1_;
#line 515 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = FALSE;
#line 515 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = pebbles_programmer_calculator_convert_binary_to_hexadecimal (self, bin_value, wrd_length, &_tmp2_);
#line 515 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp3_;
#line 515 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (bin_value);
#line 515 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4856 "ProgrammerCalculator.c"
}

static guint64
pebbles_programmer_calculator_pow64 (PebblesProgrammerCalculator* self,
                                     guint64 a,
                                     guint64 b)
{
	guint64 c = 0ULL;
	guint64 result = 0ULL;
#line 517 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, 0ULL);
#line 518 "../src/Core/ProgrammerCalculator.vala"
	c = (guint64) 1;
#line 4870 "ProgrammerCalculator.c"
	{
		guint64 i = 0ULL;
#line 519 "../src/Core/ProgrammerCalculator.vala"
		i = (guint64) 0;
#line 4875 "ProgrammerCalculator.c"
		{
			gboolean _tmp0_ = FALSE;
#line 519 "../src/Core/ProgrammerCalculator.vala"
			_tmp0_ = TRUE;
#line 519 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 519 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp0_) {
#line 4884 "ProgrammerCalculator.c"
					guint64 _tmp1_;
#line 519 "../src/Core/ProgrammerCalculator.vala"
					_tmp1_ = i;
#line 519 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp1_ + 1;
#line 4890 "ProgrammerCalculator.c"
				}
#line 519 "../src/Core/ProgrammerCalculator.vala"
				_tmp0_ = FALSE;
#line 519 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < b)) {
#line 519 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 4898 "ProgrammerCalculator.c"
				}
#line 520 "../src/Core/ProgrammerCalculator.vala"
				c *= a;
#line 4902 "ProgrammerCalculator.c"
			}
		}
	}
#line 522 "../src/Core/ProgrammerCalculator.vala"
	result = c;
#line 522 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 4910 "ProgrammerCalculator.c"
}

static gboolean
pebbles_programmer_calculator_has_precedence_pemdas (gchar op1,
                                                     gchar op2)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp15_ = FALSE;
	gboolean _tmp16_ = FALSE;
	gboolean result = FALSE;
#line 527 "../src/Core/ProgrammerCalculator.vala"
	if (op2 == '(') {
#line 527 "../src/Core/ProgrammerCalculator.vala"
		_tmp0_ = TRUE;
#line 4926 "ProgrammerCalculator.c"
	} else {
#line 527 "../src/Core/ProgrammerCalculator.vala"
		_tmp0_ = op2 == ')';
#line 4930 "ProgrammerCalculator.c"
	}
#line 527 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp0_) {
#line 528 "../src/Core/ProgrammerCalculator.vala"
		result = FALSE;
#line 528 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 4938 "ProgrammerCalculator.c"
	}
#line 531 "../src/Core/ProgrammerCalculator.vala"
	if (op1 == 'u') {
#line 4942 "ProgrammerCalculator.c"
		gboolean _tmp2_ = FALSE;
		gboolean _tmp3_ = FALSE;
		gboolean _tmp4_ = FALSE;
		gboolean _tmp5_ = FALSE;
		gboolean _tmp6_ = FALSE;
		gboolean _tmp7_ = FALSE;
		gboolean _tmp8_ = FALSE;
		gboolean _tmp9_ = FALSE;
		gboolean _tmp10_ = FALSE;
		gboolean _tmp11_ = FALSE;
		gboolean _tmp12_ = FALSE;
		gboolean _tmp13_ = FALSE;
		gboolean _tmp14_ = FALSE;
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (op2 == '|') {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp14_ = TRUE;
#line 4960 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp14_ = op2 == 'o';
#line 4964 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp14_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp13_ = TRUE;
#line 4970 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp13_ = op2 == 'a';
#line 4974 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp13_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = TRUE;
#line 4980 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = op2 == '&';
#line 4984 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp12_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = TRUE;
#line 4990 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = op2 == '<';
#line 4994 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp11_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = TRUE;
#line 5000 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = op2 == '>';
#line 5004 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp10_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = TRUE;
#line 5010 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = op2 == '+';
#line 5014 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp9_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = TRUE;
#line 5020 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = op2 == '-';
#line 5024 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp8_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = TRUE;
#line 5030 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = op2 == 'x';
#line 5034 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp7_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = TRUE;
#line 5040 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = op2 == 'n';
#line 5044 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp6_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = TRUE;
#line 5050 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = op2 == '/';
#line 5054 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp5_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_ = TRUE;
#line 5060 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_ = op2 == '*';
#line 5064 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp4_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_ = TRUE;
#line 5070 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_ = op2 == '!';
#line 5074 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp3_) {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = TRUE;
#line 5080 "ProgrammerCalculator.c"
		} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = op2 == 'm';
#line 5084 "ProgrammerCalculator.c"
		}
#line 531 "../src/Core/ProgrammerCalculator.vala"
		_tmp1_ = _tmp2_;
#line 5088 "ProgrammerCalculator.c"
	} else {
#line 531 "../src/Core/ProgrammerCalculator.vala"
		_tmp1_ = FALSE;
#line 5092 "ProgrammerCalculator.c"
	}
#line 531 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp1_) {
#line 532 "../src/Core/ProgrammerCalculator.vala"
		result = FALSE;
#line 532 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 5100 "ProgrammerCalculator.c"
	}
#line 534 "../src/Core/ProgrammerCalculator.vala"
	if (op1 == '!') {
#line 534 "../src/Core/ProgrammerCalculator.vala"
		_tmp16_ = TRUE;
#line 5106 "ProgrammerCalculator.c"
	} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
		_tmp16_ = op1 == 'm';
#line 5110 "ProgrammerCalculator.c"
	}
#line 534 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp16_) {
#line 5114 "ProgrammerCalculator.c"
		gboolean _tmp17_ = FALSE;
		gboolean _tmp18_ = FALSE;
		gboolean _tmp19_ = FALSE;
		gboolean _tmp20_ = FALSE;
		gboolean _tmp21_ = FALSE;
		gboolean _tmp22_ = FALSE;
		gboolean _tmp23_ = FALSE;
		gboolean _tmp24_ = FALSE;
		gboolean _tmp25_ = FALSE;
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (op2 == '|') {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp25_ = TRUE;
#line 5128 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp25_ = op2 == '&';
#line 5132 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp25_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp24_ = TRUE;
#line 5138 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp24_ = op2 == '<';
#line 5142 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp24_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp23_ = TRUE;
#line 5148 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp23_ = op2 == '>';
#line 5152 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp23_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp22_ = TRUE;
#line 5158 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp22_ = op2 == '+';
#line 5162 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp22_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp21_ = TRUE;
#line 5168 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp21_ = op2 == '-';
#line 5172 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp21_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp20_ = TRUE;
#line 5178 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp20_ = op2 == 'x';
#line 5182 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp20_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp19_ = TRUE;
#line 5188 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp19_ = op2 == 'n';
#line 5192 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp19_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp18_ = TRUE;
#line 5198 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp18_ = op2 == '/';
#line 5202 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp18_) {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = TRUE;
#line 5208 "ProgrammerCalculator.c"
		} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = op2 == '*';
#line 5212 "ProgrammerCalculator.c"
		}
#line 534 "../src/Core/ProgrammerCalculator.vala"
		_tmp15_ = _tmp17_;
#line 5216 "ProgrammerCalculator.c"
	} else {
#line 534 "../src/Core/ProgrammerCalculator.vala"
		_tmp15_ = FALSE;
#line 5220 "ProgrammerCalculator.c"
	}
#line 534 "../src/Core/ProgrammerCalculator.vala"
	if (_tmp15_) {
#line 535 "../src/Core/ProgrammerCalculator.vala"
		result = FALSE;
#line 535 "../src/Core/ProgrammerCalculator.vala"
		return result;
#line 5228 "ProgrammerCalculator.c"
	} else {
		gboolean _tmp26_ = FALSE;
		gboolean _tmp27_ = FALSE;
#line 537 "../src/Core/ProgrammerCalculator.vala"
		if (op1 == '/') {
#line 537 "../src/Core/ProgrammerCalculator.vala"
			_tmp27_ = TRUE;
#line 5236 "ProgrammerCalculator.c"
		} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
			_tmp27_ = op1 == '*';
#line 5240 "ProgrammerCalculator.c"
		}
#line 537 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp27_) {
#line 5244 "ProgrammerCalculator.c"
			gboolean _tmp28_ = FALSE;
			gboolean _tmp29_ = FALSE;
			gboolean _tmp30_ = FALSE;
			gboolean _tmp31_ = FALSE;
			gboolean _tmp32_ = FALSE;
			gboolean _tmp33_ = FALSE;
			gboolean _tmp34_ = FALSE;
			gboolean _tmp35_ = FALSE;
			gboolean _tmp36_ = FALSE;
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (op2 == '|') {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp36_ = TRUE;
#line 5258 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp36_ = op2 == 'o';
#line 5262 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp36_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp35_ = TRUE;
#line 5268 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp35_ = op2 == '&';
#line 5272 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp35_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp34_ = TRUE;
#line 5278 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp34_ = op2 == 'a';
#line 5282 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp34_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp33_ = TRUE;
#line 5288 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp33_ = op2 == '<';
#line 5292 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp33_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp32_ = TRUE;
#line 5298 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp32_ = op2 == '>';
#line 5302 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp32_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp31_ = TRUE;
#line 5308 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp31_ = op2 == '+';
#line 5312 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp31_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp30_ = TRUE;
#line 5318 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp30_ = op2 == '-';
#line 5322 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp30_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp29_ = TRUE;
#line 5328 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp29_ = op2 == 'x';
#line 5332 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp29_) {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp28_ = TRUE;
#line 5338 "ProgrammerCalculator.c"
			} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
				_tmp28_ = op2 == 'n';
#line 5342 "ProgrammerCalculator.c"
			}
#line 537 "../src/Core/ProgrammerCalculator.vala"
			_tmp26_ = _tmp28_;
#line 5346 "ProgrammerCalculator.c"
		} else {
#line 537 "../src/Core/ProgrammerCalculator.vala"
			_tmp26_ = FALSE;
#line 5350 "ProgrammerCalculator.c"
		}
#line 537 "../src/Core/ProgrammerCalculator.vala"
		if (_tmp26_) {
#line 538 "../src/Core/ProgrammerCalculator.vala"
			result = FALSE;
#line 538 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5358 "ProgrammerCalculator.c"
		} else {
			gboolean _tmp37_ = FALSE;
			gboolean _tmp38_ = FALSE;
#line 540 "../src/Core/ProgrammerCalculator.vala"
			if (op1 == '+') {
#line 540 "../src/Core/ProgrammerCalculator.vala"
				_tmp38_ = TRUE;
#line 5366 "ProgrammerCalculator.c"
			} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
				_tmp38_ = op1 == '-';
#line 5370 "ProgrammerCalculator.c"
			}
#line 540 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp38_) {
#line 5374 "ProgrammerCalculator.c"
				gboolean _tmp39_ = FALSE;
				gboolean _tmp40_ = FALSE;
				gboolean _tmp41_ = FALSE;
				gboolean _tmp42_ = FALSE;
				gboolean _tmp43_ = FALSE;
				gboolean _tmp44_ = FALSE;
				gboolean _tmp45_ = FALSE;
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (op2 == '<') {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp45_ = TRUE;
#line 5386 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp45_ = op2 == '>';
#line 5390 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp45_) {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp44_ = TRUE;
#line 5396 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp44_ = op2 == '|';
#line 5400 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp44_) {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp43_ = TRUE;
#line 5406 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp43_ = op2 == 'o';
#line 5410 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp43_) {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp42_ = TRUE;
#line 5416 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp42_ = op2 == '&';
#line 5420 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp42_) {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp41_ = TRUE;
#line 5426 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp41_ = op2 == 'a';
#line 5430 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp41_) {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp40_ = TRUE;
#line 5436 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp40_ = op2 == 'x';
#line 5440 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp40_) {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp39_ = TRUE;
#line 5446 "ProgrammerCalculator.c"
				} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
					_tmp39_ = op2 == 'n';
#line 5450 "ProgrammerCalculator.c"
				}
#line 540 "../src/Core/ProgrammerCalculator.vala"
				_tmp37_ = _tmp39_;
#line 5454 "ProgrammerCalculator.c"
			} else {
#line 540 "../src/Core/ProgrammerCalculator.vala"
				_tmp37_ = FALSE;
#line 5458 "ProgrammerCalculator.c"
			}
#line 540 "../src/Core/ProgrammerCalculator.vala"
			if (_tmp37_) {
#line 541 "../src/Core/ProgrammerCalculator.vala"
				result = FALSE;
#line 541 "../src/Core/ProgrammerCalculator.vala"
				return result;
#line 5466 "ProgrammerCalculator.c"
			} else {
				gboolean _tmp46_ = FALSE;
				gboolean _tmp47_ = FALSE;
#line 543 "../src/Core/ProgrammerCalculator.vala"
				if (op1 == '<') {
#line 543 "../src/Core/ProgrammerCalculator.vala"
					_tmp47_ = TRUE;
#line 5474 "ProgrammerCalculator.c"
				} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
					_tmp47_ = op1 == '>';
#line 5478 "ProgrammerCalculator.c"
				}
#line 543 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp47_) {
#line 5482 "ProgrammerCalculator.c"
					gboolean _tmp48_ = FALSE;
					gboolean _tmp49_ = FALSE;
					gboolean _tmp50_ = FALSE;
					gboolean _tmp51_ = FALSE;
					gboolean _tmp52_ = FALSE;
#line 543 "../src/Core/ProgrammerCalculator.vala"
					if (op2 == '|') {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp52_ = TRUE;
#line 5492 "ProgrammerCalculator.c"
					} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp52_ = op2 == 'o';
#line 5496 "ProgrammerCalculator.c"
					}
#line 543 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp52_) {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp51_ = TRUE;
#line 5502 "ProgrammerCalculator.c"
					} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp51_ = op2 == '&';
#line 5506 "ProgrammerCalculator.c"
					}
#line 543 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp51_) {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp50_ = TRUE;
#line 5512 "ProgrammerCalculator.c"
					} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp50_ = op2 == 'a';
#line 5516 "ProgrammerCalculator.c"
					}
#line 543 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp50_) {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp49_ = TRUE;
#line 5522 "ProgrammerCalculator.c"
					} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp49_ = op2 == 'x';
#line 5526 "ProgrammerCalculator.c"
					}
#line 543 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp49_) {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp48_ = TRUE;
#line 5532 "ProgrammerCalculator.c"
					} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
						_tmp48_ = op2 == 'n';
#line 5536 "ProgrammerCalculator.c"
					}
#line 543 "../src/Core/ProgrammerCalculator.vala"
					_tmp46_ = _tmp48_;
#line 5540 "ProgrammerCalculator.c"
				} else {
#line 543 "../src/Core/ProgrammerCalculator.vala"
					_tmp46_ = FALSE;
#line 5544 "ProgrammerCalculator.c"
				}
#line 543 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp46_) {
#line 544 "../src/Core/ProgrammerCalculator.vala"
					result = FALSE;
#line 544 "../src/Core/ProgrammerCalculator.vala"
					return result;
#line 5552 "ProgrammerCalculator.c"
				} else {
					gboolean _tmp53_ = FALSE;
					gboolean _tmp54_ = FALSE;
#line 546 "../src/Core/ProgrammerCalculator.vala"
					if (op1 == '&') {
#line 546 "../src/Core/ProgrammerCalculator.vala"
						_tmp54_ = TRUE;
#line 5560 "ProgrammerCalculator.c"
					} else {
#line 546 "../src/Core/ProgrammerCalculator.vala"
						_tmp54_ = op1 == 'a';
#line 5564 "ProgrammerCalculator.c"
					}
#line 546 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp54_) {
#line 5568 "ProgrammerCalculator.c"
						gboolean _tmp55_ = FALSE;
						gboolean _tmp56_ = FALSE;
						gboolean _tmp57_ = FALSE;
#line 546 "../src/Core/ProgrammerCalculator.vala"
						if (op2 == '|') {
#line 546 "../src/Core/ProgrammerCalculator.vala"
							_tmp57_ = TRUE;
#line 5576 "ProgrammerCalculator.c"
						} else {
#line 546 "../src/Core/ProgrammerCalculator.vala"
							_tmp57_ = op2 == 'o';
#line 5580 "ProgrammerCalculator.c"
						}
#line 546 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp57_) {
#line 546 "../src/Core/ProgrammerCalculator.vala"
							_tmp56_ = TRUE;
#line 5586 "ProgrammerCalculator.c"
						} else {
#line 546 "../src/Core/ProgrammerCalculator.vala"
							_tmp56_ = op2 == 'x';
#line 5590 "ProgrammerCalculator.c"
						}
#line 546 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp56_) {
#line 546 "../src/Core/ProgrammerCalculator.vala"
							_tmp55_ = TRUE;
#line 5596 "ProgrammerCalculator.c"
						} else {
#line 546 "../src/Core/ProgrammerCalculator.vala"
							_tmp55_ = op2 == 'n';
#line 5600 "ProgrammerCalculator.c"
						}
#line 546 "../src/Core/ProgrammerCalculator.vala"
						_tmp53_ = _tmp55_;
#line 5604 "ProgrammerCalculator.c"
					} else {
#line 546 "../src/Core/ProgrammerCalculator.vala"
						_tmp53_ = FALSE;
#line 5608 "ProgrammerCalculator.c"
					}
#line 546 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp53_) {
#line 547 "../src/Core/ProgrammerCalculator.vala"
						result = FALSE;
#line 547 "../src/Core/ProgrammerCalculator.vala"
						return result;
#line 5616 "ProgrammerCalculator.c"
					} else {
						gboolean _tmp58_ = FALSE;
						gboolean _tmp59_ = FALSE;
						gboolean _tmp60_ = FALSE;
#line 549 "../src/Core/ProgrammerCalculator.vala"
						if (op1 == 'x') {
#line 549 "../src/Core/ProgrammerCalculator.vala"
							_tmp60_ = TRUE;
#line 5625 "ProgrammerCalculator.c"
						} else {
#line 549 "../src/Core/ProgrammerCalculator.vala"
							_tmp60_ = op1 == 'o';
#line 5629 "ProgrammerCalculator.c"
						}
#line 549 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp60_) {
#line 549 "../src/Core/ProgrammerCalculator.vala"
							_tmp59_ = TRUE;
#line 5635 "ProgrammerCalculator.c"
						} else {
#line 549 "../src/Core/ProgrammerCalculator.vala"
							_tmp59_ = op1 == 'n';
#line 5639 "ProgrammerCalculator.c"
						}
#line 549 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp59_) {
#line 549 "../src/Core/ProgrammerCalculator.vala"
							_tmp58_ = op2 == '|';
#line 5645 "ProgrammerCalculator.c"
						} else {
#line 549 "../src/Core/ProgrammerCalculator.vala"
							_tmp58_ = FALSE;
#line 5649 "ProgrammerCalculator.c"
						}
#line 549 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp58_) {
#line 550 "../src/Core/ProgrammerCalculator.vala"
							result = FALSE;
#line 550 "../src/Core/ProgrammerCalculator.vala"
							return result;
#line 5657 "ProgrammerCalculator.c"
						} else {
#line 553 "../src/Core/ProgrammerCalculator.vala"
							result = TRUE;
#line 553 "../src/Core/ProgrammerCalculator.vala"
							return result;
#line 5663 "ProgrammerCalculator.c"
						}
					}
				}
			}
		}
	}
}

gboolean*
pebbles_programmer_calculator_apply_op (PebblesProgrammerCalculator* self,
                                        PebblesProgrammer* prog_calc,
                                        gchar op,
                                        gboolean* a,
                                        gint a_length1,
                                        gboolean* b,
                                        gint b_length1,
                                        gint word_size,
                                        gint* result_length1,
                                        GError** error)
{
	gboolean* bool_array = NULL;
	gboolean* _tmp0_;
	gint bool_array_length1;
	gint _bool_array_size_;
	gboolean* _tmp68_;
	gint _tmp68__length1;
	GError* _inner_error0_ = NULL;
	gboolean* result = NULL;
#line 557 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 557 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (prog_calc != NULL, NULL);
#line 558 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_new0 (gboolean, MAX (a_length1, b_length1));
#line 558 "../src/Core/ProgrammerCalculator.vala"
	bool_array = _tmp0_;
#line 558 "../src/Core/ProgrammerCalculator.vala"
	bool_array_length1 = MAX (a_length1, b_length1);
#line 558 "../src/Core/ProgrammerCalculator.vala"
	_bool_array_size_ = bool_array_length1;
#line 559 "../src/Core/ProgrammerCalculator.vala"
	switch (op) {
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '+':
#line 5708 "ProgrammerCalculator.c"
		{
			gint _tmp1_ = 0;
			gboolean* _tmp2_;
			gboolean* _tmp3_;
			gint _tmp3__length1;
#line 561 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = pebbles_programmer_add (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp1_);
#line 561 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_ = _tmp2_;
#line 561 "../src/Core/ProgrammerCalculator.vala"
			_tmp3__length1 = _tmp1_;
#line 561 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 561 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp3__length1;
#line 5724 "ProgrammerCalculator.c"
			}
#line 561 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp3_;
#line 561 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 561 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5732 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '-':
#line 5736 "ProgrammerCalculator.c"
		{
			gint _tmp4_ = 0;
			gboolean* _tmp5_;
			gboolean* _tmp6_;
			gint _tmp6__length1;
#line 563 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = pebbles_programmer_subtract (prog_calc, b, (gint) b_length1, a, (gint) a_length1, &word_size, &_tmp4_);
#line 563 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = _tmp5_;
#line 563 "../src/Core/ProgrammerCalculator.vala"
			_tmp6__length1 = _tmp4_;
#line 563 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 563 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp6__length1;
#line 5752 "ProgrammerCalculator.c"
			}
#line 563 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp6_;
#line 563 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 563 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5760 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '*':
#line 5764 "ProgrammerCalculator.c"
		{
			gchar* _result_ = NULL;
			gchar* _tmp7_;
			const gchar* _tmp8_;
			PebblesSettings* _tmp9_;
			PebblesSettings* _tmp10_;
			PebblesGlobalWordLength _tmp11_;
			PebblesGlobalWordLength _tmp12_;
			gint _tmp13_ = 0;
			gboolean* _tmp14_;
			gboolean* _tmp15_;
			gint _tmp15__length1;
			gboolean* _tmp16_;
			gint _tmp16__length1;
#line 565 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = pebbles_programmer_multiply (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size);
#line 565 "../src/Core/ProgrammerCalculator.vala"
			_result_ = _tmp7_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = _result_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = pebbles_settings_get_default ();
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = _tmp9_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = pebbles_settings_get_global_word_length (_tmp10_);
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = _tmp11_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp14_ = pebbles_programmer_calculator_string_to_bool_array (self, _tmp8_, PEBBLES_NUMBER_SYSTEM_DECIMAL, _tmp12_, &_tmp13_);
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp15_ = _tmp14_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp15__length1 = _tmp13_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_g_object_unref0 (_tmp10_);
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp16_ = _tmp15_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_tmp16__length1 = _tmp15__length1;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 566 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp16__length1;
#line 5809 "ProgrammerCalculator.c"
			}
#line 566 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp16_;
#line 566 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_result_);
#line 566 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 566 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5819 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '/':
#line 5823 "ProgrammerCalculator.c"
		{
			gchar* _result_ = NULL;
			gchar* _tmp17_;
			const gchar* _tmp18_;
			const gchar* _tmp20_;
			PebblesSettings* _tmp21_;
			PebblesSettings* _tmp22_;
			PebblesGlobalWordLength _tmp23_;
			PebblesGlobalWordLength _tmp24_;
			gint _tmp25_ = 0;
			gboolean* _tmp26_;
			gboolean* _tmp27_;
			gint _tmp27__length1;
			gboolean* _tmp28_;
			gint _tmp28__length1;
#line 571 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = pebbles_programmer_division_signed_integer (prog_calc, b, (gint) b_length1, a, (gint) a_length1, &word_size);
#line 571 "../src/Core/ProgrammerCalculator.vala"
			_result_ = _tmp17_;
#line 572 "../src/Core/ProgrammerCalculator.vala"
			_tmp18_ = _result_;
#line 572 "../src/Core/ProgrammerCalculator.vala"
			if (g_strcmp0 (_tmp18_, "Error") == 0) {
#line 5847 "ProgrammerCalculator.c"
				GError* _tmp19_;
#line 573 "../src/Core/ProgrammerCalculator.vala"
				_tmp19_ = g_error_new_literal (PEBBLES_CALC_ERROR, PEBBLES_CALC_ERROR_DIVIDE_BY_ZERO, "Dividing by zero not allowed");
#line 573 "../src/Core/ProgrammerCalculator.vala"
				_inner_error0_ = _tmp19_;
#line 573 "../src/Core/ProgrammerCalculator.vala"
				if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 573 "../src/Core/ProgrammerCalculator.vala"
					g_propagate_error (error, _inner_error0_);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (_result_);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					bool_array = (g_free (bool_array), NULL);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					return NULL;
#line 5863 "ProgrammerCalculator.c"
				} else {
#line 573 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (_result_);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					bool_array = (g_free (bool_array), NULL);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					g_clear_error (&_inner_error0_);
#line 573 "../src/Core/ProgrammerCalculator.vala"
					return NULL;
#line 5875 "ProgrammerCalculator.c"
				}
			}
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp20_ = _result_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp21_ = pebbles_settings_get_default ();
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp22_ = _tmp21_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp23_ = pebbles_settings_get_global_word_length (_tmp22_);
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp24_ = _tmp23_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp26_ = pebbles_programmer_calculator_string_to_bool_array (self, _tmp20_, PEBBLES_NUMBER_SYSTEM_DECIMAL, _tmp24_, &_tmp25_);
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp27_ = _tmp26_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp27__length1 = _tmp25_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_g_object_unref0 (_tmp22_);
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp28_ = _tmp27_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_tmp28__length1 = _tmp27__length1;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 575 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp28__length1;
#line 5904 "ProgrammerCalculator.c"
			}
#line 575 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp28_;
#line 575 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_result_);
#line 575 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 575 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5914 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '&':
#line 5918 "ProgrammerCalculator.c"
		{
			gint _tmp29_ = 0;
			gboolean* _tmp30_;
			gboolean* _tmp31_;
			gint _tmp31__length1;
#line 577 "../src/Core/ProgrammerCalculator.vala"
			_tmp30_ = pebbles_programmer_and (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp29_);
#line 577 "../src/Core/ProgrammerCalculator.vala"
			_tmp31_ = _tmp30_;
#line 577 "../src/Core/ProgrammerCalculator.vala"
			_tmp31__length1 = _tmp29_;
#line 577 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 577 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp31__length1;
#line 5934 "ProgrammerCalculator.c"
			}
#line 577 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp31_;
#line 577 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 577 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5942 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '|':
#line 5946 "ProgrammerCalculator.c"
		{
			gint _tmp32_ = 0;
			gboolean* _tmp33_;
			gboolean* _tmp34_;
			gint _tmp34__length1;
#line 579 "../src/Core/ProgrammerCalculator.vala"
			_tmp33_ = pebbles_programmer_or (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp32_);
#line 579 "../src/Core/ProgrammerCalculator.vala"
			_tmp34_ = _tmp33_;
#line 579 "../src/Core/ProgrammerCalculator.vala"
			_tmp34__length1 = _tmp32_;
#line 579 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 579 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp34__length1;
#line 5962 "ProgrammerCalculator.c"
			}
#line 579 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp34_;
#line 579 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 579 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5970 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '!':
#line 5974 "ProgrammerCalculator.c"
		{
			gint _tmp35_ = 0;
			gboolean* _tmp36_;
			gboolean* _tmp37_;
			gint _tmp37__length1;
#line 581 "../src/Core/ProgrammerCalculator.vala"
			_tmp36_ = pebbles_programmer_not (prog_calc, a, (gint) a_length1, &word_size, &_tmp35_);
#line 581 "../src/Core/ProgrammerCalculator.vala"
			_tmp37_ = _tmp36_;
#line 581 "../src/Core/ProgrammerCalculator.vala"
			_tmp37__length1 = _tmp35_;
#line 581 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 581 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp37__length1;
#line 5990 "ProgrammerCalculator.c"
			}
#line 581 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp37_;
#line 581 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 581 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 5998 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case 'a':
#line 6002 "ProgrammerCalculator.c"
		{
			gint _tmp38_ = 0;
			gboolean* _tmp39_;
			gboolean* _tmp40_;
			gint _tmp40__length1;
#line 583 "../src/Core/ProgrammerCalculator.vala"
			_tmp39_ = pebbles_programmer_nand (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp38_);
#line 583 "../src/Core/ProgrammerCalculator.vala"
			_tmp40_ = _tmp39_;
#line 583 "../src/Core/ProgrammerCalculator.vala"
			_tmp40__length1 = _tmp38_;
#line 583 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 583 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp40__length1;
#line 6018 "ProgrammerCalculator.c"
			}
#line 583 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp40_;
#line 583 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 583 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6026 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case 'o':
#line 6030 "ProgrammerCalculator.c"
		{
			gint _tmp41_ = 0;
			gboolean* _tmp42_;
			gboolean* _tmp43_;
			gint _tmp43__length1;
#line 585 "../src/Core/ProgrammerCalculator.vala"
			_tmp42_ = pebbles_programmer_nor (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp41_);
#line 585 "../src/Core/ProgrammerCalculator.vala"
			_tmp43_ = _tmp42_;
#line 585 "../src/Core/ProgrammerCalculator.vala"
			_tmp43__length1 = _tmp41_;
#line 585 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 585 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp43__length1;
#line 6046 "ProgrammerCalculator.c"
			}
#line 585 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp43_;
#line 585 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 585 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6054 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case 'x':
#line 6058 "ProgrammerCalculator.c"
		{
			gint _tmp44_ = 0;
			gboolean* _tmp45_;
			gboolean* _tmp46_;
			gint _tmp46__length1;
#line 587 "../src/Core/ProgrammerCalculator.vala"
			_tmp45_ = pebbles_programmer_xor (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp44_);
#line 587 "../src/Core/ProgrammerCalculator.vala"
			_tmp46_ = _tmp45_;
#line 587 "../src/Core/ProgrammerCalculator.vala"
			_tmp46__length1 = _tmp44_;
#line 587 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 587 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp46__length1;
#line 6074 "ProgrammerCalculator.c"
			}
#line 587 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp46_;
#line 587 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 587 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6082 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case 'n':
#line 6086 "ProgrammerCalculator.c"
		{
			gint _tmp47_ = 0;
			gboolean* _tmp48_;
			gboolean* _tmp49_;
			gint _tmp49__length1;
#line 589 "../src/Core/ProgrammerCalculator.vala"
			_tmp48_ = pebbles_programmer_xnor (prog_calc, a, (gint) a_length1, b, (gint) b_length1, &word_size, &_tmp47_);
#line 589 "../src/Core/ProgrammerCalculator.vala"
			_tmp49_ = _tmp48_;
#line 589 "../src/Core/ProgrammerCalculator.vala"
			_tmp49__length1 = _tmp47_;
#line 589 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 589 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp49__length1;
#line 6102 "ProgrammerCalculator.c"
			}
#line 589 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp49_;
#line 589 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 589 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6110 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case 'm':
#line 6114 "ProgrammerCalculator.c"
		{
			gchar* _result_ = NULL;
			gchar* _tmp50_;
			const gchar* _tmp51_;
			const gchar* _tmp53_;
			PebblesSettings* _tmp54_;
			PebblesSettings* _tmp55_;
			PebblesGlobalWordLength _tmp56_;
			PebblesGlobalWordLength _tmp57_;
			gint _tmp58_ = 0;
			gboolean* _tmp59_;
			gboolean* _tmp60_;
			gint _tmp60__length1;
			gboolean* _tmp61_;
			gint _tmp61__length1;
#line 594 "../src/Core/ProgrammerCalculator.vala"
			_tmp50_ = pebbles_programmer_mod_signed_integer (prog_calc, b, (gint) b_length1, a, (gint) a_length1, &word_size);
#line 594 "../src/Core/ProgrammerCalculator.vala"
			_result_ = _tmp50_;
#line 595 "../src/Core/ProgrammerCalculator.vala"
			_tmp51_ = _result_;
#line 595 "../src/Core/ProgrammerCalculator.vala"
			if (g_strcmp0 (_tmp51_, "Error") == 0) {
#line 6138 "ProgrammerCalculator.c"
				GError* _tmp52_;
#line 596 "../src/Core/ProgrammerCalculator.vala"
				_tmp52_ = g_error_new_literal (PEBBLES_CALC_ERROR, PEBBLES_CALC_ERROR_DIVIDE_BY_ZERO, "Dividing by zero not allowed");
#line 596 "../src/Core/ProgrammerCalculator.vala"
				_inner_error0_ = _tmp52_;
#line 596 "../src/Core/ProgrammerCalculator.vala"
				if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 596 "../src/Core/ProgrammerCalculator.vala"
					g_propagate_error (error, _inner_error0_);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (_result_);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					bool_array = (g_free (bool_array), NULL);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					return NULL;
#line 6154 "ProgrammerCalculator.c"
				} else {
#line 596 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (_result_);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					bool_array = (g_free (bool_array), NULL);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					g_clear_error (&_inner_error0_);
#line 596 "../src/Core/ProgrammerCalculator.vala"
					return NULL;
#line 6166 "ProgrammerCalculator.c"
				}
			}
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp53_ = _result_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp54_ = pebbles_settings_get_default ();
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp55_ = _tmp54_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp56_ = pebbles_settings_get_global_word_length (_tmp55_);
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp57_ = _tmp56_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp59_ = pebbles_programmer_calculator_string_to_bool_array (self, _tmp53_, PEBBLES_NUMBER_SYSTEM_DECIMAL, _tmp57_, &_tmp58_);
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp60_ = _tmp59_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp60__length1 = _tmp58_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_g_object_unref0 (_tmp55_);
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp61_ = _tmp60_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_tmp61__length1 = _tmp60__length1;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 598 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp61__length1;
#line 6195 "ProgrammerCalculator.c"
			}
#line 598 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp61_;
#line 598 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_result_);
#line 598 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 598 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6205 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '<':
#line 6209 "ProgrammerCalculator.c"
		{
			gint _tmp62_ = 0;
			gboolean* _tmp63_;
			gboolean* _tmp64_;
			gint _tmp64__length1;
#line 600 "../src/Core/ProgrammerCalculator.vala"
			_tmp63_ = pebbles_programmer_left_shift (prog_calc, b, (gint) b_length1, a, (gint) a_length1, FALSE, &word_size, &_tmp62_);
#line 600 "../src/Core/ProgrammerCalculator.vala"
			_tmp64_ = _tmp63_;
#line 600 "../src/Core/ProgrammerCalculator.vala"
			_tmp64__length1 = _tmp62_;
#line 600 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 600 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp64__length1;
#line 6225 "ProgrammerCalculator.c"
			}
#line 600 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp64_;
#line 600 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 600 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6233 "ProgrammerCalculator.c"
		}
#line 559 "../src/Core/ProgrammerCalculator.vala"
		case '>':
#line 6237 "ProgrammerCalculator.c"
		{
			gint _tmp65_ = 0;
			gboolean* _tmp66_;
			gboolean* _tmp67_;
			gint _tmp67__length1;
#line 602 "../src/Core/ProgrammerCalculator.vala"
			_tmp66_ = pebbles_programmer_right_shift (prog_calc, b, (gint) b_length1, a, (gint) a_length1, FALSE, &word_size, &_tmp65_);
#line 602 "../src/Core/ProgrammerCalculator.vala"
			_tmp67_ = _tmp66_;
#line 602 "../src/Core/ProgrammerCalculator.vala"
			_tmp67__length1 = _tmp65_;
#line 602 "../src/Core/ProgrammerCalculator.vala"
			if (result_length1) {
#line 602 "../src/Core/ProgrammerCalculator.vala"
				*result_length1 = _tmp67__length1;
#line 6253 "ProgrammerCalculator.c"
			}
#line 602 "../src/Core/ProgrammerCalculator.vala"
			result = _tmp67_;
#line 602 "../src/Core/ProgrammerCalculator.vala"
			bool_array = (g_free (bool_array), NULL);
#line 602 "../src/Core/ProgrammerCalculator.vala"
			return result;
#line 6261 "ProgrammerCalculator.c"
		}
		default:
#line 559 "../src/Core/ProgrammerCalculator.vala"
		break;
#line 6266 "ProgrammerCalculator.c"
	}
#line 604 "../src/Core/ProgrammerCalculator.vala"
	_tmp68_ = bool_array;
#line 604 "../src/Core/ProgrammerCalculator.vala"
	_tmp68__length1 = bool_array_length1;
#line 604 "../src/Core/ProgrammerCalculator.vala"
	if (result_length1) {
#line 604 "../src/Core/ProgrammerCalculator.vala"
		*result_length1 = _tmp68__length1;
#line 6276 "ProgrammerCalculator.c"
	}
#line 604 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp68_;
#line 604 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 6282 "ProgrammerCalculator.c"
}

static gpointer
_g_error_copy0 (gpointer self)
{
#line 644 "../src/Core/ProgrammerCalculator.vala"
	return self ? g_error_copy (self) : NULL;
#line 6290 "ProgrammerCalculator.c"
}

static gboolean*
_vala_array_dup19 (gboolean* self,
                   gint length)
{
#line 673 "../src/Core/ProgrammerCalculator.vala"
	if (length > 0) {
#line 673 "../src/Core/ProgrammerCalculator.vala"
		return g_memdup (self, length * sizeof (gboolean));
#line 6301 "ProgrammerCalculator.c"
	}
#line 673 "../src/Core/ProgrammerCalculator.vala"
	return NULL;
#line 6305 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_evaluate_exp (PebblesProgrammerCalculator* self,
                                            PebblesGlobalWordLength* wrd_length,
                                            PebblesNumberSystem number_system,
                                            gboolean** output_array,
                                            gint* output_array_length1,
                                            GError** error)
{
	gboolean* _vala_output_array = NULL;
	gint _vala_output_array_length1 = 0;
	CharStack* ops = NULL;
	CharStack* _tmp0_;
	BoolArrayStack* values = NULL;
	BoolArrayStack* _tmp1_;
	PebblesProgrammer* prog_calc = NULL;
	PebblesProgrammer* _tmp2_;
	gint word_size = 0;
	PebblesProgrammer* _tmp3_;
	gboolean* answer = NULL;
	BoolArrayStack* _tmp98_;
	gint _tmp99_ = 0;
	gboolean* _tmp100_;
	gint answer_length1;
	gint _answer_size_;
	gboolean* _tmp101_;
	gint _tmp101__length1;
	gboolean* _tmp102_;
	gint _tmp102__length1;
	gchar* output = NULL;
	gboolean* _tmp103_;
	gint _tmp103__length1;
	gchar* _tmp104_;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 607 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 608 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = char_stack_new (50);
#line 608 "../src/Core/ProgrammerCalculator.vala"
	ops = _tmp0_;
#line 609 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = bool_array_stack_new (50);
#line 609 "../src/Core/ProgrammerCalculator.vala"
	values = _tmp1_;
#line 610 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = pebbles_programmer_new ();
#line 610 "../src/Core/ProgrammerCalculator.vala"
	prog_calc = _tmp2_;
#line 611 "../src/Core/ProgrammerCalculator.vala"
	word_size = 8;
#line 612 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = prog_calc;
#line 612 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_->word_size = PEBBLES_WORD_SIZE_BYTE;
#line 613 "../src/Core/ProgrammerCalculator.vala"
	switch (*wrd_length) {
#line 613 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_BYT:
#line 6366 "ProgrammerCalculator.c"
		{
			PebblesProgrammer* _tmp4_;
#line 615 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_ = prog_calc;
#line 615 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_->word_size = PEBBLES_WORD_SIZE_BYTE;
#line 616 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 6375 "ProgrammerCalculator.c"
		}
#line 613 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_WRD:
#line 6379 "ProgrammerCalculator.c"
		{
			PebblesProgrammer* _tmp5_;
#line 618 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = prog_calc;
#line 618 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_->word_size = PEBBLES_WORD_SIZE_WORD;
#line 619 "../src/Core/ProgrammerCalculator.vala"
			word_size = 16;
#line 620 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 6390 "ProgrammerCalculator.c"
		}
#line 613 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_DWD:
#line 6394 "ProgrammerCalculator.c"
		{
			PebblesProgrammer* _tmp6_;
#line 622 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = prog_calc;
#line 622 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_->word_size = PEBBLES_WORD_SIZE_DWORD;
#line 623 "../src/Core/ProgrammerCalculator.vala"
			word_size = 32;
#line 624 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 6405 "ProgrammerCalculator.c"
		}
#line 613 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_QWD:
#line 6409 "ProgrammerCalculator.c"
		{
			PebblesProgrammer* _tmp7_;
#line 626 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = prog_calc;
#line 626 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_->word_size = PEBBLES_WORD_SIZE_QWORD;
#line 627 "../src/Core/ProgrammerCalculator.vala"
			word_size = 64;
#line 628 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 6420 "ProgrammerCalculator.c"
		}
		default:
#line 613 "../src/Core/ProgrammerCalculator.vala"
		break;
#line 6425 "ProgrammerCalculator.c"
	}
	{
		gint i = 0;
#line 630 "../src/Core/ProgrammerCalculator.vala"
		i = 0;
#line 6431 "ProgrammerCalculator.c"
		{
			gboolean _tmp8_ = FALSE;
#line 630 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = TRUE;
#line 630 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 6438 "ProgrammerCalculator.c"
				PebblesProgrammerCalculatorToken* _tmp10_;
				gint _tmp10__length1;
				PebblesProgrammerCalculatorToken* _tmp11_;
				gint _tmp11__length1;
				PebblesProgrammerCalculatorToken _tmp12_;
				PebblesProgrammerCalculatorTokenType _tmp13_;
#line 630 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp8_) {
#line 6447 "ProgrammerCalculator.c"
					gint _tmp9_;
#line 630 "../src/Core/ProgrammerCalculator.vala"
					_tmp9_ = i;
#line 630 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp9_ + 1;
#line 6453 "ProgrammerCalculator.c"
				}
#line 630 "../src/Core/ProgrammerCalculator.vala"
				_tmp8_ = FALSE;
#line 630 "../src/Core/ProgrammerCalculator.vala"
				_tmp10_ = self->priv->stored_tokens;
#line 630 "../src/Core/ProgrammerCalculator.vala"
				_tmp10__length1 = self->priv->stored_tokens_length1;
#line 630 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < _tmp10__length1)) {
#line 630 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 6465 "ProgrammerCalculator.c"
				}
#line 631 "../src/Core/ProgrammerCalculator.vala"
				_tmp11_ = self->priv->stored_tokens;
#line 631 "../src/Core/ProgrammerCalculator.vala"
				_tmp11__length1 = self->priv->stored_tokens_length1;
#line 631 "../src/Core/ProgrammerCalculator.vala"
				_tmp12_ = _tmp11_[i];
#line 631 "../src/Core/ProgrammerCalculator.vala"
				_tmp13_ = _tmp12_.type;
#line 631 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp13_ == PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND) {
#line 6477 "ProgrammerCalculator.c"
					BoolArrayStack* _tmp14_;
					PebblesProgrammerCalculatorToken* _tmp15_;
					gint _tmp15__length1;
					PebblesProgrammerCalculatorToken _tmp16_;
					const gchar* _tmp17_;
					PebblesProgrammerCalculatorToken* _tmp18_;
					gint _tmp18__length1;
					PebblesProgrammerCalculatorToken _tmp19_;
					PebblesNumberSystem _tmp20_;
					gint _tmp21_ = 0;
					gboolean* _tmp22_;
					gboolean* _tmp23_;
					gint _tmp23__length1;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp14_ = values;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp15_ = self->priv->stored_tokens;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp15__length1 = self->priv->stored_tokens_length1;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp16_ = _tmp15_[i];
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp17_ = _tmp16_.token;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp18_ = self->priv->stored_tokens;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp18__length1 = self->priv->stored_tokens_length1;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp19_ = _tmp18_[i];
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp20_ = _tmp19_.number_system;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp22_ = pebbles_programmer_calculator_string_to_bool_array (self, _tmp17_, _tmp20_, *wrd_length, &_tmp21_);
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp23_ = _tmp22_;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp23__length1 = _tmp21_;
#line 633 "../src/Core/ProgrammerCalculator.vala"
					bool_array_stack_push (_tmp14_, _tmp23_, (gint) _tmp21_);
#line 633 "../src/Core/ProgrammerCalculator.vala"
					_tmp23_ = (g_free (_tmp23_), NULL);
#line 6519 "ProgrammerCalculator.c"
				} else {
					PebblesProgrammerCalculatorToken* _tmp24_;
					gint _tmp24__length1;
					PebblesProgrammerCalculatorToken _tmp25_;
					PebblesProgrammerCalculatorTokenType _tmp26_;
#line 634 "../src/Core/ProgrammerCalculator.vala"
					_tmp24_ = self->priv->stored_tokens;
#line 634 "../src/Core/ProgrammerCalculator.vala"
					_tmp24__length1 = self->priv->stored_tokens_length1;
#line 634 "../src/Core/ProgrammerCalculator.vala"
					_tmp25_ = _tmp24_[i];
#line 634 "../src/Core/ProgrammerCalculator.vala"
					_tmp26_ = _tmp25_.type;
#line 634 "../src/Core/ProgrammerCalculator.vala"
					if (_tmp26_ == PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_PARENTHESIS) {
#line 6535 "ProgrammerCalculator.c"
						PebblesProgrammerCalculatorToken* _tmp27_;
						gint _tmp27__length1;
						PebblesProgrammerCalculatorToken _tmp28_;
						const gchar* _tmp29_;
#line 635 "../src/Core/ProgrammerCalculator.vala"
						_tmp27_ = self->priv->stored_tokens;
#line 635 "../src/Core/ProgrammerCalculator.vala"
						_tmp27__length1 = self->priv->stored_tokens_length1;
#line 635 "../src/Core/ProgrammerCalculator.vala"
						_tmp28_ = _tmp27_[i];
#line 635 "../src/Core/ProgrammerCalculator.vala"
						_tmp29_ = _tmp28_.token;
#line 635 "../src/Core/ProgrammerCalculator.vala"
						if (g_strcmp0 (_tmp29_, "(") == 0) {
#line 6550 "ProgrammerCalculator.c"
							CharStack* _tmp30_;
#line 636 "../src/Core/ProgrammerCalculator.vala"
							_tmp30_ = ops;
#line 636 "../src/Core/ProgrammerCalculator.vala"
							char_stack_push (_tmp30_, '(');
#line 6556 "ProgrammerCalculator.c"
						} else {
							CharStack* _tmp49_;
#line 639 "../src/Core/ProgrammerCalculator.vala"
							while (TRUE) {
#line 6561 "ProgrammerCalculator.c"
								CharStack* _tmp31_;
#line 639 "../src/Core/ProgrammerCalculator.vala"
								_tmp31_ = ops;
#line 639 "../src/Core/ProgrammerCalculator.vala"
								if (!(char_stack_peek (_tmp31_) != '(')) {
#line 639 "../src/Core/ProgrammerCalculator.vala"
									break;
#line 6569 "ProgrammerCalculator.c"
								}
								{
									gboolean* tmp = NULL;
									PebblesProgrammer* _tmp32_;
									CharStack* _tmp33_;
									BoolArrayStack* _tmp34_;
									gint _tmp35_ = 0;
									gboolean* _tmp36_;
									gboolean* _tmp37_;
									gint _tmp37__length1;
									BoolArrayStack* _tmp38_;
									gint _tmp39_ = 0;
									gboolean* _tmp40_;
									gboolean* _tmp41_;
									gint _tmp41__length1;
									gint _tmp42_ = 0;
									gboolean* _tmp43_;
									gboolean* _tmp44_;
									gint _tmp44__length1;
									gint tmp_length1;
									gint _tmp_size_;
									BoolArrayStack* _tmp45_;
									gboolean* _tmp46_;
									gint _tmp46__length1;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp32_ = prog_calc;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp33_ = ops;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp34_ = values;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp36_ = bool_array_stack_pop (_tmp34_, &_tmp35_);
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp37_ = _tmp36_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp37__length1 = _tmp35_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp38_ = values;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp40_ = bool_array_stack_pop (_tmp38_, &_tmp39_);
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp41_ = _tmp40_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp41__length1 = _tmp39_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp43_ = pebbles_programmer_calculator_apply_op (self, _tmp32_, char_stack_pop (_tmp33_), _tmp37_, (gint) _tmp35_, _tmp41_, (gint) _tmp39_, word_size, &_tmp42_, &_inner_error0_);
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp44_ = _tmp43_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp44__length1 = _tmp42_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp41_ = (g_free (_tmp41_), NULL);
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp37_ = (g_free (_tmp37_), NULL);
#line 641 "../src/Core/ProgrammerCalculator.vala"
									tmp = _tmp44_;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									tmp_length1 = _tmp44__length1;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									_tmp_size_ = tmp_length1;
#line 641 "../src/Core/ProgrammerCalculator.vala"
									if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 641 "../src/Core/ProgrammerCalculator.vala"
										if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 6634 "ProgrammerCalculator.c"
											goto __catch0_pebbles_calc_error;
										}
#line 641 "../src/Core/ProgrammerCalculator.vala"
										_pebbles_programmer_unref0 (prog_calc);
#line 641 "../src/Core/ProgrammerCalculator.vala"
										_bool_array_stack_unref0 (values);
#line 641 "../src/Core/ProgrammerCalculator.vala"
										_char_stack_unref0 (ops);
#line 641 "../src/Core/ProgrammerCalculator.vala"
										_vala_output_array = (g_free (_vala_output_array), NULL);
#line 641 "../src/Core/ProgrammerCalculator.vala"
										g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 641 "../src/Core/ProgrammerCalculator.vala"
										g_clear_error (&_inner_error0_);
#line 641 "../src/Core/ProgrammerCalculator.vala"
										return NULL;
#line 6651 "ProgrammerCalculator.c"
									}
#line 642 "../src/Core/ProgrammerCalculator.vala"
									_tmp45_ = values;
#line 642 "../src/Core/ProgrammerCalculator.vala"
									_tmp46_ = tmp;
#line 642 "../src/Core/ProgrammerCalculator.vala"
									_tmp46__length1 = tmp_length1;
#line 642 "../src/Core/ProgrammerCalculator.vala"
									bool_array_stack_push (_tmp45_, _tmp46_, (gint) _tmp46__length1);
#line 640 "../src/Core/ProgrammerCalculator.vala"
									tmp = (g_free (tmp), NULL);
#line 6663 "ProgrammerCalculator.c"
								}
								goto __finally0;
								__catch0_pebbles_calc_error:
								{
									GError* e = NULL;
									GError* _tmp47_;
									GError* _tmp48_;
#line 640 "../src/Core/ProgrammerCalculator.vala"
									e = _inner_error0_;
#line 640 "../src/Core/ProgrammerCalculator.vala"
									_inner_error0_ = NULL;
#line 644 "../src/Core/ProgrammerCalculator.vala"
									_tmp47_ = e;
#line 644 "../src/Core/ProgrammerCalculator.vala"
									_tmp48_ = _g_error_copy0 (_tmp47_);
#line 644 "../src/Core/ProgrammerCalculator.vala"
									_inner_error0_ = _tmp48_;
#line 644 "../src/Core/ProgrammerCalculator.vala"
									_g_error_free0 (e);
#line 6683 "ProgrammerCalculator.c"
									goto __finally0;
								}
								__finally0:
#line 640 "../src/Core/ProgrammerCalculator.vala"
								if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 640 "../src/Core/ProgrammerCalculator.vala"
									if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 640 "../src/Core/ProgrammerCalculator.vala"
										g_propagate_error (error, _inner_error0_);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_pebbles_programmer_unref0 (prog_calc);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_bool_array_stack_unref0 (values);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_char_stack_unref0 (ops);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_vala_output_array = (g_free (_vala_output_array), NULL);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										return NULL;
#line 6703 "ProgrammerCalculator.c"
									} else {
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_pebbles_programmer_unref0 (prog_calc);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_bool_array_stack_unref0 (values);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_char_stack_unref0 (ops);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										_vala_output_array = (g_free (_vala_output_array), NULL);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										g_clear_error (&_inner_error0_);
#line 640 "../src/Core/ProgrammerCalculator.vala"
										return NULL;
#line 6719 "ProgrammerCalculator.c"
									}
								}
							}
#line 647 "../src/Core/ProgrammerCalculator.vala"
							_tmp49_ = ops;
#line 647 "../src/Core/ProgrammerCalculator.vala"
							char_stack_pop (_tmp49_);
#line 6727 "ProgrammerCalculator.c"
						}
					} else {
						PebblesProgrammerCalculatorToken* _tmp50_;
						gint _tmp50__length1;
						PebblesProgrammerCalculatorToken _tmp51_;
						PebblesProgrammerCalculatorTokenType _tmp52_;
#line 649 "../src/Core/ProgrammerCalculator.vala"
						_tmp50_ = self->priv->stored_tokens;
#line 649 "../src/Core/ProgrammerCalculator.vala"
						_tmp50__length1 = self->priv->stored_tokens_length1;
#line 649 "../src/Core/ProgrammerCalculator.vala"
						_tmp51_ = _tmp50_[i];
#line 649 "../src/Core/ProgrammerCalculator.vala"
						_tmp52_ = _tmp51_.type;
#line 649 "../src/Core/ProgrammerCalculator.vala"
						if (_tmp52_ == PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR) {
#line 6744 "ProgrammerCalculator.c"
							CharStack* _tmp76_;
							PebblesProgrammerCalculatorToken* _tmp77_;
							gint _tmp77__length1;
							PebblesProgrammerCalculatorToken _tmp78_;
							const gchar* _tmp79_;
#line 650 "../src/Core/ProgrammerCalculator.vala"
							while (TRUE) {
#line 6752 "ProgrammerCalculator.c"
								gboolean _tmp53_ = FALSE;
								CharStack* _tmp54_;
#line 650 "../src/Core/ProgrammerCalculator.vala"
								_tmp54_ = ops;
#line 650 "../src/Core/ProgrammerCalculator.vala"
								if (!char_stack_empty (_tmp54_)) {
#line 6759 "ProgrammerCalculator.c"
									PebblesProgrammerCalculatorToken* _tmp55_;
									gint _tmp55__length1;
									PebblesProgrammerCalculatorToken _tmp56_;
									const gchar* _tmp57_;
									CharStack* _tmp58_;
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp55_ = self->priv->stored_tokens;
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp55__length1 = self->priv->stored_tokens_length1;
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp56_ = _tmp55_[i];
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp57_ = _tmp56_.token;
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp58_ = ops;
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp53_ = pebbles_programmer_calculator_has_precedence_pemdas (string_get (_tmp57_, (glong) 0), char_stack_peek (_tmp58_));
#line 6777 "ProgrammerCalculator.c"
								} else {
#line 650 "../src/Core/ProgrammerCalculator.vala"
									_tmp53_ = FALSE;
#line 6781 "ProgrammerCalculator.c"
								}
#line 650 "../src/Core/ProgrammerCalculator.vala"
								if (!_tmp53_) {
#line 650 "../src/Core/ProgrammerCalculator.vala"
									break;
#line 6787 "ProgrammerCalculator.c"
								}
								{
									gboolean* tmp = NULL;
									PebblesProgrammer* _tmp59_;
									CharStack* _tmp60_;
									BoolArrayStack* _tmp61_;
									gint _tmp62_ = 0;
									gboolean* _tmp63_;
									gboolean* _tmp64_;
									gint _tmp64__length1;
									BoolArrayStack* _tmp65_;
									gint _tmp66_ = 0;
									gboolean* _tmp67_;
									gboolean* _tmp68_;
									gint _tmp68__length1;
									gint _tmp69_ = 0;
									gboolean* _tmp70_;
									gboolean* _tmp71_;
									gint _tmp71__length1;
									gint tmp_length1;
									gint _tmp_size_;
									BoolArrayStack* _tmp72_;
									gboolean* _tmp73_;
									gint _tmp73__length1;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp59_ = prog_calc;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp60_ = ops;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp61_ = values;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp63_ = bool_array_stack_pop (_tmp61_, &_tmp62_);
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp64_ = _tmp63_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp64__length1 = _tmp62_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp65_ = values;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp67_ = bool_array_stack_pop (_tmp65_, &_tmp66_);
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp68_ = _tmp67_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp68__length1 = _tmp66_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp70_ = pebbles_programmer_calculator_apply_op (self, _tmp59_, char_stack_pop (_tmp60_), _tmp64_, (gint) _tmp62_, _tmp68_, (gint) _tmp66_, word_size, &_tmp69_, &_inner_error0_);
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp71_ = _tmp70_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp71__length1 = _tmp69_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp68_ = (g_free (_tmp68_), NULL);
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp64_ = (g_free (_tmp64_), NULL);
#line 652 "../src/Core/ProgrammerCalculator.vala"
									tmp = _tmp71_;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									tmp_length1 = _tmp71__length1;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									_tmp_size_ = tmp_length1;
#line 652 "../src/Core/ProgrammerCalculator.vala"
									if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 652 "../src/Core/ProgrammerCalculator.vala"
										if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 6852 "ProgrammerCalculator.c"
											goto __catch1_pebbles_calc_error;
										}
#line 652 "../src/Core/ProgrammerCalculator.vala"
										_pebbles_programmer_unref0 (prog_calc);
#line 652 "../src/Core/ProgrammerCalculator.vala"
										_bool_array_stack_unref0 (values);
#line 652 "../src/Core/ProgrammerCalculator.vala"
										_char_stack_unref0 (ops);
#line 652 "../src/Core/ProgrammerCalculator.vala"
										_vala_output_array = (g_free (_vala_output_array), NULL);
#line 652 "../src/Core/ProgrammerCalculator.vala"
										g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 652 "../src/Core/ProgrammerCalculator.vala"
										g_clear_error (&_inner_error0_);
#line 652 "../src/Core/ProgrammerCalculator.vala"
										return NULL;
#line 6869 "ProgrammerCalculator.c"
									}
#line 653 "../src/Core/ProgrammerCalculator.vala"
									_tmp72_ = values;
#line 653 "../src/Core/ProgrammerCalculator.vala"
									_tmp73_ = tmp;
#line 653 "../src/Core/ProgrammerCalculator.vala"
									_tmp73__length1 = tmp_length1;
#line 653 "../src/Core/ProgrammerCalculator.vala"
									bool_array_stack_push (_tmp72_, _tmp73_, (gint) _tmp73__length1);
#line 651 "../src/Core/ProgrammerCalculator.vala"
									tmp = (g_free (tmp), NULL);
#line 6881 "ProgrammerCalculator.c"
								}
								goto __finally1;
								__catch1_pebbles_calc_error:
								{
									GError* e = NULL;
									GError* _tmp74_;
									GError* _tmp75_;
#line 651 "../src/Core/ProgrammerCalculator.vala"
									e = _inner_error0_;
#line 651 "../src/Core/ProgrammerCalculator.vala"
									_inner_error0_ = NULL;
#line 655 "../src/Core/ProgrammerCalculator.vala"
									_tmp74_ = e;
#line 655 "../src/Core/ProgrammerCalculator.vala"
									_tmp75_ = _g_error_copy0 (_tmp74_);
#line 655 "../src/Core/ProgrammerCalculator.vala"
									_inner_error0_ = _tmp75_;
#line 655 "../src/Core/ProgrammerCalculator.vala"
									_g_error_free0 (e);
#line 6901 "ProgrammerCalculator.c"
									goto __finally1;
								}
								__finally1:
#line 651 "../src/Core/ProgrammerCalculator.vala"
								if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 651 "../src/Core/ProgrammerCalculator.vala"
									if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 651 "../src/Core/ProgrammerCalculator.vala"
										g_propagate_error (error, _inner_error0_);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_pebbles_programmer_unref0 (prog_calc);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_bool_array_stack_unref0 (values);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_char_stack_unref0 (ops);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_vala_output_array = (g_free (_vala_output_array), NULL);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										return NULL;
#line 6921 "ProgrammerCalculator.c"
									} else {
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_pebbles_programmer_unref0 (prog_calc);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_bool_array_stack_unref0 (values);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_char_stack_unref0 (ops);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										_vala_output_array = (g_free (_vala_output_array), NULL);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										g_clear_error (&_inner_error0_);
#line 651 "../src/Core/ProgrammerCalculator.vala"
										return NULL;
#line 6937 "ProgrammerCalculator.c"
									}
								}
							}
#line 659 "../src/Core/ProgrammerCalculator.vala"
							_tmp76_ = ops;
#line 659 "../src/Core/ProgrammerCalculator.vala"
							_tmp77_ = self->priv->stored_tokens;
#line 659 "../src/Core/ProgrammerCalculator.vala"
							_tmp77__length1 = self->priv->stored_tokens_length1;
#line 659 "../src/Core/ProgrammerCalculator.vala"
							_tmp78_ = _tmp77_[i];
#line 659 "../src/Core/ProgrammerCalculator.vala"
							_tmp79_ = _tmp78_.token;
#line 659 "../src/Core/ProgrammerCalculator.vala"
							char_stack_push (_tmp76_, string_get (_tmp79_, (glong) 0));
#line 6953 "ProgrammerCalculator.c"
						}
					}
				}
			}
		}
	}
#line 662 "../src/Core/ProgrammerCalculator.vala"
	while (TRUE) {
#line 6962 "ProgrammerCalculator.c"
		CharStack* _tmp80_;
#line 662 "../src/Core/ProgrammerCalculator.vala"
		_tmp80_ = ops;
#line 662 "../src/Core/ProgrammerCalculator.vala"
		if (!(!char_stack_empty (_tmp80_))) {
#line 662 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 6970 "ProgrammerCalculator.c"
		}
		{
			gboolean* tmp = NULL;
			PebblesProgrammer* _tmp81_;
			CharStack* _tmp82_;
			BoolArrayStack* _tmp83_;
			gint _tmp84_ = 0;
			gboolean* _tmp85_;
			gboolean* _tmp86_;
			gint _tmp86__length1;
			BoolArrayStack* _tmp87_;
			gint _tmp88_ = 0;
			gboolean* _tmp89_;
			gboolean* _tmp90_;
			gint _tmp90__length1;
			gint _tmp91_ = 0;
			gboolean* _tmp92_;
			gboolean* _tmp93_;
			gint _tmp93__length1;
			gint tmp_length1;
			gint _tmp_size_;
			BoolArrayStack* _tmp94_;
			gboolean* _tmp95_;
			gint _tmp95__length1;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp81_ = prog_calc;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp82_ = ops;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp83_ = values;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp85_ = bool_array_stack_pop (_tmp83_, &_tmp84_);
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp86_ = _tmp85_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp86__length1 = _tmp84_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp87_ = values;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp89_ = bool_array_stack_pop (_tmp87_, &_tmp88_);
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp90_ = _tmp89_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp90__length1 = _tmp88_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp92_ = pebbles_programmer_calculator_apply_op (self, _tmp81_, char_stack_pop (_tmp82_), _tmp86_, (gint) _tmp84_, _tmp90_, (gint) _tmp88_, word_size, &_tmp91_, &_inner_error0_);
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp93_ = _tmp92_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp93__length1 = _tmp91_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp90_ = (g_free (_tmp90_), NULL);
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp86_ = (g_free (_tmp86_), NULL);
#line 664 "../src/Core/ProgrammerCalculator.vala"
			tmp = _tmp93_;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			tmp_length1 = _tmp93__length1;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			_tmp_size_ = tmp_length1;
#line 664 "../src/Core/ProgrammerCalculator.vala"
			if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 664 "../src/Core/ProgrammerCalculator.vala"
				if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 7035 "ProgrammerCalculator.c"
					goto __catch2_pebbles_calc_error;
				}
#line 664 "../src/Core/ProgrammerCalculator.vala"
				_pebbles_programmer_unref0 (prog_calc);
#line 664 "../src/Core/ProgrammerCalculator.vala"
				_bool_array_stack_unref0 (values);
#line 664 "../src/Core/ProgrammerCalculator.vala"
				_char_stack_unref0 (ops);
#line 664 "../src/Core/ProgrammerCalculator.vala"
				_vala_output_array = (g_free (_vala_output_array), NULL);
#line 664 "../src/Core/ProgrammerCalculator.vala"
				g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 664 "../src/Core/ProgrammerCalculator.vala"
				g_clear_error (&_inner_error0_);
#line 664 "../src/Core/ProgrammerCalculator.vala"
				return NULL;
#line 7052 "ProgrammerCalculator.c"
			}
#line 665 "../src/Core/ProgrammerCalculator.vala"
			_tmp94_ = values;
#line 665 "../src/Core/ProgrammerCalculator.vala"
			_tmp95_ = tmp;
#line 665 "../src/Core/ProgrammerCalculator.vala"
			_tmp95__length1 = tmp_length1;
#line 665 "../src/Core/ProgrammerCalculator.vala"
			bool_array_stack_push (_tmp94_, _tmp95_, (gint) _tmp95__length1);
#line 663 "../src/Core/ProgrammerCalculator.vala"
			tmp = (g_free (tmp), NULL);
#line 7064 "ProgrammerCalculator.c"
		}
		goto __finally2;
		__catch2_pebbles_calc_error:
		{
			GError* e = NULL;
			GError* _tmp96_;
			GError* _tmp97_;
#line 663 "../src/Core/ProgrammerCalculator.vala"
			e = _inner_error0_;
#line 663 "../src/Core/ProgrammerCalculator.vala"
			_inner_error0_ = NULL;
#line 667 "../src/Core/ProgrammerCalculator.vala"
			_tmp96_ = e;
#line 667 "../src/Core/ProgrammerCalculator.vala"
			_tmp97_ = _g_error_copy0 (_tmp96_);
#line 667 "../src/Core/ProgrammerCalculator.vala"
			_inner_error0_ = _tmp97_;
#line 667 "../src/Core/ProgrammerCalculator.vala"
			_g_error_free0 (e);
#line 7084 "ProgrammerCalculator.c"
			goto __finally2;
		}
		__finally2:
#line 663 "../src/Core/ProgrammerCalculator.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 663 "../src/Core/ProgrammerCalculator.vala"
			if (_inner_error0_->domain == PEBBLES_CALC_ERROR) {
#line 663 "../src/Core/ProgrammerCalculator.vala"
				g_propagate_error (error, _inner_error0_);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_pebbles_programmer_unref0 (prog_calc);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_bool_array_stack_unref0 (values);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_char_stack_unref0 (ops);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_vala_output_array = (g_free (_vala_output_array), NULL);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				return NULL;
#line 7104 "ProgrammerCalculator.c"
			} else {
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_pebbles_programmer_unref0 (prog_calc);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_bool_array_stack_unref0 (values);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_char_stack_unref0 (ops);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				_vala_output_array = (g_free (_vala_output_array), NULL);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				g_clear_error (&_inner_error0_);
#line 663 "../src/Core/ProgrammerCalculator.vala"
				return NULL;
#line 7120 "ProgrammerCalculator.c"
			}
		}
	}
#line 670 "../src/Core/ProgrammerCalculator.vala"
	_tmp98_ = values;
#line 670 "../src/Core/ProgrammerCalculator.vala"
	_tmp100_ = bool_array_stack_pop (_tmp98_, &_tmp99_);
#line 670 "../src/Core/ProgrammerCalculator.vala"
	answer = _tmp100_;
#line 670 "../src/Core/ProgrammerCalculator.vala"
	answer_length1 = _tmp99_;
#line 670 "../src/Core/ProgrammerCalculator.vala"
	_answer_size_ = answer_length1;
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_tmp101_ = answer;
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_tmp101__length1 = answer_length1;
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_tmp102_ = (_tmp101_ != NULL) ? _vala_array_dup19 (_tmp101_, _tmp101__length1) : ((gpointer) _tmp101_);
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_tmp102__length1 = _tmp101__length1;
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_vala_output_array = (g_free (_vala_output_array), NULL);
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_vala_output_array = _tmp102_;
#line 673 "../src/Core/ProgrammerCalculator.vala"
	_vala_output_array_length1 = _tmp102__length1;
#line 674 "../src/Core/ProgrammerCalculator.vala"
	_tmp103_ = answer;
#line 674 "../src/Core/ProgrammerCalculator.vala"
	_tmp103__length1 = answer_length1;
#line 674 "../src/Core/ProgrammerCalculator.vala"
	_tmp104_ = pebbles_programmer_calculator_bool_array_to_string (self, _tmp103_, (gint) _tmp103__length1, *wrd_length, number_system);
#line 674 "../src/Core/ProgrammerCalculator.vala"
	output = _tmp104_;
#line 676 "../src/Core/ProgrammerCalculator.vala"
	result = output;
#line 676 "../src/Core/ProgrammerCalculator.vala"
	answer = (g_free (answer), NULL);
#line 676 "../src/Core/ProgrammerCalculator.vala"
	_pebbles_programmer_unref0 (prog_calc);
#line 676 "../src/Core/ProgrammerCalculator.vala"
	_bool_array_stack_unref0 (values);
#line 676 "../src/Core/ProgrammerCalculator.vala"
	_char_stack_unref0 (ops);
#line 676 "../src/Core/ProgrammerCalculator.vala"
	if (output_array) {
#line 676 "../src/Core/ProgrammerCalculator.vala"
		*output_array = _vala_output_array;
#line 7170 "ProgrammerCalculator.c"
	} else {
#line 676 "../src/Core/ProgrammerCalculator.vala"
		_vala_output_array = (g_free (_vala_output_array), NULL);
#line 7174 "ProgrammerCalculator.c"
	}
#line 676 "../src/Core/ProgrammerCalculator.vala"
	if (output_array_length1) {
#line 676 "../src/Core/ProgrammerCalculator.vala"
		*output_array_length1 = _vala_output_array_length1;
#line 7180 "ProgrammerCalculator.c"
	}
#line 676 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 7184 "ProgrammerCalculator.c"
}

static gchar*
string_replace (const gchar* self,
                const gchar* old,
                const gchar* replacement)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (old != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (replacement != NULL, NULL);
#line 1535 "glib-2.0.vapi"
	if ((*((gchar*) self)) == '\0') {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = TRUE;
#line 7206 "ProgrammerCalculator.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = (*((gchar*) old)) == '\0';
#line 7210 "ProgrammerCalculator.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp1_) {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = TRUE;
#line 7216 "ProgrammerCalculator.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = g_strcmp0 (old, replacement) == 0;
#line 7220 "ProgrammerCalculator.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp0_) {
#line 7224 "ProgrammerCalculator.c"
		gchar* _tmp2_;
#line 1536 "glib-2.0.vapi"
		_tmp2_ = g_strdup (self);
#line 1536 "glib-2.0.vapi"
		result = _tmp2_;
#line 1536 "glib-2.0.vapi"
		return result;
#line 7232 "ProgrammerCalculator.c"
	}
	{
		GRegex* regex = NULL;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GRegex* _tmp5_;
		GRegex* _tmp6_;
		gchar* _tmp7_ = NULL;
		GRegex* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 1539 "glib-2.0.vapi"
		_tmp3_ = g_regex_escape_string (old, -1);
#line 1539 "glib-2.0.vapi"
		_tmp4_ = _tmp3_;
#line 1539 "glib-2.0.vapi"
		_tmp5_ = g_regex_new (_tmp4_, 0, 0, &_inner_error0_);
#line 1539 "glib-2.0.vapi"
		_tmp6_ = _tmp5_;
#line 1539 "glib-2.0.vapi"
		_g_free0 (_tmp4_);
#line 1539 "glib-2.0.vapi"
		regex = _tmp6_;
#line 1539 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1539 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1539 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1539 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 7264 "ProgrammerCalculator.c"
				goto __catch0_g_regex_error;
			}
#line 1539 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1539 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1539 "glib-2.0.vapi"
			return NULL;
#line 7273 "ProgrammerCalculator.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp8_ = regex;
#line 1540 "glib-2.0.vapi"
		_tmp9_ = g_regex_replace_literal (_tmp8_, self, (gssize) -1, 0, replacement, 0, &_inner_error0_);
#line 1540 "glib-2.0.vapi"
		_tmp7_ = _tmp9_;
#line 1540 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1540 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 7289 "ProgrammerCalculator.c"
				goto __catch0_g_regex_error;
			}
#line 1540 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1540 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1540 "glib-2.0.vapi"
			return NULL;
#line 7298 "ProgrammerCalculator.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp10_ = _tmp7_;
#line 1540 "glib-2.0.vapi"
		_tmp7_ = NULL;
#line 1540 "glib-2.0.vapi"
		result = _tmp10_;
#line 1540 "glib-2.0.vapi"
		_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
		_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
		return result;
#line 7312 "ProgrammerCalculator.c"
	}
	goto __finally0;
	__catch0_g_regex_error:
	{
#line 1538 "glib-2.0.vapi"
		g_clear_error (&_inner_error0_);
#line 1542 "glib-2.0.vapi"
		g_assert_not_reached ();
#line 7321 "ProgrammerCalculator.c"
	}
	__finally0:
#line 1538 "glib-2.0.vapi"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1538 "glib-2.0.vapi"
	g_clear_error (&_inner_error0_);
#line 1538 "glib-2.0.vapi"
	return NULL;
#line 7330 "ProgrammerCalculator.c"
}

gboolean*
pebbles_programmer_calculator_string_to_bool_array (PebblesProgrammerCalculator* self,
                                                    const gchar* str,
                                                    PebblesNumberSystem number_system,
                                                    PebblesGlobalWordLength wrd_length,
                                                    gint* result_length1)
{
	gboolean* bool_array = NULL;
	gboolean* _tmp0_;
	gint bool_array_length1;
	gint _bool_array_size_;
	gchar* converted_str = NULL;
	gchar* _tmp1_;
	gint j = 0;
	gboolean* _tmp27_;
	gint _tmp27__length1;
	gboolean* result = NULL;
#line 678 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 678 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (str != NULL, NULL);
#line 679 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_new0 (gboolean, 64);
#line 679 "../src/Core/ProgrammerCalculator.vala"
	bool_array = _tmp0_;
#line 679 "../src/Core/ProgrammerCalculator.vala"
	bool_array_length1 = 64;
#line 679 "../src/Core/ProgrammerCalculator.vala"
	_bool_array_size_ = bool_array_length1;
#line 680 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = g_strdup ("");
#line 680 "../src/Core/ProgrammerCalculator.vala"
	converted_str = _tmp1_;
#line 681 "../src/Core/ProgrammerCalculator.vala"
	switch (number_system) {
#line 681 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_OCTAL:
#line 7370 "ProgrammerCalculator.c"
		{
			gboolean _tmp2_;
			gchar* _tmp3_;
			gchar* _tmp4_;
			gchar* _tmp5_;
#line 683 "../src/Core/ProgrammerCalculator.vala"
			_tmp2_ = TRUE;
#line 683 "../src/Core/ProgrammerCalculator.vala"
			_tmp3_ = pebbles_programmer_calculator_convert_octal_to_binary (self, str, &wrd_length, &_tmp2_);
#line 683 "../src/Core/ProgrammerCalculator.vala"
			_tmp4_ = _tmp3_;
#line 683 "../src/Core/ProgrammerCalculator.vala"
			_tmp5_ = string_replace (_tmp4_, " ", "");
#line 683 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (converted_str);
#line 683 "../src/Core/ProgrammerCalculator.vala"
			converted_str = _tmp5_;
#line 683 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp4_);
#line 684 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7392 "ProgrammerCalculator.c"
		}
#line 681 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_DECIMAL:
#line 7396 "ProgrammerCalculator.c"
		{
			gboolean _tmp6_;
			gchar* _tmp7_;
			gchar* _tmp8_;
			gchar* _tmp9_;
#line 686 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = TRUE;
#line 686 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = pebbles_programmer_calculator_convert_decimal_to_binary (self, str, &wrd_length, &_tmp6_);
#line 686 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = _tmp7_;
#line 686 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = string_replace (_tmp8_, " ", "");
#line 686 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (converted_str);
#line 686 "../src/Core/ProgrammerCalculator.vala"
			converted_str = _tmp9_;
#line 686 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp8_);
#line 687 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7418 "ProgrammerCalculator.c"
		}
#line 681 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_HEXADECIMAL:
#line 7422 "ProgrammerCalculator.c"
		{
			gboolean _tmp10_;
			gchar* _tmp11_;
			gchar* _tmp12_;
			gchar* _tmp13_;
#line 689 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = TRUE;
#line 689 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = pebbles_programmer_calculator_convert_hexadecimal_to_binary (self, str, &wrd_length, &_tmp10_);
#line 689 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = _tmp11_;
#line 689 "../src/Core/ProgrammerCalculator.vala"
			_tmp13_ = string_replace (_tmp12_, " ", "");
#line 689 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (converted_str);
#line 689 "../src/Core/ProgrammerCalculator.vala"
			converted_str = _tmp13_;
#line 689 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp12_);
#line 690 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7444 "ProgrammerCalculator.c"
		}
		default:
		{
			gboolean _tmp14_;
			gchar* _tmp15_;
			gchar* _tmp16_;
			gchar* _tmp17_;
#line 692 "../src/Core/ProgrammerCalculator.vala"
			_tmp14_ = TRUE;
#line 692 "../src/Core/ProgrammerCalculator.vala"
			_tmp15_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, str, wrd_length, &_tmp14_);
#line 692 "../src/Core/ProgrammerCalculator.vala"
			_tmp16_ = _tmp15_;
#line 692 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = string_replace (_tmp16_, " ", "");
#line 692 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (converted_str);
#line 692 "../src/Core/ProgrammerCalculator.vala"
			converted_str = _tmp17_;
#line 692 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (_tmp16_);
#line 693 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7468 "ProgrammerCalculator.c"
		}
	}
#line 695 "../src/Core/ProgrammerCalculator.vala"
	j = 0;
#line 7473 "ProgrammerCalculator.c"
	{
		gint i = 0;
		const gchar* _tmp18_;
		gint _tmp19_;
		gint _tmp20_;
#line 696 "../src/Core/ProgrammerCalculator.vala"
		_tmp18_ = converted_str;
#line 696 "../src/Core/ProgrammerCalculator.vala"
		_tmp19_ = strlen (_tmp18_);
#line 696 "../src/Core/ProgrammerCalculator.vala"
		_tmp20_ = _tmp19_;
#line 696 "../src/Core/ProgrammerCalculator.vala"
		i = 64 - _tmp20_;
#line 7487 "ProgrammerCalculator.c"
		{
			gboolean _tmp21_ = FALSE;
#line 696 "../src/Core/ProgrammerCalculator.vala"
			_tmp21_ = TRUE;
#line 696 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 7494 "ProgrammerCalculator.c"
				const gchar* _tmp23_;
				gint _tmp26_;
#line 696 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp21_) {
#line 7499 "ProgrammerCalculator.c"
					gint _tmp22_;
#line 696 "../src/Core/ProgrammerCalculator.vala"
					_tmp22_ = i;
#line 696 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp22_ + 1;
#line 7505 "ProgrammerCalculator.c"
				}
#line 696 "../src/Core/ProgrammerCalculator.vala"
				_tmp21_ = FALSE;
#line 696 "../src/Core/ProgrammerCalculator.vala"
				if (!(i < 64)) {
#line 696 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 7513 "ProgrammerCalculator.c"
				}
#line 697 "../src/Core/ProgrammerCalculator.vala"
				_tmp23_ = converted_str;
#line 697 "../src/Core/ProgrammerCalculator.vala"
				if (string_get_char (_tmp23_, (glong) j) == ((gunichar) '0')) {
#line 7519 "ProgrammerCalculator.c"
					gboolean* _tmp24_;
					gint _tmp24__length1;
#line 698 "../src/Core/ProgrammerCalculator.vala"
					_tmp24_ = bool_array;
#line 698 "../src/Core/ProgrammerCalculator.vala"
					_tmp24__length1 = bool_array_length1;
#line 698 "../src/Core/ProgrammerCalculator.vala"
					_tmp24_[i] = FALSE;
#line 7528 "ProgrammerCalculator.c"
				} else {
					gboolean* _tmp25_;
					gint _tmp25__length1;
#line 700 "../src/Core/ProgrammerCalculator.vala"
					_tmp25_ = bool_array;
#line 700 "../src/Core/ProgrammerCalculator.vala"
					_tmp25__length1 = bool_array_length1;
#line 700 "../src/Core/ProgrammerCalculator.vala"
					_tmp25_[i] = TRUE;
#line 7538 "ProgrammerCalculator.c"
				}
#line 702 "../src/Core/ProgrammerCalculator.vala"
				_tmp26_ = j;
#line 702 "../src/Core/ProgrammerCalculator.vala"
				j = _tmp26_ + 1;
#line 7544 "ProgrammerCalculator.c"
			}
		}
	}
#line 704 "../src/Core/ProgrammerCalculator.vala"
	_tmp27_ = bool_array;
#line 704 "../src/Core/ProgrammerCalculator.vala"
	_tmp27__length1 = bool_array_length1;
#line 704 "../src/Core/ProgrammerCalculator.vala"
	if (result_length1) {
#line 704 "../src/Core/ProgrammerCalculator.vala"
		*result_length1 = _tmp27__length1;
#line 7556 "ProgrammerCalculator.c"
	}
#line 704 "../src/Core/ProgrammerCalculator.vala"
	result = _tmp27_;
#line 704 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (converted_str);
#line 704 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 7564 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_bool_array_to_string (PebblesProgrammerCalculator* self,
                                                    gboolean* arr,
                                                    gint arr_length1,
                                                    PebblesGlobalWordLength wrd_length,
                                                    PebblesNumberSystem number_system)
{
	gchar* str = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 707 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 708 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = g_strdup ("");
#line 708 "../src/Core/ProgrammerCalculator.vala"
	str = _tmp0_;
#line 709 "../src/Core/ProgrammerCalculator.vala"
	g_print ("length%d\n", arr_length1);
#line 7585 "ProgrammerCalculator.c"
	{
		gint i = 0;
#line 710 "../src/Core/ProgrammerCalculator.vala"
		i = 0;
#line 7590 "ProgrammerCalculator.c"
		{
			gboolean _tmp1_ = FALSE;
#line 710 "../src/Core/ProgrammerCalculator.vala"
			_tmp1_ = TRUE;
#line 710 "../src/Core/ProgrammerCalculator.vala"
			while (TRUE) {
#line 7597 "ProgrammerCalculator.c"
				gboolean _tmp3_;
#line 710 "../src/Core/ProgrammerCalculator.vala"
				if (!_tmp1_) {
#line 7601 "ProgrammerCalculator.c"
					gint _tmp2_;
#line 710 "../src/Core/ProgrammerCalculator.vala"
					_tmp2_ = i;
#line 710 "../src/Core/ProgrammerCalculator.vala"
					i = _tmp2_ + 1;
#line 7607 "ProgrammerCalculator.c"
				}
#line 710 "../src/Core/ProgrammerCalculator.vala"
				_tmp1_ = FALSE;
#line 710 "../src/Core/ProgrammerCalculator.vala"
				if (!(i <= arr_length1)) {
#line 710 "../src/Core/ProgrammerCalculator.vala"
					break;
#line 7615 "ProgrammerCalculator.c"
				}
#line 711 "../src/Core/ProgrammerCalculator.vala"
				_tmp3_ = arr[i];
#line 711 "../src/Core/ProgrammerCalculator.vala"
				if (_tmp3_ == TRUE) {
#line 7621 "ProgrammerCalculator.c"
					const gchar* _tmp4_;
					gchar* _tmp5_;
#line 712 "../src/Core/ProgrammerCalculator.vala"
					_tmp4_ = str;
#line 712 "../src/Core/ProgrammerCalculator.vala"
					_tmp5_ = g_strconcat (_tmp4_, "1", NULL);
#line 712 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (str);
#line 712 "../src/Core/ProgrammerCalculator.vala"
					str = _tmp5_;
#line 7632 "ProgrammerCalculator.c"
				} else {
					const gchar* _tmp6_;
					gchar* _tmp7_;
#line 714 "../src/Core/ProgrammerCalculator.vala"
					_tmp6_ = str;
#line 714 "../src/Core/ProgrammerCalculator.vala"
					_tmp7_ = g_strconcat (_tmp6_, "0", NULL);
#line 714 "../src/Core/ProgrammerCalculator.vala"
					_g_free0 (str);
#line 714 "../src/Core/ProgrammerCalculator.vala"
					str = _tmp7_;
#line 7644 "ProgrammerCalculator.c"
				}
			}
		}
	}
#line 717 "../src/Core/ProgrammerCalculator.vala"
	switch (number_system) {
#line 717 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_OCTAL:
#line 7653 "ProgrammerCalculator.c"
		{
			const gchar* _tmp8_;
			gboolean _tmp9_;
			gchar* _tmp10_;
#line 719 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = str;
#line 719 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = arr[0];
#line 719 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = pebbles_programmer_calculator_convert_binary_to_octal (self, _tmp8_, &wrd_length, &_tmp9_);
#line 719 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 719 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp10_;
#line 720 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7670 "ProgrammerCalculator.c"
		}
#line 717 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_DECIMAL:
#line 7674 "ProgrammerCalculator.c"
		{
			const gchar* _tmp11_;
			gboolean _tmp12_;
			gchar* _tmp13_;
#line 722 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = str;
#line 722 "../src/Core/ProgrammerCalculator.vala"
			_tmp12_ = arr[0];
#line 722 "../src/Core/ProgrammerCalculator.vala"
			_tmp13_ = pebbles_programmer_calculator_convert_binary_to_decimal (self, _tmp11_, &wrd_length, &_tmp12_);
#line 722 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 722 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp13_;
#line 723 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7691 "ProgrammerCalculator.c"
		}
#line 717 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_HEXADECIMAL:
#line 7695 "ProgrammerCalculator.c"
		{
			const gchar* _tmp14_;
			gboolean _tmp15_;
			gchar* _tmp16_;
#line 725 "../src/Core/ProgrammerCalculator.vala"
			_tmp14_ = str;
#line 725 "../src/Core/ProgrammerCalculator.vala"
			_tmp15_ = arr[0];
#line 725 "../src/Core/ProgrammerCalculator.vala"
			_tmp16_ = pebbles_programmer_calculator_convert_binary_to_hexadecimal (self, _tmp14_, &wrd_length, &_tmp15_);
#line 725 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 725 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp16_;
#line 726 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7712 "ProgrammerCalculator.c"
		}
		default:
		{
			const gchar* _tmp17_;
			gboolean _tmp18_;
			gchar* _tmp19_;
#line 728 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = str;
#line 728 "../src/Core/ProgrammerCalculator.vala"
			_tmp18_ = FALSE;
#line 728 "../src/Core/ProgrammerCalculator.vala"
			_tmp19_ = pebbles_programmer_calculator_represent_binary_by_word_length (self, _tmp17_, wrd_length, &_tmp18_);
#line 728 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 728 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp19_;
#line 729 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7731 "ProgrammerCalculator.c"
		}
	}
#line 731 "../src/Core/ProgrammerCalculator.vala"
	result = str;
#line 731 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 7738 "ProgrammerCalculator.c"
}

gchar*
pebbles_programmer_calculator_token_to_string (PebblesProgrammerCalculatorToken *self)
{
	gchar* str = NULL;
	const gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	PebblesProgrammerCalculatorTokenType _tmp5_;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	PebblesNumberSystem _tmp14_;
	const gchar* _tmp23_;
	gchar* _tmp24_;
	gchar* result = NULL;
#line 34 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = (*self).token;
#line 34 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = g_strconcat ("{\n\t\"token\": \"", _tmp0_, NULL);
#line 34 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = _tmp1_;
#line 34 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = g_strconcat (_tmp2_, "\",\n\t", NULL);
#line 34 "../src/Core/ProgrammerCalculator.vala"
	_tmp4_ = _tmp3_;
#line 34 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (_tmp2_);
#line 34 "../src/Core/ProgrammerCalculator.vala"
	str = _tmp4_;
#line 35 "../src/Core/ProgrammerCalculator.vala"
	_tmp5_ = (*self).type;
#line 35 "../src/Core/ProgrammerCalculator.vala"
	switch (_tmp5_) {
#line 35 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERAND:
#line 7777 "ProgrammerCalculator.c"
		{
			const gchar* _tmp6_;
			gchar* _tmp7_;
#line 37 "../src/Core/ProgrammerCalculator.vala"
			_tmp6_ = str;
#line 37 "../src/Core/ProgrammerCalculator.vala"
			_tmp7_ = g_strconcat (_tmp6_, "\"type\": \"operand\"", NULL);
#line 37 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 37 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp7_;
#line 38 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7791 "ProgrammerCalculator.c"
		}
#line 35 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_PROGRAMMER_CALCULATOR_TOKEN_TYPE_OPERATOR:
#line 7795 "ProgrammerCalculator.c"
		{
			const gchar* _tmp8_;
			gchar* _tmp9_;
#line 40 "../src/Core/ProgrammerCalculator.vala"
			_tmp8_ = str;
#line 40 "../src/Core/ProgrammerCalculator.vala"
			_tmp9_ = g_strconcat (_tmp8_, "\"type\": \"operator\"", NULL);
#line 40 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 40 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp9_;
#line 41 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7809 "ProgrammerCalculator.c"
		}
		default:
		{
			const gchar* _tmp10_;
			gchar* _tmp11_;
#line 43 "../src/Core/ProgrammerCalculator.vala"
			_tmp10_ = str;
#line 43 "../src/Core/ProgrammerCalculator.vala"
			_tmp11_ = g_strconcat (_tmp10_, "\"type\": \"parenthesis\"", NULL);
#line 43 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 43 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp11_;
#line 44 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7825 "ProgrammerCalculator.c"
		}
	}
#line 47 "../src/Core/ProgrammerCalculator.vala"
	_tmp12_ = str;
#line 47 "../src/Core/ProgrammerCalculator.vala"
	_tmp13_ = g_strconcat (_tmp12_, ",\n\t", NULL);
#line 47 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (str);
#line 47 "../src/Core/ProgrammerCalculator.vala"
	str = _tmp13_;
#line 48 "../src/Core/ProgrammerCalculator.vala"
	_tmp14_ = (*self).number_system;
#line 48 "../src/Core/ProgrammerCalculator.vala"
	switch (_tmp14_) {
#line 48 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_BINARY:
#line 7842 "ProgrammerCalculator.c"
		{
			const gchar* _tmp15_;
			gchar* _tmp16_;
#line 50 "../src/Core/ProgrammerCalculator.vala"
			_tmp15_ = str;
#line 50 "../src/Core/ProgrammerCalculator.vala"
			_tmp16_ = g_strconcat (_tmp15_, "\"number_system\": \"binary\"", NULL);
#line 50 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 50 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp16_;
#line 51 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7856 "ProgrammerCalculator.c"
		}
#line 48 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_OCTAL:
#line 7860 "ProgrammerCalculator.c"
		{
			const gchar* _tmp17_;
			gchar* _tmp18_;
#line 53 "../src/Core/ProgrammerCalculator.vala"
			_tmp17_ = str;
#line 53 "../src/Core/ProgrammerCalculator.vala"
			_tmp18_ = g_strconcat (_tmp17_, "\"number_system\": \"octal\"", NULL);
#line 53 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 53 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp18_;
#line 54 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7874 "ProgrammerCalculator.c"
		}
#line 48 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_DECIMAL:
#line 7878 "ProgrammerCalculator.c"
		{
			const gchar* _tmp19_;
			gchar* _tmp20_;
#line 56 "../src/Core/ProgrammerCalculator.vala"
			_tmp19_ = str;
#line 56 "../src/Core/ProgrammerCalculator.vala"
			_tmp20_ = g_strconcat (_tmp19_, "\"number_system\": \"decimal\"", NULL);
#line 56 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 56 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp20_;
#line 57 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7892 "ProgrammerCalculator.c"
		}
#line 48 "../src/Core/ProgrammerCalculator.vala"
		case PEBBLES_NUMBER_SYSTEM_HEXADECIMAL:
#line 7896 "ProgrammerCalculator.c"
		{
			const gchar* _tmp21_;
			gchar* _tmp22_;
#line 59 "../src/Core/ProgrammerCalculator.vala"
			_tmp21_ = str;
#line 59 "../src/Core/ProgrammerCalculator.vala"
			_tmp22_ = g_strconcat (_tmp21_, "\"number_system\": \"hexadecimal\"", NULL);
#line 59 "../src/Core/ProgrammerCalculator.vala"
			_g_free0 (str);
#line 59 "../src/Core/ProgrammerCalculator.vala"
			str = _tmp22_;
#line 60 "../src/Core/ProgrammerCalculator.vala"
			break;
#line 7910 "ProgrammerCalculator.c"
		}
		default:
#line 48 "../src/Core/ProgrammerCalculator.vala"
		break;
#line 7915 "ProgrammerCalculator.c"
	}
#line 62 "../src/Core/ProgrammerCalculator.vala"
	_tmp23_ = str;
#line 62 "../src/Core/ProgrammerCalculator.vala"
	_tmp24_ = g_strconcat (_tmp23_, "\n}", NULL);
#line 62 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 (str);
#line 62 "../src/Core/ProgrammerCalculator.vala"
	str = _tmp24_;
#line 64 "../src/Core/ProgrammerCalculator.vala"
	result = str;
#line 64 "../src/Core/ProgrammerCalculator.vala"
	return result;
#line 7929 "ProgrammerCalculator.c"
}

void
pebbles_programmer_calculator_token_copy (const PebblesProgrammerCalculatorToken* self,
                                          PebblesProgrammerCalculatorToken* dest)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	PebblesProgrammerCalculatorTokenType _tmp2_;
	PebblesNumberSystem _tmp3_;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	_tmp0_ = (*self).token;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 29 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 ((*dest).token);
#line 29 "../src/Core/ProgrammerCalculator.vala"
	(*dest).token = _tmp1_;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	_tmp2_ = (*self).type;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	(*dest).type = _tmp2_;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	_tmp3_ = (*self).number_system;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	(*dest).number_system = _tmp3_;
#line 7956 "ProgrammerCalculator.c"
}

void
pebbles_programmer_calculator_token_destroy (PebblesProgrammerCalculatorToken* self)
{
#line 30 "../src/Core/ProgrammerCalculator.vala"
	_g_free0 ((*self).token);
#line 7964 "ProgrammerCalculator.c"
}

PebblesProgrammerCalculatorToken*
pebbles_programmer_calculator_token_dup (const PebblesProgrammerCalculatorToken* self)
{
	PebblesProgrammerCalculatorToken* dup;
#line 29 "../src/Core/ProgrammerCalculator.vala"
	dup = g_new0 (PebblesProgrammerCalculatorToken, 1);
#line 29 "../src/Core/ProgrammerCalculator.vala"
	pebbles_programmer_calculator_token_copy (self, dup);
#line 29 "../src/Core/ProgrammerCalculator.vala"
	return dup;
#line 7977 "ProgrammerCalculator.c"
}

void
pebbles_programmer_calculator_token_free (PebblesProgrammerCalculatorToken* self)
{
#line 29 "../src/Core/ProgrammerCalculator.vala"
	pebbles_programmer_calculator_token_destroy (self);
#line 29 "../src/Core/ProgrammerCalculator.vala"
	g_free (self);
#line 7987 "ProgrammerCalculator.c"
}

static GType
pebbles_programmer_calculator_token_get_type_once (void)
{
	GType pebbles_programmer_calculator_token_type_id;
	pebbles_programmer_calculator_token_type_id = g_boxed_type_register_static ("PebblesProgrammerCalculatorToken", (GBoxedCopyFunc) pebbles_programmer_calculator_token_dup, (GBoxedFreeFunc) pebbles_programmer_calculator_token_free);
	return pebbles_programmer_calculator_token_type_id;
}

GType
pebbles_programmer_calculator_token_get_type (void)
{
	static volatile gsize pebbles_programmer_calculator_token_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_programmer_calculator_token_type_id__volatile)) {
		GType pebbles_programmer_calculator_token_type_id;
		pebbles_programmer_calculator_token_type_id = pebbles_programmer_calculator_token_get_type_once ();
		g_once_init_leave (&pebbles_programmer_calculator_token_type_id__volatile, pebbles_programmer_calculator_token_type_id);
	}
	return pebbles_programmer_calculator_token_type_id__volatile;
}

static void
pebbles_value_programmer_calculator_init (GValue* value)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	value->data[0].v_pointer = NULL;
#line 8015 "ProgrammerCalculator.c"
}

static void
pebbles_value_programmer_calculator_free_value (GValue* value)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (value->data[0].v_pointer) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		pebbles_programmer_calculator_unref (value->data[0].v_pointer);
#line 8025 "ProgrammerCalculator.c"
	}
}

static void
pebbles_value_programmer_calculator_copy_value (const GValue* src_value,
                                                GValue* dest_value)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (src_value->data[0].v_pointer) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		dest_value->data[0].v_pointer = pebbles_programmer_calculator_ref (src_value->data[0].v_pointer);
#line 8037 "ProgrammerCalculator.c"
	} else {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		dest_value->data[0].v_pointer = NULL;
#line 8041 "ProgrammerCalculator.c"
	}
}

static gpointer
pebbles_value_programmer_calculator_peek_pointer (const GValue* value)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	return value->data[0].v_pointer;
#line 8050 "ProgrammerCalculator.c"
}

static gchar*
pebbles_value_programmer_calculator_collect_value (GValue* value,
                                                   guint n_collect_values,
                                                   GTypeCValue* collect_values,
                                                   guint collect_flags)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (collect_values[0].v_pointer) {
#line 8061 "ProgrammerCalculator.c"
		PebblesProgrammerCalculator * object;
		object = collect_values[0].v_pointer;
#line 22 "../src/Core/ProgrammerCalculator.vala"
		if (object->parent_instance.g_class == NULL) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 8068 "ProgrammerCalculator.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 8072 "ProgrammerCalculator.c"
		}
#line 22 "../src/Core/ProgrammerCalculator.vala"
		value->data[0].v_pointer = pebbles_programmer_calculator_ref (object);
#line 8076 "ProgrammerCalculator.c"
	} else {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		value->data[0].v_pointer = NULL;
#line 8080 "ProgrammerCalculator.c"
	}
#line 22 "../src/Core/ProgrammerCalculator.vala"
	return NULL;
#line 8084 "ProgrammerCalculator.c"
}

static gchar*
pebbles_value_programmer_calculator_lcopy_value (const GValue* value,
                                                 guint n_collect_values,
                                                 GTypeCValue* collect_values,
                                                 guint collect_flags)
{
	PebblesProgrammerCalculator ** object_p;
	object_p = collect_values[0].v_pointer;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (!object_p) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 8099 "ProgrammerCalculator.c"
	}
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (!value->data[0].v_pointer) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		*object_p = NULL;
#line 8105 "ProgrammerCalculator.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		*object_p = value->data[0].v_pointer;
#line 8109 "ProgrammerCalculator.c"
	} else {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		*object_p = pebbles_programmer_calculator_ref (value->data[0].v_pointer);
#line 8113 "ProgrammerCalculator.c"
	}
#line 22 "../src/Core/ProgrammerCalculator.vala"
	return NULL;
#line 8117 "ProgrammerCalculator.c"
}

GParamSpec*
pebbles_param_spec_programmer_calculator (const gchar* name,
                                          const gchar* nick,
                                          const gchar* blurb,
                                          GType object_type,
                                          GParamFlags flags)
{
	PebblesParamSpecProgrammerCalculator* spec;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (g_type_is_a (object_type, PEBBLES_TYPE_PROGRAMMER_CALCULATOR), NULL);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	return G_PARAM_SPEC (spec);
#line 8136 "ProgrammerCalculator.c"
}

gpointer
pebbles_value_get_programmer_calculator (const GValue* value)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_PROGRAMMER_CALCULATOR), NULL);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	return value->data[0].v_pointer;
#line 8146 "ProgrammerCalculator.c"
}

void
pebbles_value_set_programmer_calculator (GValue* value,
                                         gpointer v_object)
{
	PebblesProgrammerCalculator * old;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_PROGRAMMER_CALCULATOR));
#line 22 "../src/Core/ProgrammerCalculator.vala"
	old = value->data[0].v_pointer;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (v_object) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, PEBBLES_TYPE_PROGRAMMER_CALCULATOR));
#line 22 "../src/Core/ProgrammerCalculator.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 22 "../src/Core/ProgrammerCalculator.vala"
		value->data[0].v_pointer = v_object;
#line 22 "../src/Core/ProgrammerCalculator.vala"
		pebbles_programmer_calculator_ref (value->data[0].v_pointer);
#line 8168 "ProgrammerCalculator.c"
	} else {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		value->data[0].v_pointer = NULL;
#line 8172 "ProgrammerCalculator.c"
	}
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (old) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		pebbles_programmer_calculator_unref (old);
#line 8178 "ProgrammerCalculator.c"
	}
}

void
pebbles_value_take_programmer_calculator (GValue* value,
                                          gpointer v_object)
{
	PebblesProgrammerCalculator * old;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, PEBBLES_TYPE_PROGRAMMER_CALCULATOR));
#line 22 "../src/Core/ProgrammerCalculator.vala"
	old = value->data[0].v_pointer;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (v_object) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, PEBBLES_TYPE_PROGRAMMER_CALCULATOR));
#line 22 "../src/Core/ProgrammerCalculator.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 22 "../src/Core/ProgrammerCalculator.vala"
		value->data[0].v_pointer = v_object;
#line 8199 "ProgrammerCalculator.c"
	} else {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		value->data[0].v_pointer = NULL;
#line 8203 "ProgrammerCalculator.c"
	}
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (old) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		pebbles_programmer_calculator_unref (old);
#line 8209 "ProgrammerCalculator.c"
	}
}

static void
pebbles_programmer_calculator_class_init (PebblesProgrammerCalculatorClass * klass,
                                          gpointer klass_data)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	pebbles_programmer_calculator_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	((PebblesProgrammerCalculatorClass *) klass)->finalize = pebbles_programmer_calculator_finalize;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_type_class_adjust_private_offset (klass, &PebblesProgrammerCalculator_private_offset);
#line 8223 "ProgrammerCalculator.c"
}

static void
pebbles_programmer_calculator_instance_init (PebblesProgrammerCalculator * self,
                                             gpointer klass)
{
#line 22 "../src/Core/ProgrammerCalculator.vala"
	self->priv = pebbles_programmer_calculator_get_instance_private (self);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	self->ref_count = 1;
#line 8234 "ProgrammerCalculator.c"
}

static void
pebbles_programmer_calculator_finalize (PebblesProgrammerCalculator * obj)
{
	PebblesProgrammerCalculator * self;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_PROGRAMMER_CALCULATOR, PebblesProgrammerCalculator);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_signal_handlers_destroy (self);
#line 67 "../src/Core/ProgrammerCalculator.vala"
	self->priv->stored_tokens = (_vala_PebblesProgrammerCalculatorToken_array_free (self->priv->stored_tokens, self->priv->stored_tokens_length1), NULL);
#line 8247 "ProgrammerCalculator.c"
}

static GType
pebbles_programmer_calculator_get_type_once (void)
{
	static const GTypeValueTable g_define_type_value_table = { pebbles_value_programmer_calculator_init, pebbles_value_programmer_calculator_free_value, pebbles_value_programmer_calculator_copy_value, pebbles_value_programmer_calculator_peek_pointer, "p", pebbles_value_programmer_calculator_collect_value, "p", pebbles_value_programmer_calculator_lcopy_value };
	static const GTypeInfo g_define_type_info = { sizeof (PebblesProgrammerCalculatorClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_programmer_calculator_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesProgrammerCalculator), 0, (GInstanceInitFunc) pebbles_programmer_calculator_instance_init, &g_define_type_value_table };
	static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
	GType pebbles_programmer_calculator_type_id;
	pebbles_programmer_calculator_type_id = g_type_register_fundamental (g_type_fundamental_next (), "PebblesProgrammerCalculator", &g_define_type_info, &g_define_type_fundamental_info, 0);
	PebblesProgrammerCalculator_private_offset = g_type_add_instance_private (pebbles_programmer_calculator_type_id, sizeof (PebblesProgrammerCalculatorPrivate));
	return pebbles_programmer_calculator_type_id;
}

GType
pebbles_programmer_calculator_get_type (void)
{
	static volatile gsize pebbles_programmer_calculator_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_programmer_calculator_type_id__volatile)) {
		GType pebbles_programmer_calculator_type_id;
		pebbles_programmer_calculator_type_id = pebbles_programmer_calculator_get_type_once ();
		g_once_init_leave (&pebbles_programmer_calculator_type_id__volatile, pebbles_programmer_calculator_type_id);
	}
	return pebbles_programmer_calculator_type_id__volatile;
}

gpointer
pebbles_programmer_calculator_ref (gpointer instance)
{
	PebblesProgrammerCalculator * self;
	self = instance;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	g_atomic_int_inc (&self->ref_count);
#line 22 "../src/Core/ProgrammerCalculator.vala"
	return instance;
#line 8283 "ProgrammerCalculator.c"
}

void
pebbles_programmer_calculator_unref (gpointer instance)
{
	PebblesProgrammerCalculator * self;
	self = instance;
#line 22 "../src/Core/ProgrammerCalculator.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 22 "../src/Core/ProgrammerCalculator.vala"
		PEBBLES_PROGRAMMER_CALCULATOR_GET_CLASS (self)->finalize (self);
#line 22 "../src/Core/ProgrammerCalculator.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 8297 "ProgrammerCalculator.c"
	}
}

static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		gint i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}

static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}

