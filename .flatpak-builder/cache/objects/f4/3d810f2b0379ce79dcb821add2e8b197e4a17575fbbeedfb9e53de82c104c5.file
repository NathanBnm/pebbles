/* HistoryView.c generated by valac 0.48.14, the Vala compiler
 * generated from HistoryView.vala, do not modify */

/*-
 * Copyright (c) 2017-2020 Subhadeep Jasu <subhajasu@gmail.com>
 * Copyright (c) 2017-2020 Saunak Biswas <saunakbis97@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 *
 * Authored by: Subhadeep Jasu <subhajasu@gmail.com>
 *              Saunak Biswas  <saunakbis97@gmail.com>
 */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <glib/gi18n-lib.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>

#define PEBBLES_TYPE_HISTORY_VIEW (pebbles_history_view_get_type ())
#define PEBBLES_HISTORY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_HISTORY_VIEW, PebblesHistoryView))
#define PEBBLES_HISTORY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_HISTORY_VIEW, PebblesHistoryViewClass))
#define PEBBLES_IS_HISTORY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_HISTORY_VIEW))
#define PEBBLES_IS_HISTORY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_HISTORY_VIEW))
#define PEBBLES_HISTORY_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_HISTORY_VIEW, PebblesHistoryViewClass))

typedef struct _PebblesHistoryView PebblesHistoryView;
typedef struct _PebblesHistoryViewClass PebblesHistoryViewClass;
typedef struct _PebblesHistoryViewPrivate PebblesHistoryViewPrivate;

#define PEBBLES_TYPE_HISTORY_MANAGER (pebbles_history_manager_get_type ())
#define PEBBLES_HISTORY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManager))
#define PEBBLES_HISTORY_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManagerClass))
#define PEBBLES_IS_HISTORY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_HISTORY_MANAGER))
#define PEBBLES_IS_HISTORY_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_HISTORY_MANAGER))
#define PEBBLES_HISTORY_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_HISTORY_MANAGER, PebblesHistoryManagerClass))

typedef struct _PebblesHistoryManager PebblesHistoryManager;
typedef struct _PebblesHistoryManagerClass PebblesHistoryManagerClass;
typedef enum  {
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_SCIF,
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC,
	PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_PROG
} PebblesEvaluationResultResultSource;

#define PEBBLES_EVALUATION_RESULT_TYPE_RESULT_SOURCE (pebbles_evaluation_result_result_source_get_type ())
enum  {
	PEBBLES_HISTORY_VIEW_0_PROPERTY,
	PEBBLES_HISTORY_VIEW_NUM_PROPERTIES
};
static GParamSpec* pebbles_history_view_properties[PEBBLES_HISTORY_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _pebbles_history_manager_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_history_manager_unref (var), NULL)))

#define PEBBLES_TYPE_EVALUATION_RESULT (pebbles_evaluation_result_get_type ())
#define PEBBLES_EVALUATION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResult))
#define PEBBLES_EVALUATION_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResultClass))
#define PEBBLES_IS_EVALUATION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), PEBBLES_TYPE_EVALUATION_RESULT))
#define PEBBLES_IS_EVALUATION_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), PEBBLES_TYPE_EVALUATION_RESULT))
#define PEBBLES_EVALUATION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), PEBBLES_TYPE_EVALUATION_RESULT, PebblesEvaluationResultClass))

typedef struct _PebblesEvaluationResult PebblesEvaluationResult;
typedef struct _PebblesEvaluationResultClass PebblesEvaluationResultClass;
#define _pebbles_evaluation_result_unref0(var) ((var == NULL) ? NULL : (var = (pebbles_evaluation_result_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
typedef enum  {
	PEBBLES_GLOBAL_ANGLE_UNIT_DEG = 0,
	PEBBLES_GLOBAL_ANGLE_UNIT_RAD = 1,
	PEBBLES_GLOBAL_ANGLE_UNIT_GRAD = 2
} PebblesGlobalAngleUnit;

#define PEBBLES_TYPE_GLOBAL_ANGLE_UNIT (pebbles_global_angle_unit_get_type ())
typedef enum  {
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_NONE,
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_INT,
	PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_DER
} PebblesEvaluationResultCalculusResultMode;

#define PEBBLES_EVALUATION_RESULT_TYPE_CALCULUS_RESULT_MODE (pebbles_evaluation_result_calculus_result_mode_get_type ())
typedef enum  {
	PEBBLES_GLOBAL_WORD_LENGTH_QWD = 0,
	PEBBLES_GLOBAL_WORD_LENGTH_DWD = 1,
	PEBBLES_GLOBAL_WORD_LENGTH_WRD = 2,
	PEBBLES_GLOBAL_WORD_LENGTH_BYT = 3
} PebblesGlobalWordLength;

#define PEBBLES_TYPE_GLOBAL_WORD_LENGTH (pebbles_global_word_length_get_type ())
#define _g_regex_unref0(var) ((var == NULL) ? NULL : (var = (g_regex_unref (var), NULL)))
typedef enum  {
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_0 = 65456,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_1 = 65457,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_2 = 65458,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_3 = 65459,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_4 = 65460,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_5 = 65461,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_6 = 65462,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_7 = 65463,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_8 = 65464,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_9 = 65465,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_RADIX = 65454,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_0 = 48,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_1 = 49,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_2 = 50,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_3 = 51,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_4 = 52,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_5 = 53,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_6 = 54,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_7 = 55,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_8 = 56,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_9 = 57,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_RADIX = 46,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_KEYPAD_COMMA = 44,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F1 = 65470,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F2 = 65471,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F3 = 65472,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F4 = 65473,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F5 = 65474,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F6 = 65475,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F7 = 65476,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F8 = 65477,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F9 = 65478,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F10 = 65479,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F11 = 65480,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F12 = 65481,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_BACKSPACE = 65288,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_DELETE = 65535,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_TAB = 65289,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SHIFT_TAB = 65056,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PAGE_UP = 65365,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PAGE_DOWN = 65366,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_HOME = 65360,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NUMPAD_END = 65367,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_A_LOWER = 97,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_B_LOWER = 98,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_LOWER = 99,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_D_LOWER = 100,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_E_LOWER = 101,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F_LOWER = 102,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_G_LOWER = 103,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_H_LOWER = 104,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_I_LOWER = 105,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_J_LOWER = 106,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_K_LOWER = 107,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_L_LOWER = 108,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_M_LOWER = 109,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_N_LOWER = 110,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_O_LOWER = 111,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_P_LOWER = 112,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Q_LOWER = 113,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_R_LOWER = 114,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_S_LOWER = 115,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_T_LOWER = 116,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_U_LOWER = 117,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_V_LOWER = 118,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_W_LOWER = 119,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_X_LOWER = 120,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Y_LOWER = 121,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Z_LOWER = 122,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_A_UPPER = 65,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_B_UPPER = 66,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_C_UPPER = 67,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_D_UPPER = 68,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_E_UPPER = 69,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_F_UPPER = 70,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_G_UPPER = 71,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_H_UPPER = 72,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_I_UPPER = 73,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_J_UPPER = 74,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_K_UPPER = 75,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_L_UPPER = 76,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_M_UPPER = 77,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_N_UPPER = 78,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_O_UPPER = 79,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_P_UPPER = 80,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Q_UPPER = 81,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_R_UPPER = 82,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_S_UPPER = 83,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_T_UPPER = 84,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_U_UPPER = 85,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_V_UPPER = 86,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_W_UPPER = 87,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_X_UPPER = 88,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Y_UPPER = 89,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_Z_UPPER = 90,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PLUS_NUMPAD = 65451,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_MINUS_NUMPAD = 65453,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SLASH_NUMPAD = 65455,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_STAR_NUMPAD = 65450,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PLUS_KEYPAD = 43,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_MINUS_KEYPAD = 45,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SLASH_KEYPAD = 47,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_STAR_KEYPAD = 42,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PARENTHESIS_L = 40,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PARENTHESIS_R = 41,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SQ_BRACKETS_L = 91,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SQ_BRACKETS_R = 93,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_FL_BRACKETS_L = 123,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_FL_BRACKETS_R = 125,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EQUAL_TO = 61,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_PERCENTAGE = 37,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EXP_CAP = 94,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_EXCLAMATION = 33,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_LT = 60,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_GT = 62,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_LEFT = 65361,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_RIGHT = 65363,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_UP = 65362,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_NAV_DOWN = 65364,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN = 65293,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_RETURN_NUMPAD = 65421,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_ESCAPE = 65307,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_SPACE_BAR = 32,
	PEBBLES_KEYBOARD_HANDLER_KEY_MAP_CTRL = 65507
} PebblesKeyboardHandlerKeyMap;

#define PEBBLES_KEYBOARD_HANDLER_TYPE_KEY_MAP (pebbles_keyboard_handler_key_map_get_type ())
enum  {
	PEBBLES_HISTORY_VIEW_SELECT_EVAL_RESULT_SIGNAL,
	PEBBLES_HISTORY_VIEW_NUM_SIGNALS
};
static guint pebbles_history_view_signals[PEBBLES_HISTORY_VIEW_NUM_SIGNALS] = {0};

struct _PebblesHistoryView {
	GtkWindow parent_instance;
	PebblesHistoryViewPrivate * priv;
};

struct _PebblesHistoryViewClass {
	GtkWindowClass parent_class;
};

struct _PebblesHistoryViewPrivate {
	GtkTreeView* main_tree;
	GtkListStore* listmodel;
	GtkTreeIter iter;
	PebblesHistoryManager* history;
	PebblesEvaluationResultResultSource source;
};

static gint PebblesHistoryView_private_offset;
static gpointer pebbles_history_view_parent_class = NULL;

GType pebbles_history_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesHistoryView, g_object_unref)
gpointer pebbles_history_manager_ref (gpointer instance);
void pebbles_history_manager_unref (gpointer instance);
GParamSpec* pebbles_param_spec_history_manager (const gchar* name,
                                                const gchar* nick,
                                                const gchar* blurb,
                                                GType object_type,
                                                GParamFlags flags);
void pebbles_value_set_history_manager (GValue* value,
                                        gpointer v_object);
void pebbles_value_take_history_manager (GValue* value,
                                         gpointer v_object);
gpointer pebbles_value_get_history_manager (const GValue* value);
GType pebbles_history_manager_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesHistoryManager, pebbles_history_manager_unref)
GType pebbles_evaluation_result_result_source_get_type (void) G_GNUC_CONST;
PebblesHistoryView* pebbles_history_view_new (PebblesHistoryManager* history,
                                              PebblesEvaluationResultResultSource result_source);
PebblesHistoryView* pebbles_history_view_construct (GType object_type,
                                                    PebblesHistoryManager* history,
                                                    PebblesEvaluationResultResultSource result_source);
static void pebbles_history_view_make_ui (PebblesHistoryView* self);
guint pebbles_history_manager_length (PebblesHistoryManager* self,
                                      PebblesEvaluationResultResultSource* mode);
gpointer pebbles_evaluation_result_ref (gpointer instance);
void pebbles_evaluation_result_unref (gpointer instance);
GParamSpec* pebbles_param_spec_evaluation_result (const gchar* name,
                                                  const gchar* nick,
                                                  const gchar* blurb,
                                                  GType object_type,
                                                  GParamFlags flags);
void pebbles_value_set_evaluation_result (GValue* value,
                                          gpointer v_object);
void pebbles_value_take_evaluation_result (GValue* value,
                                           gpointer v_object);
gpointer pebbles_value_get_evaluation_result (const GValue* value);
GType pebbles_evaluation_result_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PebblesEvaluationResult, pebbles_evaluation_result_unref)
static void pebbles_history_view_append_to_view (PebblesHistoryView* self,
                                          PebblesEvaluationResult* _result_);
PebblesEvaluationResult* pebbles_history_manager_get_nth_evaluation_result (PebblesHistoryManager* self,
                                                                            guint n);
static void pebbles_history_view_make_events (PebblesHistoryView* self);
static void pebbles_history_view_setup_treeview (PebblesHistoryView* self,
                                          GtkTreeView* view);
GType pebbles_global_angle_unit_get_type (void) G_GNUC_CONST;
PebblesGlobalAngleUnit pebbles_evaluation_result_get_angle_mode (PebblesEvaluationResult* self);
GType pebbles_evaluation_result_calculus_result_mode_get_type (void) G_GNUC_CONST;
PebblesEvaluationResultCalculusResultMode pebbles_evaluation_result_get_calc_mode (PebblesEvaluationResult* self);
GType pebbles_global_word_length_get_type (void) G_GNUC_CONST;
PebblesGlobalWordLength pebbles_evaluation_result_get_word_length (PebblesEvaluationResult* self);
PebblesEvaluationResultResultSource pebbles_evaluation_result_get_result_source (PebblesEvaluationResult* self);
const gchar* pebbles_evaluation_result_get_problem_expression (PebblesEvaluationResult* self);
const gchar* pebbles_evaluation_result_get_result (PebblesEvaluationResult* self);
gdouble pebbles_evaluation_result_get_int_limit_a (PebblesEvaluationResult* self);
gdouble pebbles_evaluation_result_get_int_limit_b (PebblesEvaluationResult* self);
gdouble pebbles_evaluation_result_get_derivative_point (PebblesEvaluationResult* self);
static void __lambda435_ (PebblesHistoryView* self,
                   GtkTreePath* path,
                   GtkTreeViewColumn* column);
static void ___lambda435__gtk_tree_view_row_activated (GtkTreeView* _sender,
                                                GtkTreePath* path,
                                                GtkTreeViewColumn* column,
                                                gpointer self);
static gboolean __lambda436_ (PebblesHistoryView* self,
                       GdkEventKey* event);
GType pebbles_keyboard_handler_key_map_get_type (void) G_GNUC_CONST;
static gboolean ___lambda436__gtk_widget_key_release_event (GtkWidget* _sender,
                                                     GdkEventKey* event,
                                                     gpointer self);
static void g_cclosure_user_marshal_VOID__PEBBLES_EVALUATION_RESULT (GClosure * closure,
                                                              GValue * return_value,
                                                              guint n_param_values,
                                                              const GValue * param_values,
                                                              gpointer invocation_hint,
                                                              gpointer marshal_data);
static void pebbles_history_view_finalize (GObject * obj);
static GType pebbles_history_view_get_type_once (void);

static inline gpointer
pebbles_history_view_get_instance_private (PebblesHistoryView* self)
{
	return G_STRUCT_MEMBER_P (self, PebblesHistoryView_private_offset);
}

static gpointer
_pebbles_history_manager_ref0 (gpointer self)
{
#line 35 "../src/Views/HistoryView.vala"
	return self ? pebbles_history_manager_ref (self) : NULL;
#line 350 "HistoryView.c"
}

PebblesHistoryView*
pebbles_history_view_construct (GType object_type,
                                PebblesHistoryManager* history,
                                PebblesEvaluationResultResultSource result_source)
{
	PebblesHistoryView * self = NULL;
	PebblesHistoryManager* _tmp0_;
#line 33 "../src/Views/HistoryView.vala"
	g_return_val_if_fail (history != NULL, NULL);
#line 33 "../src/Views/HistoryView.vala"
	self = (PebblesHistoryView*) g_object_new (object_type, NULL);
#line 35 "../src/Views/HistoryView.vala"
	_tmp0_ = _pebbles_history_manager_ref0 (history);
#line 35 "../src/Views/HistoryView.vala"
	_pebbles_history_manager_unref0 (self->priv->history);
#line 35 "../src/Views/HistoryView.vala"
	self->priv->history = _tmp0_;
#line 36 "../src/Views/HistoryView.vala"
	self->priv->source = result_source;
#line 38 "../src/Views/HistoryView.vala"
	pebbles_history_view_make_ui (self);
#line 374 "HistoryView.c"
	{
		gint i = 0;
#line 39 "../src/Views/HistoryView.vala"
		i = 0;
#line 379 "HistoryView.c"
		{
			gboolean _tmp1_ = FALSE;
#line 39 "../src/Views/HistoryView.vala"
			_tmp1_ = TRUE;
#line 39 "../src/Views/HistoryView.vala"
			while (TRUE) {
#line 386 "HistoryView.c"
				PebblesEvaluationResult* _tmp3_;
				PebblesEvaluationResult* _tmp4_;
#line 39 "../src/Views/HistoryView.vala"
				if (!_tmp1_) {
#line 391 "HistoryView.c"
					gint _tmp2_;
#line 39 "../src/Views/HistoryView.vala"
					_tmp2_ = i;
#line 39 "../src/Views/HistoryView.vala"
					i = _tmp2_ + 1;
#line 397 "HistoryView.c"
				}
#line 39 "../src/Views/HistoryView.vala"
				_tmp1_ = FALSE;
#line 39 "../src/Views/HistoryView.vala"
				if (!(((guint) i) < pebbles_history_manager_length (history, NULL))) {
#line 39 "../src/Views/HistoryView.vala"
					break;
#line 405 "HistoryView.c"
				}
#line 41 "../src/Views/HistoryView.vala"
				_tmp3_ = pebbles_history_manager_get_nth_evaluation_result (history, (guint) i);
#line 41 "../src/Views/HistoryView.vala"
				_tmp4_ = _tmp3_;
#line 41 "../src/Views/HistoryView.vala"
				pebbles_history_view_append_to_view (self, _tmp4_);
#line 41 "../src/Views/HistoryView.vala"
				_pebbles_evaluation_result_unref0 (_tmp4_);
#line 415 "HistoryView.c"
			}
		}
	}
#line 45 "../src/Views/HistoryView.vala"
	pebbles_history_view_make_events (self);
#line 33 "../src/Views/HistoryView.vala"
	return self;
#line 423 "HistoryView.c"
}

PebblesHistoryView*
pebbles_history_view_new (PebblesHistoryManager* history,
                          PebblesEvaluationResultResultSource result_source)
{
#line 33 "../src/Views/HistoryView.vala"
	return pebbles_history_view_construct (PEBBLES_TYPE_HISTORY_VIEW, history, result_source);
#line 432 "HistoryView.c"
}

static void
pebbles_history_view_make_ui (PebblesHistoryView* self)
{
	GtkTreeView* _tmp0_;
	GtkTreeView* _tmp1_;
	GtkTreeView* _tmp2_;
	GtkTreeView* _tmp3_;
	GtkScrolledWindow* scrolled_window = NULL;
	GtkScrolledWindow* _tmp4_;
	GtkTreeView* _tmp5_;
	GtkHeaderBar* headerbar = NULL;
	GtkHeaderBar* _tmp6_;
#line 48 "../src/Views/HistoryView.vala"
	g_return_if_fail (self != NULL);
#line 49 "../src/Views/HistoryView.vala"
	_tmp0_ = (GtkTreeView*) gtk_tree_view_new ();
#line 49 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp0_);
#line 49 "../src/Views/HistoryView.vala"
	_g_object_unref0 (self->priv->main_tree);
#line 49 "../src/Views/HistoryView.vala"
	self->priv->main_tree = _tmp0_;
#line 50 "../src/Views/HistoryView.vala"
	_tmp1_ = self->priv->main_tree;
#line 50 "../src/Views/HistoryView.vala"
	pebbles_history_view_setup_treeview (self, _tmp1_);
#line 51 "../src/Views/HistoryView.vala"
	_tmp2_ = self->priv->main_tree;
#line 51 "../src/Views/HistoryView.vala"
	gtk_tree_view_set_hover_selection (_tmp2_, TRUE);
#line 52 "../src/Views/HistoryView.vala"
	_tmp3_ = self->priv->main_tree;
#line 52 "../src/Views/HistoryView.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) _tmp3_, _ ("Double click to recall"));
#line 53 "../src/Views/HistoryView.vala"
	_tmp4_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 53 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp4_);
#line 53 "../src/Views/HistoryView.vala"
	scrolled_window = _tmp4_;
#line 54 "../src/Views/HistoryView.vala"
	_tmp5_ = self->priv->main_tree;
#line 54 "../src/Views/HistoryView.vala"
	gtk_container_add ((GtkContainer*) scrolled_window, (GtkWidget*) _tmp5_);
#line 55 "../src/Views/HistoryView.vala"
	g_object_set ((GtkWidget*) scrolled_window, "width-request", 600, NULL);
#line 56 "../src/Views/HistoryView.vala"
	g_object_set ((GtkWidget*) scrolled_window, "height-request", 400, NULL);
#line 58 "../src/Views/HistoryView.vala"
	_tmp6_ = (GtkHeaderBar*) gtk_header_bar_new ();
#line 58 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp6_);
#line 58 "../src/Views/HistoryView.vala"
	headerbar = _tmp6_;
#line 59 "../src/Views/HistoryView.vala"
	gtk_header_bar_set_has_subtitle (headerbar, FALSE);
#line 60 "../src/Views/HistoryView.vala"
	gtk_header_bar_set_show_close_button (headerbar, TRUE);
#line 61 "../src/Views/HistoryView.vala"
	gtk_header_bar_set_title (headerbar, _ ("History"));
#line 63 "../src/Views/HistoryView.vala"
	gtk_window_set_titlebar ((GtkWindow*) self, (GtkWidget*) headerbar);
#line 66 "../src/Views/HistoryView.vala"
	gtk_window_set_default_size ((GtkWindow*) self, 600, 400);
#line 67 "../src/Views/HistoryView.vala"
	gtk_widget_set_size_request ((GtkWidget*) self, 600, 400);
#line 69 "../src/Views/HistoryView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) scrolled_window);
#line 71 "../src/Views/HistoryView.vala"
	gtk_window_set_destroy_with_parent ((GtkWindow*) self, TRUE);
#line 72 "../src/Views/HistoryView.vala"
	gtk_window_set_modal ((GtkWindow*) self, TRUE);
#line 73 "../src/Views/HistoryView.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 48 "../src/Views/HistoryView.vala"
	_g_object_unref0 (headerbar);
#line 48 "../src/Views/HistoryView.vala"
	_g_object_unref0 (scrolled_window);
#line 513 "HistoryView.c"
}

static void
pebbles_history_view_setup_treeview (PebblesHistoryView* self,
                                     GtkTreeView* view)
{
	GtkListStore* _tmp0_;
	GtkListStore* _tmp1_;
	gint i = 0;
	gchar* _tmp2_;
	gchar* _tmp3_;
	GtkCellRendererText* _tmp4_;
	GtkCellRendererText* _tmp5_;
	gint _tmp6_;
	GtkCellRendererText* _tmp7_;
	GtkCellRendererText* _tmp8_;
	gint _tmp9_;
	GtkCellRendererText* _tmp10_;
	GtkCellRendererText* _tmp11_;
	gint _tmp12_;
	GtkCellRendererText* _tmp13_;
	GtkCellRendererText* _tmp14_;
#line 76 "../src/Views/HistoryView.vala"
	g_return_if_fail (self != NULL);
#line 76 "../src/Views/HistoryView.vala"
	g_return_if_fail (view != NULL);
#line 77 "../src/Views/HistoryView.vala"
	_tmp0_ = gtk_list_store_new (7, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, -1);
#line 77 "../src/Views/HistoryView.vala"
	_g_object_unref0 (self->priv->listmodel);
#line 77 "../src/Views/HistoryView.vala"
	self->priv->listmodel = _tmp0_;
#line 80 "../src/Views/HistoryView.vala"
	_tmp1_ = self->priv->listmodel;
#line 80 "../src/Views/HistoryView.vala"
	gtk_tree_view_set_model (view, (GtkTreeModel*) _tmp1_);
#line 81 "../src/Views/HistoryView.vala"
	i = 0;
#line 82 "../src/Views/HistoryView.vala"
	_tmp2_ = g_strconcat (_ ("Input Expression"), "\x20 \x20 \x20 \x20 \x20 \x20 \x20", NULL);
#line 82 "../src/Views/HistoryView.vala"
	_tmp3_ = _tmp2_;
#line 82 "../src/Views/HistoryView.vala"
	_tmp4_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
#line 82 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp4_);
#line 82 "../src/Views/HistoryView.vala"
	_tmp5_ = _tmp4_;
#line 82 "../src/Views/HistoryView.vala"
	_tmp6_ = i;
#line 82 "../src/Views/HistoryView.vala"
	i = _tmp6_ + 1;
#line 82 "../src/Views/HistoryView.vala"
	gtk_tree_view_insert_column_with_attributes (view, -1, _tmp3_, (GtkCellRenderer*) _tmp5_, "text", _tmp6_, NULL);
#line 82 "../src/Views/HistoryView.vala"
	_g_object_unref0 (_tmp5_);
#line 82 "../src/Views/HistoryView.vala"
	_g_free0 (_tmp3_);
#line 83 "../src/Views/HistoryView.vala"
	_tmp7_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
#line 83 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp7_);
#line 83 "../src/Views/HistoryView.vala"
	_tmp8_ = _tmp7_;
#line 83 "../src/Views/HistoryView.vala"
	_tmp9_ = i;
#line 83 "../src/Views/HistoryView.vala"
	i = _tmp9_ + 1;
#line 83 "../src/Views/HistoryView.vala"
	gtk_tree_view_insert_column_with_attributes (view, -1, _ ("Type"), (GtkCellRenderer*) _tmp8_, "text", _tmp9_, NULL);
#line 83 "../src/Views/HistoryView.vala"
	_g_object_unref0 (_tmp8_);
#line 84 "../src/Views/HistoryView.vala"
	_tmp10_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
#line 84 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp10_);
#line 84 "../src/Views/HistoryView.vala"
	_tmp11_ = _tmp10_;
#line 84 "../src/Views/HistoryView.vala"
	_tmp12_ = i;
#line 84 "../src/Views/HistoryView.vala"
	i = _tmp12_ + 1;
#line 84 "../src/Views/HistoryView.vala"
	gtk_tree_view_insert_column_with_attributes (view, -1, _ ("Mode"), (GtkCellRenderer*) _tmp11_, "text", _tmp12_, NULL);
#line 84 "../src/Views/HistoryView.vala"
	_g_object_unref0 (_tmp11_);
#line 85 "../src/Views/HistoryView.vala"
	_tmp13_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
#line 85 "../src/Views/HistoryView.vala"
	g_object_ref_sink (_tmp13_);
#line 85 "../src/Views/HistoryView.vala"
	_tmp14_ = _tmp13_;
#line 85 "../src/Views/HistoryView.vala"
	gtk_tree_view_insert_column_with_attributes (view, -1, _ ("Result"), (GtkCellRenderer*) _tmp14_, "text", i, NULL);
#line 85 "../src/Views/HistoryView.vala"
	_g_object_unref0 (_tmp14_);
#line 610 "HistoryView.c"
}

static const gchar*
string_to_string (const gchar* self)
{
	const gchar* result = NULL;
#line 1570 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1571 "glib-2.0.vapi"
	result = self;
#line 1571 "glib-2.0.vapi"
	return result;
#line 623 "HistoryView.c"
}

static gchar*
double_to_string (gdouble self)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gint _tmp1__length1;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* result = NULL;
#line 989 "glib-2.0.vapi"
	_tmp0_ = g_new0 (gchar, G_ASCII_DTOSTR_BUF_SIZE);
#line 989 "glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 989 "glib-2.0.vapi"
	_tmp1__length1 = G_ASCII_DTOSTR_BUF_SIZE;
#line 989 "glib-2.0.vapi"
	_tmp2_ = g_ascii_dtostr (_tmp1_, (gint) G_ASCII_DTOSTR_BUF_SIZE, self);
#line 989 "glib-2.0.vapi"
	_tmp3_ = g_strdup (_tmp2_);
#line 989 "glib-2.0.vapi"
	_tmp4_ = _tmp3_;
#line 989 "glib-2.0.vapi"
	_tmp1_ = (g_free (_tmp1_), NULL);
#line 989 "glib-2.0.vapi"
	result = _tmp4_;
#line 989 "glib-2.0.vapi"
	return result;
#line 654 "HistoryView.c"
}

static gchar*
string_replace (const gchar* self,
                const gchar* old,
                const gchar* replacement)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	GError* _inner_error0_ = NULL;
	gchar* result = NULL;
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (old != NULL, NULL);
#line 1534 "glib-2.0.vapi"
	g_return_val_if_fail (replacement != NULL, NULL);
#line 1535 "glib-2.0.vapi"
	if ((*((gchar*) self)) == '\0') {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = TRUE;
#line 676 "HistoryView.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp1_ = (*((gchar*) old)) == '\0';
#line 680 "HistoryView.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp1_) {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = TRUE;
#line 686 "HistoryView.c"
	} else {
#line 1535 "glib-2.0.vapi"
		_tmp0_ = g_strcmp0 (old, replacement) == 0;
#line 690 "HistoryView.c"
	}
#line 1535 "glib-2.0.vapi"
	if (_tmp0_) {
#line 694 "HistoryView.c"
		gchar* _tmp2_;
#line 1536 "glib-2.0.vapi"
		_tmp2_ = g_strdup (self);
#line 1536 "glib-2.0.vapi"
		result = _tmp2_;
#line 1536 "glib-2.0.vapi"
		return result;
#line 702 "HistoryView.c"
	}
	{
		GRegex* regex = NULL;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GRegex* _tmp5_;
		GRegex* _tmp6_;
		gchar* _tmp7_ = NULL;
		GRegex* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 1539 "glib-2.0.vapi"
		_tmp3_ = g_regex_escape_string (old, -1);
#line 1539 "glib-2.0.vapi"
		_tmp4_ = _tmp3_;
#line 1539 "glib-2.0.vapi"
		_tmp5_ = g_regex_new (_tmp4_, 0, 0, &_inner_error0_);
#line 1539 "glib-2.0.vapi"
		_tmp6_ = _tmp5_;
#line 1539 "glib-2.0.vapi"
		_g_free0 (_tmp4_);
#line 1539 "glib-2.0.vapi"
		regex = _tmp6_;
#line 1539 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1539 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1539 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1539 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 734 "HistoryView.c"
				goto __catch0_g_regex_error;
			}
#line 1539 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1539 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1539 "glib-2.0.vapi"
			return NULL;
#line 743 "HistoryView.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp8_ = regex;
#line 1540 "glib-2.0.vapi"
		_tmp9_ = g_regex_replace_literal (_tmp8_, self, (gssize) -1, 0, replacement, 0, &_inner_error0_);
#line 1540 "glib-2.0.vapi"
		_tmp7_ = _tmp9_;
#line 1540 "glib-2.0.vapi"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1540 "glib-2.0.vapi"
			_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
			_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
			if (_inner_error0_->domain == G_REGEX_ERROR) {
#line 759 "HistoryView.c"
				goto __catch0_g_regex_error;
			}
#line 1540 "glib-2.0.vapi"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1540 "glib-2.0.vapi"
			g_clear_error (&_inner_error0_);
#line 1540 "glib-2.0.vapi"
			return NULL;
#line 768 "HistoryView.c"
		}
#line 1540 "glib-2.0.vapi"
		_tmp10_ = _tmp7_;
#line 1540 "glib-2.0.vapi"
		_tmp7_ = NULL;
#line 1540 "glib-2.0.vapi"
		result = _tmp10_;
#line 1540 "glib-2.0.vapi"
		_g_free0 (_tmp7_);
#line 1540 "glib-2.0.vapi"
		_g_regex_unref0 (regex);
#line 1540 "glib-2.0.vapi"
		return result;
#line 782 "HistoryView.c"
	}
	goto __finally0;
	__catch0_g_regex_error:
	{
#line 1538 "glib-2.0.vapi"
		g_clear_error (&_inner_error0_);
#line 1542 "glib-2.0.vapi"
		g_assert_not_reached ();
#line 791 "HistoryView.c"
	}
	__finally0:
#line 1538 "glib-2.0.vapi"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1538 "glib-2.0.vapi"
	g_clear_error (&_inner_error0_);
#line 1538 "glib-2.0.vapi"
	return NULL;
#line 800 "HistoryView.c"
}

static void
pebbles_history_view_append_to_view (PebblesHistoryView* self,
                                     PebblesEvaluationResult* _result_)
{
	GtkListStore* _tmp0_;
	GtkTreeIter _tmp1_ = {0};
	gchar* angle_mode = NULL;
	gchar* _tmp2_;
	PebblesGlobalAngleUnit _tmp3_;
	PebblesGlobalAngleUnit _tmp4_;
	gchar* calc_result_type = NULL;
	gchar* _tmp9_;
	PebblesEvaluationResultCalculusResultMode _tmp10_;
	PebblesEvaluationResultCalculusResultMode _tmp11_;
	gchar* word_length = NULL;
	gchar* _tmp15_;
	PebblesGlobalWordLength _tmp16_;
	PebblesGlobalWordLength _tmp17_;
	PebblesEvaluationResultResultSource _tmp23_;
	PebblesEvaluationResultResultSource _tmp24_;
#line 89 "../src/Views/HistoryView.vala"
	g_return_if_fail (self != NULL);
#line 89 "../src/Views/HistoryView.vala"
	g_return_if_fail (_result_ != NULL);
#line 90 "../src/Views/HistoryView.vala"
	_tmp0_ = self->priv->listmodel;
#line 90 "../src/Views/HistoryView.vala"
	gtk_list_store_append (_tmp0_, &_tmp1_);
#line 90 "../src/Views/HistoryView.vala"
	self->priv->iter = _tmp1_;
#line 92 "../src/Views/HistoryView.vala"
	_tmp2_ = g_strdup ("");
#line 92 "../src/Views/HistoryView.vala"
	angle_mode = _tmp2_;
#line 93 "../src/Views/HistoryView.vala"
	_tmp3_ = pebbles_evaluation_result_get_angle_mode (_result_);
#line 93 "../src/Views/HistoryView.vala"
	_tmp4_ = _tmp3_;
#line 93 "../src/Views/HistoryView.vala"
	switch (_tmp4_) {
#line 93 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_ANGLE_UNIT_DEG:
#line 845 "HistoryView.c"
		{
			gchar* _tmp5_;
#line 95 "../src/Views/HistoryView.vala"
			_tmp5_ = g_strdup (_ ("Degree"));
#line 95 "../src/Views/HistoryView.vala"
			_g_free0 (angle_mode);
#line 95 "../src/Views/HistoryView.vala"
			angle_mode = _tmp5_;
#line 96 "../src/Views/HistoryView.vala"
			break;
#line 856 "HistoryView.c"
		}
#line 93 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_ANGLE_UNIT_RAD:
#line 860 "HistoryView.c"
		{
			gchar* _tmp6_;
#line 98 "../src/Views/HistoryView.vala"
			_tmp6_ = g_strdup (_ ("Radian"));
#line 98 "../src/Views/HistoryView.vala"
			_g_free0 (angle_mode);
#line 98 "../src/Views/HistoryView.vala"
			angle_mode = _tmp6_;
#line 99 "../src/Views/HistoryView.vala"
			break;
#line 871 "HistoryView.c"
		}
#line 93 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_ANGLE_UNIT_GRAD:
#line 875 "HistoryView.c"
		{
			gchar* _tmp7_;
#line 101 "../src/Views/HistoryView.vala"
			_tmp7_ = g_strdup (_ ("Gradian"));
#line 101 "../src/Views/HistoryView.vala"
			_g_free0 (angle_mode);
#line 101 "../src/Views/HistoryView.vala"
			angle_mode = _tmp7_;
#line 102 "../src/Views/HistoryView.vala"
			break;
#line 886 "HistoryView.c"
		}
		default:
		{
			gchar* _tmp8_;
#line 104 "../src/Views/HistoryView.vala"
			_tmp8_ = g_strdup ("N / A");
#line 104 "../src/Views/HistoryView.vala"
			_g_free0 (angle_mode);
#line 104 "../src/Views/HistoryView.vala"
			angle_mode = _tmp8_;
#line 105 "../src/Views/HistoryView.vala"
			break;
#line 899 "HistoryView.c"
		}
	}
#line 108 "../src/Views/HistoryView.vala"
	_tmp9_ = g_strdup ("");
#line 108 "../src/Views/HistoryView.vala"
	calc_result_type = _tmp9_;
#line 109 "../src/Views/HistoryView.vala"
	_tmp10_ = pebbles_evaluation_result_get_calc_mode (_result_);
#line 109 "../src/Views/HistoryView.vala"
	_tmp11_ = _tmp10_;
#line 109 "../src/Views/HistoryView.vala"
	switch (_tmp11_) {
#line 109 "../src/Views/HistoryView.vala"
		case PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_INT:
#line 914 "HistoryView.c"
		{
			gchar* _tmp12_;
#line 111 "../src/Views/HistoryView.vala"
			_tmp12_ = g_strdup (_ ("Integral"));
#line 111 "../src/Views/HistoryView.vala"
			_g_free0 (calc_result_type);
#line 111 "../src/Views/HistoryView.vala"
			calc_result_type = _tmp12_;
#line 112 "../src/Views/HistoryView.vala"
			break;
#line 925 "HistoryView.c"
		}
#line 109 "../src/Views/HistoryView.vala"
		case PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_DER:
#line 929 "HistoryView.c"
		{
			gchar* _tmp13_;
#line 114 "../src/Views/HistoryView.vala"
			_tmp13_ = g_strdup (_ ("Derivative"));
#line 114 "../src/Views/HistoryView.vala"
			_g_free0 (calc_result_type);
#line 114 "../src/Views/HistoryView.vala"
			calc_result_type = _tmp13_;
#line 115 "../src/Views/HistoryView.vala"
			break;
#line 940 "HistoryView.c"
		}
		default:
		{
			gchar* _tmp14_;
#line 117 "../src/Views/HistoryView.vala"
			_tmp14_ = g_strdup ("N / A");
#line 117 "../src/Views/HistoryView.vala"
			_g_free0 (calc_result_type);
#line 117 "../src/Views/HistoryView.vala"
			calc_result_type = _tmp14_;
#line 118 "../src/Views/HistoryView.vala"
			break;
#line 953 "HistoryView.c"
		}
	}
#line 120 "../src/Views/HistoryView.vala"
	_tmp15_ = g_strdup ("");
#line 120 "../src/Views/HistoryView.vala"
	word_length = _tmp15_;
#line 121 "../src/Views/HistoryView.vala"
	_tmp16_ = pebbles_evaluation_result_get_word_length (_result_);
#line 121 "../src/Views/HistoryView.vala"
	_tmp17_ = _tmp16_;
#line 121 "../src/Views/HistoryView.vala"
	switch (_tmp17_) {
#line 121 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_QWD:
#line 968 "HistoryView.c"
		{
			gchar* _tmp18_;
#line 123 "../src/Views/HistoryView.vala"
			_tmp18_ = g_strdup ("Qword");
#line 123 "../src/Views/HistoryView.vala"
			_g_free0 (word_length);
#line 123 "../src/Views/HistoryView.vala"
			word_length = _tmp18_;
#line 124 "../src/Views/HistoryView.vala"
			break;
#line 979 "HistoryView.c"
		}
#line 121 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_DWD:
#line 983 "HistoryView.c"
		{
			gchar* _tmp19_;
#line 126 "../src/Views/HistoryView.vala"
			_tmp19_ = g_strdup ("Dword");
#line 126 "../src/Views/HistoryView.vala"
			_g_free0 (word_length);
#line 126 "../src/Views/HistoryView.vala"
			word_length = _tmp19_;
#line 127 "../src/Views/HistoryView.vala"
			break;
#line 994 "HistoryView.c"
		}
#line 121 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_WRD:
#line 998 "HistoryView.c"
		{
			gchar* _tmp20_;
#line 129 "../src/Views/HistoryView.vala"
			_tmp20_ = g_strdup ("Word");
#line 129 "../src/Views/HistoryView.vala"
			_g_free0 (word_length);
#line 129 "../src/Views/HistoryView.vala"
			word_length = _tmp20_;
#line 130 "../src/Views/HistoryView.vala"
			break;
#line 1009 "HistoryView.c"
		}
#line 121 "../src/Views/HistoryView.vala"
		case PEBBLES_GLOBAL_WORD_LENGTH_BYT:
#line 1013 "HistoryView.c"
		{
			gchar* _tmp21_;
#line 132 "../src/Views/HistoryView.vala"
			_tmp21_ = g_strdup ("Byte");
#line 132 "../src/Views/HistoryView.vala"
			_g_free0 (word_length);
#line 132 "../src/Views/HistoryView.vala"
			word_length = _tmp21_;
#line 133 "../src/Views/HistoryView.vala"
			break;
#line 1024 "HistoryView.c"
		}
		default:
		{
			gchar* _tmp22_;
#line 135 "../src/Views/HistoryView.vala"
			_tmp22_ = g_strdup ("N / A");
#line 135 "../src/Views/HistoryView.vala"
			_g_free0 (word_length);
#line 135 "../src/Views/HistoryView.vala"
			word_length = _tmp22_;
#line 136 "../src/Views/HistoryView.vala"
			break;
#line 1037 "HistoryView.c"
		}
	}
#line 138 "../src/Views/HistoryView.vala"
	_tmp23_ = pebbles_evaluation_result_get_result_source (_result_);
#line 138 "../src/Views/HistoryView.vala"
	_tmp24_ = _tmp23_;
#line 138 "../src/Views/HistoryView.vala"
	if (_tmp24_ == PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_SCIF) {
#line 1046 "HistoryView.c"
		GtkListStore* _tmp25_;
		GtkTreeIter _tmp26_;
		const gchar* _tmp27_;
		const gchar* _tmp28_;
		const gchar* _tmp29_;
		const gchar* _tmp30_;
		const gchar* _tmp31_;
		const gchar* _tmp32_;
#line 139 "../src/Views/HistoryView.vala"
		_tmp25_ = self->priv->listmodel;
#line 139 "../src/Views/HistoryView.vala"
		_tmp26_ = self->priv->iter;
#line 139 "../src/Views/HistoryView.vala"
		_tmp27_ = pebbles_evaluation_result_get_problem_expression (_result_);
#line 139 "../src/Views/HistoryView.vala"
		_tmp28_ = _tmp27_;
#line 139 "../src/Views/HistoryView.vala"
		_tmp29_ = angle_mode;
#line 139 "../src/Views/HistoryView.vala"
		_tmp30_ = pebbles_evaluation_result_get_result (_result_);
#line 139 "../src/Views/HistoryView.vala"
		_tmp31_ = _tmp30_;
#line 139 "../src/Views/HistoryView.vala"
		_tmp32_ = string_to_string (_tmp31_);
#line 139 "../src/Views/HistoryView.vala"
		gtk_list_store_set (_tmp25_, &_tmp26_, 0, _tmp28_, 1, _tmp29_, 2, "Scientific", 3, _tmp32_, -1);
#line 1073 "HistoryView.c"
	} else {
		PebblesEvaluationResultResultSource _tmp33_;
		PebblesEvaluationResultResultSource _tmp34_;
#line 143 "../src/Views/HistoryView.vala"
		_tmp33_ = pebbles_evaluation_result_get_result_source (_result_);
#line 143 "../src/Views/HistoryView.vala"
		_tmp34_ = _tmp33_;
#line 143 "../src/Views/HistoryView.vala"
		if (_tmp34_ == PEBBLES_EVALUATION_RESULT_RESULT_SOURCE_CALC) {
#line 1083 "HistoryView.c"
			gchar* problem_function = NULL;
			gchar* _tmp35_;
			PebblesEvaluationResultCalculusResultMode _tmp36_;
			PebblesEvaluationResultCalculusResultMode _tmp37_;
			const gchar* _tmp65_;
			gchar* _tmp66_;
			const gchar* _tmp67_;
			gchar* _tmp68_;
			const gchar* _tmp69_;
			gchar* _tmp70_;
			const gchar* _tmp71_;
			gchar* _tmp72_;
			const gchar* _tmp73_;
			gchar* _tmp74_;
			const gchar* _tmp75_;
			gchar* _tmp76_;
			const gchar* _tmp77_;
			gchar* _tmp78_;
			const gchar* _tmp79_;
			gchar* _tmp80_;
			const gchar* _tmp81_;
			gchar* _tmp82_;
			const gchar* _tmp83_;
			gchar* _tmp84_;
			const gchar* _tmp85_;
			gchar* _tmp86_;
			GtkListStore* _tmp87_;
			GtkTreeIter _tmp88_;
			const gchar* _tmp89_;
			gchar* _tmp90_;
			gchar* _tmp91_;
			const gchar* _tmp92_;
			const gchar* _tmp93_;
			gchar* _tmp94_;
			gchar* _tmp95_;
			const gchar* _tmp96_;
			const gchar* _tmp97_;
			const gchar* _tmp98_;
			const gchar* _tmp99_;
#line 144 "../src/Views/HistoryView.vala"
			_tmp35_ = g_strdup ("");
#line 144 "../src/Views/HistoryView.vala"
			problem_function = _tmp35_;
#line 145 "../src/Views/HistoryView.vala"
			_tmp36_ = pebbles_evaluation_result_get_calc_mode (_result_);
#line 145 "../src/Views/HistoryView.vala"
			_tmp37_ = _tmp36_;
#line 145 "../src/Views/HistoryView.vala"
			if (_tmp37_ == PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_INT) {
#line 1133 "HistoryView.c"
				gdouble _tmp38_;
				gdouble _tmp39_;
				gchar* _tmp40_;
				gchar* _tmp41_;
				gchar* _tmp42_;
				gchar* _tmp43_;
				gchar* _tmp44_;
				gchar* _tmp45_;
				gdouble _tmp46_;
				gdouble _tmp47_;
				gchar* _tmp48_;
				gchar* _tmp49_;
				gchar* _tmp50_;
				gchar* _tmp51_;
				gchar* _tmp52_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp38_ = pebbles_evaluation_result_get_int_limit_a (_result_);
#line 146 "../src/Views/HistoryView.vala"
				_tmp39_ = _tmp38_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp40_ = double_to_string (_tmp39_);
#line 146 "../src/Views/HistoryView.vala"
				_tmp41_ = _tmp40_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp42_ = g_strconcat ("\xE2\x88\xAB" " \xE2\x82\x8D" "\xE2\x82\x98 \xE2\x82\x8C ", _tmp41_, NULL);
#line 146 "../src/Views/HistoryView.vala"
				_tmp43_ = _tmp42_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp44_ = g_strconcat (_tmp43_, ", \xE2\x82\x99 \xE2\x82\x8C ", NULL);
#line 146 "../src/Views/HistoryView.vala"
				_tmp45_ = _tmp44_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp46_ = pebbles_evaluation_result_get_int_limit_b (_result_);
#line 146 "../src/Views/HistoryView.vala"
				_tmp47_ = _tmp46_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp48_ = double_to_string (_tmp47_);
#line 146 "../src/Views/HistoryView.vala"
				_tmp49_ = _tmp48_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp50_ = g_strconcat (_tmp45_, _tmp49_, NULL);
#line 146 "../src/Views/HistoryView.vala"
				_tmp51_ = _tmp50_;
#line 146 "../src/Views/HistoryView.vala"
				_tmp52_ = g_strconcat (_tmp51_, "\xE2\x82\x8E", NULL);
#line 146 "../src/Views/HistoryView.vala"
				_g_free0 (problem_function);
#line 146 "../src/Views/HistoryView.vala"
				problem_function = _tmp52_;
#line 146 "../src/Views/HistoryView.vala"
				_g_free0 (_tmp51_);
#line 146 "../src/Views/HistoryView.vala"
				_g_free0 (_tmp49_);
#line 146 "../src/Views/HistoryView.vala"
				_g_free0 (_tmp45_);
#line 146 "../src/Views/HistoryView.vala"
				_g_free0 (_tmp43_);
#line 146 "../src/Views/HistoryView.vala"
				_g_free0 (_tmp41_);
#line 1193 "HistoryView.c"
			} else {
				PebblesEvaluationResultCalculusResultMode _tmp53_;
				PebblesEvaluationResultCalculusResultMode _tmp54_;
#line 147 "../src/Views/HistoryView.vala"
				_tmp53_ = pebbles_evaluation_result_get_calc_mode (_result_);
#line 147 "../src/Views/HistoryView.vala"
				_tmp54_ = _tmp53_;
#line 147 "../src/Views/HistoryView.vala"
				if (_tmp54_ == PEBBLES_EVALUATION_RESULT_CALCULUS_RESULT_MODE_DER) {
#line 1203 "HistoryView.c"
					gchar* derivative_limit = NULL;
					gdouble _tmp55_;
					gdouble _tmp56_;
					gchar* _tmp57_;
					gchar* _tmp58_;
					gchar* _tmp59_;
					gchar* _tmp60_;
					const gchar* _tmp61_;
					gchar* _tmp62_;
					gchar* _tmp63_;
					gchar* _tmp64_;
#line 148 "../src/Views/HistoryView.vala"
					_tmp55_ = pebbles_evaluation_result_get_derivative_point (_result_);
#line 148 "../src/Views/HistoryView.vala"
					_tmp56_ = _tmp55_;
#line 148 "../src/Views/HistoryView.vala"
					_tmp57_ = double_to_string (_tmp56_);
#line 148 "../src/Views/HistoryView.vala"
					_tmp58_ = _tmp57_;
#line 148 "../src/Views/HistoryView.vala"
					_tmp59_ = g_strconcat ("\xE2\x82\x8D" "\xE2\x82\x93" "\xE2\x82\x8C", _tmp58_, NULL);
#line 148 "../src/Views/HistoryView.vala"
					_tmp60_ = _tmp59_;
#line 148 "../src/Views/HistoryView.vala"
					_g_free0 (_tmp58_);
#line 148 "../src/Views/HistoryView.vala"
					derivative_limit = _tmp60_;
#line 149 "../src/Views/HistoryView.vala"
					_tmp61_ = derivative_limit;
#line 149 "../src/Views/HistoryView.vala"
					_tmp62_ = g_strconcat ("d/dx | ", _tmp61_, NULL);
#line 149 "../src/Views/HistoryView.vala"
					_tmp63_ = _tmp62_;
#line 149 "../src/Views/HistoryView.vala"
					_tmp64_ = g_strconcat (_tmp63_, "\xE2\x82\x8E", NULL);
#line 149 "../src/Views/HistoryView.vala"
					_g_free0 (problem_function);
#line 149 "../src/Views/HistoryView.vala"
					problem_function = _tmp64_;
#line 149 "../src/Views/HistoryView.vala"
					_g_free0 (_tmp63_);
#line 147 "../src/Views/HistoryView.vala"
					_g_free0 (derivative_limit);
#line 1247 "HistoryView.c"
				}
			}
#line 151 "../src/Views/HistoryView.vala"
			_tmp65_ = problem_function;
#line 151 "../src/Views/HistoryView.vala"
			_tmp66_ = string_replace (_tmp65_, "0", "\xE2\x82\x80");
#line 151 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 151 "../src/Views/HistoryView.vala"
			problem_function = _tmp66_;
#line 152 "../src/Views/HistoryView.vala"
			_tmp67_ = problem_function;
#line 152 "../src/Views/HistoryView.vala"
			_tmp68_ = string_replace (_tmp67_, "1", "\xE2\x82\x81");
#line 152 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 152 "../src/Views/HistoryView.vala"
			problem_function = _tmp68_;
#line 153 "../src/Views/HistoryView.vala"
			_tmp69_ = problem_function;
#line 153 "../src/Views/HistoryView.vala"
			_tmp70_ = string_replace (_tmp69_, "2", "\xE2\x82\x82");
#line 153 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 153 "../src/Views/HistoryView.vala"
			problem_function = _tmp70_;
#line 154 "../src/Views/HistoryView.vala"
			_tmp71_ = problem_function;
#line 154 "../src/Views/HistoryView.vala"
			_tmp72_ = string_replace (_tmp71_, "3", "\xE2\x82\x83");
#line 154 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 154 "../src/Views/HistoryView.vala"
			problem_function = _tmp72_;
#line 155 "../src/Views/HistoryView.vala"
			_tmp73_ = problem_function;
#line 155 "../src/Views/HistoryView.vala"
			_tmp74_ = string_replace (_tmp73_, "4", "\xE2\x82\x84");
#line 155 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 155 "../src/Views/HistoryView.vala"
			problem_function = _tmp74_;
#line 156 "../src/Views/HistoryView.vala"
			_tmp75_ = problem_function;
#line 156 "../src/Views/HistoryView.vala"
			_tmp76_ = string_replace (_tmp75_, "5", "\xE2\x82\x85");
#line 156 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 156 "../src/Views/HistoryView.vala"
			problem_function = _tmp76_;
#line 157 "../src/Views/HistoryView.vala"
			_tmp77_ = problem_function;
#line 157 "../src/Views/HistoryView.vala"
			_tmp78_ = string_replace (_tmp77_, "6", "\xE2\x82\x86");
#line 157 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 157 "../src/Views/HistoryView.vala"
			problem_function = _tmp78_;
#line 158 "../src/Views/HistoryView.vala"
			_tmp79_ = problem_function;
#line 158 "../src/Views/HistoryView.vala"
			_tmp80_ = string_replace (_tmp79_, "7", "\xE2\x82\x87");
#line 158 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 158 "../src/Views/HistoryView.vala"
			problem_function = _tmp80_;
#line 159 "../src/Views/HistoryView.vala"
			_tmp81_ = problem_function;
#line 159 "../src/Views/HistoryView.vala"
			_tmp82_ = string_replace (_tmp81_, "8", "\xE2\x82\x88");
#line 159 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 159 "../src/Views/HistoryView.vala"
			problem_function = _tmp82_;
#line 160 "../src/Views/HistoryView.vala"
			_tmp83_ = problem_function;
#line 160 "../src/Views/HistoryView.vala"
			_tmp84_ = string_replace (_tmp83_, "9", "\xE2\x82\x89");
#line 160 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 160 "../src/Views/HistoryView.vala"
			problem_function = _tmp84_;
#line 161 "../src/Views/HistoryView.vala"
			_tmp85_ = problem_function;
#line 161 "../src/Views/HistoryView.vala"
			_tmp86_ = string_replace (_tmp85_, "-", "\xE2\x82\x8B");
#line 161 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 161 "../src/Views/HistoryView.vala"
			problem_function = _tmp86_;
#line 163 "../src/Views/HistoryView.vala"
			_tmp87_ = self->priv->listmodel;
#line 163 "../src/Views/HistoryView.vala"
			_tmp88_ = self->priv->iter;
#line 163 "../src/Views/HistoryView.vala"
			_tmp89_ = problem_function;
#line 163 "../src/Views/HistoryView.vala"
			_tmp90_ = g_strconcat (_tmp89_, "\t", NULL);
#line 163 "../src/Views/HistoryView.vala"
			_tmp91_ = _tmp90_;
#line 163 "../src/Views/HistoryView.vala"
			_tmp92_ = pebbles_evaluation_result_get_problem_expression (_result_);
#line 163 "../src/Views/HistoryView.vala"
			_tmp93_ = _tmp92_;
#line 163 "../src/Views/HistoryView.vala"
			_tmp94_ = g_strconcat (_tmp91_, _tmp93_, NULL);
#line 163 "../src/Views/HistoryView.vala"
			_tmp95_ = _tmp94_;
#line 163 "../src/Views/HistoryView.vala"
			_tmp96_ = angle_mode;
#line 163 "../src/Views/HistoryView.vala"
			_tmp97_ = pebbles_evaluation_result_get_result (_result_);
#line 163 "../src/Views/HistoryView.vala"
			_tmp98_ = _tmp97_;
#line 163 "../src/Views/HistoryView.vala"
			_tmp99_ = string_to_string (_tmp98_);
#line 163 "../src/Views/HistoryView.vala"
			gtk_list_store_set (_tmp87_, &_tmp88_, 0, _tmp95_, 1, _tmp96_, 2, "Calculus", 3, _tmp99_, -1);
#line 163 "../src/Views/HistoryView.vala"
			_g_free0 (_tmp95_);
#line 163 "../src/Views/HistoryView.vala"
			_g_free0 (_tmp91_);
#line 143 "../src/Views/HistoryView.vala"
			_g_free0 (problem_function);
#line 1372 "HistoryView.c"
		} else {
			GtkListStore* _tmp100_;
			GtkTreeIter _tmp101_;
			const gchar* _tmp102_;
			const gchar* _tmp103_;
			const gchar* _tmp104_;
			const gchar* _tmp105_;
			const gchar* _tmp106_;
			const gchar* _tmp107_;
#line 168 "../src/Views/HistoryView.vala"
			_tmp100_ = self->priv->listmodel;
#line 168 "../src/Views/HistoryView.vala"
			_tmp101_ = self->priv->iter;
#line 168 "../src/Views/HistoryView.vala"
			_tmp102_ = pebbles_evaluation_result_get_problem_expression (_result_);
#line 168 "../src/Views/HistoryView.vala"
			_tmp103_ = _tmp102_;
#line 168 "../src/Views/HistoryView.vala"
			_tmp104_ = word_length;
#line 168 "../src/Views/HistoryView.vala"
			_tmp105_ = pebbles_evaluation_result_get_result (_result_);
#line 168 "../src/Views/HistoryView.vala"
			_tmp106_ = _tmp105_;
#line 168 "../src/Views/HistoryView.vala"
			_tmp107_ = string_to_string (_tmp106_);
#line 168 "../src/Views/HistoryView.vala"
			gtk_list_store_set (_tmp100_, &_tmp101_, 0, _tmp103_, 1, _tmp104_, 2, "Programmer", 3, _tmp107_, -1);
#line 1400 "HistoryView.c"
		}
	}
#line 173 "../src/Views/HistoryView.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 89 "../src/Views/HistoryView.vala"
	_g_free0 (word_length);
#line 89 "../src/Views/HistoryView.vala"
	_g_free0 (calc_result_type);
#line 89 "../src/Views/HistoryView.vala"
	_g_free0 (angle_mode);
#line 1411 "HistoryView.c"
}

static void
__lambda435_ (PebblesHistoryView* self,
              GtkTreePath* path,
              GtkTreeViewColumn* column)
{
	PebblesEvaluationResult* _result_ = NULL;
	PebblesHistoryManager* _tmp0_;
	gint _tmp1_ = 0;
	gint* _tmp2_;
	gint _tmp3_;
	PebblesEvaluationResult* _tmp4_;
#line 177 "../src/Views/HistoryView.vala"
	g_return_if_fail (path != NULL);
#line 177 "../src/Views/HistoryView.vala"
	g_return_if_fail (column != NULL);
#line 178 "../src/Views/HistoryView.vala"
	_tmp0_ = self->priv->history;
#line 178 "../src/Views/HistoryView.vala"
	_tmp2_ = gtk_tree_path_get_indices_with_depth (path, &_tmp1_);
#line 178 "../src/Views/HistoryView.vala"
	_tmp3_ = _tmp2_[0];
#line 178 "../src/Views/HistoryView.vala"
	_tmp4_ = pebbles_history_manager_get_nth_evaluation_result (_tmp0_, (guint) _tmp3_);
#line 178 "../src/Views/HistoryView.vala"
	_result_ = _tmp4_;
#line 179 "../src/Views/HistoryView.vala"
	g_signal_emit (self, pebbles_history_view_signals[PEBBLES_HISTORY_VIEW_SELECT_EVAL_RESULT_SIGNAL], 0, _result_);
#line 177 "../src/Views/HistoryView.vala"
	_pebbles_evaluation_result_unref0 (_result_);
#line 1443 "HistoryView.c"
}

static void
___lambda435__gtk_tree_view_row_activated (GtkTreeView* _sender,
                                           GtkTreePath* path,
                                           GtkTreeViewColumn* column,
                                           gpointer self)
{
#line 177 "../src/Views/HistoryView.vala"
	__lambda435_ ((PebblesHistoryView*) self, path, column);
#line 1454 "HistoryView.c"
}

static gboolean
__lambda436_ (PebblesHistoryView* self,
              GdkEventKey* event)
{
	gboolean result = FALSE;
#line 182 "../src/Views/HistoryView.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 183 "../src/Views/HistoryView.vala"
	if (event->keyval == ((guint) PEBBLES_KEYBOARD_HANDLER_KEY_MAP_ESCAPE)) {
#line 184 "../src/Views/HistoryView.vala"
		gtk_widget_hide ((GtkWidget*) self);
#line 1468 "HistoryView.c"
	}
#line 186 "../src/Views/HistoryView.vala"
	result = FALSE;
#line 186 "../src/Views/HistoryView.vala"
	return result;
#line 1474 "HistoryView.c"
}

static gboolean
___lambda436__gtk_widget_key_release_event (GtkWidget* _sender,
                                            GdkEventKey* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda436_ ((PebblesHistoryView*) self, event);
#line 182 "../src/Views/HistoryView.vala"
	return result;
#line 1486 "HistoryView.c"
}

static void
pebbles_history_view_make_events (PebblesHistoryView* self)
{
	GtkTreeView* _tmp0_;
#line 176 "../src/Views/HistoryView.vala"
	g_return_if_fail (self != NULL);
#line 177 "../src/Views/HistoryView.vala"
	_tmp0_ = self->priv->main_tree;
#line 177 "../src/Views/HistoryView.vala"
	g_signal_connect_object (_tmp0_, "row-activated", (GCallback) ___lambda435__gtk_tree_view_row_activated, self, 0);
#line 182 "../src/Views/HistoryView.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-release-event", (GCallback) ___lambda436__gtk_widget_key_release_event, self, 0);
#line 1501 "HistoryView.c"
}

static void
g_cclosure_user_marshal_VOID__PEBBLES_EVALUATION_RESULT (GClosure * closure,
                                                         GValue * return_value,
                                                         guint n_param_values,
                                                         const GValue * param_values,
                                                         gpointer invocation_hint,
                                                         gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__PEBBLES_EVALUATION_RESULT) (gpointer data1, gpointer arg_1, gpointer data2);
	register GMarshalFunc_VOID__PEBBLES_EVALUATION_RESULT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 23 "../src/Views/HistoryView.vala"
	g_return_if_fail (n_param_values == 2);
#line 23 "../src/Views/HistoryView.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 23 "../src/Views/HistoryView.vala"
		data1 = closure->data;
#line 23 "../src/Views/HistoryView.vala"
		data2 = param_values->data[0].v_pointer;
#line 1526 "HistoryView.c"
	} else {
#line 23 "../src/Views/HistoryView.vala"
		data1 = param_values->data[0].v_pointer;
#line 23 "../src/Views/HistoryView.vala"
		data2 = closure->data;
#line 1532 "HistoryView.c"
	}
#line 23 "../src/Views/HistoryView.vala"
	callback = (GMarshalFunc_VOID__PEBBLES_EVALUATION_RESULT) (marshal_data ? marshal_data : cc->callback);
#line 23 "../src/Views/HistoryView.vala"
	callback (data1, pebbles_value_get_evaluation_result (param_values + 1), data2);
#line 1538 "HistoryView.c"
}

static void
pebbles_history_view_class_init (PebblesHistoryViewClass * klass,
                                 gpointer klass_data)
{
#line 23 "../src/Views/HistoryView.vala"
	pebbles_history_view_parent_class = g_type_class_peek_parent (klass);
#line 23 "../src/Views/HistoryView.vala"
	g_type_class_adjust_private_offset (klass, &PebblesHistoryView_private_offset);
#line 23 "../src/Views/HistoryView.vala"
	G_OBJECT_CLASS (klass)->finalize = pebbles_history_view_finalize;
#line 23 "../src/Views/HistoryView.vala"
	pebbles_history_view_signals[PEBBLES_HISTORY_VIEW_SELECT_EVAL_RESULT_SIGNAL] = g_signal_new ("select-eval-result", PEBBLES_TYPE_HISTORY_VIEW, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__PEBBLES_EVALUATION_RESULT, G_TYPE_NONE, 1, PEBBLES_TYPE_EVALUATION_RESULT);
#line 1553 "HistoryView.c"
}

static void
pebbles_history_view_instance_init (PebblesHistoryView * self,
                                    gpointer klass)
{
#line 23 "../src/Views/HistoryView.vala"
	self->priv = pebbles_history_view_get_instance_private (self);
#line 1562 "HistoryView.c"
}

static void
pebbles_history_view_finalize (GObject * obj)
{
	PebblesHistoryView * self;
#line 23 "../src/Views/HistoryView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, PEBBLES_TYPE_HISTORY_VIEW, PebblesHistoryView);
#line 24 "../src/Views/HistoryView.vala"
	_g_object_unref0 (self->priv->main_tree);
#line 25 "../src/Views/HistoryView.vala"
	_g_object_unref0 (self->priv->listmodel);
#line 27 "../src/Views/HistoryView.vala"
	_pebbles_history_manager_unref0 (self->priv->history);
#line 23 "../src/Views/HistoryView.vala"
	G_OBJECT_CLASS (pebbles_history_view_parent_class)->finalize (obj);
#line 1579 "HistoryView.c"
}

static GType
pebbles_history_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (PebblesHistoryViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) pebbles_history_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PebblesHistoryView), 0, (GInstanceInitFunc) pebbles_history_view_instance_init, NULL };
	GType pebbles_history_view_type_id;
	pebbles_history_view_type_id = g_type_register_static (gtk_window_get_type (), "PebblesHistoryView", &g_define_type_info, 0);
	PebblesHistoryView_private_offset = g_type_add_instance_private (pebbles_history_view_type_id, sizeof (PebblesHistoryViewPrivate));
	return pebbles_history_view_type_id;
}

GType
pebbles_history_view_get_type (void)
{
	static volatile gsize pebbles_history_view_type_id__volatile = 0;
	if (g_once_init_enter (&pebbles_history_view_type_id__volatile)) {
		GType pebbles_history_view_type_id;
		pebbles_history_view_type_id = pebbles_history_view_get_type_once ();
		g_once_init_leave (&pebbles_history_view_type_id__volatile, pebbles_history_view_type_id);
	}
	return pebbles_history_view_type_id__volatile;
}

